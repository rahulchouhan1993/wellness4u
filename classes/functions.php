<?php
class frontclass {
    function __construct() {
    }
    // public function debuglog($stringData) {
    //     $logFile = SITE_PATH . "/logs/debuglog_commonfunctions_" . date("Y-m-d") . ".txt";
    //     $fh = fopen($logFile, 'a');
    //     fwrite($fh, "\n\n----------------------------------------------------\nDEBUG_START - time: " . date("Y-m-d H:i:s") . "\n" . $stringData . "\nDEBUG_END - time: " . date("Y-m-d H:i:s") . "\n----------------------------------------------------\n\n");
    //     fclose($fh);
    // }

    public function debuglog($stringData) {
        $logDir = SITE_PATH . "/logs";
        if (!is_dir($logDir)) {
            mkdir($logDir, 0777, true); // create logs directory if it doesnâ€™t exist
        }

        $logFile = $logDir . "/debuglog_commonfunctions_" . date("Y-m-d") . ".txt";
        $fh = fopen($logFile, 'a');

        if ($fh) {
            fwrite($fh, "\n\n----------------------------------------------------\nDEBUG_START - time: " 
                . date("Y-m-d H:i:s") . "\n" 
                . $stringData 
                . "\nDEBUG_END - time: " . date("Y-m-d H:i:s") 
                . "\n----------------------------------------------------\n\n");
            fclose($fh);
        } else {
            error_log("Could not open log file: " . $logFile);
        }
    }

    public function getPageDetails($page_id) {
        $DBH = new DatabaseHandler();
        $arr_record = array();
        $sql = "SELECT * FROM `tblpages` WHERE `page_id` = '" . $page_id . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $r = $STH->fetch(PDO::FETCH_ASSOC);
            foreach ($r as $key => $val) {
                $arr_record[$key] = stripslashes($val);
            }
        }
        return $arr_record;
    }
    public function isLoggedIn() {
        $return = false;
        if (isset($_SESSION['user_id']) && ($_SESSION['user_id'] > 0) && ($_SESSION['user_id'] != '')) {
            $return = $this->chkValidUserId($_SESSION['user_id']);
        }
        // echo "<pre>";print_r($return);echo "</pre>";
        // echo $return.'hiu';
        // exit;
        return $return;
    }
    public function chkValidUserId($user_id) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "SELECT * FROM `tblusers` WHERE `user_id` = '" . $user_id . "' AND `status` = '1'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function doUpdateOnline($user_id) {
        $DBH = new DatabaseHandler();
        $now = time();
        $return = false;
        if ($user_id > 0) {
            $sql = "UPDATE `tblusers` SET `online_timestamp` = '" . $now . "' WHERE `user_id` = '" . $user_id . "'";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
            }
            return $return;
        }
        return $return;
    }
    public function doUpdateOnline_vender($vendor_id) {
        $DBH = new DatabaseHandler();
        $now = time();
        $return = false;
        if ($user_id > 0) {
            $sql = "UPDATE `tblusers` SET `online_timestamp` = '" . $now . "' WHERE `vendor_id` = '" . $vendor_id . "'";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
            }
            return $return;
        }
        return $return;
    }
    public function chkValidLogin($email, $password) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "SELECT * FROM `tblusers` WHERE (`email` = '" . $email . "' || `mobile` = '" . $email . "') AND `password` = '" . md5($password) . "' AND `status` = '1' ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function doLogin($email) {
        $return = false;
        $user_id = $this->getUserId($email);
        $name = $this->getUserFullNameById($user_id);
        $email = $this->getUserEmailById($user_id);
        if ($user_id > 0) {
            $return = true;
            $_SESSION['user_id'] = $user_id;
            $_SESSION['name'] = $name;
            $_SESSION['email'] = $email;
        }
        return $return;
    }
    public function getUserId($email) {
        $DBH = new DatabaseHandler();
        $user_id = 0;
        $sql = "SELECT * FROM `tblusers` WHERE (`email` = '" . $email . "' || `mobile` = '" . $email . "') AND `status` = '1'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $r = $STH->fetch(PDO::FETCH_ASSOC);
            $user_id = $r['user_id'];
        }
        return $user_id;
    }
    public function getUserFullNameById($user_id) {
        $DBH = new DatabaseHandler();
        $name = '';
        $sql = "SELECT * FROM `tblusers` WHERE `user_id` = '" . $user_id . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $r = $STH->fetch(PDO::FETCH_ASSOC);
            $name = stripslashes($r['name']);
        }
        return $name;
    }
    public function getUserEmailById($user_id) {
        $DBH = new DatabaseHandler();
        $email = '';
        $sql = "SELECT * FROM `tblusers` WHERE `user_id` = '" . $user_id . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $r = $STH->fetch(PDO::FETCH_ASSOC);
            $email = $r['email'];
        }
        return $email;
    }
    public function addUsersSleepQuestionByGestVivek($user_id, $sleep_date, $selected_sleep_id_arr, $scale_arr, $remarks_arr, $my_target_arr, $adviser_target_arr, $sleep_set_id) {
        $DBH = new DatabaseHandler();
        $return = false;
        if ($sleep_set_id == '' || $sleep_set_id == '999999999') {
            $sleep_set_id = '0';
        }
        for ($i = 0;$i < count($selected_sleep_id_arr);$i++) {
            if ($selected_sleep_id_arr[$i] > 0) {
                $sql = "INSERT INTO `tbluserssleep` (`user_id`,`sleep_date`,`selected_sleep_id`,`scale`,`remarks`,`my_target`,`adviser_target`,`sleep_set_id`) VALUES ('" . $user_id . "','" . $sleep_date . "','" . $selected_sleep_id_arr[$i] . "','" . $scale_arr[$i] . "','" . $remarks_arr[$i] . "','" . $my_target_arr[$i] . "','" . $adviser_target_arr[$i] . "','" . $sleep_set_id . "')";
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    $return = true;
                }
            }
        }
        return $return;
    }
    public function chkEmailExists($email) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "SELECT * FROM `tblusers` WHERE `email` = '" . $email . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function chkEmailExists_vender($email) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "SELECT * FROM `tblvendors` WHERE `vendor_email` = '" . $email . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function chkMobileExists($mobile) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "SELECT * FROM `tblusers` WHERE `mobile` = '" . $mobile . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function chkValidPassword($password) {
        $r1 = '/[A-Z]/'; //Uppercase
        $r2 = '/[a-z]/'; //lowercase
        $r3 = '/[!@#$%^&*()\-_=+{};:,<.>]/'; // whatever you mean by 'special char'
        $r4 = '/[0-9]/'; //numbers
        if (preg_match_all($r1, $password, $o) < 1) return false;
        if (preg_match_all($r2, $password, $o) < 1) return false;
        if (preg_match_all($r3, $password, $o) < 1) return false;
        if (preg_match_all($r4, $password, $o) < 1) return false;
        if (strlen($password) < 6) return false;
        return true;
    }
    public function updatesSignUpUserVivek($user_id, $name, $middle_name, $last_name, $sex, $email, $mobile, $city_id, $place_id, $password, $otp,$country_id,$state_id) {
        $DBH = new DatabaseHandler();
        $return = 0;
        $now = time();
        $addUsersSleepQuestion = $this->addUsersSleepQuestionByGestVivek($_SESSION['user_id'], $_SESSION['sleep_date'], $_SESSION['selected_sleep_id_arr'], $_SESSION['scale_arr'], $_SESSION['remarks_arr'], $_SESSION['my_target_arr'], $_SESSION['adviser_target_arr'], $_SESSION['pro_user_id']);
        unset($_SESSION['sleep_date']);
        unset($_SESSION['selected_sleep_id_arr']);
        unset($_SESSION['scale_arr']);
        unset($_SESSION['remarks_arr']);
        unset($_SESSION['my_target_arr']);
        unset($_SESSION['adviser_target_arr']);
        unset($_SESSION['pro_user_id']);
        unset($_SESSION['gestid']);
        $unique_id = $this->genrateUserUniqueId($user_id);
        $sql = "UPDATE `tblusers` SET `unique_id` = '" . $unique_id . "',`name` = '" . addslashes($name) . "' ,`middle_name` = '" . addslashes($middle_name) . "' ,`last_name` = '" . addslashes($last_name) . "' , `email` = '" . $email . "' , `sex` = '" . $sex . "' , `mobile` = '" . addslashes($mobile) . "' , `city_id` = '" . $city_id . "', `place_id` = '" . $place_id . "' ,  `country_id` = '" . $country_id . "',  `state_id` = '" . $state_id . "', `password` = '" . md5($password) . "',`status`='0',`user_add_date`='" . $now . "',food_chart='1',`my_activity_calories_chart`='1',`my_activity_calories_pi_chart`='1',`activity_analysis_chart`='1',`meal_chart`='1',`dpwd_chart`='1',`mwt_report`='1',`datewise_emotions_report`='1',`statementwise_emotions_report`='1',`statementwise_emotions_pi_report`='1',`angervent_intensity_report`='1',`stressbuster_intensity_report`='1',`each_meal_per_day_chart`='1',`user_otp`='" . $otp . "' WHERE `user_id` = '" . $user_id . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function genrateUserUniqueId($user_id) {
        $unique_id = '';
        $strlen_user_id = strlen($user_id);
        if ($strlen_user_id == 1) {
            $unique_id = 'CW10000000' . $user_id;
        } elseif ($strlen_user_id == 2) {
            $unique_id = 'CW1000000' . $user_id;
        } elseif ($strlen_user_id == 3) {
            $unique_id = 'CW100000' . $user_id;
        } elseif ($strlen_user_id == 4) {
            $unique_id = 'CW10000' . $user_id;
        } elseif ($strlen_user_id == 5) {
            $unique_id = 'CW1000' . $user_id;
        } elseif ($strlen_user_id == 6) {
            $unique_id = 'CW100' . $user_id;
        } elseif ($strlen_user_id == 7) {
            $unique_id = 'CW10' . $user_id;
        } else {
            $unique_id = 'CW1' . $user_id;
        }
        return $unique_id;
    }
    //update ample 14-07-20
    public function signUpUser($name, $middle_name, $last_name, $gender, $email, $mobile, $city_id, $place_id, $password, $otp,$country_id,$state_id,$reference_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return = 0;
        $now = date("Y-m-d H:i:s");
        // $now = time();
        $default_plan = $this->GetDefaultUserPlan();
        // $sql = "INSERT INTO `tblusers` (`name`,`middle_name`,`last_name`,`sex`,`email`,`password`,`mobile`,`city_id`,`place_id`,`status`,`user_add_date`,`user_otp`,`up_id`,`country_id`,`state_id`) " . "VALUES (:name,:middle_name,:last_name,:sex,:email,:password,:mobile,:city_id,:place_id,:status,:user_add_date,:user_otp,:up_id:,country_id,:state_id)";
        // $STH = $DBH->prepare($sql);
        // $STH->execute(array(':name' => addslashes($name), ':middle_name' => addslashes($middle_name), ':last_name' => addslashes($last_name), ':sex' => addslashes($gender), ':email' => addslashes($email), ':password' => md5($password), ':mobile' => addslashes($mobile), ':city_id' => addslashes($city_id), ':place_id' => addslashes($place_id), ':status' => 0, ':user_add_date' => $now, ':user_otp' => $otp, ':up_id' => $default_plan,':country_id' => $country_id,':state_id' => $state_id));
         $sql = "INSERT INTO `tblusers`(`name`,`middle_name`,`last_name`,`sex`,`email`,`password`,`mobile`,`city_id`,`place_id`,`status`,`user_add_date`,`user_otp`,`up_id`,`country_id`,`state_id`,`reference_id`)" . "VALUES ( '".addslashes($name)."',  '" . addslashes($middle_name)."',  '" . addslashes($last_name)."','".addslashes($gender)."', '".addslashes($email)."', '".md5($password)."',  '".addslashes($mobile)."','".addslashes($city_id)."', '".addslashes($place_id)."','0', '".$now."', '".$otp."', '".$default_plan."','".$country_id."','". $state_id."','". $reference_id."')";
          $STH = $DBH->prepare($sql);
           $STH->execute();
        if ($STH->rowCount() > 0) {
            $user_id = $DBH->lastInsertId();
            $unique_id = $this->genrateUserUniqueId($user_id);
            $sql2 = "UPDATE `tblusers` SET `unique_id` = '" . $unique_id . "' WHERE `user_id` = '" . $user_id . "'";
            $STH2 = $DBH->query($sql2);
            if ($STH2->rowCount() > 0) {
                $return = true;
            }
        }
        return $return;
    }
    public function GetDefaultUserPlan() {
        $DBH = new DatabaseHandler();
        $plan_id = '';
        $sql = "SELECT * FROM `tbluserplans` WHERE `up_default` = 1 AND `up_status` = '1' ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $r = $STH->fetch(PDO::FETCH_ASSOC);
            $plan_id = $r['up_id'];
        }
        return $plan_id;
    }
    public function updatereferafriend($tdata, $email) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "UPDATE `tblreferal` set `status` = '1' WHERE id = '" . $tdata['id'] . "' AND `user_id` = '" . $tdata['uid'] . "' AND `email_id` = '" . $email . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function updateAdvisorsReferral($ar_id, $pro_user_id, $user_email) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "UPDATE `tbladviserreferrals` SET `referral_accept_date` = NOW() , `referral_status` = '1' WHERE `ar_id` = '" . $ar_id . "' AND `pro_user_id` = '" . $pro_user_id . "' AND `user_email` = '" . $user_email . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function getEmailAutoresponderDetails($email_action_id) {
        $DBH = new DatabaseHandler();
        $data = array();
        $sql = "SELECT * FROM `tblautoresponders` WHERE `email_action_id` = '" . $email_action_id . "' AND `email_ar_status` = '1' AND `email_ar_deleted` = '0' ORDER BY `email_ar_add_date` DESC LIMIT 1 ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $r = $STH->fetch(PDO::FETCH_ASSOC);
            $data = $r;
        }
        return $data;
    }
    public function getCityOptions() {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $sql = "SELECT * FROM `tblcities` WHERE 1 ORDER BY `city` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                //<option value="Paris">Paris</option>
                $option_str.= '<option value="' . $row['city'] . '" >' . stripslashes($row['city']) . '</option>';
            }
        }
        return $option_str;
    }
    public function getPlaceOptions($city_id) {
        $DBH = new DatabaseHandler();
        $option_str = '<option value="" >Select Place</option>';
        $sql = "SELECT * FROM `tblplaces` WHERE `city_id` = " . $city_id . " ORDER BY `place` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $option_str.= '<option value="' . $row['place_id'] . '" >' . stripslashes($row['place']) . '</option>';
            }
        }
       // echo $option_str; die('--');
        return $option_str;
    }
    public function getCityIdbyName($city_name) {
        $DBH = new DatabaseHandler();
        $city_id = 0;
        $sql = "SELECT * FROM `tblcities` WHERE `city` = '" . $city_name . "' ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $city_id = $row['city_id'];
        }
        return $city_id;
    }
    public function getAllActiveMenuItems($parent_id) {
        $DBH = new DatabaseHandler();
        $arr_active_menu_items = array();
        $sql2 = "SELECT page_id , page_name , page_title , show_in_manage_menu , show_in_menu , link_enable , parent_menu , menu_order , menu_title , menu_link FROM `tblpages` WHERE `adviser_panel` = '0' AND `vender_panel` = '0' AND `show_in_manage_menu` = '1' AND `show_in_menu` = '1' AND `parent_menu` = '" . $parent_id . "' ORDER BY `menu_order` ASC ";
        //echo'<br><br>sql2 = '.$sql2;
        $STH = $DBH->query($sql2);
        if ($STH->rowCount() > 0) {
            while ($row2 = $STH->fetch(PDO::FETCH_ASSOC)) {
                $arr_active_menu_items[$row2['page_id']]['menu_details'] = $row2;
                $arr_active_menu_items[$row2['page_id']]['submenu_details'] = array();
                $sql3 = "SELECT page_id , page_name , page_title , show_in_manage_menu , show_in_menu , link_enable , parent_menu , menu_order , menu_title , menu_link FROM `tblpages` WHERE `adviser_panel` = '0' AND `vender_panel` = '0' AND `show_in_manage_menu` = '1' AND `show_in_menu` = '1' AND `parent_menu` = '" . $row2['page_id'] . "'  ORDER BY `menu_order` ASC ";
                //echo'<br><br>sql3 = '.$sql3;
                //$result3 = mysql_query($sql3,$link);
                $STH2 = $DBH->query($sql3);
                if ($STH2->rowCount() > 0) {
                    array_push($arr_active_menu_items[$row2['page_id']]['submenu_details'], $this->getAllActiveMenuItems($row2['page_id']));
                }
            }
        }
        return $arr_active_menu_items;
    }
    public function GetTopBanner() {
        $DBH = new DatabaseHandler();
        $banner = '';
        $position = '';
        $height = '';
        $width = '';
        $sql = "SELECT * FROM `tbltopbanner` ORDER BY RAND() limit 1";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $banner = stripslashes($row['banner']);
            $position = stripslashes($row['position']);
            $height = stripslashes($row['height']);
            $width = stripslashes($row['width']);
        }
        return array($banner, $position, $height, $width);
    }
    public function getbanners($page_id, $side) {
        $DBH = new DatabaseHandler();
        $arr_banner_id = array();
        $arr_page_id = array();
        $arr_page = array();
        $arr_position_id = array();
        $arr_banner = array();
        $arr_url = array();
        $arr_banner_type = array();
        $arr_position = array();
        $arr_side = array();
        $arr_width = array();
        $arr_height = array();
        $arr_sequence_banner_id = array();
        $sql = "SELECT * FROM `tblposition` WHERE `side` = '" . ($side) . "' ORDER BY `position` ";
        //echo $sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $position_id = $row['position_id'];
                $max_banner_id = $this->get_max_banner_id($position_id, $page_id);
                $min_banner_id = $this->get_min_banner_id($position_id, $page_id);
                if (($_SESSION['ref_banner_id_' . $position_id . '_' . $page_id] == '') || ($_SESSION['ref_banner_id_' . $position_id . '_' . $page_id] == $max_banner_id)) {
                    $sql2 = "SELECT * FROM `tblbanners` AS TA



						  LEFT JOIN `tblposition` AS TS ON TA.position_id = TS.position_id



						  WHERE TA.position_id = '" . $position_id . "' AND TA.page_id = '" . $page_id . "' AND TA.status = '1' ORDER BY  `banner_id` LIMIT 1";
                } else {
                    $sql2 = "SELECT * FROM `tblbanners` AS TA



						  LEFT JOIN `tblposition` AS TS ON TA.position_id = TS.position_id



						  WHERE TA.position_id = '" . $position_id . "' AND TA.page_id = '" . $page_id . "' AND TA.status = '1'  AND TA.banner_id > '" . $_SESSION['ref_banner_id_' . $position_id . '_' . $page_id] . "' ORDER BY TA.banner_id LIMIT 1";
                }
                $STH2 = $DBH->query($sql2);
                if ($STH2->rowCount() > 0) {
                    while ($row2 = $STH2->fetch(PDO::FETCH_ASSOC)) {
                        $_SESSION['ref_banner_id_' . $position_id . '_' . $page_id] = $row2['banner_id'];
                        array_push($arr_banner_id, $row2['banner_id']);
                        array_push($arr_page_id, stripslashes($row2['page_id']));
                        array_push($arr_page, stripslashes($row2['page']));
                        array_push($arr_position_id, $row2['position_id']);
                        array_push($arr_banner, stripslashes($row2['banner']));
                        array_push($arr_url, stripslashes($row2['url']));
                        array_push($arr_banner_type, stripslashes($row2['banner_type']));
                        array_push($arr_position, $row2['position']);
                        array_push($arr_side, stripslashes($row2['side']));
                        array_push($arr_width, stripslashes($row2['width']));
                        array_push($arr_height, $row2['height']);
                    }
                }
            }
        }
        return array($arr_banner_id, $arr_page_id, $arr_page, $arr_position_id, $arr_banner, $arr_url, $arr_banner_type, $arr_position, $arr_side, $arr_width, $arr_height);
    }
    public function get_max_banner_id($position_id, $page_id) {
        $DBH = new DatabaseHandler();
        $max_banner_id = '';
        $sql = "SELECT * FROM `tblbanners` WHERE  `position_id` = '" . $position_id . "' AND `page_id` = '" . $page_id . "' AND status = '1' ORDER BY banner_id DESC limit 1";
        //echo $sql.'</br>';
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $max_banner_id = $row['banner_id'];
        }
        return $max_banner_id;
    }
    public function get_min_banner_id($position_id, $page_id) {
        $DBH = new DatabaseHandler();
        $min_banner_id = '';
        $sql = "SELECT * FROM `tblbanners` WHERE  `position_id` = '" . $position_id . "' AND `page_id` = '" . $page_id . "' AND status = '1' ORDER BY banner_id ASC limit 1";
        //echo $sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $min_banner_id = $row['banner_id'];
        }
        return $min_banner_id;
    }
    public function isLoggedInPro() {
        $return = false;
        if (isset($_SESSION['pro_user_id']) && ($_SESSION['pro_user_id'] > 0) && ($_SESSION['pro_user_id'] != '')) {
            $return = $this->chkValidProUserId($_SESSION['pro_user_id']);
        }
        return $return;
    }
    public function chkValidProUserId($pro_user_id) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "SELECT * FROM `tbl_profusers` WHERE `pro_user_id` = '" . $pro_user_id . "' AND `status` = '1'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function doLogout() {
        $DBH = new DatabaseHandler();
        $return = true;
        $sql = "UPDATE `tblusers` SET `online_timestamp` = '0' WHERE `user_id` = '" . $_SESSION['user_id'] . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
            $_SESSION['user_id'] = '';
            $_SESSION['name'] = '';
            $_SESSION['email'] = '';
            unset($_SESSION['user_id']);
            unset($_SESSION['name']);
            unset($_SESSION['email']);
            session_destroy();
        }
        return $return;
    }
    public function chkValidEmailID($email) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "SELECT * FROM `tblusers` WHERE `email` = '" . $email . "' AND `status` = '1' ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function GetUserName($email) {
        $DBH = new DatabaseHandler();
        $name = '';
        $sql = "select * from `tblusers` where email = '" . $email . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $name = stripslashes($row['name']);
        }
        return $name;
    }
    public function GetVendorName($get_id) {
        $DBH = new DatabaseHandler();
        $name = '';
        $sql = "select `vendor_name` from `tblvendors` where vendor_id = '" . $get_id . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $name = stripslashes($row['vendor_name']);
        }
        return $name;
    }
    public function GetUserName_vendor($email) {
        $DBH = new DatabaseHandler();
        $name = '';
        $sql = "select * from `tblvendors` where vendor_email = '" . $email . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $name = stripslashes($row['vendor_name']);
        }
        return $name;
    }
    public function chkIfScrollingWindowActivateForPage($page_id) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "SELECT * FROM `tblpages` WHERE `page_id` = '" . $page_id . "' AND `show_in_manage_menu` = '1' AND `show_in_list` = '1' AND `adviser_panel` = '0' AND `vender_panel` = '0'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function getScrollingWindowsCode($page_id) {
        $DBH = new DatabaseHandler();
        $output = '';
        $user_id = $_SESSION['user_id'];
        $sql1 = "SELECT * FROM `tblscrollingwindows` WHERE FIND_IN_SET('" . $page_id . "', page_id) AND `sw_status` = '1' AND `sw_show_in_contents` = '0' ORDER BY `sw_order` ASC , `sw_add_date` DESC ";
        $STH = $DBH->query($sql1);
        if ($STH->rowCount() > 0) {
            $return = true;
            $i = 1;
            while ($row1 = $STH->fetch(PDO::FETCH_ASSOC)) {
                $sw_header = stripslashes($row1['sw_header']);
                $sw_header_hide = stripslashes($row1['sw_header_hide']);
                $sw_footer_hide = stripslashes($row1['sw_footer_hide']);
                $sw_header_font_family = stripslashes($row1['sw_header_font_family']);
                $sw_header_font_size = stripslashes($row1['sw_header_font_size']);
                $sw_header_font_color = stripslashes($row1['sw_header_font_color']);
                $sw_header_bg_color = stripslashes($row1['sw_header_bg_color']);
                if ($sw_header_bg_color == '') {
                    $sw_header_bg_color = '666666';
                }
                $sw_box_border_color = stripslashes($row1['sw_box_border_color']);
                if ($sw_box_border_color == '') {
                    $sw_box_border_color = '666666';
                }
                $header_style = '';
                if ($sw_header_font_family != '') {
                    $header_style = 'font-family:' . $sw_header_font_family . ';';
                }
                if ($sw_header_font_size != '') {
                    $header_style.= 'font-size:' . $sw_header_font_size . 'px;';
                } else {
                    $header_style.= 'font-size:11px';
                }
                if ($sw_header_font_color != '') {
                    $header_style.= 'color:#' . $sw_header_font_color . ';';
                }
                if ($row1['sw_show_header_credit'] == '1') {
                    $sw_header = '<a href="' . stripslashes($row1['sw_header_credit_link']) . '" target="_blank" style="color:#ffffff;' . $header_style . '">' . $sw_header . '</a>';
                }
                if ($row1['sw_header_image'] != '') {
                    $sw_header_image = '<img border="0" width="30" height="30" src="' . SITE_URL . '/uploads/' . stripslashes($row1['sw_header_image']) . '">';
                } else {
                    $sw_header_image = '';
                }
                $sw_footer = stripslashes($row1['sw_footer']);
                $sw_footer_font_family = stripslashes($row1['sw_footer_font_family']);
                $sw_footer_font_size = stripslashes($row1['sw_footer_font_size']);
                $sw_footer_font_color = stripslashes($row1['sw_footer_font_color']);
                $sw_footer_bg_color = stripslashes($row1['sw_footer_bg_color']);
                if ($sw_footer_bg_color == '') {
                    $sw_footer_bg_color = '666666';
                }
                $footer_style = '';
                if ($sw_footer_font_family != '') {
                    $footer_style = 'font-family:' . $sw_footer_font_family . ';';
                }
                if ($sw_footer_font_size != '') {
                    $footer_style.= 'font-size:' . $sw_footer_font_size . 'px;';
                } else {
                    $footer_style.= 'font-size:11px';
                }
                if ($sw_footer_font_color != '') {
                    $footer_style.= 'color:#' . $sw_footer_font_color . ';';
                }
                if ($row1['sw_show_footer_credit'] == '1') {
                    $sw_footer = '<a href="' . stripslashes($row1['sw_footer_credit_link']) . '" target="_blank" style="color:#ffffff;' . $footer_style . '">' . $sw_footer . '</a>';
                }
                if ($row1['sw_footer_image'] != '') {
                    $sw_footer_image = '<img border="0" width="30" height="30" src="' . SITE_URL . '/uploads/' . stripslashes($row1['sw_footer_image']) . '">';
                } else {
                    $sw_footer_image = '';
                }
                $today_day = date('j');
                $today_date = date('Y-m-d');
                $sql = "SELECT * FROM `tblscrollingcontents` WHERE ( (`sc_listing_date_type` = 'days_of_month' AND FIND_IN_SET('" . $today_day . "', sc_days_of_month) ) OR (`sc_listing_date_type` = 'single_date' AND `sc_single_date` = '" . $today_date . "') OR (`sc_listing_date_type` = 'date_range' AND `sc_start_date` <= '" . $today_date . "' AND `sc_end_date` >= '" . $today_date . "') ) AND ( `sw_id` = '" . $row1['sw_id'] . "' ) AND ( `sc_status` = '1' ) ORDER BY `sc_order` ASC , `sc_add_date` DESC ";
                $STH2 = $DBH->query($sql);
                if ($STH2->rowCount() > 0) {
                    $output.= '<form name="frmScrollingWindows" id="frmScrollingWindows" action="#" method="post" >';
                    $output.= '	<input type="hidden" name="hdnpage_id" id="hdnpage_id" value="' . $page_id . '">';
                    $output.= '<table width="160" border="0" cellpadding="0" cellspacing="1" bgcolor="#' . $sw_box_border_color . '">';
                    if ($sw_header_hide == '0') {
                        $output.= '	<tr>';
                        $output.= '        <td colspan="2" align="left" valign="top" bgcolor="#FFFFFF">';
                        $output.= '            <table width="160" border="0" cellpadding="0" cellspacing="0" bgcolor="#' . $sw_header_bg_color . '">';
                        $output.= '                <tr>';
                        if ($sw_header_image == '') {
                            $output.= '                    <td width="160" bgcolor="#' . $sw_header_bg_color . '" height="30" align="center" valign="middle" style="color:#FFFFFF;font-weight:bold;' . $header_style . '" >' . $sw_header . '</td>';
                        } else {
                            $output.= '                    <td width="125" bgcolor="#' . $sw_header_bg_color . '" height="30" align="left" valign="middle" style="color:#FFFFFF;font-weight:bold;' . $header_style . '" >' . $sw_header . '</td>';
                            $output.= '                    <td width="35" bgcolor="#' . $sw_header_bg_color . '" height="30" align="right" valign="middle" >' . $sw_header_image . '</td>';
                        }
                        $output.= '                </tr>';
                        $output.= '            </table>';
                        $output.= '        </td>';
                        $output.= '	</tr>';
                    }
                    $output.= '	<tr>';
                    $output.= '        <td colspan="2" align="left" valign="top" bgcolor="#FFFFFF" class="slider">';
                    $output.= '            <div style="" id="slider' . $i . '" >';
                    $j = 0;
                    while ($row = $STH2->fetch(PDO::FETCH_ASSOC)) {
                        $sc_id = $row['sc_id'];
                        $sc_title = stripslashes($row['sc_title']);
                        $sc_title_font_family = stripslashes($row['sc_title_font_family']);
                        $sc_title_font_size = stripslashes($row['sc_title_font_size']);
                        $sc_content = $this->get_clean_br_string(stripslashes($row['sc_content']));
                        $sc_content_font_family = stripslashes($row['sc_content_font_family']);
                        $sc_content_font_size = stripslashes($row['sc_content_font_size']);
                        $sc_content_type = stripslashes($row['sc_content_type']);
                        $sc_title_font_color = stripslashes($row['sc_title_font_color']);
                        $sc_content_font_color = stripslashes($row['sc_content_font_color']);
                        $sc_title_hide = stripslashes($row['sc_title_hide']);
                        $sc_add_fav_hide = stripslashes($row['sc_add_fav_hide']);
                        $sc_credit_link = stripslashes($row['sc_credit_link']);
                        $sc_title_style = '';
                        if ($sc_title_font_family != '') {
                            $sc_title_style = 'font-family:' . $sc_title_font_family . ';';
                        }
                        if ($sc_title_font_size != '') {
                            $sc_title_style.= 'font-size:' . $sc_title_font_size . 'px;';
                        }
                        if ($sc_title_font_color != '') {
                            $sc_title_style.= 'color:#' . $sc_title_font_color . ';';
                        }
                        $output.= '<div style="min-height:100px;">';
                        $output.= '<table width="150" border="0" cellspacing="0" cellpadding="0">';
                        if ($sc_title_hide == '0') {
                            $output.= '<tr>';
                            $output.= '<td height="30" colspan="2" align="center" valign="top" style="' . $sc_title_style . '" >';
                            if ($sc_credit_link == '') {
                                $output.= '' . $sc_title . '';
                            } else {
                                $output.= '<a href="' . $sc_credit_link . '" style="' . $sc_title_style . '" target="_blank">' . $sc_title . '</a>';
                            }
                            $output.= '</td>';
                            $output.= '				</tr>';
                        }
                        if ($sc_content_type == 'text') {
                            $sc_content_style = '';
                            if ($sc_content_font_family != '') {
                                $sc_content_style = 'font-family:' . $sc_content_font_family . ';';
                            }
                            if ($sc_content_font_size != '') {
                                $sc_content_style.= 'font-size:' . $sc_content_font_size . 'px;';
                            }
                            if ($sc_content_font_color != '') {
                                $sc_content_style.= 'color:#' . $sc_content_font_color . ';';
                            }
                            $output.= '<tr>';
                            $output.= '<td colspan="2" height="60" align="left" valign="top" style="padding-left:3px;' . $sc_content_style . '">';
                            if ($sc_credit_link == '') {
                                $output.= '' . $sc_content . '';
                            } else {
                                $output.= '<a href="' . $sc_credit_link . '" target="_blank" style="text-decoration:none;' . $sc_content_style . '">' . $sc_content . '</a>';
                            }
                            $output.= '</td>';
                            $output.= '</tr>';
                        } elseif ($sc_content_type == 'text_and_image') {
                            $sc_content_style = '';
                            if ($sc_content_font_family != '') {
                                $sc_content_style = 'font-family:' . $sc_content_font_family . ';';
                            }
                            if ($sc_content_font_size != '') {
                                $sc_content_style.= 'font-size:' . $sc_content_font_size . 'px;';
                            }
                            if ($sc_content_font_color != '') {
                                $sc_content_style.= 'color:#' . $sc_content_font_color . ';';
                            }
                            if ($row['sc_image'] != '') {
                                $sc_image = '<img border="0" width="50" src="' . SITE_URL . '/uploads/' . stripslashes($row['sc_image']) . '" />';
                            } else {
                                $sc_image = '';
                            }
                            $output.= '				<tr>';
                            $output.= '					<td width="60" height="60" align="left" valign="top">';
                            $output.= '						<table width="50" border="0" cellspacing="0" cellpadding="0">';
                            $output.= '							<tr>';
                            $output.= '								<td align="left" valign="top" bgcolor="#FFFFFF" style="padding-left:10px;">';
                            if ($sc_credit_link == '') {
                                $output.= '' . $sc_image . '';
                            } else {
                                $output.= '<a href="' . $sc_credit_link . '" target="_blank" style="text-decoration:none;' . $sc_content_style . '">' . $sc_image . '</a>';
                            }
                            $output.= '</td>';
                            $output.= '							</tr>';
                            $output.= '						</table>';
                            $output.= '					</td>';
                            $output.= '					<td width="90" height="60" align="left" valign="top" style="padding-left:3px;' . $sc_content_style . '">';
                            if ($sc_credit_link == '') {
                                $output.= '' . $sc_content . '';
                            } else {
                                $output.= '<a href="' . $sc_credit_link . '" target="_blank" style="text-decoration:none;' . $sc_content_style . '">' . $sc_content . '</a>';
                            }
                            $output.= '</td>';
                            $output.= '				</tr>';
                        } elseif ($sc_content_type == 'image') {
                            if ($row['sc_image'] != '') {
                                $sc_image = '<img border="0" width="150" src="' . SITE_URL . '/uploads/' . stripslashes($row['sc_image']) . '" />';
                            } else {
                                $sc_image = '';
                            }
                            $output.= '				<tr>';
                            $output.= '					<td colspan="2" height="60" align="left" valign="top">';
                            if ($sc_credit_link == '') {
                                $output.= '' . $sc_image . '';
                            } else {
                                $output.= '<a href="' . $sc_credit_link . '" target="_blank" style="text-decoration:none;' . $sc_content_style . '">' . $sc_image . '</a>';
                            }
                            $output.= '</td>';
                            $output.= '				</tr>';
                        } elseif ($sc_content_type == 'video') {
                            if ($row['sc_video'] != '') {
                                $sc_video = '<iframe width="150" height="150" src="' . getBannerString($row['sc_video']) . '" frameborder="0" allowfullscreen></iframe>';
                            } else {
                                $sc_video = '';
                            }
                            $output.= '				<tr>';
                            $output.= '					<td colspan="2" height="60" align="left" valign="top">';
                            if ($sc_credit_link == '') {
                                $output.= '' . $sc_video . '';
                            } else {
                                $output.= '<a href="' . $sc_credit_link . '" target="_blank" style="text-decoration:none;' . $sc_content_style . '">' . $sc_video . '</a>';
                            }
                            $output.= '       </td>';
                            $output.= '				</tr>';
                        } elseif ($sc_content_type == 'flash') {
                            if ($row['sc_flash'] != '') {
                                $sc_flash = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=7,0,19,0" width="100" height="100"><param name="movie" value="' . SITE_URL . "/uploads/" . $row['sc_flash'] . '" /><param name="quality" value="high" /><embed src="' . SITE_URL . "/uploads/" . $row['sc_flash'] . '" quality="high" pluginspage="http://www.macromedia.com/go/getflashplayer" type="application/x-shockwave-flash" width="100" height="100"></embed></object>';
                            } else {
                                $sc_flash = '';
                            }
                            $output.= '				<tr>';
                            $output.= '					<td colspan="2" height="60" align="left" valign="top">' . $sc_flash . '</td>';
                            $output.= '				</tr>';
                        } elseif ($sc_content_type == 'rss') {
                            $rss_feed_item_id = $row['rss_feed_item_id'];
                            list($rss_feed_item_title, $rss_feed_item_desc, $rss_feed_item_link, $rss_feed_item_json) = $this->getRssFeedItemDetails($rss_feed_item_id);
                            $output.= '				<tr>';
                            $output.= '					<td colspan="2" height="60" align="left" valign="top">';
                            if ($sc_credit_link == '') {
                                $output.= '' . $rss_feed_item_title . '';
                            } else {
                                $output.= '<a href="' . $sc_credit_link . '" target="_blank" style="text-decoration:none;' . $sc_content_style . '">' . $rss_feed_item_title . '</a>';
                            }
                            $output.= '        </td>';
                            $output.= '				</tr>';
                            $output.= '				<tr>';
                            $output.= '					<td colspan="2" height="60" align="left" valign="top">';
                            if ($sc_credit_link == '') {
                                $output.= '' . $rss_feed_item_desc . '';
                            } else {
                                $output.= '<a href="' . $sc_credit_link . '" target="_blank" style="text-decoration:none;' . $sc_content_style . '">' . $rss_feed_item_desc . '</a>';
                            }
                            $output.= '        </td>';
                            $output.= '				</tr>';
                        }
                        if (stripslashes($row['sc_show_credit']) == '1') {
                            if (stripslashes($row['sc_credit_name']) != '') {
                                $sc_show_credit = '1';
                                $sc_credit_name = stripslashes($row['sc_credit_name']);
                                if (stripslashes($row['sc_credit_link']) != '') {
                                    $sc_credit_link = stripslashes($row['sc_credit_link']);
                                } else {
                                    $sc_credit_link = '';
                                }
                            } else {
                                $sc_show_credit = '0';
                                $sc_credit_name = '';
                                $sc_credit_link = '';
                            }
                        } else {
                            $sc_show_credit = '0';
                            $sc_credit_name = '';
                            $sc_credit_link = '';
                        }
                        if ($sc_add_fav_hide == '0') {
                            $output.= '<tr>

                     <td height="30" align="left" valign="middle" style="padding-left:2px;">';
                            if (!$this->chkIfOptionAlreadyAddedToFav($user_id, $page_id, $sc_id, '0')) {
                                $output.= '<input type="button" name="select_scrolloing_content_' . $i . '_' . $j . '" id="select_scrolloing_content_' . $i . '_' . $j . '" value="Add to Fav" onclick="addScrollingContentToFav(\'' . $sc_id . '\',0,0)" style="width:60px;font-size:9px;">';
                            }
                            $output.= '</td>



												<td height="30" align="right" valign="middle">';
                            if ($sc_show_credit == '1') {
                                $output.= '<a href="' . $sc_credit_link . '" target="_blank">' . $sc_credit_name . '</a>';
                            }
                            $output.= '                    </td>



                                                                            </tr>';
                        } else {
                            if ($sc_show_credit == '1') {
                                $output.= '				<tr>



                                        <td colspan="2" height="30" align="center" valign="middle" style="padding-left:2px;">';
                                $output.= '					<a href="' . $sc_credit_link . '" target="_blank">' . $sc_credit_name . '</a>';
                                $output.= '                    </td>



                                                                                </tr>';
                            }
                        }
                        $output.= '			</table>';
                        $output.= '</div>';
                        $j = $j + 1;
                    }
                    $output.= '			</div>';
                    $output.= '		</td>';
                    $output.= '	</tr>';
                    if ($sw_footer_hide == '0') {
                        $output.= '	<tr>';
                        $output.= '        <td colspan="2" align="left" valign="top" bgcolor="#FFFFFF">';
                        $output.= '            <table width="160" border="0" cellpadding="0" cellspacing="0" bgcolor="#' . $sw_footer_bg_color . '">';
                        $output.= '                <tr>';
                        if ($sw_footer_image == '') {
                            $output.= '                    <td width="160" bgcolor="#' . $sw_footer_bg_color . '" height="30" align="center" valign="middle" style="color:#FFFFFF;font-weight:bold;' . $footer_style . '" >' . $sw_footer . '</td>';
                        } else {
                            $output.= '                    <td width="125" bgcolor="#' . $sw_footer_bg_color . '" height="30" align="left" valign="middle" style="color:#FFFFFF;font-weight:bold;' . $footer_style . '" >' . $sw_footer . '</td>';
                            $output.= '                    <td width="35" bgcolor="#' . $sw_footer_bg_color . '" height="30" align="right" valign="middle" >' . $sw_footer_image . '</td>';
                        }
                        $output.= '                </tr>';
                        $output.= '            </table>';
                        $output.= '        </td>';
                        $output.= '	</tr>';
                    }
                    $output.= '</table>



                            <table width="160" border="0" cellspacing="0" cellpadding="0">



                                <tr>



                                    <td height="10"><img src="images/spacer.gif" width="1" height="1" /></td>



                                </tr>



                            </table>';
                    $output.= '	</form>';
                    //$output .= '</div>';
                    $i = $i + 1;
                }
            }
            //$output .= '</div>';
            
        }
        return $output;
    }
    public function chkIfOptionAlreadyAddedToFav($user_id, $page_id, $sc_id, $ufs_type) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "SELECT * FROM `tblusersfavscrolling` WHERE `page_id` = '" . $page_id . "' AND `user_id` = '" . $user_id . "'  AND `sc_id` = '" . $sc_id . "' AND `ufs_type` = '" . $ufs_type . "' ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function get_clean_br_string($string) {
        $output = '';
        $string = trim($string);
        if ($string != '') {
            $pos = strpos($string, ' ');
            if ($pos !== FALSE) {
                $temp_arr = explode(' ', $string);
                foreach ($temp_arr as $key => $val) {
                    $temp_len = strlen($val);
                    if ($temp_len > 20) {
                        $str = substr($val, 0, 10) . ' ';
                        $temp_str2 = substr($val, 10);
                        if (strlen($temp_str2) > 10) {
                            $temp_str2 = $this->get_clean_br_string($temp_str2);
                        }
                        $str.= $temp_str2;
                    } else {
                        $str = $val;
                    }
                    $output.= $str . ' ';
                }
            } else {
                $temp_len = strlen($string);
                if ($temp_len > 15) {
                    $str = substr($string, 0, 15) . ' ';
                    $temp_str2 = substr($string, 15);
                    if (strlen($temp_str2) > 15) {
                        $temp_str2 = $this->get_clean_br_string($temp_str2);
                    }
                    $str.= $temp_str2;
                } else {
                    $str = $string;
                }
                $output.= $str . ' ';
            }
        }
        return $output;
    }
    public function getBannerString($banner) {
        $search = 'v=';
        $pos = strpos($banner, $search);
        $str = strlen($banner);
        $rest = substr($banner, $pos + 2, $str);
        //echo $rest;
        return 'http://www.youtube.com/embed/' . $rest;
    }
    public function reSendOTP($tdata) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return = false;
        try {
            $sql = "UPDATE `tblusers` SET 

					`user_otp` = :user_otp

					WHERE `mobile` = :mobile_no  ";
            $STH = $DBH->prepare($sql);
            $STH->execute(array(':user_otp' => addslashes($tdata['user_otp']), ':mobile_no' => addslashes($tdata['mobile_no'])));
            $DBH->commit();
            $return = true;
        }
        catch(Exception $e) {
            return false;
        }
        return $return;
    }
    public function getOTPSmsText($tdata) {
        $return = $tdata['user_otp'] . " is your otp";
        return $return;
    }
    //update by ample 11-07-20
    public function sendSMS($tdata) {

        // $user = SMS_USERNAME;
        // $password = SMS_PASSWORD;
        // $sid = SMS_SENDERID;
        // $url = SMS_URL;
        $user = $tdata['SMS_USERNAME'];
        $password = $tdata['SMS_PASSWORD'];
        $sid = $tdata['SMS_SENDERID'];
        $url =$tdata['SMS_URL'];
        $msisdn = $tdata['mobile_no'];
        $msg = urlencode($tdata['sms_message']);
        // $parameters = "user=$user&password=$password&msisdn=$msisdn&sid=$sid&msg=$msg&fl=0&gwid=2";
        $api_url=$url."?user=$user&password=$password&msisdn=$msisdn&sid=$sid&msg=$msg&fl=0&gwid=2"; //change by ample

        //$ch = curl_init($url);
        //curl_setopt($ch, CURLOPT_POST, 1);
        // curl_setopt($ch, CURLOPT_POSTFIELDS, $parameters);

        $ch = curl_init();
        curl_setopt($ch, CURLOPT_POST, 0); 
        curl_setopt($ch, CURLOPT_URL, $api_url);
        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);
        curl_setopt($ch, CURLOPT_HEADER, 0); // DO NOT RETURN HTTP HEADERS
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); // RETURN THE CONTENTS OF THE CALL
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
        $return_val = curl_exec($ch);
        curl_close($ch); 

        //add by ample 11-07-20
         if(!$return_val){
           $return_val =  file_get_contents($api_url);  
        }

        // print_r($return_val);

        // die('-----');
        
        if ($return_val == "") {
            $string = "Process Failed, Please check your connecting domain, username or password.$return_val" . curl_error($ch);
            //$this->debuglog($string);
            
        } else {
            $string = "Message Id : $return_val" . curl_error($ch); //Returning the message id  :  Whenever you are sending an SMS our system will give a message id for each numbers, which can be saved into your database and in future by calling these message id's using correct API's you can update the delivery status.
            //$this->debuglog($string);
            // echo "<pre>";print_r($string);echo "</pre>";
            // exit;
            return true;
        }
        return true;
    }
    //  public function sendSMS($tdata)
    //  {
    //      $return = false;
    //      $sendurl = SMS_URL."sendsms/sendsms.php?username=".SMS_USERNAME."&password=".SMS_PASSWORD."&type=TEXT&sender=".SMS_SENDERID."&mobile=".$tdata['mobile_no']."&message=".urlencode($tdata['sms_message']);
    //      $this->debuglogsms('[sendSMS] sendurl:'.$sendurl);
    //      try {
    // $ch = curl_init($sendurl);
    // curl_setopt($ch,CURLOPT_FRESH_CONNECT,TRUE);
    // curl_setopt($ch,CURLOPT_SSL_VERIFYPEER,FALSE);
    // curl_setopt($ch,CURLOPT_SSL_VERIFYHOST,FALSE);
    // curl_setopt($ch,CURLOPT_HEADER, 0);
    // curl_setopt ($ch, CURLOPT_URL, $sendurl);
    // curl_setopt ($ch, CURLOPT_TIMEOUT, 120);
    // curl_setopt($ch,CURLOPT_RETURNTRANSFER, TRUE);
    // curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);
    // if ( ! $response = curl_exec($ch) )
    // {
    // 	$stringData = '[sendSMS] Error:'.curl_error($ch).' , sendurl:'.$sendurl.', response:'.$response;
    ////$this->debuglogsms($stringData);
    //// echo "<pre>";print_r($stringData);echo "</pre>";
    //	}
    //// exit;
    //	curl_close ($ch);
    ////$response = file_get_contents($sendurl);
    ////$this->debuglogsms('[sendSMS] sendurl:'.$sendurl.', response:'.$response);
    // 	return true;
    // } catch (Exception $e) {
    // 	$stringData = '[sendSMS] Catch Error:'.$e->getMessage().' , sendurl:'.$sendurl.', response:'.$response;
    ////$this->debuglogsms($stringData);
    //         return $return;
    //     }
    //     return $return;
    // }
    public function debuglogsms($stringData) {
        $logFile = SITE_PATH . "/logs/debuglog_sms_" . date("Y-m-d") . ".txt";
        $fh = fopen($logFile, 'a');
        fwrite($fh, "\n\n----------------------------------------------------\nDEBUG_START - time: " . date("Y-m-d H:i:s") . "\n" . $stringData . "\nDEBUG_END - time: " . date("Y-m-d H:i:s") . "\n----------------------------------------------------\n\n");
        fclose($fh);
    }
    public function chkMobileNoExists($mobile_no) {
        $DBH = new DatabaseHandler();
        $return = false;
        try {
            $sql = "SELECT * FROM `tblusers` WHERE `mobile` = '" . $mobile_no . "' ";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
            }
        }
        catch(Exception $e) {
            return false;
        }
        return $return;
    }
    public function doVerifyOTPForgotPassword($tdata) {
        $DBH = new DatabaseHandler();
        $return = false;
        try {
            $sql = "SELECT * FROM `tblusers` WHERE `mobile` = '" . $tdata['mobile_no'] . "' AND `user_otp` = '" . $tdata['user_otp'] . "' ";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
            }
        }
        catch(Exception $e) {
            return false;
        }
        return $return;
    }
    public function resetUserPasswordByMobile($tdata) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return = false;
        try {
            $sql = "UPDATE `tblusers` SET  

					`password` = :password,  

					`status` = :user_status  

					WHERE `mobile` = :mobile_no";
            $STH = $DBH->prepare($sql);
            $STH->execute(array(':password' => md5($tdata['password']), ':user_status' => '1', ':mobile_no' => $tdata['mobile_no']));
            $DBH->commit();
            $return = true;
        }
        catch(Exception $e) {
            return false;
        }
        return $return;
    }
    public function getBreadcrumbCode($page_id) {
        $output = '';
        $str_page_id = $this->getBreadcrumbPages($page_id);
        $arr_page_id = explode(',', $str_page_id);
        if ($page_id != '1') {
            array_push($arr_page_id, '1');
        }
        $arr_page_id = array_reverse($arr_page_id);
        for ($i = 0;$i < count($arr_page_id);$i++) {
            $page_data = $this->getPageDetails($arr_page_id[$i]);
            if ($page_data['link_enable'] == '1') {
                if ($page_data['menu_link'] != '') {
                    $page_data['menu_link'] = SITE_URL . '/' . $page_data['menu_link'];
                } else {
                    $page_data['menu_link'] = '#';
                }
            } else {
                $page_data['menu_link'] = '#';
            }
            if ($arr_page_id[$i] == $page_id) {
                $output.= ' ' . $page_data['menu_title'] . '&gt;';
            } else {
                $output.= ' <a href="' . $page_data['menu_link'] . '" target="_self" class="breadcrumb_link">' . $page_data['menu_title'] . '</a> &gt;';
            }
        }
        $output = substr($output, 0, -4);
        return $output;
    }
    public function getBreadcrumbPages($page_id) {
        $str_page_id = '';
        $parent_id = $this->getParentPages($page_id);
        if ($parent_id == '0') {
            $str_page_id = $page_id;
        } else {
            $str_page_id.= $page_id . ',' . $this->getBreadcrumbPages($parent_id);
        }
        return $str_page_id;
    }
    public function getParentPages($page_id) {
        $DBH = new DatabaseHandler();
        $parent_id = 0;
        $sql = "SELECT * FROM `tblpages` WHERE `page_id` = '" . $page_id . "' AND `show_in_manage_menu` = '1' ";
        //echo'<br><br>sql = '.$sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $parent_id = $row['parent_menu'];
        }
        return $parent_id;
    }
    public function getWelcomeUserBoxCode($name, $user_id, $col = '2', $show_custid = '') {
        $DBH = new DatabaseHandler();
        if ($col == '1') {
            $width = '80';
        } else {
            $width = '120';
        }
        $output = '';
        $output.= '            <table width="' . $width . '" border="0" cellpadding="0" cellspacing="1" bgcolor="#cccccc">';
        $output.= '                <tr>';
        $output.= '                    <td >';
        $output.= '                        <table width="' . $width . '" border="0" cellspacing="0" cellpadding="0">';
        $output.= '                            <tr>';
        if ($show_custid == '1') {
            $output.= '                                <td >Welcome ' . $name . '</td>';
            $output.= '                                <td >Cust Id: ' . $this->getUserUniqueId($user_id) . '</td>';
        } else {
            $output.= '                                <td >Welcome ' . $name . '</td>';
        }
        $output.= '				</tr>';
        $output.= '                        </table>';
        $output.= '			</td>';
        $output.= '                </tr>';
        $output.= '		</table>';
        return $output;
    }
    public function getUserUniqueId($user_id) {
        $DBH = new DatabaseHandler();
        $unique_id = '';
        $sql = "SELECT * FROM `tblusers` WHERE `user_id` = '" . $user_id . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $unique_id = stripslashes($row['unique_id']);
        }
        return $unique_id;
    }
    public function getPageTitle($page_id) {
        $DBH = new DatabaseHandler();
        $page_title = '';
        $sql = "SELECT * FROM `tblpages` WHERE `page_id` = '" . $page_id . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            // echo "<pre>";print_r($row);echo "</pre>";
            $page_title = stripslashes($row['page_title']);
        }
        return $page_title;
    }
    function getPageContents($page_id) {
        $DBH = new DatabaseHandler();
        $page_contents = '';
        $sql = "SELECT * FROM `tblpages` WHERE `page_id` = '" . $page_id . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $temp = stripslashes($row['page_contents']);
            $temp = str_replace('&nbsp;', ' ', $temp);
            $page_contents = html_entity_decode($temp);
        }
        // echo "<pre>";print_r($temp);echo "</pre>";
        // echo $page_id.'hiiiiiii';
        // exit;
        return $page_contents;
    }
    public function getTheamOptions($theam_id, $day_month_year) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $arr_days = array();
        $single_date = date("Y-m-d", strtotime($day_month_year));
        //echo '<br>';
        $all = date("d", strtotime($day_month_year));
        //echo '<br>';
        $month_wise = date("m", strtotime($day_month_year));
        //echo '<br>';
        $days_of_week = date('w', strtotime($day_month_year));
        $sql = "SELECT * FROM `tbltheams` WHERE status = '1' ORDER BY `theam_name` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                if ($row['listing_date_type'] == 'single_date') {
                    if ($single_date == $row['single_date']) {
                        if ($row['theam_id'] == $theam_id) {
                            $sel = ' selected ';
                        } else {
                            $sel = '';
                        }
                        $option_str.= '<option value="' . $row['theam_id'] . '" ' . $sel . '>' . stripslashes($row['theam_name']) . '</option>';
                    }
                } elseif ($row['listing_date_type'] == 'all') {
                    $all_arr = explode(',', $row['days_of_month']);
                    if (in_array($all, $all_arr)) {
                        if ($row['theam_id'] == $theam_id) {
                            $sel = ' selected ';
                        } else {
                            $sel = '';
                        }
                        $option_str.= '<option value="' . $row['theam_id'] . '" ' . $sel . '>' . stripslashes($row['theam_name']) . '</option>';
                    }
                } elseif ($row['listing_date_type'] == 'days_of_month') {
                    $all_arr = explode(',', $row['days_of_month']);
                    if (in_array($all, $all_arr)) {
                        if ($row['theam_id'] == $theam_id) {
                            $sel = ' selected ';
                        } else {
                            $sel = '';
                        }
                        $option_str.= '<option value="' . $row['theam_id'] . '" ' . $sel . '>' . stripslashes($row['theam_name']) . '</option>';
                    }
                } elseif ($row['listing_date_type'] == 'date_range') {
                    if (($row['start_date'] >= $single_date) && ($single_date <= $row['end_date'])) {
                        if ($row['theam_id'] == $theam_id) {
                            $sel = ' selected ';
                        } else {
                            $sel = '';
                        }
                        $option_str.= '<option value="' . $row['theam_id'] . '" ' . $sel . '>' . stripslashes($row['theam_name']) . '</option>';
                    }
                } elseif ($row['listing_date_type'] == 'month_wise') {
                    $all_arr = explode(',', $row['months']);
                    if (in_array($month_wise, $all_arr)) {
                        if ($row['theam_id'] == $theam_id) {
                            $sel = ' selected ';
                        } else {
                            $sel = '';
                        }
                        $option_str.= '<option value="' . $row['theam_id'] . '" ' . $sel . '>' . stripslashes($row['theam_name']) . '</option>';
                    }
                } elseif ($row['listing_date_type'] == 'days_of_week') {
                    $all_arr = explode(',', $row['days_of_week']);
                    if (in_array($days_of_week, $all_arr)) {
                        if ($row['theam_id'] == $theam_id) {
                            $sel = ' selected ';
                        } else {
                            $sel = '';
                        }
                        $option_str.= '<option value="' . $row['theam_id'] . '" ' . $sel . '>' . stripslashes($row['theam_name']) . '</option>';
                    }
                }
            }
        }
        return $option_str;
    }
    // add by ample 15-11-19
    public function getTheamOptionsInIcons($icons_id, $day_month_year,$page_id="") {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $arr_days = array();
        $single_date = date("Y-m-d", strtotime($day_month_year));
        //echo '<br>';
        $all = date("d", strtotime($day_month_year));
        //echo '<br>';
        $month_wise = date("m", strtotime($day_month_year));
        //echo '<br>';
        $days_of_week = date('w', strtotime($day_month_year));
        $sql = "SELECT * FROM `tbl_icons` WHERE status = '1' AND icons_type_id='357' ORDER BY `icons_name` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {

                if(!empty($row['page_id']))
                {
                    $array_page_id=explode(",",$row['page_id']);
                    if(in_array($page_id, $array_page_id))
                    {
                        if ($row['listing_date_type'] == 'single_date') {
                            if ($single_date == $row['single_date']) {
                                if ($row['icons_id'] == $icons_id) {
                                    $sel = ' selected ';
                                } else {
                                    $sel = '';
                                }
                                $option_str.= '<option value="' . $row['icons_id'] . '" ' . $sel . '>' . stripslashes($row['icons_name']) . '</option>';
                            }
                        } elseif ($row['listing_date_type'] == 'all') {
                            $all_arr = explode(',', $row['days_of_month']);
                            if (in_array($all, $all_arr)) {
                                if ($row['theam_id'] == $icons_id) {
                                    $sel = ' selected ';
                                } else {
                                    $sel = '';
                                }
                                $option_str.= '<option value="' . $row['icons_id'] . '" ' . $sel . '>' . stripslashes($row['icons_name']) . '</option>';
                            }
                        } elseif ($row['listing_date_type'] == 'days_of_month') {
                            $all_arr = explode(',', $row['days_of_month']);
                            if (in_array($all, $all_arr)) {
                                if ($row['icons_id'] == $icons_id) {
                                    $sel = ' selected ';
                                } else {
                                    $sel = '';
                                }
                                $option_str.= '<option value="' . $row['icons_id'] . '" ' . $sel . '>' . stripslashes($row['icons_name']) . '</option>';
                            }
                        } elseif ($row['listing_date_type'] == 'date_range') {
                            if (($row['start_date'] >= $single_date) && ($single_date <= $row['end_date'])) {
                                if ($row['icons_id'] == $icons_id) {
                                    $sel = ' selected ';
                                } else {
                                    $sel = '';
                                }
                                $option_str.= '<option value="' . $row['icons_id'] . '" ' . $sel . '>' . stripslashes($row['icons_name']) . '</option>';
                            }
                        } elseif ($row['listing_date_type'] == 'month_wise') {
                            $all_arr = explode(',', $row['months']);
                            if (in_array($month_wise, $all_arr)) {
                                if ($row['icons_id'] == $icons_id) {
                                    $sel = ' selected ';
                                } else {
                                    $sel = '';
                                }
                                $option_str.= '<option value="' . $row['icons_id'] . '" ' . $sel . '>' . stripslashes($row['icons_name']) . '</option>';
                            }
                        } elseif ($row['listing_date_type'] == 'days_of_week') {
                            $all_arr = explode(',', $row['days_of_week']);
                            if (in_array($days_of_week, $all_arr)) {
                                if ($row['icons_id'] == $icons_id) {
                                    $sel = ' selected ';
                                } else {
                                    $sel = '';
                                }
                                $option_str.= '<option value="' . $row['icons_id'] . '" ' . $sel . '>' . stripslashes($row['icons_name']) . '</option>';
                            }
                        }
                    }
                }
                else
                {
                    if ($row['listing_date_type'] == 'single_date') {
                            if ($single_date == $row['single_date']) {
                                if ($row['icons_id'] == $icons_id) {
                                    $sel = ' selected ';
                                } else {
                                    $sel = '';
                                }
                                $option_str.= '<option value="' . $row['icons_id'] . '" ' . $sel . '>' . stripslashes($row['icons_name']) . '</option>';
                            }
                        } elseif ($row['listing_date_type'] == 'all') {
                            $all_arr = explode(',', $row['days_of_month']);
                            if (in_array($all, $all_arr)) {
                                if ($row['theam_id'] == $icons_id) {
                                    $sel = ' selected ';
                                } else {
                                    $sel = '';
                                }
                                $option_str.= '<option value="' . $row['icons_id'] . '" ' . $sel . '>' . stripslashes($row['icons_name']) . '</option>';
                            }
                        } elseif ($row['listing_date_type'] == 'days_of_month') {
                            $all_arr = explode(',', $row['days_of_month']);
                            if (in_array($all, $all_arr)) {
                                if ($row['icons_id'] == $icons_id) {
                                    $sel = ' selected ';
                                } else {
                                    $sel = '';
                                }
                                $option_str.= '<option value="' . $row['icons_id'] . '" ' . $sel . '>' . stripslashes($row['icons_name']) . '</option>';
                            }
                        } elseif ($row['listing_date_type'] == 'date_range') {
                            if (($row['start_date'] >= $single_date) && ($single_date <= $row['end_date'])) {
                                if ($row['icons_id'] == $icons_id) {
                                    $sel = ' selected ';
                                } else {
                                    $sel = '';
                                }
                                $option_str.= '<option value="' . $row['icons_id'] . '" ' . $sel . '>' . stripslashes($row['icons_name']) . '</option>';
                            }
                        } elseif ($row['listing_date_type'] == 'month_wise') {
                            $all_arr = explode(',', $row['months']);
                            if (in_array($month_wise, $all_arr)) {
                                if ($row['icons_id'] == $icons_id) {
                                    $sel = ' selected ';
                                } else {
                                    $sel = '';
                                }
                                $option_str.= '<option value="' . $row['icons_id'] . '" ' . $sel . '>' . stripslashes($row['icons_name']) . '</option>';
                            }
                        } elseif ($row['listing_date_type'] == 'days_of_week') {
                            $all_arr = explode(',', $row['days_of_week']);
                            if (in_array($days_of_week, $all_arr)) {
                                if ($row['icons_id'] == $icons_id) {
                                    $sel = ' selected ';
                                } else {
                                    $sel = '';
                                }
                                $option_str.= '<option value="' . $row['icons_id'] . '" ' . $sel . '>' . stripslashes($row['icons_name']) . '</option>';
                            }
                        }
                }
                
            }
        }
        return $option_str;
    }
    public function getTheamDetailsMDT($theam_id) {
        $DBH = new DatabaseHandler();
        $color_code = '#339900';
        $image = '';
        // $sql = "SELECT * FROM `tbltheams` WHERE theam_id = '" . $theam_id . "' ORDER BY `theam_name` ASC";
        //update by ample 07-02-20
        $sql = "SELECT * FROM `tbl_icons` WHERE status = '1' AND icons_type_id='357' AND icons_id = '" . $theam_id . "'";
        //echo $sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $image = SITE_URL . "/uploads/" . stripslashes($row['image']);
            $color_code = "#" . stripslashes($row['color_code']);
        }
        return array($image, $color_code);
    }
    //add by ample 15-11-19
    public function getTheamDetailsInIcons($icon_id) {
        $DBH = new DatabaseHandler();
        $color_code = '#339900';
        $image = '';
        $sql = "SELECT * FROM `tbl_icons` WHERE icons_id = '" . $icon_id . "' ORDER BY `icons_name` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $image = SITE_URL . "/uploads/" . stripslashes($row['image']);
            $color_code = "#" . stripslashes($row['color_code']);

        }
        return array($image, $color_code);
    }
    public function GETDATADROPDOWNMYDAYTODAY($healcareandwellbeing, $page_name) {
        $DBH = new DatabaseHandler();
        $arr_data = array();
        $sql = "SELECT * FROM `tbl_data_dropdown` WHERE page_name = '" . $page_name . "' and `healcareandwellbeing` = '" . $healcareandwellbeing . "' and `is_deleted` = 0 ORDER BY `order_show` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $arr_data[] = $row;
            }
        }
        return $arr_data;
    }
    public function GetDatadropdownoption($symtum_cat) {
        $symtum_cat = implode(',', $symtum_cat);
        $DBH = new DatabaseHandler();
        $option_str = '';
        $sql = "SELECT * FROM `tblbodymainsymptoms` WHERE bms_id IN($symtum_cat) ORDER BY `bms_name` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $option_str.= '<option value="' . $row['bms_name'] . '" >' . stripslashes($row['bms_name']) . '</option>';
            }
        }
        return $option_str;
    }
    public function getMyDayTodayIcon($icon_id) {
        $DBH = new DatabaseHandler();
        $icon = '';
        $sql = "SELECT * FROM `tbl_icons` WHERE icons_front_id = '" . $icon_id . "' and `status` = 1 ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $icon = $row['image'];
        }
        return $icon;
    }
    public function getMyDayTodayIconComment($icon_id, $day_month_year) {
        $DBH = new DatabaseHandler();
        $sql = "SELECT * FROM `tbl_icons` WHERE icons_front_id = '" . $icon_id . "' and `status` = 1 ";
        $STH = $DBH->query($sql);
        $data = array();
        $single_date = date("Y-m-d", strtotime($day_month_year));
        $all = date("d", strtotime($day_month_year));
        $month_wise = date("m", strtotime($day_month_year));
        $days_of_week = date('D', strtotime($day_month_year));
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                //$data =  $row;
                //              echo '<pre>';
                //              print($row);
                //              echo '</pre>';
                if ($row['listing_date_type'] == 'single_date') {
                    if ($single_date == $row['single_date']) {
                        return $row;
                    }
                } elseif ($row['listing_date_type'] == 'all') {
                    $all_arr = explode(',', $row['days_of_month']);
                    if (in_array($all, $all_arr)) {
                        return $row;
                    }
                } elseif ($row['listing_date_type'] == 'days_of_month') {
                    $all_arr = explode(',', $row['days_of_month']);
                    if (in_array($all, $all_arr)) {
                        return $row;
                    }
                } elseif ($row['listing_date_type'] == 'date_range') {
                    if (($row['start_date'] >= $single_date) && ($single_date <= $row['end_date'])) {
                        return $row;
                    }
                } elseif ($row['listing_date_type'] == 'month_wise') {
                    $all_arr = explode(',', $row['months']);
                    if (in_array($month_wise, $all_arr)) {
                        return $row;
                    }
                } elseif ($row['listing_date_type'] == 'days_of_week') {
                    $all_arr = explode(',', $row['months']);
                    if (in_array($days_of_week, $all_arr)) {
                        return $row;
                    }
                }
            }
            // $row = $STH->fetch(PDO::FETCH_ASSOC);
            
        }
        return $data;
    }
    public function getAllMainSymptomsRamakantFront($symtum_cat) {
        $DBH = new DatabaseHandler();
        //$symtum_cat = implode($symtum_cat, '\',\'');
        $symtum_cat = implode("','", $symtum_cat);
        $str_sql_search = " AND `fav_parent_cat` IN ('" . $symtum_cat . "') ";
        $data = array();
        $sql = "SELECT DISTINCT bmsid FROM `tblsymtumscustomcategory` WHERE  symtum_deleted = '0' " . $str_sql_search . " ORDER BY bmsid DESC ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[] = $row['bmsid'];
            }
        }
        return $data;
    }
    public function getTimeOptionsNew($start_time, $end_time, $time) {
        if ($end_time == $start_time) {
        } elseif ($end_time < $start_time) {
            $end_time = 24 + $end_time;
            $start = $start_time * 60 + 0;
            $end = $end_time * 60 + 0;
            $i = $start;
            while ($i < $end) {
                $minute = $i % 60;
                $hour = ($i - $minute) / 60;
                if ($hour > 23) {
                    $hour = $hour - 24;
                }
                if (($hour >= 0) && ($hour < 12)) {
                    $str = 'AM';
                } else {
                    //add by ample
                    $hour = 24-$hour;
                    $str = 'PM';
                }
                $val = sprintf('%02d:%02d', $hour, $minute);
                $val = $val . ' ' . $str;
                if ($time == $val) {
                    $selected = ' selected ';
                } else {
                    $selected = '';
                }
                $option_str.= '<option value="' . $val . '" ' . $selected . ' >' . $val . '</option>';
                $i = $i + 15;
            }
        } else {
            $start = $start_time * 60 + 0;
            $end = $end_time * 60 + 0;
            for ($i = $start;$i < $end;$i+= 15) {
                $minute = $i % 60;
                $hour = ($i - $minute) / 60;
                if (($hour >= 24) && ($hour <= 36)) {
                    $hour = $hour - 24;
                }
                if (($hour >= 0) && ($hour < 12)) {
                    $str = 'AM';
                } else {
                    //add by ample
                    $hour = 24-$hour;
                    $str = 'PM';
                }
                $val = sprintf('%02d:%02d', $hour, $minute);
                $val = $val . ' ' . $str;
                if ($time == $val) {
                    $selected = ' selected ';
                } else {
                    $selected = '';
                }
                $option_str.= '<option value="' . $val . '" ' . $selected . ' >' . $val . '</option>';
            }
        }
        return $option_str;
    }
    public function getFavCategoryRamakant($fav_cat_type_id, $fav_cat_id) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $fav_cat_type_id = explode(',', $fav_cat_type_id);
        $fav_cat_type_id = implode('\',\'', $fav_cat_type_id);
        $sql = "SELECT * FROM `tblcustomfavcategory` " . "LEFT JOIN tblfavcategory ON tblcustomfavcategory.favcat_id = tblfavcategory.fav_cat_id WHERE tblcustomfavcategory.fav_cat_type_id IN('" . $fav_cat_type_id . "') and tblfavcategory.fav_cat_status = 1 and tblfavcategory.fav_cat_deleted = 0 and tblcustomfavcategory.cat_deleted=0 and tblcustomfavcategory.cat_status = 1 ORDER BY tblfavcategory.fav_cat ASC";
        //echo $sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                if ($row['favcat_id'] == $fav_cat_id) {
                    $sel = ' selected ';
                } else {
                    $sel = '';
                }
                $cat_name = $row['fav_cat'];
                $option_str.= '<option value="' . $row['favcat_id'] . '" ' . $sel . '>' . stripslashes($cat_name) . '</option>';
            }
        }
        //echo $option_str;
        return $option_str;
    }
    //add by ample 29-05-20 as checkbox style
    public function getFavCategoryShortData($fav_cat_type_id) {
        $DBH = new DatabaseHandler();
        $data = array();
        $fav_cat_type_id = explode(',', $fav_cat_type_id);
        $fav_cat_type_id = implode('\',\'', $fav_cat_type_id);
        $sql = "SELECT favcat_id,fav_cat FROM `tblcustomfavcategory` " . "LEFT JOIN tblfavcategory ON tblcustomfavcategory.favcat_id = tblfavcategory.fav_cat_id WHERE tblcustomfavcategory.fav_cat_type_id IN('" . $fav_cat_type_id . "') and tblfavcategory.fav_cat_status = 1 and tblfavcategory.fav_cat_deleted = 0 and tblcustomfavcategory.cat_deleted=0 and tblcustomfavcategory.cat_status = 1 ORDER BY tblfavcategory.fav_cat ASC";
        //echo $sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
               $data[]=$row;
            }
        }
        return $data;
    }
    public function getScrollingBarCode($page_id) {
        $DBH = new DatabaseHandler();
        $output = '';
        $arr_records = array();
        $today_day = date('j');
        $today_date = date('Y-m-d');
        if ($this->chkIfPageEnableForScrollingBar($page_id)) {
            $sql = "SELECT * FROM `tblscrollingbars` WHERE ( (`sb_listing_date_type` = 'days_of_month' AND FIND_IN_SET('" . $today_day . "', sb_days_of_month) ) OR (`sb_listing_date_type` = 'single_date' AND `sb_single_date` = '" . $today_date . "') OR (`sb_listing_date_type` = 'date_range' AND `sb_start_date` <= '" . $today_date . "' AND `sb_end_date` >= '" . $today_date . "') ) AND ( `sb_status` = '1' ) AND ( `sb_deleted` = '0' ) ORDER BY `sb_order` ASC , `sb_add_date` DESC ";
            //echo '<br>sql = '.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $show = false;
                    $temp_page_id = stripslashes($row['page_id']);
                    if ($temp_page_id == '') {
                        $show = true;
                    } else {
                        $arr_temp_pg_id = explode(',', $temp_page_id);
                        if (in_array($page_id, $arr_temp_pg_id)) {
                            $show = true;
                        }
                    }
                    if ($show) {
                        $arr_records[] = $row;
                    }
                }
                if (count($arr_records) > 0) {
                    $sb_bg_color = $this->getCommonSettingValue('1');
                    $sb_border_color = $this->getCommonSettingValue('2');
                    $output.= '<style>.ticker-wrapper.has-js {background-color: #' . $sb_bg_color . '; border:1px solid #' . $sb_border_color . '} .ticker {background-color: #' . $sb_bg_color . ';} .ticker-swipe {background-color: #' . $sb_bg_color . ';}</style>';
                    $output.= '<table width="100%" border="0" cellspacing="0" cellpadding="0">



						<tr>



							<td width="100%" align="left" valign="top">';
                    $output.= ' 	<ul id="js-news" class="js-hidden">';
                    //while ($row = mysql_fetch_assoc($result))
                    foreach ($arr_records as $key => $row) {
                        $sb_id = $row['sb_id'];
                        $sb_content = stripslashes($row['sb_content']);
                        $sb_content_font_family = stripslashes($row['sb_content_font_family']);
                        $sb_content_font_size = stripslashes($row['sb_content_font_size']);
                        $sb_content_font_color = stripslashes($row['sb_content_font_color']);
                        $sb_show_content_credit = stripslashes($row['sb_show_content_credit']);
                        $sb_content_credit_link = stripslashes($row['sb_content_credit_link']);
                        $sb_content_credit_name = stripslashes($row['sb_content_credit_name']);
                        $sb_content_style = '';
                        if ($sb_content_font_family != '') {
                            $sb_content_style = 'font-family:' . $sb_content_font_family . ';';
                        }
                        if ($sb_content_font_size != '') {
                            $sb_content_style.= 'font-size:' . $sb_content_font_size . 'px;';
                        }
                        if ($sb_content_font_color != '') {
                            $sb_content_style.= 'color:#' . $sb_content_font_color . ';';
                        }
                        if ($row['sb_content_image'] != '') {
                            $sb_content_image = '<img border="0" height="30" src="' . SITE_URL . '/uploads/' . stripslashes($row['sb_content_image']) . '" />';
                            $sb_content_image = '';
                        } else {
                            $sb_content_image = '';
                        }
                        if ($sb_show_content_credit == '1') {
                            if ($sb_content_credit_name != '') {
                                $sb_content_credit = '&nbsp;&nbsp;---&nbsp;&nbsp;<a href="' . $sb_content_credit_link . '" target="_blank">' . $sb_content_credit_name . '</a>&nbsp;&nbsp;&nbsp;&nbsp;';
                            } else {
                                $sb_content_credit = '';
                            }
                        } else {
                            $sb_content_credit = '';
                        }
                        $output.= '<li class="news-item"><a href="#" style="' . $sb_content_style . '">' . $sb_content . ' &nbsp;&nbsp;' . $sb_content_image . '</a> &nbsp;&nbsp;<span>' . $sb_content_credit . '</span></li>';
                    }
                    $output.= '</ul>';
                    $output.= ' </td>



						</tr>



					</table>   



					<table width="100%" border="0" cellspacing="0" cellpadding="0">



						<tr>



							<td height="10"><img src="images/spacer.gif" width="1" height="1" /></td>



						</tr>



					</table>   ';
                }
            }
        }
        return $output;
    }
    public function chkIfPageEnableForScrollingBar($page_id) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "SELECT * FROM `tblpages` WHERE `page_id` = '" . $page_id . "' AND `show_in_manage_menu` = '1' AND `show_in_list` = '1' ORDER BY `menu_title` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function getCommonSettingValue($cs_id) {
        $DBH = new DatabaseHandler();
        $cs_value = '';
        $sql = "SELECT * FROM `tblcommonsettings` WHERE `cs_id` = '" . $cs_id . "' ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $cs_value = stripslashes($row['cs_value']);
        }
        return $cs_value;
    }
    public function getAllIconsDisplayTypeDetailsVivek() {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $sql = "SELECT * FROM `tbl_icons` WHERE `display_type`='382' and `status`='1' ORDER BY `order_no` ASC";
        //echo '<br>Testkk: sql = '.$sql;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[] = $row;
            }
        }
        return $data;
    }
    //update by by ample 15-10-20
    public function getAllIconsDisplayTypeDetails($limit="") {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $sql_limit='';
        if($limit)
        {
            $sql_limit=' LIMIT '.$limit;
        }
        $sql = "SELECT * FROM `tbl_icons` WHERE `display_type`='382' AND `status`='1' AND page_id='1' ORDER BY `order_no` ASC ".$sql_limit." ";
        //echo '<br>Testkk: sql = '.$sql;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[] = $row;
            }
        }
        return $data;
    }
    //update by ample order by 28-0-20
    public function getFavCategoryNameRamakant($fav_cat_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $fav_cat_type = '';
        $sql = "SELECT * FROM `tblfavcategory` WHERE `fav_cat_id` = '" . $fav_cat_id . "'  ORDER BY `fav_cat` ASC";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $fav_cat_type = stripslashes($row['fav_cat']);
        }
        return $fav_cat_type;
    }
    // add by ample 27-08-20
    public function getFavCategoryID_by_favname($fav_cat) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $fav_cat_id = '';
        $sql = "SELECT * FROM `tblfavcategory` WHERE `fav_cat` = '" . $fav_cat . "'  ORDER BY `fav_cat` ASC";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $fav_cat_id = stripslashes($row['fav_cat_id']);
        }
        return $fav_cat_id;
    }
    //add by ample   26-11-20
    public function getFavCode($fav_cat_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $fav_cat_type = '';
        $sql = "SELECT * FROM `tblfavcategory` WHERE `fav_cat_id` = '" . $fav_cat_id . "'  ORDER BY `fav_cat` ASC";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $fav_cat_type = stripslashes($row['fav_code']);
        }
        return $fav_cat_type;
    }
    //add by ample  26-11-20
    public function getPlanCategory($cat_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $cat_name = '';
        $sql = "SELECT * FROM `tbladviserplancategorytype` WHERE `apct_id` = '" . $cat_id . "' ";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $cat_name = stripslashes($row['apct_category_type']);
        }
        return $cat_name;
    }
    public function getPageContents2($page_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $page_contents = '';
        $sql = "SELECT * FROM `tblpages` WHERE `page_id` = '" . $page_id . "'";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $temp = stripslashes($row['page_contents2']);
            $temp = str_replace('&nbsp;', ' ', $temp);
            $page_contents = html_entity_decode($temp);
        }
        return $page_contents;
    }
    public function getScrollingWindowsCodeMainContent($page_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return = false;
        $output = '';
        $user_id = $_SESSION['user_id'];
        $sql1 = "SELECT * FROM `tblscrollingwindows` WHERE FIND_IN_SET('" . $page_id . "', page_id) AND `sw_status` = '1' AND `sw_show_in_contents` = '1' ORDER BY `sw_order` ASC , `sw_add_date` DESC ";
        $STH = $DBH->prepare($sql1);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $return = true;
            $i = 1;
            // $output .= '<div class="divcenterouter">';
            // $output .= '<div class="divcenterinner">';
            //$output .= '<div style="float:left;max-width:580px;">';
            while ($row1 = $STH->fetch(PDO::FETCH_ASSOC)) {
                // echo "<pre>";print_r($row1);echo "</pre>";
                // exit;
                $sw_header = stripslashes($row1['sw_header']);
                $sw_header_hide = stripslashes($row1['sw_header_hide']);
                $sw_footer_hide = stripslashes($row1['sw_footer_hide']);
                $sw_header_font_family = stripslashes($row1['sw_header_font_family']);
                $sw_header_font_size = stripslashes($row1['sw_header_font_size']);
                $sw_header_font_color = stripslashes($row1['sw_header_font_color']);
                $sw_header_bg_color = stripslashes($row1['sw_header_bg_color']);
                if ($sw_header_bg_color == '') {
                    $sw_header_bg_color = '666666';
                }
                $sw_box_border_color = stripslashes($row1['sw_box_border_color']);
                if ($sw_box_border_color == '') {
                    $sw_box_border_color = '666666';
                }
                $header_style = '';
                if ($sw_header_font_family != '') {
                    $header_style = 'font-family:' . $sw_header_font_family . ';';
                }
                if ($sw_header_font_size != '') {
                    $header_style.= 'font-size:' . $sw_header_font_size . 'px;';
                } else {
                    $header_style.= 'font-size:11px';
                }
                if ($sw_header_font_color != '') {
                    $header_style.= 'color:#' . $sw_header_font_color . ';';
                }
                if ($row1['sw_show_header_credit'] == '1') {
                    $sw_header = '<a href="' . stripslashes($row1['sw_header_credit_link']) . '" target="_blank" style="color:#ffffff;' . $header_style . '">' . $sw_header . '</a>';
                }
                if ($row1['sw_header_image'] != '') {
                    $sw_header_image = '<img border="0" width="30" height="30" src="' . SITE_URL . '/uploads/' . stripslashes($row1['sw_header_image']) . '">';
                } else {
                    $sw_header_image = '';
                }
                $sw_footer = stripslashes($row1['sw_footer']);
                $sw_footer_font_family = stripslashes($row1['sw_footer_font_family']);
                $sw_footer_font_size = stripslashes($row1['sw_footer_font_size']);
                $sw_footer_font_color = stripslashes($row1['sw_footer_font_color']);
                $sw_footer_bg_color = stripslashes($row1['sw_footer_bg_color']);
                if ($sw_footer_bg_color == '') {
                    $sw_footer_bg_color = '666666';
                }
                $footer_style = '';
                if ($sw_footer_font_family != '') {
                    $footer_style = 'font-family:' . $sw_footer_font_family . ';';
                }
                if ($sw_footer_font_size != '') {
                    $footer_style.= 'font-size:' . $sw_footer_font_size . 'px;';
                } else {
                    $footer_style.= 'font-size:11px';
                }
                if ($sw_footer_font_color != '') {
                    $footer_style.= 'color:#' . $sw_footer_font_color . ';';
                }
                if ($row1['sw_show_footer_credit'] == '1') {
                    $sw_footer = '<a href="' . stripslashes($row1['sw_footer_credit_link']) . '" target="_blank" style="color:#ffffff;' . $footer_style . '">' . $sw_footer . '</a>';
                }
                if ($row1['sw_footer_image'] != '') {
                    $sw_footer_image = '<img border="0" width="30" height="30" src="' . SITE_URL . '/uploads/' . stripslashes($row1['sw_footer_image']) . '">';
                } else {
                    $sw_footer_image = '';
                }
                $today_day = date('j');
                $today_date = date('Y-m-d');
                $dayNumber = date('N');
                $sql2 = "SELECT * FROM `tblscrollingcontents` WHERE ( (`sc_listing_date_type` = 'days_of_month' AND FIND_IN_SET('" . $today_day . "', sc_days_of_month) ) OR (`sc_listing_date_type` = 'single_date' AND `sc_single_date` = '" . $today_date . "') OR (`sc_listing_date_type` = 'date_range' AND `sc_start_date` <= '" . $today_date . "' AND `sc_end_date` >= '" . $today_date . "') OR (`sc_listing_date_type` = 'days_of_week' AND  FIND_IN_SET('" . $dayNumber . "', sc_days_of_week)) ) AND ( `sw_id` = '" . $row1['sw_id'] . "' ) AND ( `sc_status` = '1' ) ORDER BY `sc_order` ASC , `sc_add_date` DESC ";
                //echo '<br>sql = '.$sql;
                $STH2 = $DBH->prepare($sql2);
                $STH2->execute();
                if ($STH2->rowCount() > 0) {
                    $output.= '<div style="float:left;width:160px; margin-left:20px; ">';
                    $output.= '<form name="frmScrollingWindows" id="frmScrollingWindows" action="#" method="post" >';
                    $output.= '	<input type="hidden" name="hdnpage_id" id="hdnpage_id" value="' . $page_id . '">';
                    $output.= '<table width="160" border="0" cellpadding="0" cellspacing="1" bgcolor="#' . $sw_box_border_color . '">';
                    if ($sw_header_hide == '0') {
                        $output.= '	<tr>';
                        $output.= '        <td colspan="2" align="left" valign="top" bgcolor="#FFFFFF">';
                        $output.= '            <table width="160" border="0" cellpadding="0" cellspacing="0" bgcolor="#' . $sw_header_bg_color . '">';
                        $output.= '                <tr>';
                        if ($sw_header_image == '') {
                            $output.= '                    <td width="160" bgcolor="#' . $sw_header_bg_color . '" height="30" align="center" valign="middle" style="color:#FFFFFF;font-weight:bold;' . $header_style . '" >' . $sw_header . '</td>';
                        } else {
                            $output.= '                    <td width="125" bgcolor="#' . $sw_header_bg_color . '" height="30" align="left" valign="middle" style="color:#FFFFFF;font-weight:bold;' . $header_style . '" >' . $sw_header . '</td>';
                            $output.= '                    <td width="35" bgcolor="#' . $sw_header_bg_color . '" height="30" align="right" valign="middle" >' . $sw_header_image . '</td>';
                        }
                        $output.= '                </tr>';
                        $output.= '            </table>';
                        $output.= '        </td>';
                        $output.= '	</tr>';
                    }
                    $output.= '	<tr>';
                    $output.= '        <td colspan="2" align="left" valign="top" bgcolor="#FFFFFF" class="slider">';
                    $output.= '            <div style="" id="slider_main' . $i . '" >';
                    $j = 0;
                    while ($row = $STH2->fetch(PDO::FETCH_ASSOC)) {
                        // echo "<pre>";print_r($row);echo "</pre>";
                        $sc_id = $row['sc_id'];
                        $sc_title = stripslashes($row['sc_title']);
                        $sc_title_font_family = stripslashes($row['sc_title_font_family']);
                        $sc_title_font_size = stripslashes($row['sc_title_font_size']);
                        $sc_content = $this->get_clean_br_string(stripslashes($row['sc_content']));
                        $sc_content_font_family = stripslashes($row['sc_content_font_family']);
                        $sc_content_font_size = stripslashes($row['sc_content_font_size']);
                        $sc_content_type = stripslashes($row['sc_content_type']);
                        $sc_title_font_color = stripslashes($row['sc_title_font_color']);
                        $sc_content_font_color = stripslashes($row['sc_content_font_color']);
                        $sc_title_hide = stripslashes($row['sc_title_hide']);
                        $sc_add_fav_hide = stripslashes($row['sc_add_fav_hide']);
                        $sc_credit_link = stripslashes($row['sc_credit_link']);
                        $sc_title_style = '';
                        if ($sc_title_font_family != '') {
                            $sc_title_style = 'font-family:' . $sc_title_font_family . ';';
                        }
                        if ($sc_title_font_size != '') {
                            $sc_title_style.= 'font-size:' . $sc_title_font_size . 'px;';
                        }
                        if ($sc_title_font_color != '') {
                            $sc_title_style.= 'color:#' . $sc_title_font_color . ';';
                        }
                        $output.= '<div style="min-height:100px;">';
                        $output.= '			<table width="150" border="0" cellspacing="0" cellpadding="0">';
                        if ($sc_title_hide == '0') {
                            $output.= '				<tr>';
                            $output.= '					<td height="30" colspan="2" align="center" valign="top" style="' . $sc_title_style . '" >';
                            if ($sc_credit_link == '') {
                                $output.= '' . $sc_title . '';
                            } else {
                                $output.= '<a href="' . $sc_credit_link . '" style="' . $sc_title_style . '" target="_blank">' . $sc_title . '</a>';
                            }
                            $output.= '</td>';
                            $output.= '				</tr>';
                        }
                        if ($sc_content_type == 'text') {
                            $sc_content_style = '';
                            if ($sc_content_font_family != '') {
                                $sc_content_style = 'font-family:' . $sc_content_font_family . ';';
                            }
                            if ($sc_content_font_size != '') {
                                $sc_content_style.= 'font-size:' . $sc_content_font_size . 'px;';
                            }
                            if ($sc_content_font_color != '') {
                                $sc_content_style.= 'color:#' . $sc_content_font_color . ';';
                            }
                            $output.= '<tr>';
                            $output.= '<td colspan="2" height="60" align="left" valign="top" style="padding-left:3px;' . $sc_content_style . '">';
                            if ($sc_credit_link == '') {
                                $output.= '' . $sc_content . '';
                            } else {
                                $output.= '<a href="' . $sc_credit_link . '" target="_blank" style="text-decoration:none;' . $sc_content_style . '">' . $sc_content . '</a>';
                            }
                            $output.= '</td>';
                            $output.= '</tr>';
                        } elseif ($sc_content_type == 'text_and_image') {
                            $sc_content_style = '';
                            if ($sc_content_font_family != '') {
                                $sc_content_style = 'font-family:' . $sc_content_font_family . ';';
                            }
                            if ($sc_content_font_size != '') {
                                $sc_content_style.= 'font-size:' . $sc_content_font_size . 'px;';
                            }
                            if ($sc_content_font_color != '') {
                                $sc_content_style.= 'color:#' . $sc_content_font_color . ';';
                            }
                            if ($row['sc_image'] != '') {
                                $sc_image = '<img border="0" width="50" src="' . SITE_URL . '/uploads/' . stripslashes($row['sc_image']) . '" />';
                            } else {
                                $sc_image = '';
                            }
                            $output.= '				<tr>';
                            $output.= '					<td width="60" height="60" align="left" valign="top">';
                            $output.= '						<table width="50" border="0" cellspacing="0" cellpadding="0">';
                            $output.= '							<tr>';
                            $output.= '								<td align="left" valign="top" bgcolor="#FFFFFF" style="padding-left:10px;">';
                            if ($sc_credit_link == '') {
                                $output.= '' . $sc_image . '';
                            } else {
                                $output.= '<a href="' . $sc_credit_link . '" target="_blank" style="text-decoration:none;' . $sc_content_style . '">' . $sc_image . '</a>';
                            }
                            $output.= '</td>';
                            $output.= '							</tr>';
                            $output.= '						</table>';
                            $output.= '					</td>';
                            $output.= '					<td width="90" height="60" align="left" valign="top" style="padding-left:3px;' . $sc_content_style . '">';
                            if ($sc_credit_link == '') {
                                $output.= '' . $sc_content . '';
                            } else {
                                $output.= '<a href="' . $sc_credit_link . '" target="_blank" style="text-decoration:none;' . $sc_content_style . '">' . $sc_content . '</a>';
                            }
                            $output.= '</td>';
                            $output.= '				</tr>';
                        } elseif ($sc_content_type == 'image') {
                            if ($row['sc_image'] != '') {
                                $sc_image = '<img border="0" width="150" src="' . SITE_URL . '/uploads/' . stripslashes($row['sc_image']) . '" />';
                            } else {
                                $sc_image = '';
                            }
                            $output.= '				<tr>';
                            $output.= '					<td colspan="2" height="60" align="left" valign="top">';
                            if ($sc_credit_link == '') {
                                $output.= '' . $sc_image . '';
                            } else {
                                $output.= '<a href="' . $sc_credit_link . '" target="_blank" style="text-decoration:none;' . $sc_content_style . '">' . $sc_image . '</a>';
                            }
                            $output.= '</td>';
                            $output.= '				</tr>';
                        } elseif ($sc_content_type == 'video') {
                            if ($row['sc_video'] != '') {
                                $sc_video = '<iframe width="150" height="150" src="' . $this->getBannerString($row['sc_video']) . '" frameborder="0" allowfullscreen></iframe>';
                            } else {
                                $sc_video = '';
                            }
                            $output.= '				<tr>';
                            $output.= '					<td colspan="2" height="60" align="left" valign="top">';
                            if ($sc_credit_link == '') {
                                $output.= '' . $sc_video . '';
                            } else {
                                $output.= '<a href="' . $sc_credit_link . '" target="_blank" style="text-decoration:none;' . $sc_content_style . '">' . $sc_video . '</a>';
                            }
                            $output.= '       </td>';
                            $output.= '				</tr>';
                        } elseif ($sc_content_type == 'flash') {
                            if ($row['sc_flash'] != '') {
                                $sc_flash = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=7,0,19,0" width="100" height="100"><param name="movie" value="' . SITE_URL . "/uploads/" . $row['sc_flash'] . '" /><param name="quality" value="high" /><embed src="' . SITE_URL . "/uploads/" . $row['sc_flash'] . '" quality="high" pluginspage="http://www.macromedia.com/go/getflashplayer" type="application/x-shockwave-flash" width="100" height="100"></embed></object>';
                            } else {
                                $sc_flash = '';
                            }
                            $output.= '				<tr>';
                            $output.= '					<td colspan="2" height="60" align="left" valign="top">' . $sc_flash . '</td>';
                            $output.= '				</tr>';
                        } elseif ($sc_content_type == 'rss') {
                            $rss_feed_item_id = $row['rss_feed_item_id'];
                            list($rss_feed_item_title, $rss_feed_item_desc, $rss_feed_item_link, $rss_feed_item_json) = $this->getRssFeedItemDetails($rss_feed_item_id);
                            $output.= '				<tr>';
                            $output.= '					<td colspan="2" height="60" align="left" valign="top">';
                            if ($sc_credit_link == '') {
                                $output.= '' . $rss_feed_item_title . '';
                            } else {
                                $output.= '<a href="' . $sc_credit_link . '" target="_blank" style="text-decoration:none;' . $sc_content_style . '">' . $rss_feed_item_title . '</a>';
                            }
                            $output.= '        </td>';
                            $output.= '				</tr>';
                            $output.= '				<tr>';
                            $output.= '					<td colspan="2" height="60" align="left" valign="top">';
                            if ($sc_credit_link == '') {
                                $output.= '' . $rss_feed_item_desc . '';
                            } else {
                                $output.= '<a href="' . $sc_credit_link . '" target="_blank" style="text-decoration:none;' . $sc_content_style . '">' . $rss_feed_item_desc . '</a>';
                            }
                            $output.= '        </td>';
                            $output.= '				</tr>';
                        }
                        if (stripslashes($row['sc_show_credit']) == '1') {
                            if (stripslashes($row['sc_credit_name']) != '') {
                                $sc_show_credit = '1';
                                $sc_credit_name = stripslashes($row['sc_credit_name']);
                                if (stripslashes($row['sc_credit_link']) != '') {
                                    $sc_credit_link = stripslashes($row['sc_credit_link']);
                                } else {
                                    $sc_credit_link = '';
                                }
                            } else {
                                $sc_show_credit = '0';
                                $sc_credit_name = '';
                                $sc_credit_link = '';
                            }
                        } else {
                            $sc_show_credit = '0';
                            $sc_credit_name = '';
                            $sc_credit_link = '';
                        }
                        if ($sc_add_fav_hide == '0') {
                            $output.= '				<tr>



                                    <td height="30" align="left" valign="middle" style="padding-left:2px;">';
                            if (!$this->chkIfOptionAlreadyAddedToFav($user_id, $page_id, $sc_id, '0')) {
                                $output.= '					<input type="button" name="select_scrolloing_content_' . $i . '_' . $j . '" id="select_scrolloing_content_' . $i . '_' . $j . '" value="Add to Fav" onclick="addScrollingContentToFav(\'' . $sc_id . '\')" style="width:60px;font-size:9px;">';
                            }
                            $output.= '                    </td>



												<td height="30" align="right" valign="middle">';
                            if ($sc_show_credit == '1') {
                                $output.= '					<a href="' . $sc_credit_link . '" target="_blank">' . $sc_credit_name . '</a>';
                            }
                            $output.= '                    </td>



                                                                            </tr>';
                        } else {
                            if ($sc_show_credit == '1') {
                                $output.= '				<tr>



                                        <td colspan="2" height="30" align="center" valign="middle" style="padding-left:2px;">';
                                $output.= '					<a href="' . $sc_credit_link . '" target="_blank">' . $sc_credit_name . '</a>';
                                $output.= '                    </td>



                                                                                </tr>';
                            }
                        }
                        $output.= '			</table>';
                        $output.= '</div>';
                        $j = $j + 1;
                    }
                    $output.= '			</div>';
                    $output.= '		</td>';
                    $output.= '	</tr>';
                    if ($sw_footer_hide == '0') {
                        $output.= '	<tr>';
                        $output.= '        <td colspan="2" align="left" valign="top" bgcolor="#FFFFFF">';
                        $output.= '            <table width="160" border="0" cellpadding="0" cellspacing="0" bgcolor="#' . $sw_footer_bg_color . '">';
                        $output.= '                <tr>';
                        if ($sw_footer_image == '') {
                            $output.= '                    <td width="160" bgcolor="#' . $sw_footer_bg_color . '" height="30" align="center" valign="middle" style="color:#FFFFFF;font-weight:bold;' . $footer_style . '" >' . $sw_footer . '</td>';
                        } else {
                            $output.= '                    <td width="125" bgcolor="#' . $sw_footer_bg_color . '" height="30" align="left" valign="middle" style="color:#FFFFFF;font-weight:bold;' . $footer_style . '" >' . $sw_footer . '</td>';
                            $output.= '                    <td width="35" bgcolor="#' . $sw_footer_bg_color . '" height="30" align="right" valign="middle" >' . $sw_footer_image . '</td>';
                        }
                        $output.= '                </tr>';
                        $output.= '            </table>';
                        $output.= '        </td>';
                        $output.= '	</tr>';
                    }
                    $output.= '</table>



                            <table width="160" border="0" cellspacing="0" cellpadding="0">



                                <tr>



                                    <td height="10"><img src="images/spacer.gif" width="1" height="1" /></td>



                                </tr>



                            </table>';
                    $output.= '	</form>';
                    $output.= '</div>';
                    if ($i % 3 == 0) {
                        $output.= '<div style="clear:both;height:5px;"></div>';
                    }
                    $i = $i + 1;
                }
            }
            $output.= '<div style="clear:both;height:5px;"></div>';
        }
        return $output;
    }
    public function getRssFeedItemDetails($rss_feed_item_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $rss_feed_item_title = '';
        $rss_feed_item_desc = '';
        $rss_feed_item_link = '';
        $rss_feed_item_json = '';
        $sql = "SELECT * FROM `tblrssfeeditems` WHERE `rss_feed_item_id` = '" . $rss_feed_item_id . "' AND `rss_feed_item_status` = '1' ";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $rss_feed_item_title = stripslashes($row['rss_feed_item_title']);
            $rss_feed_item_desc = stripslashes($row['rss_feed_item_desc']);
            $rss_feed_item_link = stripslashes($row['rss_feed_item_link']);
            $rss_feed_item_json = stripslashes($row['rss_feed_item_json']);
        }
        return array($rss_feed_item_title, $rss_feed_item_desc, $rss_feed_item_link, $rss_feed_item_json);
    }
    public function getTemppageId($page_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $temp_page_id = '0';
        $sql = "SELECT * FROM `tblpages` WHERE show_in_feedback = '1' AND `page_id` = '" . $page_id . "' ORDER BY `page_add_date` DESC";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $temp_page_id = stripslashes($row['page_id']);
        }
        return $temp_page_id;
    }
    public function getFeeadBackPages($page_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $option_str = '';
        $sql = "SELECT * FROM `tblpagedropdowns` WHERE `pdm_id` = '3' AND `pd_deleted` = '0' ";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $page_id_str = stripslashes($row['page_id_str']);
            $sql2 = "SELECT * FROM `tblpages` WHERE `page_id` IN (" . $page_id_str . ") AND `show_in_list` = '1' AND `adviser_panel` = '0' AND `vender_panel` = '0' ORDER BY `menu_title` ASC";
            //$sql = "SELECT * FROM `tblpages` WHERE  AND `show_in_feedback` = '1' ORDER BY `page_name` ASC";
            //echo $sql;
            $STH2 = $DBH->prepare($sql2);
            $STH2->execute();
            if ($STH2->rowCount() > 0) {
                if ($page_id == 0) {
                    $sel = ' selected ';
                } else {
                    $sel = '';
                }
                $option_str.= '<option value="0" ' . $sel . '>General</option>';
                while ($row = $STH2->fetch(PDO::FETCH_ASSOC)) {
                    if ($row['page_id'] == $page_id) {
                        $sel = ' selected ';
                    } else {
                        $sel = '';
                    }
                    $option_str.= '<option value="' . $row['page_id'] . '" ' . $sel . '>' . stripslashes($row['page_name']) . '</option>';
                }
            }
        }
        return $option_str;
    }
    //add by ample 15-04-20
    public function getFeeadBackPagesNew($page_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $option_str = '';
        $sql2 = "SELECT * FROM `tblpages` WHERE `page_id` = " .$page_id;
        $STH2 = $DBH->prepare($sql2);
        $STH2->execute();
        if ($STH2->rowCount() > 0) {
           $row = $STH2->fetch(PDO::FETCH_ASSOC);
           $option_str.= '<option value="0">General</option>';
           $option_str.= '<option value="' . $row['page_id'] . '" selected>' . stripslashes($row['page_name']) . '</option>';
           }
           else
           {
                $option_str.= '<option value="0" selected>General</option>';
           }
        return $option_str;
    }
    public function getCommentByBesname($besname, $day_month_year) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $comment = array();
        $sql = "SELECT * FROM `tblbodymainsymptoms` WHERE `bms_name` = '" . $besname . "' ";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            //$comment = stripslashes($row['comment']);
            $comment = $this->GetSymtumKeywordList($row['bms_id'], $day_month_year);
        }
        return $comment;
    }
    public function GetSymtumKeywordList($symptom_id, $day_month_year) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $comment = array();
        $key_sub_cat = array();
        $option_str = "";
        $sql = "SELECT `keywords` FROM `tbl_symptom_keyword` WHERE `symptom_id` = '" . $symptom_id . "' and `key_sub_cat` = '506' ";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $comment[] = $row['keywords'];
                //$key_sub_cat[]=$row['key_sub_cat'];
                
            }
            $icon = $this->getMyDayTodayIconComment('QuickTip_show', $day_month_year);
            //print_r($icon);
            //title="'.$icon['icons_name'].'" alt="'.$icon['icons_name'].'"
            if (count($comment) > 0) {
                //echo $comment;
                $option_str.= '<div class="tooltipN">

                                <a href="#" target="_blank">

                                <img src="uploads/' . $icon['image'] . '" title="' . $icon['icons_name'] . '" alt="' . $icon['icons_name'] . '" style="width:50px; height:50px;">

                                <span class="tooltiptext">';
                $option_str.= '<p style="color:#000;"><b>Quick Tips</b></p>';
                for ($i = 0;$i < count($comment);$i++) {
                    $option_str.= '<p>' . $comment[$i] . '</p>';
                }
                $option_str.= '</span></a></div>';
            }
            //$comment = stripslashes($row['comment']);
            
        }
        return $option_str;
    }
    //update by ample 21-04-20
    public function addUsersMDT($user_id, $data) {
        // echo "<pre>";print_r($data);echo "<pre>";
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return = false;
        for ($i = 0;$i < count($data['bes_id']);$i++) {
            if ($data['bes_id'][$i] != '') {
                $data['unit'][$i] = $data['unit'][$i] ? $data['unit'][$i] : 0;
                $sql = "INSERT INTO `tblusersmdt`(`mdt_date`, `user_id`, `bms_name`, `bms_entry_type`, `scale`, `remarks`, `mdt_time`, `mdt_duration`,`user_location`, `user_view`, `user_Interaction`, `user_alert`,`sequence_show`,unit)" . "VALUES ('" . date("Y-m-d", strtotime($data['day_month_year'])) . "','" . $user_id . "','" . $data['bes_id'][$i] . "','" . $data['heading'][$i] . "','" . $data['scale'][$i] . "','" . $data['comment'][$i] . "','" . $data['bes_time'][$i] . "','" . $data['duration'][$i] . "','" . $data['location'][$i] . "','" . $data['User_view'][$i] . "','" . $data['User_Interaction'][$i] . "','" . $data['alert'][$i] . "','" . $data['sequence'] . "','" . $data['unit'][$i] . "')";
                $STH = $DBH->prepare($sql);
                $STH->execute();
                if ($STH->rowCount() > 0) {
                    $return = true;
                }
            }
        }
        $_SESSION['sequence'] = $data['sequence'] + 1;
        return $return;
    }
    public function getMyDayTodayData($user_id, $mdtdate, $sequence) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $sql = "SELECT * FROM `tblusersmdt` WHERE `user_id` = '" . $user_id . "' and `mdt_date` = '" . $mdtdate . "' and sequence_show = '" . $sequence . "' ";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[] = $row;
            }
        }
        return $data;
    }
    public function GetHeaderDatabyPage($page_name) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $sql = "SELECT * FROM `tbl_data_dropdown` WHERE `page_name` = '" . $page_name . "' and `is_deleted` = 0 and `pag_cat_status` = 1 order by `order_show` ASC ";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[] = $row;
            }
        }
        // echo "<pre>";print_r($data);echo "</pre>";
        return $data;
    }
    public function GetHeaderDatabyPageKR($ref_code) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $sql = "SELECT * FROM `tbl_design_your_life` WHERE `ref_code` = '" . $ref_code . "' and `is_deleted` = 0 and `status` = 1 order by `scale_order_show` ASC ";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[] = $row;
            }
        }
        // echo "<pre>";print_r($data);echo "</pre>";
        return $data;
    }
    public function getExclusionAllName($page_type="",$page_id="") {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $cs_value = array();
        if($page_id && $page_type)
        {
            $sql = "SELECT * FROM `tbl_exclusion` WHERE page_type='".$page_type."' AND page_id=".$page_id;
        }
        else
        {
            $sql = "SELECT * FROM `tbl_exclusion` where 1 ";
        }
        
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $cs_value[] = strtolower($row['exl_name']);
            }
        }
        return $cs_value;
    }
    public function GetFecthData($keyworddata_implode_data, $canv_sub_cat_link, $cat_id) {
        $final_data = array();
        // echo "<pre>";print_r($this->Getmycanvassolutionitems($cat_id,$keyworddata_implode_data));echo "</pre>";
        if ($canv_sub_cat_link == 'tbl_bodymainsymptoms') {
            //echo 'Hiii';
            $symtum_cat = $this->getAllMainSymptomsMyCanvas($cat_id);
            if (!empty($symtum_cat)) {
                //
                $final_data = $this->Getmycanvasdata($symtum_cat, $keyworddata_implode_data);
            }
        }
        if ($canv_sub_cat_link == 'tblsolutionitems') {
            //$symtum_cat = $this->getAllMainSymptomsRamakantFront($cat_id);
            $final_data = $this->Getmycanvassolutionitems($cat_id, $keyworddata_implode_data);
        }
        if ($canv_sub_cat_link == 'tbldailymealsfavcategory') {
            // echo 'Hiii';
            $symtum_cat = $this->getAllDailyMealsMyCanvas($cat_id);
            if (!empty($symtum_cat)) {
                $final_data = $this->Getmycanvasmealdata($symtum_cat, $keyworddata_implode_data);
            }
        }
        if ($canv_sub_cat_link == 'tbldailyactivity') {
            //$symtum_cat = $this->getAllDailyActivityMyCanvas($cat_id);
            $final_data = $this->GetmycanvasDailyActivitydata($cat_id, $keyworddata_implode_data);
        }
        if ($canv_sub_cat_link == 'tbl_event_master') {
            $final_data = $this->GetEventDataMyCanvas($keyworddata_implode_data);
        }
        if (count($final_data) > 0) {
            $final_data = $final_data;
        } else {
            //$final_data[]= array();
            return $final_data;
        }
        return $final_data;
    }
    public function Getmycanvasdata($symtum_cat, $keyworddata_implode_data) {
        $symtum_cat = implode(',', $symtum_cat);
        $DBH = new DatabaseHandler();
        $str_sql_search = '';
        //$
        for ($i = 0;$i < count($keyworddata_implode_data);$i++) {
            if ($i == 0) {
                $str_sql_search.= " `bms_name` LIKE '%" . $keyworddata_implode_data[$i] . "%' ";
            } else {
                $str_sql_search.= " OR `bms_name` LIKE '%" . $keyworddata_implode_data[$i] . "%' ";
            }
        }
        $option_str = array();
        $option_str2 = array();
        $sql = "SELECT * FROM `tblbodymainsymptoms` WHERE bms_id IN($symtum_cat) AND ($str_sql_search) ORDER BY `bms_name` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data = array();
                if ($row['comment'] != '') {
                    $data['activity_name'] = strip_tags($row['bms_name']) . '<span class="tooltiptext">' . strip_tags($row['comment']) . '</span>';
                    $data['activity_id'] = $row['bms_id'];
                } else {
                    $data['activity_name'] = strip_tags($row['bms_name']);
                    $data['activity_id'] = $row['bms_id'];
                }
                $option_str[] = $data;
            }
            for ($i = 0;$i < count($option_str);$i++) {
                array_push($option_str2, $this->GETsymtumKeyword($option_str[$i]['activity_id']));
            }
            $option_str2 = array_values(array_filter($option_str2));
            for ($i = 0;$i < count($option_str2);$i++) {
                for ($j = 0;$j < count($option_str2[$i]);$j++) {
                    array_push($option_str, $option_str2[$i][$j]);
                }
            }
        }
        return $option_str;
    }
    public function GETsymtumKeyword($symptom_id) {
        $DBH = new DatabaseHandler();
        $option_str = array();
        $sql = "SELECT * FROM `tbl_symptom_keyword` WHERE  symptom_id ='" . $symptom_id . "' and `keywords`!='' ORDER BY `add_date` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data = array();
                $data['activity_name'] = $row['keywords'];
                $data['activity_id'] = $row['symptom_id'];
                $option_str[] = $data;
            }
            //            echo '<pre>';
            //            print_r($option_str);
            //            echo '</pre>';
            
        }
        return $option_str;
    }
    public function Getmycanvassolutionitems($cat_id, $keyworddata_implode_data) {
        //echo 'cat_id'.$cat_id;
        //$symtum_cat = explode(',', $cat_id);
        //$symtum_cat = implode($symtum_cat, '\',\'');
        // echo 'cat_id'.$symtum_cat.'<br>';
        $DBH = new DatabaseHandler();
        $str_sql_search = '';
        //$
        for ($i = 0;$i < count($keyworddata_implode_data);$i++) {
            // if($i==0)
            // {
            //   $str_sql_search .= " `sol_box_title` LIKE '%".$keyworddata_implode_data[$i]."%' OR `sol_box_desc` LIKE '%".$keyworddata_implode_data[$i]."%' ";
            // }
            // else
            // {
            //   $str_sql_search .= " OR `sol_box_title` LIKE '%".$keyworddata_implode_data[$i]."%' OR `sol_box_desc` LIKE '%".$keyworddata_implode_data[$i]."%' ";
            // }
            if ($i == 0) {
                $str_sql_search.= " `reference_title` LIKE '%" . $keyworddata_implode_data[$i] . "%' OR `topic_subject` LIKE '%" . $keyworddata_implode_data[$i] . "%' OR `narration` LIKE '%" . $keyworddata_implode_data[$i] . "%'";
            } else {
                $str_sql_search.= " OR `reference_title` LIKE '%" . $keyworddata_implode_data[$i] . "%' OR `topic_subject` LIKE '%" . $keyworddata_implode_data[$i] . "%' OR `narration` LIKE '%" . $keyworddata_implode_data[$i] . "%' ";
            }
        }
        // echo $str_sql_search;
        // echo '<br>';
        $option_str = array();
        $sql = "SELECT * FROM `tblsolutionitems` WHERE  ($str_sql_search) AND sol_item_cat_id IN($cat_id) ORDER BY `reference_title` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                // echo "<pre>";print_r($row);echo "</pre>";
                // $data = array();
                // if($row['sol_box_desc']!='')
                // {
                //     $data['activity_name'] = strip_tags($row['sol_box_title']).'<span class="tooltiptext">'.strip_tags($row['sol_box_desc']).'</span>';
                //     $data['activity_id'] = $row['sol_item_cat_id'];
                // }
                // else {
                //     $data['activity_name'] = strip_tags($row['sol_box_title']);
                //     $data['activity_id'] = $row['sol_item_cat_id'];
                // }
                $data = array();
                if ($row['topic_subject'] != '') {
                    $data['activity_name'] = strip_tags($row['reference_title']) . '<span class="tooltiptext">' . strip_tags($row['topic_subject']) . '</span>';
                    $data['activity_id'] = $row['sol_item_cat_id'];
                } else {
                    $data['activity_name'] = strip_tags($row['reference_title']);
                    $data['activity_id'] = $row['sol_item_cat_id'];
                }
                $option_str[] = $data;
            }
        }
        // echo "<pre>";print_r($option_str);echo "</pre>";
        return $option_str;
    }
    public function GetCategoryNameByid($symtum_cat) {
        $DBH = new DatabaseHandler();
        $option_str = array();
        $sql = "SELECT * FROM `tblfavcategory` WHERE  fav_cat_id IN($symtum_cat) ORDER BY `fav_cat` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data = array();
                $data['activity_name'] = strip_tags($row['fav_cat']);
                $data['activity_id'] = $row['fav_cat_id'];
                $data['page_icon'] = $row['page_icon'];
                $data['page_icon_type'] = $row['page_icon_type'];
                $option_str[] = $data;
            }
        }
        return $option_str;
    }
    public function getAllMainSymptomsMyCanvas($symtum_cat) {
        $DBH = new DatabaseHandler();
        //$symtum_cat = implode($symtum_cat, '\',\'');
        $str_sql_search = " AND `fav_parent_cat` IN (" . $symtum_cat . ") ";
        $data = array();
        $sql = "SELECT DISTINCT bmsid FROM `tblsymtumscustomcategory` WHERE  symtum_deleted = '0' " . $str_sql_search . " ORDER BY bmsid DESC ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[] = $row['bmsid'];
            }
        }
        return $data;
    }
    public function getAllDailyMealsMyCanvas($symtum_cat) {
        $DBH = new DatabaseHandler();
        //$symtum_cat = implode($symtum_cat, '\',\'');
        $str_sql_search = " AND `fav_cat_id` IN (" . $symtum_cat . ") ";
        $data = array();
        $sql = "SELECT DISTINCT meal_id FROM `tbldailymealsfavcategory` WHERE  show_hide = '1' " . $str_sql_search . " ORDER BY meal_id DESC ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[] = strip_tags($row['meal_id']);
            }
        }
        return $data;
    }
    public function Getmycanvasmealdata($symtum_cat, $keyworddata_implode_data) {
        $symtum_cat = implode(',', $symtum_cat);
        $DBH = new DatabaseHandler();
        $str_sql_search = '';
        //$
        for ($i = 0;$i < count($keyworddata_implode_data);$i++) {
            if ($i == 0) {
                $str_sql_search.= " `benefits` LIKE '%" . $keyworddata_implode_data[$i] . "%' ";
            } else {
                $str_sql_search.= " OR `benefits` LIKE '%" . $keyworddata_implode_data[$i] . "%' ";
            }
        }
        $option_str = array();
        $sql = "SELECT * FROM `tbldailymeals` WHERE meal_id IN($symtum_cat) AND ($str_sql_search) ORDER BY `meal_item` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data = array();
                if ($row['benefits'] != '') {
                    $data['activity_name'] = strip_tags($row['meal_item']) . '<span class="tooltiptext">' . strip_tags($row['benefits']) . '</span>';
                    $data['activity_id'] = $row['meal_id'];
                } else {
                    $data['activity_name'] = strip_tags($row['meal_item']);
                    $data['activity_id'] = $row['meal_id'];
                }
                $option_str[] = $data;
            }
        }
        return $option_str;
    }
    public function GetmycanvasDailyActivitydata($symtum_cat, $keyworddata_implode_data) {
        //echo $symtum_cat = implode(',', $symtum_cat);
        //echo $symtum_cat;
        $DBH = new DatabaseHandler();
        $str_sql_search = '';
        //$
        for ($i = 0;$i < count($keyworddata_implode_data);$i++) {
            if ($i == 0) {
                $str_sql_search.= " `recommendations` LIKE '%" . $keyworddata_implode_data[$i] . "%' OR `guidelines` LIKE '%" . $keyworddata_implode_data[$i] . "%' OR `precautions` LIKE '%" . $keyworddata_implode_data[$i] . "%'  OR `benefits` LIKE '%" . $keyworddata_implode_data[$i] . "%' ";
            } else {
                $str_sql_search.= " OR `recommendations` LIKE '%" . $keyworddata_implode_data[$i] . "%' OR `guidelines` LIKE '%" . $keyworddata_implode_data[$i] . "%' OR `precautions` LIKE '%" . $keyworddata_implode_data[$i] . "%'  OR `benefits` LIKE '%" . $keyworddata_implode_data[$i] . "%' ";
            }
        }
        $option_str = array();
        $sql = "SELECT * FROM `tbldailyactivity` WHERE (activity_category IN($symtum_cat) OR activity_level_code IN($symtum_cat)) AND ($str_sql_search) ORDER BY `activity` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data = array();
                if ($row['benefits'] != '') {
                    $data['activity_name'] = strip_tags($row['activity']) . '<span class="tooltiptext">' . strip_tags($row['benefits']) . '</span>';
                    $data['activity_id'] = $row['activity_id'];
                } else {
                    $data['activity_name'] = strip_tags($row['activity']);
                    $data['activity_id'] = $row['activity_id'];
                }
                $option_str[] = $data;
            }
        }
        return $option_str;
    }
    public function getmydaytodaysequence($mdtdate, $user_id) {
        $DBH = new DatabaseHandler();
        $start_date = $mdtdate . ' 00:00:00';
        $end_date = $mdtdate . ' 59:59:59';
        $sequence = 0;
        $sql = "SELECT sequence_show FROM `tblusersmdt` WHERE  user_id = '$user_id' and `mdt_add_date` >= '" . $start_date . "' and `mdt_add_date` <= '" . $end_date . "' ORDER BY mdt_add_date DESC LIMIT 1 ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $sequence = $row['sequence_show'];
        }
        return $sequence;
    }
    //commented by rahul
    // public function AddmyCanvas($comment, $location, $User_view, $User_Interaction, $alert, $activity_text, $activity_id, $canv_sub_cat_link, $canv_show_fetch, $prof_cat, $sub_cat, $maintab, $subtab, $mdt_date, $sequence, $user_id,$level_title,$level_icon,$level_icon_type,$preview_id) {
    //     $DBH = new DatabaseHandler();
    //     $return = false;
    //     $sql = "INSERT INTO `tbl_mycanvas`(`user_id`, `mdt_entry_date`, `sequence_show`, `main_tab`, `sub_tab`, `profile_cat`, `sub_cat`, `show_fetch_link`,`canv_show_fetch`,`activity_id`, `activity_text`, `comment`, `location`, `user_response`, `what_for_next`, `user_updates`,level_title,level_icon,level_icon_type,preview_id) " . "VALUES ('" . $user_id . "','" . date("Y-m-d", strtotime($mdt_date)) . "','" . $sequence . "','" . $maintab . "','" . $subtab . "','" . $prof_cat . "','" . $sub_cat . "','" . $canv_sub_cat_link . "','" . $canv_show_fetch . "','" . $activity_id . "','" . addslashes($activity_text) . "','" . addslashes($comment) . "','" . $location . "','" . $User_view . "','" . $User_Interaction . "','" . $alert . "','" . $level_title . "','" . $level_icon . "','" . $level_icon_type . "','" . $preview_id . "')";
    //     // die();
    //     $STH = $DBH->query($sql);
    //     // print_r($STH);
    //     if ($STH->rowCount() > 0) {
    //         $return = true;
    //     }
    //     return $return;
    // }
    public function AddmyCanvas($comment, $location, $User_view, $User_Interaction, $alert, $activity_text, $activity_id, $canv_sub_cat_link, $canv_show_fetch, $prof_cat, $sub_cat, $maintab, $subtab, $mdt_date, $sequence, $user_id,$level_title,$level_icon,$level_icon_type,$preview_id) {
        $DBH = new DatabaseHandler();
       
        $sql = "INSERT INTO `tbl_mycanvas`
        (`user_id`, `mdt_entry_date`, `sequence_show`, `main_tab`, `sub_tab`, `profile_cat`, 
        `sub_cat`, `show_fetch_link`, `canv_show_fetch`, `activity_id`, `activity_text`, 
        `comment`, `location`, `user_response`, `what_for_next`, `user_updates`, 
        `level_title`, `level_icon`, `level_icon_type`, `preview_id`)
        VALUES 
        (:user_id, :mdt_entry_date, :sequence_show, :main_tab, :sub_tab, :profile_cat, 
        :sub_cat, :show_fetch_link, :canv_show_fetch, :activity_id, :activity_text, 
        :comment, :location, :user_response, :what_for_next, :user_updates, 
        :level_title, :level_icon, :level_icon_type, :preview_id)";

        $STH = $DBH->execute($sql, [
            ':user_id' => $user_id,
            ':mdt_entry_date' => date("Y-m-d", strtotime($mdt_date)),
            ':sequence_show' => $sequence,
            ':main_tab' => $maintab,
            ':sub_tab' => $subtab,
            ':profile_cat' => $prof_cat,
            ':sub_cat' => is_numeric($sub_cat) ? (int)$sub_cat : 0,
            ':show_fetch_link' => $canv_sub_cat_link,
            ':canv_show_fetch' => $canv_show_fetch,
            ':activity_id' => is_numeric($activity_id) ? (int)$activity_id : 0,
            ':activity_text' => $activity_text,
            ':comment' => $comment,
            ':location' => $location,
            ':user_response' => $User_view,
            ':what_for_next' => $User_Interaction,
            ':user_updates' => $alert,
            ':level_title' => $level_title,
            ':level_icon' => $level_icon,
            ':level_icon_type' => $level_icon_type,
            ':preview_id' => $preview_id,
        ]);

        if($STH->rowCount() > 0) {
            $return = true;
        } else {
            $return = false;
        }

        return $return;
    }
    public function getSelectedSolIdByChkSolidAndFavCatVivek($sol_item_id_implode_value, $fav_cat_id) {
        $DBH = new DatabaseHandler();
        $data = '';
        $sql = "SELECT * FROM `tblsolutionitems` WHERE `sol_item_id` IN(" . $sol_item_id_implode_value . ") and `sol_item_cat_id`='" . $fav_cat_id . "' and `sol_item_status` = '1' and `sol_item_deleted` = '0'";
        //echo '<br>Testkk: sql = '.$sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[] = $row['sol_item_id'];
            }
        }
        return $data;
    }
    public function getWSIAllDataByWSISolIDAndFavCatVivek($sol_id_implode, $fav_cat_id) {
        $DBH = new DatabaseHandler();
        $data = '';
        $sql = "SELECT * FROM `tblsolutionitems` WHERE sol_item_cat_id = '" . $fav_cat_id . "' AND sol_item_id IN(" . $sol_id_implode . ")  and `sol_item_status` = '1' and `sol_item_deleted` = '0' ORDER BY `sol_item_id` DESC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[] = $row;
            }
        }
        return $data;
    }
    public function GetAngerVentTooltip($page_id) {
        $DBH = new DatabaseHandler();
        $toolcontents = '';
        $sql = "SELECT * FROM `tblangerventtooltip` WHERE page_id = '" . $page_id . "' ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $toolcontents = stripslashes($row['text']);
        }
        return $toolcontents;
    }
    public function getMindJumbleBoxDetails($day) {
        $DBH = new DatabaseHandler();
        $arr_box_title = array();
        $arr_banner_type = array();
        $arr_banner = array();
        $arr_box_desc = array();
        $arr_mind_jumble_box_id = array();
        $arr_credit_line = array();
        $arr_credit_line_url = array();
        $arr_day = array();
        $arr_sound_clip_id = array();
        $arr_select_title = array();
        $arr_short_narration = array();
        $sql = "SELECT * FROM `tblmindjumble` WHERE  status = '1' ORDER BY `box_add_date` DESC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $days = ($row['day']);
                $arr_days = explode(",", $days);
                if (in_array($day, $arr_days)) {
                    array_push($arr_box_title, stripslashes($row['box_title']));
                    array_push($arr_banner_type, stripslashes($row['box_type']));
                    array_push($arr_banner, stripslashes($row['box_banner']));
                    array_push($arr_box_desc, stripslashes($row['box_desc']));
                    array_push($arr_mind_jumble_box_id, stripslashes($row['mind_jumble_box_id']));
                    array_push($arr_credit_line, stripslashes($row['credit_line']));
                    array_push($arr_credit_line_url, stripslashes($row['credit_line_url']));
                    array_push($arr_day, stripslashes($row['day']));
                    array_push($arr_sound_clip_id, stripslashes($row['sound_clip_id']));
                    array_push($arr_select_title, stripslashes($row['select_title']));
                    array_push($arr_short_narration, stripslashes($row['short_narration']));
                }
            }
        }
        return array($arr_box_title, $arr_banner_type, $arr_banner, $arr_box_desc, $arr_mind_jumble_box_id, $arr_credit_line, $arr_credit_line_url, $arr_day, $arr_sound_clip_id, $arr_select_title, $arr_short_narration);
    }
    public function getMindJumbelPDF($day) {
        $DBH = new DatabaseHandler();
        $arr_pdf = array();
        $arr_pdf_title = array();
        $arr_credit = array();
        $arr_credit_url = array();
        $arr_status = array();
        $arr_days = array();
        $sql = "SELECT * FROM `tblmindjumblepdf` WHERE status = '1'  ORDER BY `mind_jumble_pdf_add_date` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $days = ($row['day']);
                $arr_days = explode(",", $days);
                if (in_array($day, $arr_days)) {
                    array_push($arr_pdf, stripslashes($row['pdf']));
                    array_push($arr_pdf_title, stripslashes($row['pdf_title']));
                    array_push($arr_credit, stripslashes($row['credit']));
                    array_push($arr_credit_url, stripslashes($row['credit_url']));
                    array_push($arr_status, stripslashes($row['status']));
                }
            }
        }
        return array($arr_pdf, $arr_pdf_title, $arr_credit, $arr_credit_url, $arr_status);
    }
    public function getUserarea($step, $userarea_type) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "SELECT * FROM `tbluserarea` WHERE `userarea_type` = '" . $userarea_type . "' AND `step` = '" . $step . "' AND `status` = '1'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $step = stripslashes($row['step']);
            $box_title = stripslashes($row['box_title']);
            $box_desc = stripslashes($row['box_desc']);
        }
        return array($box_title, $box_desc);
    }
    public function getMindJumbelBKMusic($day) {
        $DBH = new DatabaseHandler();
        $music = '';
        $music_id = '';
        $credit = '';
        $credit_url = '';
        $sql = "SELECT * FROM `tblmindjumblemusic` WHERE status = '1' ORDER BY `music_add_date` DESC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $days = ($row['day']);
                $arr_days = explode(",", $days);
                if (in_array($day, $arr_days)) {
                    $music = stripslashes($row['music']);
                    $music_id = stripslashes($row['music_id']);
                    $credit = stripslashes($row['credit']);
                    $credit_url = stripslashes($row['credit_url']);
                    break;
                }
            }
        }
        return array($music, $music_id, $credit, $credit_url);
    }
    public function InsertMindjumbelVivekPDF($bes_id, $trigger_id, $user_title1, $user_banner_type1, $user_banner1, $user_id) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "INSERT INTO `tblsolutionitems`(`bes_id`,`trigger_id`,`sol_box_banner`,`sol_box_title`,`sol_box_type`,`sol_item_status`,`user_type`,`user_id`) VALUES ('" . addslashes($bes_id) . "','" . addslashes($trigger_id) . "','" . addslashes($user_banner1) . "','" . addslashes($user_title1) . "','" . addslashes($user_banner_type1) . "','0','3','" . addslashes($user_id) . "')";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function InsertMindjumbelVivek($bes_id, $trigger_id, $user_title, $user_banner_type, $user_banner, $user_id) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "INSERT INTO `tblsolutionitems`(`bes_id`,`trigger_id`,`sol_box_title`,`sol_box_type`,`sol_box_banner`,`sol_item_status`,`user_type`,`user_id`) VALUES ('" . addslashes($bes_id) . "','" . addslashes($trigger_id) . "','" . addslashes($user_title) . "','" . addslashes($user_banner_type) . "','" . addslashes($user_banner) . "','0','3','" . addslashes($user_id) . "')";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function InsertMindJumbelAllDetailsVivek($bes_id, $trigger_id, $user_select1, $user_adv1, $fav1_comma_separated, $user_id, $comment_box) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "INSERT  INTO `tblusermjb`(`bes_id`,`trigger_id`,`user_id`,`stress_buster_box_id_1`,`fav1`,`rate1`,`comment_box`) VALUES ('" . addslashes($bes_id) . "','" . addslashes($trigger_id) . "','" . $user_id . "','" . addslashes($user_select1) . "','" . addslashes($fav1_comma_separated) . "','" . addslashes($user_adv1) . "','" . addslashes($comment_box) . "')";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    function getTheam($day, $theam_id) {
        $DBH = new DatabaseHandler();
        $color_code = '#339900';
        $image = 'images/stressbuster_back.jpg';
        $credit = '';
        $credit_url = '';
        $sql = "SELECT * FROM `tbltheams` WHERE status = '1' AND theam_id = '" . $theam_id . "' ORDER BY `theam_add_date` DESC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $color_code = stripslashes($row['color_code']);
            $image = SITE_URL . "/uploads/" . stripslashes($row['image']);
            $credit = stripslashes($row['credit']);
            $credit_url = stripslashes($row['credit_url']);
        }
        return array($color_code, $image, $credit, $credit_url);
    }
    public function sendSignUpEmailToUser($email) {
        $user_data = $this->getUserDetails($email);
        if (!empty($user_data)) {
            $tdata_sms = array();
            $tdata_sms['mobile_no'] = $user_data['mobile'];
            $tdata_sms['sms_message'] = 'Dear ' . $user_data['name'] . ', Your profile is successfully created at Wellnessway4you.com.';
            // echo "<pre>";print_r($this->sendSMS($tdata_sms));echo "</pre>";
            // exit;
            $this->sendSMS($tdata_sms);
            $tdata_sms_otp = array();
            $tdata_sms_otp['mobile_no'] = $user_data['mobile'];
            $otp = $user_data['user_otp'];
            $tdata_sms_otp['sms_message'] = 'Dear ' . $user_data['name'] . ', Your profile is successfully created at Wellnessway4you.com activate your profile using OTP: ' . $otp;
            $this->sendSMS($tdata_sms_otp);
            // SENDSMS TO VENDOR - VENDOR SIGNUP - END
            // SENDSMS TO ADMIN - VENDOR SIGNUP - START
            $tdata_sms_admin = array();
            $tdata_sms_admin['mobile_no'] = '8655018341';
            $tdata_sms_admin['sms_message'] = "Dear Admin,New Business user profile is registered with name:" . $user_data['name'];
            $this->sendSMS($tdata_sms_admin);
            // SENDSMS TO ADMIN - VENDOR SIGNUP - END
            return true;
        }
    }
    public function getUserDetails($user_id) {
        $DBH = new DatabaseHandler();
        $data = array();
        // $sql = "SELECT * FROM `tblusers` WHERE (`email` = '".$contact."' || `mobile` = '".$contact."') ";
        $sql = "SELECT * FROM `tblusers` WHERE `user_id` = '" . $user_id . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $data = $STH->fetch(PDO::FETCH_ASSOC);
        }
        return $data;
    }
    // public function getUserDetailsKR($user_id)
    // {
    // 	$DBH = new DatabaseHandler();
    // 	$data = array();
    // 	$sql = "SELECT * FROM `tblusers` WHERE `user_id` = '".$user_id."'";
    // 	$STH = $DBH->query($sql);
    //         if($STH->rowCount() > 0)
    //             {
    //                 $data = $STH->fetch(PDO::FETCH_ASSOC);
    //             }
    // 	return $data;
    // }
    public function get_user_details($userid) {
        $DBH = new DatabaseHandler();
        $data = array();
        $sql = "SELECT * FROM `tblusers` WHERE (`user_id` = '" . $userid . "') ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $data = $STH->fetch(PDO::FETCH_ASSOC);
            //  echo"<pre>"; print_r(  $data ); echo "</pre>";
            // exit;
            
        }
        return $data;
    }
    public function getUserDetailsByid($id) {
        $DBH = new DatabaseHandler();
        $data = array();
        $sql = "SELECT * FROM `tblusers` WHERE `user_id` = '" . $id . "' ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $data = $STH->fetch(PDO::FETCH_ASSOC);
        }
        return $data;
    }
    public function reSendUserOTP($tdata) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return = false;
        try {
            $sql = "UPDATE `tblusers` SET 

					`user_otp` = :user_otp

					 WHERE `email` = :email";
            $STH = $DBH->prepare($sql);
            $STH->execute(array(':user_otp' => addslashes($tdata['otp']), ':email' => addslashes($tdata['email'])));
            $DBH->commit();
            $return = true;
        }
        catch(Exception $e) {
            return false;
        }
        return $return;
    }
    public function VerifyOTP($data) {
        $DBH = new DatabaseHandler();
        $return = false;
        try {
            $sql = "SELECT * FROM `tblusers` WHERE `email` = '" . addslashes($data['email']) . "' AND `user_otp` = '" . $data['otp'] . "' ";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $this->ActivateUser($data);
                $return = true;
            }
        }
        catch(Exception $e) {
            $stringData = '[getVendorId] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            //$this->debuglog($stringData);
            $return = false;
        }
        return $return;
    }
    public function ActivateUser($data) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return = false;
        try {
            $sql = "UPDATE `tblusers` SET 

					`status` = :status

					 WHERE `email` = :email  ";
            $STH = $DBH->prepare($sql);
            $STH->execute(array(':status' => '1', ':email' => addslashes($data['email'])));
            $DBH->commit();
            $return = true;
        }
        catch(Exception $e) {
            return false;
        }
        return $return;
    }
    public function SelectEventCountry($country_id) {
        $DBH = new DatabaseHandler();
        $date = Date("Y-m-d");
        $option_str = '';
        $sql = "SELECT DISTINCT (`country_id`) FROM `tbl_event_details` WHERE `end_date` >= " . $date . "  ORDER BY `country_id` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                if ($row['country_id'] == $country_id) {
                    $sel = 'selected';
                } else {
                    $sel = '';
                }
                //<option value="Paris">Paris</option>
                $option_str.= '<option value="' . $row['country_id'] . '" ' . $sel . ' >' . $this->GetCountryName($row['country_id']) . '</option>';
            }
        }
        return $option_str;
    }
    public function GetCountryName($country_id) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $sql = "SELECT `country_name` FROM `tblcountry` WHERE `country_id` = " . $country_id . " ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $option_str = $row['country_name'];
        }
        return $option_str;
    }
    public function GetEventSateOption($country_id, $state_id) {
        $DBH = new DatabaseHandler();
        $date = Date("Y-m-d");
        $option_str = '';
        $sql = "SELECT DISTINCT (`state_id`) FROM `tbl_event_details` WHERE `country_id` = '" . $country_id . "'  AND `end_date` >= " . $date . "  ORDER BY `state_id` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $option_str.= '<option value="">Select State</option>';
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                if ($row['state_id'] == $state_id) {
                    $sel = 'selected';
                } else {
                    $sel = '';
                }
                //<option value="Paris">Paris</option>
                $option_str.= '<option value="' . $row['state_id'] . '" ' . $sel . ' >' . $this->GetStateName($row['state_id']) . '</option>';
            }
        }
        return $option_str;
    }
    public function GetStateName($state_id) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $sql = "SELECT `state` FROM `tblstates` WHERE `state_id` = " . $state_id . " ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $option_str = $row['state'];
        }
        return $option_str;
    }
    public function GetEventCityOption($country_id, $state_id, $city_id) {
        $DBH = new DatabaseHandler();
        $date = Date("Y-m-d");
        $option_str = '';
        $sql = "SELECT DISTINCT (`city_id`) , `state_id` FROM `tbl_event_details` WHERE `country_id` = '" . $country_id . "'   AND `end_date` >= " . $date . "  ORDER BY `city_id` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $option_str.= '<option value="">Select City</option>';
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                if ($row['city_id'] == $city_id) {
                    $sel = 'selected';
                } else {
                    $sel = '';
                }
                //<option value="Paris">Paris</option>
                $option_str.= '<option value="' . $row['city_id'] . '" ' . $sel . '>' . $this->GetCityName($row['city_id']) . ' , ' . $this->GetStateName($row['state_id']) . '</option>';
            }
        }
        return $option_str;
    }
    public function GetCityName($city_id) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $sql = "SELECT `city` FROM `tblcities` WHERE `city_id` = " . $city_id . " ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $option_str = $row['city'];
        }
        return $option_str;
    }
    public function GetEventAreaOption($country_id, $state_id, $city_id, $area_id) {
        $DBH = new DatabaseHandler();
        $date = Date("Y-m-d");
        $option_str = '';
        $sql = "SELECT DISTINCT (`area_id`) FROM `tbl_event_details` WHERE `country_id` = '" . $country_id . "' AND  `city_id` = '" . $city_id . "'  AND `end_date` >= " . $date . "  ORDER BY `area_id` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $option_str.= '<option value="">Select Area</option>';
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                if ($row['area_id'] == $area_id) {
                    $sel = 'selected';
                } else {
                    $sel = '';
                }
                //<option value="Paris">Paris</option>
                $option_str.= '<option value="' . $row['area_id'] . '" ' . $sel . ' >' . $this->GetAreaName($row['area_id']) . '</option>';
            }
        }
        return $option_str;
    }
    public function GetAreaName($area_id) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $sql = "SELECT `area_name` FROM `tblarea` WHERE `area_id` = " . $area_id . " ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $option_str = $row['area_name'];
        }
        return $option_str;
    }
    public function GetAreaID($area_name) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $sql = "SELECT `area_id` FROM `tblarea` WHERE `area_name` = '" . $area_name . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $option_str = $row['area_id'];
        }
        return $option_str;
    }
    public function GetEventDataFront($tdata) {

        $DBH = new DatabaseHandler();
        $arr_records = array();
        $tags = array();
        $sql_event_type = "";
        if ($tdata['event_type']) {
            $sql_event_type = " AND TEM.fav_cat_id_1 = " . $tdata['event_type'] . " ";
        }
        $sql_event_date = "";
        if (!empty($tdata['from_day_month_year']) && !empty($tdata['to_day_month_year'])) {
            $sql_event_date = " AND TETT.event_start_date BETWEEN '" . date("Y-m-d", strtotime($tdata['from_day_month_year'])) . "' AND '" . date("Y-m-d", strtotime($tdata['to_day_month_year'])) . "' ";
        }
        $sql_event_location="";
        if (!empty($tdata['area_id'])) {
            $sql_event_location = " AND TED.area_id = '" . $tdata['area_id'] . "' ";
        }
        $sql_event_tags = "";
        if ($tdata['tags']) {
            $sql_event_tags = " AND TEM.event_tags LIKE '%" . $tdata['tags'] . "%' ";
        }
        $today=date('Y-m-d');
        $sql = "SELECT TETT.*,TED.*,TEM.* from tbl_event_time_table TETT " . " LEFT JOIN tbl_event_details TED ON TETT.event_id = TED.event_id" . " LEFT JOIN tbl_event_master TEM ON TETT.event_master_id = TEM.event_master_id" . " WHERE TED.event_status = 1 AND TED.event_deleted = 0 AND TEM.status = 1 AND TEM.is_deleted = 0 " . $sql_event_type . " ".$sql_event_location." ".$sql_event_date." ".$sql_event_tags." AND TETT.event_end_date >='".$today."'  GROUP BY TETT.event_id order by TETT.event_id ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                $arr_records[] = $r;
                // $tags[]=$r['event_tags'];
                
            }
        }
        //$arr_records['fianl_tags'] = $tags;
        return $arr_records;
    }
    //add new by ample 23-09-20
    public function GetEventDataGallery($tdata) {
        $DBH = new DatabaseHandler();
        $arr_records = array();
        $sql_event_type = "";
        if ($tdata['event_type'] != '') {
            $sql_event_type = " AND TEM.fav_cat_id_1 = '" . $tdata['event_type'] . "' ";
        }
        $sql_event_tags = "";
        if ($tdata['event_tag'] != '') {
            $sql_event_tags = " AND TEM.event_tags LIKE '%" . $tdata['event_tag'] . "%' ";
        }

        $sql = "SELECT TED.*,TEM.* from tbl_event_details TED " . " LEFT JOIN tbl_event_master TEM ON TED.event_master_id = TEM.event_master_id WHERE TED.event_deleted = 0 AND TEM.is_deleted = 0 " . $sql_event_type . " " . $sql_event_tags . "   order by TED.event_id ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                $arr_records[] = $r;
            }
        }
        return $arr_records;
    }
    public function getEventType($fav_cat_type_id) {
        $DBH = new DatabaseHandler();
        $data = array();
        $sql = "SELECT * FROM `tblcustomfavcategory` " . "LEFT JOIN tblfavcategory ON tblcustomfavcategory.favcat_id = tblfavcategory.fav_cat_id WHERE tblcustomfavcategory.fav_cat_type_id = '" . $fav_cat_type_id . "' and tblfavcategory.fav_cat_status = 1 and tblfavcategory.fav_cat_deleted = 0 and tblcustomfavcategory.cat_deleted=0 and tblcustomfavcategory.cat_status = 1 ORDER BY tblfavcategory.fav_cat ASC";
        //echo $sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[] = $row;
            }
        }
        //echo $option_str;
        return $data;
    }
    public function getEventTypebyid($fav_cat_type_id, $event_type) {
        $DBH = new DatabaseHandler();
        $data = array();
        $sql = "SELECT * FROM `tblcustomfavcategory` " . "LEFT JOIN tblfavcategory ON tblcustomfavcategory.favcat_id = tblfavcategory.fav_cat_id WHERE tblcustomfavcategory.fav_cat_type_id = '" . $fav_cat_type_id . "' AND tblfavcategory.fav_cat_id = '" . $event_type . "' and tblfavcategory.fav_cat_status = 1 and tblfavcategory.fav_cat_deleted = 0 and tblcustomfavcategory.cat_deleted=0 and tblcustomfavcategory.cat_status = 1 ORDER BY tblfavcategory.fav_cat ASC";
        //echo $sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[] = $row;
            }
        }
        //echo $option_str;
        return $data;
    }
    public function GetEventDetailsbyID($event_id) {
        $DBH = new DatabaseHandler();
        $arr_records = array();
        $sql = "SELECT TED.*,TEM.* from tbl_event_details TED " . " LEFT JOIN tbl_event_master TEM ON TED.event_master_id = TEM.event_master_id WHERE TED.event_status = 1 AND TED.event_deleted = 0 AND TED.event_id = '" . $event_id . "' order by TED.event_id ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $r = $STH->fetch(PDO::FETCH_ASSOC);
            $arr_records = $r;
        }
        return $arr_records;
    }
    public function GetEventTicketDetails($event_id) {
        $DBH = new DatabaseHandler();
        $arr_records = array();
        $sql = "SELECT EP.*,ELP.* from tbl_event_price EP " . " LEFT JOIN tbl_event_loc_price ELP ON EP.event_price_id = ELP.event_price_id WHERE EP.event_id = " . $event_id . " AND EP.event_deleted = 0 AND EP.event_price_status = '1' order by ELP.evlocprice_id ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $arr_records[] = $row;
            }
        }
        return $arr_records;
    }
    public function GetEventRegistrationType($event_id) {
        $DBH = new DatabaseHandler();
        $arr_records = array();
        $sql = "SELECT EP.*,ELP.* from tbl_event_price EP " . " LEFT JOIN tbl_event_loc_price ELP ON EP.event_price_id = ELP.event_price_id WHERE EP.event_id = " . $event_id . " AND EP.event_deleted = 0 AND EP.event_price_status = '1' order by ELP.evlocprice_id ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $arr_records[] = $row['registration_type'];
            }
        }
        return $arr_records;
    }
    public function GetEventbookingType($event_id) {
        $DBH = new DatabaseHandler();
        $arr_records = array();
        $sql = "SELECT EP.*,ELP.* from tbl_event_price EP " . " LEFT JOIN tbl_event_loc_price ELP ON EP.event_price_id = ELP.event_price_id WHERE EP.event_id = " . $event_id . " AND EP.event_deleted = 0 AND EP.event_price_status = '1' order by ELP.evlocprice_id ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $arr_records[] = $row['ordering_type_id'];
            }
        }
        return $arr_records;
    }
    public function GetEventTicketType($event_id) {
        $DBH = new DatabaseHandler();
        $arr_records = array();
        $sql = "SELECT EP.*,ELP.* from tbl_event_price EP " . " LEFT JOIN tbl_event_loc_price ELP ON EP.event_price_id = ELP.event_price_id WHERE EP.event_id = " . $event_id . " AND EP.event_deleted = 0 AND EP.event_price_status = '1' order by ELP.evlocprice_id ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $arr_records[] = $row['ordering_type_id'];
            }
        }
        return $arr_records;
    }
    //update by ample 24-09-20
    public function GetCertificateDetailsbyID($event_id,$type="") {
        $DBH = new DatabaseHandler();
        $arr_records = array();
        $str_type="";
        if(!empty($type))
        {
            $str_type=" AND data_type='".$type."'";
        }
        $sql = "SELECT * from `tbl_event_certificates` where `event_id` = '" . $event_id . "' ".$str_type." AND `user_type` = 'ORG' ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $arr_records[] = $row;
            }
        }
        return $arr_records;
    }
    //update by ample 24-09-20
    public function GetParticipantCriteria($event_id) {
        $DBH = new DatabaseHandler();
        $arr_records = array();
        $sql = "SELECT * from `tbl_event_participants_criteria` where `event_id` = '" . $event_id . "' ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $arr_records[] = $row;
            }
        }
        return $arr_records;
    }
    public function getCommaSeperatedfavcat($fav_id_str) {
        //$this->connectDB();
        $DBH = new DatabaseHandler();
        $output = '';
        $sql = "SELECT * FROM `tblfavcategory` WHERE `fav_cat_status` = '1' AND `fav_cat_deleted` = '0' AND `fav_cat_id` IN (" . $fav_id_str . ") ORDER BY `fav_cat` ASC";
        // $this->execute_query($sql);
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $page_name = stripslashes($row['fav_cat']);
                $output.= $page_name . ' ,';
            }
            $output = substr($output, 0, -1);
        }
        return $output;
    }
    public function GetRegistratiotypeoption($registration_type) {
        $symtum_cat = implode(',', $registration_type);
        $DBH = new DatabaseHandler();
        $option_str = '';
        $sql = "SELECT * FROM `tblfavcategory` WHERE fav_cat_id IN($symtum_cat) ORDER BY `fav_cat` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $option_str.= '<option value="' . $row['fav_cat_id'] . '" >' . stripslashes($row['fav_cat']) . '</option>';
            }
        }
        return $option_str;
    }
    public function GetEventRegistrationfess($event_id, $registration_type) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $sql = "SELECT * FROM `tbl_event_loc_price` WHERE `event_id` = '" . $event_id . "' and `registration_type` ='" . $registration_type . "' ORDER BY `evlocprice_id` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $option_str = $row['registration_fees'];
        }
        return $option_str;
    }
    public function GetEventTicketfess($event_id, $ticket_type) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $sql = "SELECT * FROM `tbl_event_loc_price` WHERE `event_id` = '" . $event_id . "' and `ordering_type_id` ='" . $ticket_type . "' ORDER BY `evlocprice_id` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $option_str = $row['cusine_price'];
        }
        return $option_str;
    }
    public function GetParticipantsHeight($height_id) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $sql = "SELECT * FROM `tblheights` WHERE `height_id` = '" . $height_id . "' ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $option_str = $row['height_cms'] . 'Cms (' . $row['height_feet_inch'] . ')';
        }
        return $option_str;
    }
    public function GetEventTicketQty($event_id, $ticket_type) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $sql = "SELECT * FROM `tbl_event_loc_price` WHERE `event_id` = '" . $event_id . "' and `ordering_type_id` ='" . $ticket_type . "' ORDER BY `evlocprice_id` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $option_str.= '<select name="ticket_qty" id="ticket_qty">';
            for ($i = $row['min_order'];$i <= $row['max_order'];$i++) {
                $option_str.= '<option value="' . $i . '" >' . $i . '</option>';
            }
            $option_str.= '</select>';
        }
        return $option_str;
    }
    public function getAllDelaveryListOfItem($event_id) {
        $DBH = new DatabaseHandler();
        $output = array();
        try {
            //echo $sql ="SELECT * FROM `tbl_event_details` WHERE 1 AND event_deleted = '0' AND event_status = '1' AND event_id='".$event_id."' ";
            $sql = "SELECT ED.*,EP.* FROM tbl_event_details ED " . "LEFT JOIN tbl_event_price EP ON ED.event_id = EP.event_id WHERE ED.event_id = '" . $event_id . "' AND ED.event_deleted = '0' AND ED.event_status = '1' ";
            // $sql = "SELECT EP.*,ELP.* from tbl_event_price EP "
            // ." LEFT JOIN tbl_event_loc_price ELP ON EP.event_price_id = ELP.event_price_id WHERE EP.event_id = ".$event_id." AND EP.event_deleted = 0 AND EP.event_price_status = '1' order by ELP.evlocprice_id ASC";
            // exit;
            //$this->debuglog('[getLatestDeliveryDatesOfLocation] sql:'.$sql);
            //echo '<br><br>sql:'.$sql.'<br>';
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $r = $STH->fetch(PDO::FETCH_ASSOC);
                // echo "<pre>";print_r($r);echo "<pre>";
                // exit;
                //
                $order_cutoff_time = $r['registration_cutoff_time'];
                //
                $event_id = $r['event_id'];
                //
                $temp_date = date('Y-m-d');
                $date1 = date_create($r['start_date']);
                $date2 = date_create($r['end_date']);
                $diff = date_diff($date1, $date2);
                $date_loop = $diff->format("%a");
                $show_date = array();
                for ($i = 0;$i <= $date_loop;$i++) {
                    $show_date[] = date("Y-m-d", strtotime($r['start_date'] . ' + ' . $i . ' days'));
                }
                $time_slot = array();
                $time_slot['slot1_start_time'] = $r['slot1_start_time'];
                $time_slot['slot1_end_time'] = $r['slot1_end_time'];
                $time_slot['slot2_start_time'] = $r['slot2_start_time'];
                $time_slot['slot2_end_time'] = $r['slot2_end_time'];
                $time_slot['slot3_start_time'] = $r['slot3_start_time'];
                $time_slot['slot3_end_time'] = $r['slot3_end_time'];
                $time_slot['slot4_start_time'] = $r['slot4_start_time'];
                $time_slot['slot4_end_time'] = $r['slot4_end_time'];
                $time_slot['slot5_start_time'] = $r['slot5_start_time'];
                $time_slot['slot5_end_time'] = $r['slot5_end_time'];
                $time_slot['slot6_start_time'] = $r['slot6_start_time'];
                $time_slot['slot6_end_time'] = $r['slot6_end_time'];
            }
            $output['delavery_date'] = $show_date;
            $output['start_time'] = $r['start_time'];
            $output['end_time'] = $r['end_time'];
            $output['time_slot'] = $time_slot;
            $output['registration_cutoff_time'] = $order_cutoff_time;
            $output['event_id'] = $event_id;
            //
            // echo '<br><pre>';
            // print_r($output);
            // echo '<br></pre>';
            // exit;
            return $output;
        }
        catch(Exception $e) {
            $stringData = '[getLatestDeliveryDatesOfLocation] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $output;
        }
    }
    public function chkIfTicketQtyAvailable($event_id, $qty, $type = '') {
        $DBH = new DatabaseHandler();
        $return = false;
        // $in=0;
        // $get=array();
        if ($type == 'Registraion') {
            $return = true;
        } else {
            try {
                $sql = "SELECT * FROM `tbl_event_loc_price` WHERE `event_id` = '" . $event_id . "' AND `culoc_status` = '1' AND `culoc_deleted` = '0' ";
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    $r = $STH->fetch(PDO::FETCH_ASSOC);
                    $cusine_qty = $r['available_qty'];
                    if ($cusine_qty > 0 && $qty > 0 && $cusine_qty >= $qty) {
                        $return = true;
                    }
                }
            }
            catch(Exception $e) {
                $stringData = '[chkIfCusineQtyAvailable] Catch Error:' . $e->getMessage() . ', sql:' . $sql;
                $this->debuglog($stringData);
                return false;
            }
        }
        return $return;
        // exit(0);
        
    }
    public function chkIfValidDate($date) {
        $d = DateTime::createFromFormat('Y-m-d', $date);
        return $d && $d->format('Y-m-d') === $date;
    }
    public function getWeekDayName($day_of_week) {
        $output = '';
        $arr_day = array("1" => "Monday", "2" => "Tuesday", "3" => "Wednesday", "4" => "Thursday", "5" => "Friday", "6" => "Saturday", "7" => "Sunday");
        if ($day_of_week != '') {
            $output = $arr_day[$day_of_week];
        }
        return $output;
    }
    // public function getqty($event_id,$qty,$booking_slot,$booking_date,$booking_type,$ticket_type)
    //     {
    // 		$my_DBH = new DatabaseHandler();
    //         $return = false;
    // 		$cart_session_id = session_id();
    // 		if($this->isLoggedIn())
    // 		{
    // 			$user_id = $_SESSION['user_id'];
    // 		}
    // 		else
    // 		{
    //           $user_id = 0;
    // 		}
    // 		if($this->chkIfTicketQtyAvailable($event_id,$qty,$booking_type))
    // 		{
    // 			if(isset($_SESSION['current_showing_date']) && $_SESSION['current_showing_date'] != '')
    // 			{
    // 				$current_showing_date = $_SESSION['current_showing_date'];
    // 			}
    // 			else
    // 			{
    // 				$current_showing_date = '';
    // 			}
    // 	            if($booking_type == 'Registraion')
    // 	            {
    // 	              $arr_event_details = $this->GetEventDetailsRegistrationCart($event_id,$ticket_type);
    // 	            }
    // 	            else
    // 	            {
    // 	              $arr_event_details = $this->GetEventDetailsTicketCart($event_id,$ticket_type);
    // 	            }
    // 			if($this->chkIfOfferEvent($event_id))
    // 			{
    // 				$is_offer = 1;
    // 				$offer_price = $arr_event_details['offer_price'];
    // 			}
    // 			else
    // 			{
    // 				$is_offer = 0;
    // 				$offer_price = '';
    // 			}
    // 			$sql = "SELECT * FROM `tblcart` WHERE
    // 					`cart_session_id` = '".$cart_session_id."' AND
    // 					`cusine_id` = '".$event_id."' AND
    // 					`cart_delivery_date` = '".$booking_date."' AND
    // 					`booking_slot` = '".$booking_slot."' AND
    // 					`cart_status` = '0' AND
    //                                         `booking_type` = '".$booking_type."' AND
    //                                         `ticket_type` = '".$ticket_type."' AND
    // 					`cart_deleted` = '0' ";
    //                         //die();
    // 			$STH = $my_DBH->query($sql);
    //           if( $STH->rowCount() > 0 )
    // 			{
    // 				$r = $STH->fetch(PDO::FETCH_ASSOC);
    // 				$old_qty = $r['qty'];
    // 				$qty = $qty + $old_qty;
    //            }
    // 			if( $STH->rowCount() > 0 )
    // 			{
    // 				$r = $STH->fetch(PDO::FETCH_ASSOC);
    // 				$old_qty = $r['qty'];
    // 				$qty = $qty + $old_qty;
    //             }
    // 				if($this->chkIfTicketQtyAvailable($event_id,$qty,$booking_type))
    // 				{
    // 					$DBH = $my_DBH->raw_handle();
    // 					$DBH->beginTransaction();
    // 					if($booking_type == 'Registraion')
    //                         {
    //                            $price = $arr_event_details['registration_fees'];
    //                         }
    //                         else
    //                         {
    //                             $price = $arr_event_details['cusine_price'];
    //                         }
    // //
    // 					if($is_offer == '1')
    // 					{
    // 						$subtotal = $offer_price * $qty;
    // 					}
    // 					else
    // 					{
    // 						$subtotal = $price * $qty;
    // 					}
    // 					try {
    // 						$sql = "UPDATE `tblcart` SET
    // 								`qty` = :qty,
    // 								`price` = :price,
    // 								`subtotal` = :subtotal,
    // 								`is_offer` = :is_offer,
    // 								`offer_price` = :offer_price,
    // 								`cart_add_date` = :cart_add_date
    // 								WHERE
    // 								`cart_session_id` = :cart_session_id AND
    // 								`cart_delivery_date` = :cart_delivery_date AND
    // 								`booking_slot` = :booking_slot AND
    //                                                                 `booking_type` = :booking_type AND
    //                                                                 `ticket_type` = :ticket_type AND
    // 								`cusine_id` = :cusine_id ";
    // 						$STH = $DBH->prepare($sql);
    // 						$STH->execute(array(
    // 							':qty' => addslashes($qty),
    // 							':price' => addslashes($price),
    // 							':subtotal' => addslashes($subtotal),
    // 							':is_offer' => addslashes($is_offer),
    // 							':offer_price' => addslashes($offer_price),
    // 							':cart_add_date' => date('Y-m-d H:i:s'),
    // 							':cart_session_id' => addslashes($cart_session_id),
    // 							':cart_delivery_date' => addslashes($booking_date),
    // 							':booking_slot' => addslashes($booking_slot),
    //                                                         ':booking_type' => addslashes($booking_type),
    //                                                         ':ticket_type' => addslashes($ticket_type),
    // 							':cusine_id' => addslashes($event_id)
    // 						));
    // 						$DBH->commit();
    // 						$return = true;
    // 					} catch (Exception $e) {
    // 						$stringData = '[addToCart] Catch Error:'.$e->getMessage().', sql:'.$sql;
    // 						$this->debuglog($stringData);
    // 						return false;
    // 					}
    // 				}
    // 			}
    // 			else
    // 			{
    // 				$DBH = $my_DBH->raw_handle();
    // 				$DBH->beginTransaction();
    // 				if($booking_type == 'Registraion')
    //                                     {
    //                                        $price = $arr_event_details['registration_fees'];
    //                                        $qty = '1';
    //                                     }
    //                                     else
    //                                     {
    //                                         $price = $arr_event_details['cusine_price'];
    //                                         if($qty < $arr_event_details['min_order'])
    //                                             {
    //                                                     $qty = $arr_event_details['min_order'];
    //                                             }
    //                                             elseif($qty > $arr_event_details['max_order'])
    //                                             {
    //                                                     $qty = $arr_event_details['max_order'];
    //                                             }
    //                                     }
    // 				if($this->chkIfTicketQtyAvailable($event_id,$qty,$booking_type))
    // 				{
    // 					if($is_offer == '1')
    // 					{
    // 						$subtotal = $offer_price * $qty;
    // 					}
    // 					else
    // 					{
    // 						$subtotal = $price * $qty;
    // 					}
    // 					try {
    // 						$sql = "INSERT INTO `tblcart` (`cart_session_id`,`cusine_id`,`user_id`,`qty`,`price`,`subtotal`,`currency_id`,
    // 								`cart_status`,`cart_add_date`,`cart_delivery_date`,`booking_slot`,`booking_type`,`is_offer`,`offer_price`,`ticket_type`)
    // 								VALUES (:cart_session_id,:cusine_id,:user_id,:qty,:price,:subtotal,:currency_id,
    // 								:cart_status,:cart_add_date,:cart_delivery_date,:booking_slot,:booking_type,:is_offer,:offer_price,:ticket_type)";
    //                         $STH = $DBH->prepare($sql);
    // 						$STH->execute(array(
    // 							':cart_session_id' => addslashes($cart_session_id),
    // 							':cusine_id' => addslashes($event_id),
    // 							':user_id' => addslashes($user_id),
    // 							':qty' => addslashes($qty),
    // 							':price' => addslashes($price),
    // 							':subtotal' => addslashes($subtotal),
    // 							':currency_id' => addslashes($arr_event_details['currency_id']),
    // 							':cart_status' => 0,
    // 							':cart_add_date' => date('Y-m-d H:i:s'),
    // 							':cart_delivery_date' => addslashes($booking_date),
    // 							':booking_slot' => addslashes($booking_slot),
    // 							':booking_type' => addslashes($booking_type),
    //                                                         ':ticket_type' => addslashes($ticket_type),
    // 							':is_offer' => addslashes($is_offer),
    // 							':offer_price' => addslashes($offer_price)
    // 						));
    // 						$cart_id = $DBH->lastInsertId();
    // 						$this->debuglog('[addToCart] lastInsertId'.$cart_id);
    // 						$DBH->commit();
    // 							$return = true;
    // 					} catch (Exception $e) {
    // 						$stringData = '[addToCart] Catch Error:'.$e->getMessage().', sql:'.$sql;
    // 						$this->debuglog($stringData);
    // 						return false;
    // 					}
    // 				}
    // 			}
    // 		}
    //         return $return;
    //     }
    public function addToCart($event_id, $qty, $booking_slot, $booking_date, $booking_type, $ticket_type, $event_name) {
        // echo $booking_slot;
        // exit;
        $my_DBH = new DatabaseHandler();
        $return = false;
        $cart_session_id = session_id();
        // echo '$event_id=>'.$event_id;
        // echo '<br>';
        // echo '$qty=>'.$qty;
        // echo '<br>';
        // echo '$booking_slot=>'.$booking_slot;
        // echo '<br>';
        // echo '$booking_date=>'.$booking_date;
        // echo '<br>';
        // echo '$booking_type=>'.$booking_type;
        // echo '<br>';
        // echo '$ticket_type=>'.$ticket_type;
        //  echo '<br>';
        // echo '$ticket_type=>'.$event_name;
        if ($this->isLoggedIn()) {
            $user_id = $_SESSION['user_id'];
        } else {
            $user_id = 0;
        }
        if ($this->chkIfTicketQtyAvailable($event_id, $qty, $booking_type)) {
            if (isset($_SESSION['current_showing_date']) && $_SESSION['current_showing_date'] != '') {
                $current_showing_date = $_SESSION['current_showing_date'];
            } else {
                $current_showing_date = '';
            }
            if ($booking_type == 'Registraion') {
                $arr_event_details = $this->GetEventDetailsRegistrationCart($event_id, $ticket_type);
            } else {
                // echo $event_id;
                $arr_event_details = $this->GetEventDetailsTicketCart($event_id, $ticket_type);
                // echo "<pre>";print_r($arr_event_details);echo "</pre>";
                
            }
            // exit;
            if ($this->chkIfOfferEvent($event_id)) {
                $is_offer = 1;
                $offer_price = $arr_event_details['offer_price'];
            } else {
                $is_offer = 0;
                $offer_price = '';
            }
            // echo "<pre>";print_r($is_offer);echo "</pre>";
            // exit;
            $sql = "SELECT * FROM `tblcart` WHERE 

					`cart_session_id` = '" . $cart_session_id . "' AND 

					`cusine_id` = '" . $event_id . "' AND 

					`cart_delivery_date` = '" . $booking_date . "' AND 

					`booking_slot` = '" . $booking_slot . "' AND 

					`event_name`='" . $event_name . "'AND

					`cart_status` = '0' AND 

                                        `booking_type` = '" . $booking_type . "' AND

                                        `ticket_type` = '" . $ticket_type . "' AND

					`cart_deleted` = '0' ";
            //die();
            $STH = $my_DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $r = $STH->fetch(PDO::FETCH_ASSOC);
                $old_qty = $r['qty'];
                $qty = $qty + $old_qty;
                if ($this->chkIfTicketQtyAvailable($event_id, $qty, $booking_type)) {
                    $DBH = $my_DBH->raw_handle();
                    $DBH->beginTransaction();
                    if ($booking_type == 'Registraion') {
                        $price = $arr_event_details['registration_fees'];
                    } else {
                        $price = $arr_event_details['cusine_price'];
                    }
                    //
                    if ($is_offer == '1') {
                        $subtotal = $offer_price * $qty;
                    } else {
                        $subtotal = $price * $qty;
                        // echo "<pre>";print_r($qty);echo "</pre>";
                        
                    }
                    // exit;
                    try {
                        $sql = "UPDATE `tblcart` SET 

								`qty` = :qty,

								`price` = :price,

								`subtotal` = :subtotal,

								`is_offer` = :is_offer,

								`offer_price` = :offer_price,

								`cart_add_date` = :cart_add_date

								WHERE 		

								`cart_session_id` = :cart_session_id AND 

								`cart_delivery_date` = :cart_delivery_date AND 

								`booking_slot` = :booking_slot AND

                                                                `booking_type` = :booking_type AND 

                                                                `ticket_type` = :ticket_type AND 

								`cusine_id` = :cusine_id ";
                        $STH = $DBH->prepare($sql);
                        $STH->execute(array(':qty' => addslashes($qty), ':price' => addslashes($price), ':subtotal' => addslashes($subtotal), ':is_offer' => addslashes($is_offer), ':offer_price' => addslashes($offer_price), ':cart_add_date' => date('Y-m-d H:i:s'), ':cart_session_id' => addslashes($cart_session_id), ':cart_delivery_date' => addslashes($booking_date), ':booking_slot' => addslashes($booking_slot), ':booking_type' => addslashes($booking_type), ':ticket_type' => addslashes($ticket_type), ':cusine_id' => addslashes($event_id)));
                        $DBH->commit();
                        $return = true;
                    }
                    catch(Exception $e) {
                        $stringData = '[addToCart] Catch Error:' . $e->getMessage() . ', sql:' . $sql;
                        $this->debuglog($stringData);
                        return false;
                    }
                }
                // echo "<pre>";print_r($return);echo "</pre>";
                // exit;
                
            } else {
                $DBH = $my_DBH->raw_handle();
                $DBH->beginTransaction();
                if ($booking_type == 'Registraion') {
                    $price = $arr_event_details['registration_fees'];
                    $qty = '1';
                } else {
                    $price = $arr_event_details['cusine_price'];
                    if ($qty < $arr_event_details['min_order']) {
                        $qty = $arr_event_details['min_order'];
                    } elseif ($qty > $arr_event_details['max_order']) {
                        $qty = $arr_event_details['max_order'];
                    }
                }
                if ($this->chkIfTicketQtyAvailable($event_id, $qty, $booking_type)) {
                    if ($is_offer == '1') {
                        $subtotal = $offer_price * $qty;
                    } else {
                        $subtotal = $price * $qty;
                    }
                    try {
                        $sql = "INSERT INTO `tblcart` (`cart_session_id`,`cusine_id`,`user_id`,`qty`,`price`,`subtotal`,`currency_id`,

								`cart_status`,`cart_add_date`,`cart_delivery_date`,`booking_slot`,`booking_type`,`is_offer`,`offer_price`,`ticket_type`,`event_name`) 

								VALUES (:cart_session_id,:cusine_id,:user_id,:qty,:price,:subtotal,:currency_id,

								:cart_status,:cart_add_date,:cart_delivery_date,:booking_slot,:booking_type,:is_offer,:offer_price,:ticket_type,:event_name)";
                        //$sql;
                        $STH = $DBH->prepare($sql);
                        $STH->execute(array(':cart_session_id' => addslashes($cart_session_id), ':cusine_id' => addslashes($event_id), ':user_id' => addslashes($user_id), ':qty' => addslashes($qty), ':price' => addslashes($price), ':subtotal' => addslashes($subtotal), ':currency_id' => addslashes($arr_event_details['currency_id']), ':cart_status' => 0, ':cart_add_date' => date('Y-m-d H:i:s'), ':cart_delivery_date' => addslashes($booking_date), ':booking_slot' => addslashes($booking_slot), ':booking_type' => addslashes($booking_type), ':ticket_type' => addslashes($ticket_type), ':is_offer' => addslashes($is_offer), ':offer_price' => addslashes($offer_price), ':event_name' => $event_name));
                        // exit;
                        $cart_id = $DBH->lastInsertId();
                        $this->debuglog('[addToCart] lastInsertId' . $cart_id);
                        $DBH->commit();
                        //if($cart_id > 0)
                        //{
                        $return = true;
                        //}
                        
                    }
                    catch(Exception $e) {
                        $stringData = '[addToCart] Catch Error:' . $e->getMessage() . ', sql:' . $sql;
                        $this->debuglog($stringData);
                        return false;
                    }
                }
            }
        }
        return $return;
    }
    public function chkIfOfferEvent($event_id) {
        $arr_event_records = $this->GetEventDetailsbyID($event_id);
        $offer_item_flag = false;
        $today_day_of_month = date('j');
        $today_day_of_week = date('N');
        $today_single_date = date('Y-m-d');
        if ($arr_event_records['is_offer'] == '1') {
            if ($arr_event_records['offer_date_type'] == 'days_of_month') {
                if ($arr_event_records['offer_days_of_month'] == '-1') {
                    $offer_item_flag = true;
                } else {
                    $temp_ofr_dom = explode(',', $arr_event_records['offer_days_of_month']);
                    if (in_array($today_day_of_month, $temp_ofr_dom)) {
                        $offer_item_flag = true;
                    }
                }
            } elseif ($arr_event_records['offer_date_type'] == 'days_of_week') {
                if ($arr_event_records['offer_days_of_week'] == '-1') {
                    $offer_item_flag = true;
                } else {
                    $temp_ofr_dow = explode(',', $arr_event_records['offer_days_of_week']);
                    if (in_array($today_day_of_week, $temp_ofr_dow)) {
                        $offer_item_flag = true;
                    }
                }
            } elseif ($arr_event_records['offer_date_type'] == 'single_date') {
                if ($arr_event_records['offer_single_date'] == $today_single_date) {
                    $offer_item_flag = true;
                }
            } elseif ($arr_event_records['offer_date_type'] == 'date_range') {
                $temp_ts_today = strtotime($today_single_date);
                $temp_ts_start = strtotime($arr_event_records['offer_single_date']);
                $temp_ts_end = strtotime($arr_event_records['offer_end_date']);
                if ($temp_ts_start <= $temp_ts_today && $temp_ts_end >= $temp_ts_today) {
                    $offer_item_flag = true;
                }
            }
        }
        return $offer_item_flag;
    }
    public function GetEventDetailsRegistrationCart($event_id, $ticket_type) {
        $DBH = new DatabaseHandler();
        $output = array();
        try {
            //echo $sql ="SELECT * FROM `tbl_event_details` WHERE 1 AND event_deleted = '0' AND event_status = '1' AND event_id='".$event_id."' ";
            $sql = "SELECT * FROM tbl_event_loc_price" . " WHERE event_id = '" . $event_id . "' and `registration_type` = '" . $ticket_type . "' and `culoc_status` = 1 and `culoc_deleted` = 0 ";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $r = $STH->fetch(PDO::FETCH_ASSOC);
                $output = $r;
            }
            return $output;
        }
        catch(Exception $e) {
            $stringData = '[getLatestDeliveryDatesOfLocation] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $output;
        }
    }
    public function GetEventDetailsTicketCart($event_id, $ticket_type) {
        $DBH = new DatabaseHandler();
        $output = array();
        try {
            //echo $sql ="SELECT * FROM `tbl_event_details` WHERE 1 AND event_deleted = '0' AND event_status = '1' AND event_id='".$event_id."' ";
            $sql = "SELECT * FROM tbl_event_loc_price" . " WHERE event_id = '" . $event_id . "' and `ordering_type_id` = '" . $ticket_type . "' and `culoc_status` = 1 and `culoc_deleted` = 0 ";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $r = $STH->fetch(PDO::FETCH_ASSOC);
                $output = $r;
            }
            return $output;
        }
        catch(Exception $e) {
            $stringData = '[getLatestDeliveryDatesOfLocation] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $output;
        }
    }
    public function getmydaytodaysequenceentry($mdtdate, $user_id) {
        $DBH = new DatabaseHandler();
        //$start_date = $mdtdate.' 00:00:00';
        // $end_date = $mdtdate.' 59:59:59';
        $sequence = 0;
        $sql = "SELECT sequence_show FROM `tblusersmdt` WHERE  user_id = '$user_id' and `mdt_date` = '" . $mdtdate . "' ORDER BY mdt_add_date DESC LIMIT 1 ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $sequence = $row['sequence_show'];
        }
        return $sequence;
    }
    public function GetDesignMyLifeDatabyRef($ref_num) {
        $DBH = new DatabaseHandler();
        $data = array();
        $sql = "SELECT * FROM `tbl_design_your_life` WHERE  ref_code = '$ref_num' and `status` = '1' ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $data = $row;
        }
        return $data;
    }
    public function GetTitlenamebyID($box_title) {
        $DBH = new DatabaseHandler();
        $name = '';
        $sql = "SELECT * FROM `tblbodymainsymptoms` WHERE bms_id ='" . $box_title . "' ORDER BY `bms_name` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $name = $row['bms_name'];
        }
        return $name;
    }
    public function GetProfilecatname($prct_cat_id) {
        $DBH = new DatabaseHandler();
        $name = '';
        $sql = "SELECT * FROM `tblprofilecustomcategories` WHERE `prct_cat_status` = '1' AND `prct_cat_deleted` = '0' and `prct_cat_id` = '" . $prct_cat_id . "' ORDER BY `prct_cat` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $name = $row['prct_cat'];
        }
        return $name;
    }
    public function getSubCatOptions($prof_cat, $sub_cat) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $sql = "SELECT * FROM `tblcustomfavcategory` " . "LEFT JOIN tblfavcategory ON tblcustomfavcategory.favcat_id = tblfavcategory.fav_cat_id WHERE tblcustomfavcategory.fav_cat_type_id = '" . $prof_cat . "' and tblfavcategory.fav_cat_id IN(" . $sub_cat . ") and tblfavcategory.fav_cat_status = 1 and tblfavcategory.fav_cat_deleted = 0 and tblcustomfavcategory.cat_deleted=0 and tblcustomfavcategory.cat_status = 1 ORDER BY tblfavcategory.fav_cat ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $option_str.= '<option value="' . $row['fav_cat_id'] . '" >' . stripslashes($row['fav_cat']) . '</option>';
            }
        }
        return $option_str;
    }
    public function getDayOfWeekOptionsMultiple($day_of_week) {
        $option_str = '';
        // $arr_day_of_week = array(0 => 'Sunday', 1 => 'Monday', 2 => 'Tuesday', 3 => 'Wednesday', 4 => 'Thursday', 5 => 'Friday', 6 => 'Saturday');
        //update by ample 06-02-20
        $arr_day_of_week = array(1 => 'Sunday', 2 => 'Monday', 3 => 'Tuesday', 4 => 'Wednesday', 5 => 'Thursday', 6 => 'Friday', 7 => 'Saturday');
        // foreach ($arr_day_of_week as $k => $v) {
        //     if (in_array($k, $day_of_week)) {
        //         $selected = ' selected ';
        //     } else {
        //         $selected = '';
        //     }
        //     $option_str.= '<option value="' . $k . '" ' . $selected . ' >' . $v . '</option>';
        // }
        foreach ($arr_day_of_week as $k => $v) {
            if (in_array($k, $day_of_week ?? [])) {
                $selected = ' selected ';
            } else {
                $selected = '';
            }
            $option_str .= '<option value="' . $k . '" ' . $selected . ' >' . $v . '</option>';
        }
        return $option_str;
    }
    public function getMonthsOptionsMultiple($arr_month) {
        // $option_str = '';
        // $arr_record = array(1 => 'January', 2 => 'February', 3 => 'March', 4 => 'April', 5 => 'May', 6 => 'June', 7 => 'July', 8 => 'August', 9 => 'September', 10 => 'October', 11 => 'November', 12 => 'December');
        // foreach ($arr_record as $k => $v) {
        //     if (in_array($k, $arr_month)) {
        //         $selected = ' selected ';
        //     } else {
        //         $selected = '';
        //     }
        //     $option_str.= '<option value="' . $k . '" ' . $selected . ' >' . $v . '</option>';
        // }
        // return $option_str;

        $option_str = '';
        $arr_record = array(
            1 => 'January', 2 => 'February', 3 => 'March', 4 => 'April',
            5 => 'May', 6 => 'June', 7 => 'July', 8 => 'August',
            9 => 'September', 10 => 'October', 11 => 'November', 12 => 'December'
        );

        // Ensure $arr_month is always an array
        if (!is_array($arr_month)) {
            $arr_month = [];
        }

        foreach ($arr_record as $k => $v) {
            if (in_array($k, $arr_month)) {
                $selected = ' selected ';
            } else {
                $selected = '';
            }
            $option_str .= '<option value="' . $k . '" ' . $selected . ' >' . $v . '</option>';
        }

        return $option_str;
    }
    public function GetSliderCount() {
        $DBH = new DatabaseHandler();
        $count = '0';
        $sql = "SELECT * FROM `tblparentsliders`";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            //$row = $STH->fetch(PDO::FETCH_ASSOC);
            $count = $STH->rowCount();
        }
        return $count;
    }
    public function getSlidersCode() {
        $DBH = new DatabaseHandler();
        $output = '';
        $arr_parents_slider_id = array();
        $arr_slider_name = array();
        $arr_output = array();
        $sql1 = "SELECT * FROM `tblparentsliders` ORDER BY `parent_slider_add_date` ASC ";
        $STH = $DBH->query($sql1);
        if ($STH->rowCount() > 0) {
            $return = true;
            $i = 1;
            while ($row1 = $STH->fetch(PDO::FETCH_ASSOC)) {
                array_push($arr_parents_slider_id, $row['parents_slider_id']);
                array_push($arr_slider_name, $row['slider_name']);
                $sql = "SELECT * FROM `tblslidercontents` WHERE `parents_slider_id` = '" . $row1['parents_slider_id'] . "' ORDER BY `slider_add_date` DESC ";
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    $output = '<table width="160" border="0" cellpadding="0" cellspacing="1" bgcolor="#666666">';
                    $output.= '	<tr>';
                    $output.= '		<td height="30" align="left" valign="middle" class="Header_white" style="background-image:url(images/back2.jpg); padding-left:10px;">' . $row1['slider_name'] . '</td>';
                    $output.= '	</tr>';
                    $output.= '	<tr>';
                    $output.= '		<td align="left" valign="top" bgcolor="#FFFFFF" class="slider">';
                    $output.= '			<div id="slider' . $i . '" >';
                    $i = $i + 1;
                    while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                        $slider_desc = stripslashes($row['slider_desc']);
                        if (strlen($slider_desc) > 50) {
                            $slider_desc = substr($slider_desc, 0, 47);
                            $slider_desc = $slider_desc . '...<a class="slider_title" target="_blank" href="' . stripslashes($row['slider_link']) . '">More</a>';
                        }
                        $output.= '<div style="height:100px;">';
                        $output.= '			<table width="150" border="0" cellspacing="0" cellpadding="0">';
                        $output.= '				<tr>';
                        $output.= '					<td height="30" colspan="2" align="left" valign="top" style="padding-left:10px;"><a target="_blank" class="slider_title" href="' . stripslashes($row['slider_link']) . '"><strong>' . stripslashes($row['slider_title']) . '</strong></a></td>';
                        $output.= '				</tr>';
                        $output.= '				<tr>';
                        $output.= '					<td width="60" height="60" align="left" valign="top">';
                        $output.= '						<table width="50" border="0" cellspacing="0" cellpadding="0">';
                        $output.= '							<tr>';
                        $output.= '								<td align="left" valign="top" bgcolor="#FFFFFF" style="padding-left:10px;"><a target="_blank" href="' . stripslashes($row['slider_link']) . '"><img border="0" width="50" src="' . SITE_URL . '/uploads/' . stripslashes($row['slider_image']) . '" /></a></td>';
                        $output.= '							</tr>';
                        $output.= '						</table>';
                        $output.= '					</td>';
                        $output.= '					<td width="90" height="60" align="left" valign="top" style="padding-left:3px;">' . $slider_desc . '</td>';
                        $output.= '				</tr>';
                        //$output .= '				<tr>';
                        //$output .= '					<td colspan="2">&nbsp;</td>';
                        //$output .= '				</tr>';
                        $output.= '			</table>';
                        $output.= '</div>';
                    }
                    $output.= '			</div>';
                    $output.= '		</td>';
                    $output.= '	</tr>';
                    $output.= '</table>';
                    array_push($arr_output, $output);
                }
            }
            $cols = 3;
            $count = count($arr_output);
            if ($count % $cols > 0) {
                for ($i = 0;$i < ($cols - $count % $cols);$i++) {
                    $arr_output[] = '&nbsp;';
                }
            }
            $new_output = '<table width="100%" cellpadding="5" cellspacing="0" border="0">';
            foreach ($arr_output as $key => $td) {
                if ($key % $cols == 0) $new_output.= '<tr>';
                $new_output.= '<td valign="top" align="left">' . $td . '</td>';
                if ($key % $cols == ($cols - 1)) $new_output.= '</tr>';
            }
            $new_output.= '</table>';
        }
        return $new_output;
    }
    function getUserDetailsVivek($user_id) {
        $DBH = new DatabaseHandler();
        $return = false;
        $name = '';
        $middle_name = '';
        $last_name = '';
        $email = '';
        $dob = '';
        $height = '';
        $weight = '';
        $sex = '';
        $mobile = '';
        $state_id = '';
        $city_id = '';
        $place_id = '';
        $food_veg_nonveg = '';
        $beef = '';
        $pork = '';
        $practitioner_id = '';
        $country_id = '';
        $reference_id="";
        $sql = "SELECT * FROM `tblusers` WHERE `user_id` = '" . $user_id . "' ";
        //echo'<br>'.$sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            //$row = mysql_fetch_array($result);
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $return = true;
            $name = stripslashes($row['name']);
            $middle_name = stripslashes($row['middle_name']);
            $last_name = stripslashes($row['last_name']);
            $email = $row['email'];
            $dob = $row['dob'];
            $height = stripslashes($row['height']);
            $weight = stripslashes($row['weight']);
            $sex = $row['sex'];
            $mobile = stripslashes($row['mobile']);
            $state_id = $row['state_id'];
            $city_id = $row['city_id'];
            $place_id = $row['place_id'];
            $food_veg_nonveg = stripslashes($row['food_veg_nonveg']);
            $beef = $row['beef'];
            $pork = $row['pork'];
            $practitioner_id = stripslashes($row['practitioner_id']);
            $country_id = $row['country_id'];
            $reference_id=$row['reference_id'];
        }
        return array($return, $name, $middle_name, $last_name, $email, $dob, $height, $weight, $sex, $mobile, $state_id, $city_id, $place_id, $food_veg_nonveg, $beef, $pork, $practitioner_id, $country_id,$reference_id);
    }
    public function getMonthOptions($month, $start_month = '1', $end_month = '12') {
        $arr_month = array(1 => 'January', 2 => 'February', 3 => 'March', 4 => 'April', 5 => 'May', 6 => 'June', 7 => 'July', 8 => 'August', 9 => 'September', 10 => 'October', 11 => 'November', 12 => 'December');
        $start_month = intval($start_month);
        $end_month = intval($end_month);
        $month = intval($month);
        $option_str = '';
        //echo '<br>start_month = '.$start_month.' , end_month = '.$end_month.' , month = '.$month;
        if ($start_month == 12 && $end_month == 1) {
            if ($month == 12) {
                $selected = ' selected ';
            } else {
                $selected = '';
            }
            $option_str.= '<option value="12" ' . $selected . ' >December</option>';
            if ($month == 1) {
                $selected = ' selected ';
            } else {
                $selected = '';
            }
            $option_str.= '<option value="1" ' . $selected . ' >January</option>';
        } else {
            foreach ($arr_month as $k => $v) {
                //echo '<br>k = '.$k.' , start_month = '.$start_month.' , end_month = '.$end_month.' , month = '.$month;
                if (($k >= $start_month) && ($k <= $end_month)) {
                    if ($k == $month) {
                        $selected = ' selected ';
                    } else {
                        $selected = '';
                    }
                    $option_str.= '<option value="' . $k . '" ' . $selected . ' >' . $v . '</option>';
                }
            }
        }
        return $option_str;
    }
    public function getHeightOptions($height_id) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $sql = "SELECT * FROM `tblheights` ORDER BY `height_cms` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                if ($row['height_id'] == $height_id) {
                    $sel = ' selected ';
                } else {
                    $sel = '';
                }
                $option_str.= '<option value="' . $row['height_id'] . '" ' . $sel . '>' . $row['height_cms'] . ' cms (' . $row['height_feet_inch'] . ' feet)</option>';
            }
        }
        return $option_str;
    }
    public function getCountryOptions($country_id) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $sql = "SELECT * FROM `tblcountry` ORDER BY `country_name` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                if ($row['country_id'] == $country_id) {
                    $sel = ' selected ';
                } else {
                    $sel = '';
                }
                $option_str.= '<option value="' . $row['country_id'] . '" ' . $sel . '>' . stripslashes($row['country_name']) . '</option>';
            }
        }
        return $option_str;
    }
    public function getStateOptions($country_id, $state_id) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $sql = "SELECT * FROM `tblstates` WHERE `country_id` = '" . $country_id . "' ORDER BY `state` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                if ($row['state_id'] == $state_id) {
                    $sel = ' selected ';
                } else {
                    $sel = '';
                }
                $option_str.= '<option value="' . $row['state_id'] . '" ' . $sel . '>' . stripslashes($row['state']) . '</option>';
            }
        }
        return $option_str;
    }
    public function getCountryOption($country_id, $type = '1', $multiple = '') {
        $DBH = new DatabaseHandler();
        $output = '';
        if ($type == '2') {
            if ($multiple == '1') {
                if (in_array('-1', $country_id)) {
                    $selected = ' selected ';
                } else {
                    $selected = '';
                }
                $output.= '<option value="-1" ' . $selected . ' >All Countries</option>';
            } else {
                $selected = '';
                $output.= '<option value="" ' . $selected . ' >All Countries</option>';
            }
        } else {
            $output.= '<option value="" >Select Country</option>';
        }
        try {
            $sql = "SELECT country_id,country_name FROM `tblcountry` WHERE `country_deleted` = '0' ORDER BY country_name ASC";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                    if ($multiple == '1') {
                        if (in_array($r['country_id'], $country_id)) {
                            $selected = ' selected ';
                        } else {
                            $selected = '';
                        }
                    } else {
                        if ($r['country_id'] == $country_id) {
                            $selected = ' selected ';
                        } else {
                            $selected = '';
                        }
                    }
                    $output.= '<option value="' . $r['country_id'] . '" ' . $selected . '>' . stripslashes($r['country_name']) . '</option>';
                }
            }
        }
        catch(Exception $e) {
            $stringData = '[getCountryOption] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $output;
        }
        return $output;
    }
    public function getStateOption($country_id, $state_id, $type = '1', $multiple = '') {
        $DBH = new DatabaseHandler();
        $output = '';
        if ($type == '2') {
            if ($multiple == '1') {
                if (in_array('-1', $state_id)) {
                    $selected = ' selected ';
                } else {
                    $selected = '';
                }
                $output.= '<option value="-1" ' . $selected . ' >All States</option>';
            } else {
                $selected = '';
                $output.= '<option value="" ' . $selected . ' >All States</option>';
            }
        } else {
            $output.= '<option value="" >Select State</option>';
        }
        $go_ahead = true;
        $country_sql_str = "";
        if ($multiple == '1') {
            if (is_array($country_id) && count($country_id) > 0) {
                if (in_array('-1', $country_id)) {
                } else {
                    $country_str = implode(',', $country_id);
                    $country_sql_str = " AND country_id IN (" . $country_str . ")";
                }
            } else {
                $go_ahead = false;
            }
        } else {
            if ($country_id != '' && $country_id != 0) {
                $country_sql_str = " AND country_id = '" . $country_id . "' ";
            } else {
                $go_ahead = false;
            }
        }
        if ($go_ahead) {
            try {
                $sql = "SELECT state_id,state FROM `tblstates` WHERE `state_deleted` = '0' " . $country_sql_str . " ORDER BY state ASC";
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                        if ($multiple == '1') {
                            if (is_array($state_id) && in_array($r['state_id'], $state_id)) {
                                $selected = ' selected ';
                            } else {
                                $selected = '';
                            }
                        } else {
                            if ($r['state_id'] == $state_id) {
                                $selected = ' selected ';
                            } else {
                                $selected = '';
                            }
                        }
                        $output.= '<option value="' . $r['state_id'] . '" ' . $selected . '>' . stripslashes($r['state']) . '</option>';
                    }
                }
            }
            catch(Exception $e) {
                $stringData = '[getStateOption] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
                $this->debuglog($stringData);
                return $output;
            }
        }
        return $output;
    }
    public function getAreaOption($country_id, $state_id, $city_id, $area_id, $type = '1', $multiple = '') {
        $DBH = new DatabaseHandler();
        $output = '';
        if ($type == '2') {
            if ($multiple == '1') {
                if (in_array('-1', $area_id)) {
                    $selected = ' selected ';
                } else {
                    $selected = '';
                }
                $output.= '<option value="-1" ' . $selected . ' >All Areas</option>';
            } else {
                $selected = '';
                $output.= '<option value="" ' . $selected . ' >All Areas</option>';
            }
        } else {
            $output.= '<option value="" >Select Area</option>';
        }
        $go_ahead = true;
        $city_sql_str = "";
        $state_sql_str = "";
        $country_sql_str = "";
        if ($multiple == '1') {
            if (is_array($country_id) && count($country_id) > 0) {
                if (in_array('-1', $country_id)) {
                } else {
                    $country_str = implode(',', $country_id);
                    $country_sql_str = " AND country_id IN (" . $country_str . ")";
                }
                if (is_array($state_id) && count($state_id) > 0) {
                    if (in_array('-1', $state_id)) {
                    } else {
                        $state_str = implode(',', $state_id);
                        $state_sql_str = " AND state_id IN (" . $state_str . ")";
                    }
                } else {
                    $go_ahead = false;
                }
                if (is_array($city_id) && count($city_id) > 0) {
                    if (in_array('-1', $city_id)) {
                    } else {
                        $city_str = implode(',', $city_id);
                        $city_sql_str = " AND city_id IN (" . $city_str . ")";
                    }
                } else {
                    $go_ahead = false;
                }
            } else {
                $go_ahead = false;
            }
        } else {
            if ($country_id != '' && $country_id != 0) {
                $country_sql_str = " AND country_id = '" . $country_id . "' ";
            } else {
                $go_ahead = false;
            }
            if ($state_id != '' && $state_id != 0) {
                $state_sql_str = " AND state_id = '" . $state_id . "' ";
            } else {
                $go_ahead = false;
            }
            if ($city_id != '' && $city_id != 0) {
                $city_sql_str = " AND city_id = '" . $city_id . "' ";
            } else {
                $go_ahead = false;
            }
        }
        if ($go_ahead) {
            try {
                echo $sql = "SELECT area_id,area_name FROM `tblarea` WHERE `area_deleted` = '0' " . $country_sql_str . " " . $state_sql_str . " " . $city_sql_str . " ORDER BY area_name ASC";
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                        if ($multiple == '1') {
                            if (is_array($area_id) && in_array($r['area_id'], $area_id)) {
                                $selected = ' selected ';
                            } else {
                                $selected = '';
                            }
                        } else {
                            if ($r['area_id'] == $area_id) {
                                $selected = ' selected ';
                            } else {
                                $selected = '';
                            }
                        }
                        $output.= '<option value="' . $r['area_id'] . '" ' . $selected . '>' . stripslashes($r['area_name']) . '</option>';
                    }
                }
            }
            catch(Exception $e) {
                $stringData = '[getAreaOption] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
                $this->debuglog($stringData);
                return $output;
            }
        }
        return $output;
    }
    public function getCityOption($country_id, $state_id, $city_id, $type = '1', $multiple = '') {
        $DBH = new DatabaseHandler();
        $output = '';
        if ($type == '2') {
            if ($multiple == '1') {
                if (in_array('-1', $city_id)) {
                    $selected = ' selected ';
                } else {
                    $selected = '';
                }
                $output.= '<option value="-1" ' . $selected . ' >All Cities</option>';
            } else {
                $selected = '';
                $output.= '<option value="" ' . $selected . ' >All Cities</option>';
            }
        } else {
            $output.= '<option value="" >Select City</option>';
        }
        $go_ahead = true;
        $state_sql_str = "";
        $country_sql_str = "";
        if ($multiple == '1') {
            if (is_array($country_id) && count($country_id) > 0) {
                if (in_array('-1', $country_id)) {
                } else {
                    $country_str = implode(',', $country_id);
                    $country_sql_str = " AND country_id IN (" . $country_str . ")";
                }
                if (is_array($state_id) && count($state_id) > 0) {
                    if (in_array('-1', $state_id)) {
                    } else {
                        $state_str = implode(',', $state_id);
                        $state_sql_str = " AND state_id IN (" . $state_str . ")";
                    }
                } else {
                    $go_ahead = false;
                }
            } else {
                $go_ahead = false;
            }
        } else {
            if ($country_id != '' && $country_id != 0) {
                $country_sql_str = " AND country_id = '" . $country_id . "' ";
            } else {
                $go_ahead = false;
            }
            if ($state_id != '' && $state_id != 0) {
                $state_sql_str = " AND state_id = '" . $state_id . "' ";
            } else {
                $go_ahead = false;
            }
        }
        if ($go_ahead) {
            try {
                $sql = "SELECT city_id,city FROM `tblcities` WHERE `city_deleted` = '0' " . $country_sql_str . " " . $state_sql_str . " ORDER BY city ASC";
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                        if ($multiple == '1') {
                            if (is_array($city_id) && in_array($r['city_id'], $city_id)) {
                                $selected = ' selected ';
                            } else {
                                $selected = '';
                            }
                        } else {
                            if ($r['city_id'] == $city_id) {
                                $selected = ' selected ';
                            } else {
                                $selected = '';
                            }
                        }
                        //$output.= '<option value="' . $r['city'] . '" ' . $selected . '>' . stripslashes($r['city']) . '</option>';
                        //change 15-07-20
                        $output.= '<option value="' . $r['city_id'] . '" ' . $selected . '>' . stripslashes($r['city']) . '</option>';
                    }
                }
            }
            catch(Exception $e) {
                $stringData = '[getCityOption] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
                $this->debuglog($stringData);
                return $output;
            }
        }
        return $output;
    }
    public function updateUserVivek($name, $middle_name, $last_name, $dob, $height, $weight, $sex, $mobile, $country_id, $state_id, $city_id, $place_id, $food_veg_nonveg, $beef, $pork, $user_id) {
        $DBH = new DatabaseHandler();
        $return = true;
        $sql = "UPDATE `tblusers` SET `name` = '" . addslashes($name) . "' ,`middle_name` = '" . addslashes($middle_name) . "' ,`last_name` = '" . addslashes($last_name) . "' , `dob` = '" . $dob . "' , `height` = '" . addslashes($height) . "' , `weight` = '" . addslashes($weight) . "' , `sex` = '" . $sex . "' , `mobile` = '" . addslashes($mobile) . "' , `country_id` = '" . $country_id . "' , `state_id` = '" . $state_id . "', `city_id` = '" . $city_id . "', `place_id` = '" . $place_id . "' , `food_veg_nonveg` = '" . addslashes($food_veg_nonveg) . "' , `beef` = '" . addslashes($beef) . "' , `pork` = '" . addslashes($pork) . "' WHERE `user_id` = '" . $user_id . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function chkUserPlanFeaturePermission($user_id, $upa_id) {
        $DBH = new DatabaseHandler();
        $return = false;
        $default_up_id = $this->getUserDefaultPlanId();
        $sql = "SELECT * FROM `tbluserplandetails` AS tupd LEFT JOIN `tbluserplans` AS tup ON tupd.up_id = tup.up_id WHERE tupd.up_id = '" . $default_up_id . "' AND tup.up_default = '1' AND tup.up_status = '1' AND tup.up_deleted = '0' AND tupd.upa_id = '" . $upa_id . "' AND tupd.upd_status = '1'  AND tupd.upd_deleted = '0' AND tupd.upa_value = '1' ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        } else {
            $user_up_id = $this->getUserCurrentActivatedPlanId($user_id);
            if ($user_up_id > 0) {
                $sql2 = "SELECT * FROM `tbluserplandetails` AS tupd LEFT JOIN `tbluserplans` AS tup ON tupd.up_id = tup.up_id WHERE tupd.up_id = '" . $user_up_id . "' AND tup.up_status = '1' AND tup.up_deleted = '0' AND tupd.upa_id = '" . $upa_id . "' AND tupd.upd_status = '1'  AND tupd.upd_deleted = '0' AND tupd.upa_value = '1' ";
                $STH2 = $DBH->query($sql2);
                if ($STH2->rowCount() > 0) {
                    $return = true;
                }
            }
        }
        return $return;
    }
    public function getUserDefaultPlanId() {
        $DBH = new DatabaseHandler();
        $up_id = 0;
        $sql = "SELECT * FROM `tbluserplans` WHERE `up_default` = '1' AND `up_status` = '1' AND `up_deleted` = '0' ORDER BY `up_add_date` DESC LIMIT 1";
        //echo '<br>'.$sql.'<br>';
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $up_id = $row['up_id'];
        }
        return $up_id;
    }
    public function getUserCurrentActivatedPlanId($user_id) {
        $DBH = new DatabaseHandler();
        $up_id = 0;
        $sql = "SELECT * FROM `tbluserplanrequests` WHERE `user_id` = '" . $user_id . "' AND `upr_status` = '1' ORDER BY `upr_add_date` DESC LIMIT 1";
        //echo '<br>'.$sql.'<br>';
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $up_id = $row['up_id'];
        } else {
            $up_id = $this->getUserDefaultPlanId();
        }
        return $up_id;
    }
    public function getMyRewardsChart($user_id, $start_date, $end_date) {
        $DBH = new DatabaseHandler();
        $return = false;
        $arr_reward_modules = array();
        $arr_reward_summary = array();
        list($arr_start_month_day, $arr_end_month_day) = $this->getMonthsListBetweenTwoDates($start_date, $end_date);
        if (count($arr_start_month_day) > 0) {
            for ($k = 0;$k < count($arr_start_month_day);$k++) {
                // $sql = "SELECT * FROM `tblrewardmodules` WHERE `reward_module_deleted` = '0' AND `reward_module_status` = '1'  AND `show_in_report` = '1' ORDER BY `listing_order` ASC ";
                //update by ample 06-11-20
               $sql = "SELECT rm.*,p.page_name FROM `tblrewardmodules` rm LEFT JOIN tblpages p ON rm.page_id=p.page_id WHERE rm.reward_module_deleted = '0' AND rm.reward_module_status = '1' ORDER BY p.page_name ASC";
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    $return = true;
                    $i = 0;
                    
                    $arr_reward_modules[$arr_start_month_day[$k]]['total_total_entries'] = 0;
                    // $arr_reward_modules[$arr_start_month_day[$k]]['total_points_from_entry'] = 0;
                    $arr_reward_modules[$arr_start_month_day[$k]]['total_no_of_days_posted'] = 0;
                    // $arr_reward_modules[$arr_start_month_day[$k]]['total_bonus_points'] = 0;
                    // $arr_reward_modules[$arr_start_month_day[$k]]['total_total_points'] = 0;
                    // $arr_reward_modules[$arr_start_month_day[$k]]['total_encashed_points'] = 0;
                    // $arr_reward_modules[$arr_start_month_day[$k]]['total_balance_points'] = 0;
                    while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                        // if ($row['page_id'] == '0') {
                        //     $title = stripslashes($row['reward_module_title']);
                        // } else {
                        //     $title = $this->getMenuTitleOfPage($row['page_id']);
                        //     if ($title == '') {
                        //         $title = stripslashes($row['reward_module_title']);
                        //     }
                        // }
                        //update by ample 06-11-20
                        //$title = $this->getMenuTitleOfPage($row['page_id']);
                        $title = $this->getPagenamebyid($row['page_id']);

                        //$data=$this->getRewardConversionValue($row['reward_module_id'], $arr_start_month_day[$k], $arr_end_month_day[$k]);

                        $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['reward_module_id'] = $row['reward_module_id'];
                        $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['reward_module_title'] = $title;
                        $arr_reward_summary[$row['reward_module_id']]['summary_reward_module_title'] = $title;
                        // $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['reward_conversion_value'] = $data['value'];
                        // $arr_reward_modules[$arr_start_month_day[$k]]['total_reward_conversion_value']+= $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['reward_conversion_value'];

                        //comment by ample 11-06-20
                        // $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['total_entries'] = $this->getTotalEntriesOfModule($row['reward_module_id'], $arr_start_month_day[$k], $arr_end_month_day[$k], $user_id);
                        $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['total_entries'] = $this->getTotalEntriesOfModule($row['reward_module_id'], $arr_start_month_day[$k], $arr_end_month_day[$k], $user_id);
                        

                        $arr_reward_modules[$arr_start_month_day[$k]]['total_total_entries']+= $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['total_entries'];
                        $arr_reward_summary[$row['reward_module_id']]['summary_total_entries']+= $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['total_entries'];
                        $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['reward_module_id'] = $row['reward_module_id'];
                        // if ($arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['reward_conversion_value'] == '' || $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['reward_conversion_value'] == '0') {
                        //     $points_from_entry = '0';
                        // } else {
                        //     $points_from_entry = round($arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['total_entries'] * $data['final_value']/ $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['reward_conversion_value'], 2);
                        // }
                        // $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['points_from_entry'] = $points_from_entry;
                        // $arr_reward_modules[$arr_start_month_day[$k]]['total_points_from_entry']+= $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['points_from_entry'];
                        // $arr_reward_summary[$row['reward_module_id']]['summary_points_from_entry']+= $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['points_from_entry'];

                        // $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['no_of_days_posted'] = $this->getTotalNoOfDaysOfEntries($row['reward_module_id'], $arr_start_month_day[$k], $arr_end_month_day[$k], $user_id);
                        $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['no_of_days_posted'] = $this->getTotalNoOfDaysOfEntries($row['reward_module_id'], $arr_start_month_day[$k], $arr_end_month_day[$k], $user_id);

                        $arr_reward_modules[$arr_start_month_day[$k]]['total_no_of_days_posted']+= $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['no_of_days_posted'];
                        $arr_reward_summary[$row['reward_module_id']]['summary_no_of_days_posted']+= $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['no_of_days_posted'];
                        // $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['bonus_points'] = $this->getTotalBonusPointsOfEntries($row['reward_module_id'], $arr_start_month_day[$k], $arr_end_month_day[$k], $user_id);
                        // $arr_reward_modules[$arr_start_month_day[$k]]['total_bonus_points']+= $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['bonus_points'];
                        // $arr_reward_summary[$row['reward_module_id']]['summary_bonus_points']+= $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['bonus_points'];
                        // $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['total_points'] = $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['points_from_entry'] + $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['bonus_points'];
                        // $arr_reward_modules[$arr_start_month_day[$k]]['total_total_points']+= $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['total_points'];
                        // $arr_reward_summary[$row['reward_module_id']]['summary_total_points']+= $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['total_points'];
                        // $encashed_points = $this->getTotalEncashedPointsOfModule($row['reward_module_id'], $arr_start_month_day[$k], $arr_end_month_day[$k], $user_id);
                        // $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['encashed_points'] = $encashed_points;
                        // $arr_reward_modules[$arr_start_month_day[$k]]['total_encashed_points']+= $encashed_points;
                        // $arr_reward_summary[$row['reward_module_id']]['summary_total_encashed_points']+= $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['encashed_points'];
                        // $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['balance_points'] = $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['total_points'] - $encashed_points;
                        // $arr_reward_modules[$arr_start_month_day[$k]]['total_balance_points']+= $arr_reward_modules[$arr_start_month_day[$k]]['records'][$i]['balance_points'];
                        // $arr_reward_summary[$row['reward_module_id']]['summary_total_balance_points'] = $arr_reward_summary[$row['reward_module_id']]['summary_total_points'] - $arr_reward_summary[$row['reward_module_id']]['summary_total_encashed_points'];
                        $i++;
                    }
                }
            }
        }
        return array($return, $arr_reward_modules, $arr_reward_summary);
    }
    public function getMonthsListBetweenTwoDates($start_date, $end_date) {
        $arr_start_month_day = array();
        $arr_end_month_day = array();
        if ($start_date != '' && $end_date != '') {
            $start = new DateTime($start_date);
            $start->modify('first day of this month');
            $end = new DateTime($end_date);
            $end->modify('first day of next month');
            $interval = DateInterval::createFromDateString('1 month');
            $period = new DatePeriod($start, $interval, $end);
            foreach ($period as $dt) {
                array_push($arr_start_month_day, $dt->format("Y-m-01"));
                array_push($arr_end_month_day, $dt->format("Y-m-t"));
            }
            $arr_start_month_day = array_reverse($arr_start_month_day);
            $arr_end_month_day = array_reverse($arr_end_month_day);
        }
        return array($arr_start_month_day, $arr_end_month_day);
    }
    public function getMenuTitleOfPage($page_id) {
        $DBH = new DatabaseHandler();
        $menu_title = '';
        $sql = "SELECT * FROM `tblpages` WHERE `page_id` = '" . $page_id . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $menu_title = stripslashes($row['menu_title']);
        }
        return $menu_title;
    }
    public function getRewardConversionValue($reward_module_id, $start_date, $end_date) {
        $DBH = new DatabaseHandler();
        $value = array();
        $value['value']=0; 
        $value['final_value']=1;        
        $sql = "SELECT * FROM `tblrewardpoints` WHERE `reward_point_deleted` = '0' AND `reward_point_status` = '1'  AND `reward_point_module_id` = '" . $reward_module_id . "' AND EXTRACT(YEAR_MONTH FROM reward_point_date) <= '" . date('Ym', strtotime($start_date)) . "' ORDER BY `reward_point_date` DESC LIMIT 1";
        //echo '<br>'.$sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $value['value'] = stripslashes($row['reward_point_conversion_value']);
            $value['final_value'] = stripslashes($row['equivalent_value']);
        }
        return $value;
    }

     public function getTotalEntriesOfModule_OLD($reward_module_id, $start_date, $end_date, $user_id) {
        $DBH = new DatabaseHandler();
        $value = '0';
        if ($user_id != '') {
            $str_user_id = " AND user_id = '" . $user_id . "' ";
        } else {
            $str_user_id = "";
        }
        //echo '<br>Testkk: reward_module_id = '.$reward_module_id;
        if ($reward_module_id == '1') {
            $sql = "SELECT * FROM `tblusersmeals` WHERE `meal_date` >= '" . $start_date . "' AND `meal_date` <= '" . $end_date . "' AND `meal_type` = 'breakfast' " . $str_user_id . " ORDER BY `meal_date` ASC ";
        } elseif ($reward_module_id == '2') {
            $sql = "SELECT * FROM `tblusersmeals` WHERE `meal_date` >= '" . $start_date . "' AND `meal_date` <= '" . $end_date . "' AND `meal_type` = 'brunch' " . $str_user_id . " ORDER BY `meal_date` ASC ";
        } elseif ($reward_module_id == '3') {
            $sql = "SELECT * FROM `tblusersmeals` WHERE `meal_date` >= '" . $start_date . "' AND `meal_date` <= '" . $end_date . "' AND `meal_type` = 'lunch' " . $str_user_id . " ORDER BY `meal_date` ASC ";
        } elseif ($reward_module_id == '4') {
            $sql = "SELECT * FROM `tblusersmeals` WHERE `meal_date` >= '" . $start_date . "' AND `meal_date` <= '" . $end_date . "' AND `meal_type` = 'snacks' " . $str_user_id . " ORDER BY `meal_date` ASC ";
        } elseif ($reward_module_id == '5') {
            $sql = "SELECT * FROM `tblusersmeals` WHERE `meal_date` >= '" . $start_date . "' AND `meal_date` <= '" . $end_date . "' AND `meal_type` = 'dinner' " . $str_user_id . " ORDER BY `meal_date` ASC ";
        } elseif ($reward_module_id == '6') {
            $sql = "SELECT * FROM `tblusersdailyactivity` WHERE `activity_date` >= '" . $start_date . "' AND `activity_date` <= '" . $end_date . "' " . $str_user_id . " ORDER BY `activity_date` ASC ";
        } elseif ($reward_module_id == '7') {
            $sql = "SELECT * FROM `tbluserswae` WHERE `wae_date` >= '" . $start_date . "' AND `wae_date` <= '" . $end_date . "' " . $str_user_id . " AND `wae_old_data` = '0'  ORDER BY `wae_date` ASC ";
        } elseif ($reward_module_id == '8') {
            $sql = "SELECT * FROM `tblusersgs` WHERE `gs_date` >= '" . $start_date . "' AND `gs_date` <= '" . $end_date . "' " . $str_user_id . " AND `gs_old_data` = '0' ORDER BY `gs_date` ASC ";
        } elseif ($reward_module_id == '9') {
            $sql = "SELECT * FROM `tbluserssleep` WHERE `sleep_date` >= '" . $start_date . "' AND `sleep_date` <= '" . $end_date . "' " . $str_user_id . " AND `sleep_old_data` = '0'  ORDER BY `sleep_date` ASC ";
        } elseif ($reward_module_id == '10') {
            $sql = "SELECT * FROM `tblusersmc` WHERE `mc_date` >= '" . $start_date . "' AND `mc_date` <= '" . $end_date . "' " . $str_user_id . " AND `mc_old_data` = '0'  ORDER BY `mc_date` ASC ";
        } elseif ($reward_module_id == '11') {
            $sql = "SELECT * FROM `tblusersmr` WHERE `mr_date` >= '" . $start_date . "' AND `mr_date` <= '" . $end_date . "' " . $str_user_id . " AND `mr_old_data` = '0'  ORDER BY `mr_date` ASC ";
        } elseif ($reward_module_id == '12') {
            $sql = "SELECT * FROM `tblusersmle` WHERE `mle_date` >= '" . $start_date . "' AND `mle_date` <= '" . $end_date . "' " . $str_user_id . " AND `mle_old_data` = '0'  ORDER BY `mle_date` ASC ";
        } elseif ($reward_module_id == '13') {
            $sql = "SELECT * FROM `tblusersadct` WHERE `adct_date` >= '" . $start_date . "' AND `adct_date` <= '" . $end_date . "' " . $str_user_id . " AND `adct_old_data` = '0'  ORDER BY `adct_date` ASC ";
        } elseif ($reward_module_id == '14') {
            $sql = "SELECT * FROM `tblfeedback` WHERE DATE(feedback_add_date) >= '" . $start_date . "' AND DATE(feedback_add_date) <= '" . $end_date . "' " . $str_user_id . " ORDER BY `feedback_add_date` ASC ";
        } elseif ($reward_module_id == '16') {
            $sql = "SELECT * FROM `tblreferal` WHERE DATE(add_date) >= '" . $start_date . "' AND DATE(add_date) <= '" . $end_date . "' " . $str_user_id . " ORDER BY `add_date` ASC ";
        } elseif ($reward_module_id == '17') {
            $sql = "SELECT * FROM `tblusersbps` WHERE `bps_date` >= '" . $start_date . "' AND `bps_date` <= '" . $end_date . "' " . $str_user_id . " AND `bps_old_data` = '0'   ORDER BY `bps_date` ASC ";
        } elseif ($reward_module_id == '18') {
            $sql = "SELECT * FROM `tblusersmdt` WHERE `mdt_date` >= '" . $start_date . "' AND `mdt_date` <= '" . $end_date . "' " . $str_user_id . " AND `mdt_old_data` = '0' AND `bms_entry_type` = 'situation'  ORDER BY `mdt_date` ASC ";
        } else {
            $sql = '';
        }
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $value = $STH->rowCount();
        }
        return $value;
    }
    //update by ample 11-09-20
    public function getTotalEntriesOfModule($reward_module_id, $start_date, $end_date, $user_id) {
        $DBH = new DatabaseHandler();
        $value = '0';
        if ($user_id != '') {
            $str_user_id = " AND user_id = '" . $user_id . "' ";
        } else {
            $str_user_id = "";
        }

        $module=$this->get_reward_module_data($reward_module_id);

        $str_condition1='';
        $str_condition2='';
        
        if($module['table_link'] && $module['table_column'])
        {   

            if($module['column1'] && $module['value1'])
            {
                $str_condition1=" AND ".$module['column1']." = '" . $module['value1'] . "' ";
            }
            if($module['column2'] && $module['value2'])
            {
                $str_condition2=" AND ".$module['column2']." = '" . $module['value2'] . "' ";
            } 

            $end_date=date('Y-m-d', strtotime('+1 day', strtotime($end_date)));

            $sql = "SELECT * FROM ".$module['table_link']." WHERE ".$module['table_column']." >= '" . $start_date . "' AND ".$module['table_column']." <= '" . $end_date . "' " . $str_condition1 . " " . $str_condition2 . " " . $str_user_id . " ";
       
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $value = $STH->rowCount();
            }

        }

        return $value;
    }
    public function getTotalNoOfDaysOfEntries_OLD($reward_module_id, $start_date, $end_date, $user_id) {
        $DBH = new DatabaseHandler();
        $value = '0';
        if ($user_id != '') {
            $str_user_id = " AND user_id = '" . $user_id . "' ";
        } else {
            $str_user_id = "";
        }
        if ($reward_module_id == '1') {
            $sql = "SELECT DISTINCT `meal_date` FROM `tblusersmeals` WHERE `meal_date` >= '" . $start_date . "' AND `meal_date` <= '" . $end_date . "' AND `meal_type` = 'breakfast' " . $str_user_id . " ORDER BY `meal_date` ASC ";
        } elseif ($reward_module_id == '2') {
            $sql = "SELECT DISTINCT `meal_date` FROM `tblusersmeals` WHERE `meal_date` >= '" . $start_date . "' AND `meal_date` <= '" . $end_date . "' AND `meal_type` = 'brunch' " . $str_user_id . " ORDER BY `meal_date` ASC ";
        } elseif ($reward_module_id == '3') {
            $sql = "SELECT DISTINCT `meal_date` FROM `tblusersmeals` WHERE `meal_date` >= '" . $start_date . "' AND `meal_date` <= '" . $end_date . "' AND `meal_type` = 'lunch' " . $str_user_id . " ORDER BY `meal_date` ASC ";
        } elseif ($reward_module_id == '4') {
            $sql = "SELECT DISTINCT `meal_date` FROM `tblusersmeals` WHERE `meal_date` >= '" . $start_date . "' AND `meal_date` <= '" . $end_date . "' AND `meal_type` = 'snacks' " . $str_user_id . " ORDER BY `meal_date` ASC ";
        } elseif ($reward_module_id == '5') {
            $sql = "SELECT DISTINCT `meal_date` FROM `tblusersmeals` WHERE `meal_date` >= '" . $start_date . "' AND `meal_date` <= '" . $end_date . "' AND `meal_type` = 'dinner' " . $str_user_id . " ORDER BY `meal_date` ASC ";
        } elseif ($reward_module_id == '6') {
            $sql = "SELECT DISTINCT `activity_date` FROM `tblusersdailyactivity` WHERE `activity_date` >= '" . $start_date . "' AND `activity_date` <= '" . $end_date . "' " . $str_user_id . " ORDER BY `activity_date` ASC ";
        } elseif ($reward_module_id == '7') {
            $sql = "SELECT DISTINCT `wae_date` FROM `tbluserswae` WHERE `wae_date` >= '" . $start_date . "' AND `wae_date` <= '" . $end_date . "' " . $str_user_id . "  AND `wae_old_data` = '0'  ORDER BY `wae_date` ASC ";
        } elseif ($reward_module_id == '8') {
            $sql = "SELECT DISTINCT `gs_date` FROM `tblusersgs` WHERE `gs_date` >= '" . $start_date . "' AND `gs_date` <= '" . $end_date . "' " . $str_user_id . " AND `gs_old_data` = '0' ORDER BY `gs_date` ASC ";
        } elseif ($reward_module_id == '9') {
            $sql = "SELECT DISTINCT `sleep_date` FROM `tbluserssleep` WHERE `sleep_date` >= '" . $start_date . "' AND `sleep_date` <= '" . $end_date . "' " . $str_user_id . " AND `sleep_old_data` = '0'  ORDER BY `sleep_date` ASC ";
        } elseif ($reward_module_id == '10') {
            $sql = "SELECT DISTINCT `mc_date` FROM `tblusersmc` WHERE `mc_date` >= '" . $start_date . "' AND `mc_date` <= '" . $end_date . "' " . $str_user_id . " AND `mc_old_data` = '0'  ORDER BY `mc_date` ASC ";
        } elseif ($reward_module_id == '11') {
            $sql = "SELECT DISTINCT `mr_date` FROM `tblusersmr` WHERE `mr_date` >= '" . $start_date . "' AND `mr_date` <= '" . $end_date . "' " . $str_user_id . " AND `mr_old_data` = '0'  ORDER BY `mr_date` ASC ";
        } elseif ($reward_module_id == '12') {
            $sql = "SELECT DISTINCT `mle_date` FROM `tblusersmle` WHERE `mle_date` >= '" . $start_date . "' AND `mle_date` <= '" . $end_date . "' " . $str_user_id . " AND `mle_old_data` = '0'  ORDER BY `mle_date` ASC ";
        } elseif ($reward_module_id == '13') {
            $sql = "SELECT DISTINCT `adct_date` FROM `tblusersadct` WHERE `adct_date` >= '" . $start_date . "' AND `adct_date` <= '" . $end_date . "' " . $str_user_id . " AND `adct_old_data` = '0'  ORDER BY `adct_date` ASC ";
        } elseif ($reward_module_id == '14') {
            $sql = "SELECT DISTINCT DATE(feedback_add_date) FROM `tblfeedback` WHERE DATE(feedback_add_date) >= '" . $start_date . "' AND DATE(feedback_add_date) <= '" . $end_date . "' " . $str_user_id . " ORDER BY `feedback_add_date` ASC ";
        } elseif ($reward_module_id == '16') {
            $sql = "SELECT DISTINCT DATE(add_date) FROM `tblreferal` WHERE DATE(add_date) >= '" . $start_date . "' AND DATE(add_date) <= '" . $end_date . "' " . $str_user_id . " ORDER BY `add_date` ASC ";
        } elseif ($reward_module_id == '17') {
            $sql = "SELECT DISTINCT `bps_date` FROM `tblusersbps` WHERE `bps_date` >= '" . $start_date . "' AND `bps_date` <= '" . $end_date . "' " . $str_user_id . " AND `bps_old_data` = '0' ORDER BY `bps_date` ASC ";
        } elseif ($reward_module_id == '18') {
            $sql = "SELECT DISTINCT `mdt_date` FROM `tblusersmdt` WHERE `mdt_date` >= '" . $start_date . "' AND `mdt_date` <= '" . $end_date . "' " . $str_user_id . " AND `mdt_old_data` = '0' AND `bms_entry_type` = 'situation'  ORDER BY `mdt_date` ASC ";
        } else {
            $sql = '';
        }
        
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $value = $STH->rowCount();
        }
        return $value;
    }
    public function getTotalNoOfDaysOfEntries($reward_module_id, $start_date, $end_date, $user_id) {
        $DBH = new DatabaseHandler();
        $value = '0';
        if ($user_id != '') {
            $str_user_id = " AND user_id = '" . $user_id . "' ";
        } else {
            $str_user_id = "";
        }

        $module=$this->get_reward_module_data($reward_module_id);
        $str_condition1='';
        $str_condition2='';
        
        if($module['table_link'] && $module['table_column'])
        {   

            if($module['column1'] && $module['value1'])
            {
                $str_condition1=" AND ".$module['column1']." = '" . $module['value1'] . "' ";
            }
            if($module['column2'] && $module['value2'])
            {
                $str_condition2=" AND ".$module['column2']." = '" . $module['value2'] . "' ";
            } 
            $end_date=date('Y-m-d', strtotime('+1 day', strtotime($end_date)));
            $sql = "SELECT DISTINCT ".$module['table_column']." FROM ".$module['table_link']." WHERE ".$module['table_column']." >= '" . $start_date . "' AND ".$module['table_column']." <= '" . $end_date . "' " . $str_condition1 . " " . $str_condition2 . " " . $str_user_id . " ";
       
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $value = $STH->rowCount();
            }

        }
        return $value;
    }
    public function getTotalBonusPointsOfEntries($reward_module_id, $start_date, $end_date, $user_id) {
        $DBH = new DatabaseHandler();
        $value = '0';
        return $value;
    }
    public function getTotalEncashedPointsOfModule($reward_module_id, $start_date, $end_date, $user_id) {
        $DBH = new DatabaseHandler();
        $value = 0;
        $sql = "SELECT * FROM `tblrewardredeamed` WHERE DATE(redeam_date) >= '" . $start_date . "' AND DATE(redeam_date) <= '" . $end_date . "' AND `reward_module_id` = '" . $reward_module_id . "' AND `user_id` = '" . $user_id . "' ORDER BY `redeam_date` DESC ";
        //echo'<br>Testkk: sql = '.$sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $value+= $row['encashed_points'];
            }
        }
        return $value;
    }
    public function getUserRegistrationTimestamp($user_id) {
        $DBH = new DatabaseHandler();
        $user_add_date = '';
        $sql = "SELECT * FROM `tblusers` WHERE `user_id` = '" . $user_id . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $user_add_date = stripslashes($row['user_add_date']);
        }
        return $user_add_date;
    }
    public function getMyFoodCountByDate($date, $user_id) {
        $DBH = new DatabaseHandler();
        $date = !empty($date) ? $date : date("Y-m-d");
        $user_id = !empty($user_id) ? $user_id : $_SESSION['user_id'];
        $count = '0';
        $sql = "SELECT * FROM tblusersmeals where user_id = " . $user_id . " and meal_date = '" . $date . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $count = $STH->rowCount();
        }
        return $count;
    }
    public function getMyActivityCountByDate($date, $user_id) {
        $DBH = new DatabaseHandler();
        $date = !empty($date) ? $date : date("Y-m-d");
        $user_id = !empty($user_id) ? $user_id : $_SESSION['user_id'];
        $count = '0';
        $sql = "SELECT * FROM tblusersdailyactivity where user_id = " . $user_id . " and activity_date = '" . $date . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $count = $STH->rowCount();
        }
        return $count;
    }
    function getMySleepCountByDate($date, $user_id) {
        $DBH = new DatabaseHandler();
        $date = !empty($date) ? $date : date("Y-m-d");
        $user_id = !empty($user_id) ? $user_id : $_SESSION['user_id'];
        $count = '0';
        $sql = "SELECT * FROM tbluserssleep where user_id = " . $user_id . " and sleep_date = '" . $date . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $count = $STH->rowCount();
        }
        return $count;
    }
    public function getMySituationByDate($date, $user_id) {
        $DBH = new DatabaseHandler();
        $date = !empty($date) ? $date : date("Y-m-d");
        $user_id = !empty($user_id) ? $user_id : $_SESSION['user_id'];
        $count = '0';
        $sql = "SELECT * FROM tblusersmdt where user_id = " . $user_id . " and mdt_date = '" . $date . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $count = $STH->rowCount();
        }
        return $count;
    }
    public function getMyCommunicationsByDate($date, $user_id) {
        $DBH = new DatabaseHandler();
        $date = !empty($date) ? $date : date("Y-m-d");
        $user_id = !empty($user_id) ? $user_id : $_SESSION['user_id'];
        $count = '0';
        $sql = "SELECT * FROM tblusersmc where user_id = " . $user_id . " and mc_date = '" . $date . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $count = $STH->rowCount();
        }
        return $count;
    }
    public function getMyWorkplaceByDate($date, $user_id) {
        $DBH = new DatabaseHandler();
        $date = !empty($date) ? $date : date("Y-m-d");
        $user_id = !empty($user_id) ? $user_id : $_SESSION['user_id'];
        $count = '0';
        $sql = "SELECT * FROM tbluserswae where user_id = " . $user_id . " and wae_date = '" . $date . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $count = $STH->rowCount();
        }
        return $count;
    }
    public function GETUSERLEFTMENU($type) {
        $DBH = new DatabaseHandler();
        $sql = "SELECT * FROM `tblpages` where `position` = '" . $type . "' and `show_in_dashboard` = 1 order by show_order ASC";
        $data = array();
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[] = $row;
            }
        }
        return $data;
    }
    public function GETUSERDASHBOARDHEADER($position) {
        $DBH = new DatabaseHandler();
        $sql = "SELECT * FROM `tblpages` where `position` = '" . $position . "' and `dashboard_header`!='' order by show_order ASC limit 1";
        $header = '';
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $header = $row['dashboard_header'];
        }
        return $header;
    }
    public function GETDATADROPDOWNMYDAYTODAYOPTION($page_cat_id, $page_name) {
        $DBH = new DatabaseHandler();
        $arr_data = array();
        $sql = "SELECT * FROM `tbl_data_dropdown` WHERE page_name = '" . $page_name . "' and `page_cat_id` = '" . $page_cat_id . "' and `is_deleted` = 0 ORDER BY `order_show` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $arr_data[] = $row;
            }
        }
        return $arr_data;
    }
    public function CreateDesignLifeDropdownEdit($show_cat, $final_array, $box_title) {
        $option_str = '';
        $data = array();
        if (!empty($show_cat)) {
            for ($i = 0;$i < count($show_cat);$i++) {
                $data[] = $this->getFavCategoryNameVivek($show_cat[$i]);
            }
        }
        $final_array_new = array_merge($data, $final_array);
        $sel = '';
        if (!empty($final_array_new)) {
            for ($j = 0;$j < count($final_array_new);$j++) {
                if ($box_title == $final_array_new[$j]) {
                    $sel = ' selected ';
                } else {
                    $sel = '';
                }
                $option_str.= '<option value="' . $final_array_new[$j] . '" ' . $sel . '>' . $final_array_new[$j] . '</option>';
            }
        }
        return $option_str;
    }
    public function getFavCategoryNameVivek($fav_cat_id) {
        $DBH = new DatabaseHandler();
        $fav_cat_type = '';
        $sql = "SELECT * FROM `tblfavcategory` WHERE `fav_cat_id` = '" . $fav_cat_id . "' ";
        //$this->execute_query($sql);
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $fav_cat_type = stripslashes($row['fav_cat']);
        }
        return $fav_cat_type;
    }
    public function GetFecthDataDesign($canv_sub_cat_link, $cat_id) {
        $final_data = array();
        if ($canv_sub_cat_link == 'tbl_bodymainsymptoms') {
            //echo 'Hiii';
            $symtum_cat = $this->getAllMainSymptomsMyDesign($cat_id);
            if (!empty($symtum_cat)) {
                $final_data = $this->GetmycanvasdataDesign($symtum_cat);
            }
        }
        if ($canv_sub_cat_link == 'tblsolutionitems') {
            //$symtum_cat = $this->getAllMainSymptomsRamakantFront($cat_id);
            $final_data = $this->GetmycanvassolutionitemsDesign($cat_id);
        }
        if ($canv_sub_cat_link == 'tbldailymealsfavcategory') {
            // echo 'Hiii';
            $symtum_cat = $this->getAllDailyMealsMyDesign($cat_id);
            if (!empty($symtum_cat)) {
                $final_data = $this->GetmycanvasmealdataDesign($symtum_cat);
            }
        }
        if ($canv_sub_cat_link == 'tbldailyactivity') {
            //$symtum_cat = $this->getAllDailyActivityMyCanvas($cat_id);
            $final_data = $this->GetmycanvasDailyActivitydataDesign($cat_id);
        }
        if (count($final_data) > 0) {
            $final_data = $final_data;
        } else {
            //$final_data[]= array();
            return $final_data;
        }
        return $final_data;
    }
    public function GetmycanvasdataDesign($symtum_cat) {
        $symtum_cat = implode(',', $symtum_cat);
        $DBH = new DatabaseHandler();
        $option_str = array();
        $sql = "SELECT * FROM `tblbodymainsymptoms` WHERE bms_id IN($symtum_cat) ORDER BY `bms_name` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $option_str[] = $row['bms_name'];
            }
        }
        return $option_str;
    }
    public function GetmycanvassolutionitemsDesign($cat_id) {
        $DBH = new DatabaseHandler();
        $option_str = array();
        $sql = "SELECT * FROM `tblsolutionitems` WHERE  sol_item_cat_id IN($cat_id) ORDER BY `sol_box_title` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $option_str[] = strip_tags($row['sol_box_title']);
            }
        }
        return $option_str;
    }
    public function getAllMainSymptomsMyDesign($symtum_cat) {
        $DBH = new DatabaseHandler();
        $str_sql_search = " AND `fav_parent_cat` IN (" . $symtum_cat . ") ";
        $data = array();
        $sql = "SELECT DISTINCT bmsid FROM `tblsymtumscustomcategory` WHERE  symtum_deleted = '0' " . $str_sql_search . " ORDER BY bmsid DESC ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[] = $row['bmsid'];
            }
        }
        return $data;
    }
    public function getAllDailyMealsMyDesign($symtum_cat) {
        $DBH = new DatabaseHandler();
        $str_sql_search = " AND `fav_cat_id` IN (" . $symtum_cat . ") ";
        $data = array();
        $sql = "SELECT DISTINCT meal_id FROM `tbldailymealsfavcategory` WHERE  show_hide = '1' " . $str_sql_search . " ORDER BY meal_id DESC ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[] = strip_tags($row['meal_id']);
            }
        }
        return $data;
    }
    public function GetmycanvasmealdataDesign($symtum_cat) {
        $symtum_cat = implode(',', $symtum_cat);
        $DBH = new DatabaseHandler();
        $option_str = array();
        $sql = "SELECT * FROM `tbldailymeals` WHERE meal_id IN($symtum_cat) ORDER BY `meal_item` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $option_str[] = strip_tags($row['meal_item']);
            }
        }
        return $option_str;
    }
    public function GetmycanvasDailyActivitydataDesign($symtum_cat) {
        $DBH = new DatabaseHandler();
        $option_str = array();
        $sql = "SELECT * FROM `tbldailyactivity` WHERE (activity_category IN($symtum_cat) OR activity_level_code IN($symtum_cat)) ORDER BY `activity` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $option_str[] = strip_tags($row['activity']);
            }
        }
        return $option_str;
    }
    public function CreateDesignLifeDropdown($show_cat, $final_array) {
        $option_str = '';
        $data = array();
        if (!empty($show_cat)) {
            for ($i = 0;$i < count($show_cat);$i++) {
                //$option_str .='<option value="'.$this->getFavCategoryNameVivek($show_cat[$i]).'">'.$this->getFavCategoryNameVivek($show_cat[$i]).'</option>';
                $data[] = $this->getFavCategoryNameVivek($show_cat[$i]);
            }
        }
        $final_array_new = array_merge($data, $final_array);
        //$final_array_new = asort($final_array_new);
        //   echo '<pre>';
        //   print_r($final_array_new);
        //   echo '</pre>';
        //   die();
        if (!empty($final_array_new)) {
            for ($j = 0;$j < count($final_array_new);$j++) {
                $option_str.= '<option value="' . $final_array_new[$j] . '">' . $final_array_new[$j] . '</option>';
            }
        }
        return $option_str;
    }
    //add by ample 07-05-20
    public function CreateDesignLifeDropdowns($show_cat, $final_array) {
        $datas = array();
        $data = array();
        if (!empty($show_cat)) {
            for ($i = 0;$i < count($show_cat);$i++) {
                $data[] = $this->getFavCategoryNameVivek($show_cat[$i]);
            }
        }
        $final_array_new = array_merge($data, $final_array);
        if (!empty($final_array_new)) {
            sort($final_array_new); //for ASC order add ample 28-05-20
            for ($j = 0;$j < count($final_array_new);$j++) {
                $datas[]=$final_array_new[$j];
            }
        }
        return $datas;
    }
    public function GetEventDataFrontSearch($tdata) {
        $DBH = new DatabaseHandler();
        $arr_records = array();
        $sql_event_type = "";
        if ($tdata['event_type'] != '') {
            $sql_event_type = " AND TEM.fav_cat_id_1 = '" . $tdata['event_type'] . "' ";
        }

        $sql = "SELECT TED.*,TEM.* from tbl_event_details TED " . " LEFT JOIN tbl_event_master TEM ON TED.event_master_id = TEM.event_master_id WHERE TED.event_status = 1 AND TED.event_deleted = 0 AND TED.country_id = '" . $tdata['country_id'] . "' AND TED.state_id = '" . $tdata['state_id'] . "' AND TED.city_id = '" . $tdata['city_id'] . "' AND TED.area_id = '" . $tdata['area_id'] . "' " . $sql_event_type . " AND TED.end_date >= '" . date("Y-m-d", strtotime($tdata['from_day_month_year'])) . "' AND TED.end_date <= '" . date("Y-m-d", strtotime($tdata['to_day_month_year'])) . "' AND TEM.event_tags LIKE '%" . $tdata['tags'] . "%'  order by TED.event_id ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                $arr_records[] = $r;
                // $tags[]=$r['event_tags'];
                
            }
        }
        //$arr_records['fianl_tags'] = $tags;
        return $arr_records;
    }
    public function GetEventDataMyCanvas($tags) {
        $DBH = new DatabaseHandler();
        $arr_records = array();
        $tags = implode(',', $tags);
        $sql = "SELECT TED.*,TEM.* from tbl_event_details TED " . " LEFT JOIN tbl_event_master TEM ON TED.event_master_id = TEM.event_master_id WHERE TED.event_status = 1 AND TED.event_deleted = 0 AND TED.end_date >= '" . date("Y-m-d") . "'  AND TEM.event_tags LIKE '%" . $tags . "%'  order by TED.event_id ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data = array();
                $data['activity_name'] = "<a href='event-details.php?token=" . base64_encode($r['event_id']) . "' target='_blank' >" . $r['event_name'] . "</a>";
                $data['activity_id'] = $r['event_id'];
                $arr_records[] = $data;
                // $tags[]=$r['event_tags'];
                
            }
        }
        //$arr_records['fianl_tags'] = $tags;
        return $arr_records;
    }
    //update by ample 09-01-20
    public function GetDesignMyLifeDrop($symtum_cat, $sub_cat2_show_fetch, $sub_cat2_link,$sub_cat2_refer="",$sub_cat2_uid="") {
        $option_str = '';
        if ($sub_cat2_show_fetch == 1) {
            $data = explode(',', $symtum_cat);
            for ($i = 0;$i < count($data);$i++) {
                $option_str.= '<option value="' . $this->getFavCategoryNameRamakant($data[$i]) . '" >' . $this->getFavCategoryNameRamakant($data[$i]) . '</option>';
            }
        } else {
            //comment by ample 09-01-20
            // if ($sub_cat2_link == 'tbl_bodymainsymptoms') {
            //     $symtum_cat = explode(',', $symtum_cat);
            //     $data = $this->getAllMainSymptomsRamakantFront($symtum_cat);
            //     $option_str = $this->GetDatadropdownoption($data);
            // }
            // if ($sub_cat2_link == 'tblsolutionitems') {
            //     //$symtum_cat = explode(',', $symtum_cat);
            //     $data = $this->GetmycanvassolutionitemsDesign($symtum_cat);
            //     $data = array_values(array_filter($data));
            //     for ($i = 0;$i < count($data);$i++) {
            //         $option_str.= '<option value="' . $data[$i] . '" >' . $data[$i] . '</option>';
            //     }
            // }
            // if ($sub_cat2_link == 'tbldailymealsfavcategory') {
            //     $symtum_cat = $this->getAllDailyMealsMyCanvas($symtum_cat);
            //     if (!empty($symtum_cat)) {
            //         $data = $this->GetmyDesignLifedata($symtum_cat, '');
            //     }
            //     for ($i = 0;$i < count($data);$i++) {
            //         $option_str.= '<option value="' . $data[$i] . '" >' . $data[$i] . '</option>';
            //     }
            // }
            // if ($sub_cat2_link == 'tbldailyactivity') {
            //     $data = $this->GetDesignMylifeDailyActivitydata($symtum_cat);
            //     $data = array_values(array_filter($data));
            //     for ($i = 0;$i < count($data);$i++) {
            //         $option_str.= '<option value="' . $data[$i] . '" >' . $data[$i] . '</option>';
            //     }
            // }
            // add by ample 09-01-20 & update 09-03-20
                $sub_cat_data = explode(',',$symtum_cat);
                $final_data=$this->getDataFromReportCustomized($sub_cat_data,$sub_cat2_link,$sub_cat2_refer,$sub_cat2_uid);
                    if(!empty($final_data))
                        {
                          sort($final_data); //add by ample
                          foreach ($final_data as $key => $value) {
                            
                            $option_str.= '<option value="'.$value.'">'.$value.'</option>';
                            
                          }
                        }
                        else
                        {
                            $option_str.= '<option value="">No records</option>';
                        }
        }
        //echo $option_str;
        return $option_str;
    }
    public function GetmyDesignLifedata($symtum_cat) {
        $symtum_cat = implode(',', $symtum_cat);
        $DBH = new DatabaseHandler();
        $option_str = array();
        $sql = "SELECT * FROM `tbldailymeals` WHERE meal_id IN($symtum_cat) ORDER BY `meal_item` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $option_str[] = $row['meal_item'];
            }
        }
        return $option_str;
    }
    public function GetDesignMylifeDailyActivitydata($symtum_cat) {
        $DBH = new DatabaseHandler();
        $option_str = array();
        $sql = "SELECT * FROM `tbldailyactivity` WHERE (activity_category IN($symtum_cat) OR activity_level_code IN($symtum_cat)) ORDER BY `activity` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $option_str[] = $row['activity'];
            }
        }
        return $option_str;
    }
    public function getCommentByBesnameDesign($besname, $table, $sub_cat3) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $comment = array();
        $table = implode('\',\'', $table);
        $sub_cat3 = implode('\',\'', $sub_cat3);
        $sql = "SELECT * FROM `tblbodymainsymptoms` WHERE `bms_name` = '" . $besname . "' ";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            //$comment = stripslashes($row['comment']);
            $comment = $this->GetSymtumKeywordListDesign($row['bms_id'], $table, $sub_cat3);
        }
        return $comment;
    }
    public function GetSymtumKeywordListDesign($symptom_id, $table, $sub_cat3) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $comment = array();
        $key_sub_cat = array();
        $option_str = "";
        $sql = "SELECT `keywords` FROM `tbl_symptom_keyword` WHERE `symptom_id` = '" . $symptom_id . "' and `fetch_link` IN('" . $table . "') and key_sub_cat IN('" . $sub_cat3 . "') ";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $comment[] = $row['keywords'];
                //$key_sub_cat[]=$row['key_sub_cat'];
                
            }
            $icon = $this->getMyDayTodayIconComment('QuickTip_show', date("Y-m-d"));
            if (count($comment) > 0) {
                for ($i = 0;$i < count($comment);$i++) {
                    $option_str.= '<p style="background-color: #FFF7F5; margin-left:100px;">' . $comment[$i] . '</p>';
                }
            }
        }
        return $option_str;
    }
    public function OnChangeGetWellnessSolutionitem($fav_cat_id, $sol_id_data) {
        list($arr_box_title1, $arr_banner_type1, $arr_banner1, $arr_box_desc1, $arr_mind_jumble_box_id1, $arr_credit_line1, $arr_credit_line_url1, $arr_sound_clip_id1) = $this->OnChangeGetSolutionTableItemDetails($fav_cat_id, $sol_id_data);
        //print_r($arr_mind_jumble_box_id1);
        if (count($arr_mind_jumble_box_id1) > 0) {
            $output = '<div class="slider_main" id="slider_main_bg">



           <div id="slider">';
            for ($i = 0;$i < count($arr_mind_jumble_box_id1);$i++) {
                $output.= '<div class="slider_inner">';
                $output.= '<table align="center" width="290" border="0" cellspacing="0" cellpadding="0" style="padding-left:10px; padding-right:10px;">



                   <tr>



                   	<td height="30" align="left" valign="middle">



                   		<span class="Header_brown">' . $arr_box_title1[$i] . '</span>



                    </td>



                  </tr>



				  <tr>



                  	<td align="left" valign="middle">';
                if ($arr_banner_type1[$i] == 'Flash') {
                    $output.= '<script type="text/javascript">AC_FL_RunContent( "codebase","http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=7,0,19,0","width","270","src","' . SITE_URL . "/uploads/" . $arr_banner1[$i] . '","quality","high","pluginspage","http://www.macromedia.com/go/getflashplayer","wmode","transparent","movie","' . SITE_URL . "/uploads/" . $arr_banner1[$i] . '" ); //end AC code



  </script><noscript><object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=7,0,19,0" width="270" ><param name="movie" value="' . SITE_URL . "/uploads/" . $arr_banner1[$i] . '" /> <param name="wmode" value="transparent" /><param name="quality" value="high" /><embed src="' . SITE_URL . "/uploads/" . $arr_banner1[$i] . '" quality="high" pluginspage="http://www.macromedia.com/go/getflashplayer" type="application/x-shockwave-flash" width="270"  wmode="transparent"></embed></object></noscript>';
                } elseif ($arr_banner_type1[$i] == 'Image') {
                    $output.= '<img src="' . SITE_URL . "/uploads/" . $arr_banner1[$i] . '" width="270" border="0" />';
                } elseif ($arr_banner_type1[$i] == 'Video') {
                    $output.= '<iframe width="270" src="' . $this->getSressBusterBannerString($arr_banner1[$i]) . '" frameborder="0" allowfullscreen></iframe>';
                } elseif ($arr_banner_type1[$i] == 'Audio') {
                    $output.= '<embed type="application/x-shockwave-flash" flashvars="audioUrl=' . SITE_URL . "/uploads/" . $arr_banner1[$i] . '" src="http://www.google.com/reader/ui/3523697345-audio-player.swf" width="270" height="27" quality="best"></embed>';
                }
                $output.= '	</td>



                  </tr>



                  <tr>



                 	<td height="25" align="right" valign="top" class="footer"><a href="' . $arr_credit_line_url1[$i] . '" target="_blank">' . $arr_credit_line1[$i] . '</a></td>



                  </tr>



                  <tr>



	                <td align="left" valign="top">' . $arr_box_desc1[$i] . '</td>



                  </tr>';
                //               <tr>
                //
                //                   	<td height="50" align="left" valign="middle">';
                ////
                ////    $output .='<strong>Select: </strong><input type="radio"';
                //
                //
                //
                //	$output .= 'id="select_banner_1_'.$i.'" name="select_banner1" value="'.$arr_mind_jumble_box_id1[$i].'" onclick="Display_MindJumble_Banner(\'1\')" />
                //
                //					<br><span class="footer">(Please select / tick mark only one as applicable to you.)</span>
                //
                //					</td>
                //
                //              	</tr>';
                $favourite1 = explode(',', $_SESSION['favourite1']);
                //        print_r($favourite1);die();
                if (in_array($arr_mind_jumble_box_id1[$i], $favourite1)) {
                    $checked = 'checked';
                } else {
                    $checked = '';
                }
                //	$output .='<tr>
                //
                //                 <td height="50" align="left" valign="middle">
                //
                //		      <strong>Favourite: </strong><input type="checkbox" name="favourite1[]"';
                //                          $output .=' id="favourite_1_'.$i.'" value="'. $arr_mind_jumble_box_id1[$i] .'" class="chkfav2" '.$checked.' onchange="destroyfavourite1data('.$i.');" />';
                //
                //  	                   $output .='<br><span class="footer">(Mark above as your favourite.)</span>
                //
                //		</td>
                //                </tr>';
                $output.= '</table>';
                $output.= '</div>';
            }
            $output.= '</div></div>';
        } else {
            $output.= '<img src="images/mj_main.jpg" width="290" height="384" border="0" />';
        }
        return $output;
    }
    public function OnChangeGetSolutionTableItemDetails($fav_cat_id, $solitemid) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        foreach ($solitemid as $rec) {
            $sol_id[] = $rec;
        }
        $sol_id_implode = implode('\',\'', $sol_id);
        //print_r($sol_id_implode);die();
        $arr_box_title = array();
        $arr_banner_type = array();
        $arr_banner = array();
        $arr_box_desc = array();
        $arr_mind_jumble_box_id = array();
        $arr_credit_line = array();
        $arr_credit_line_url = array();
        $arr_day = array();
        $arr_sound_clip_id = array();
        $arr_select_title = array();
        $arr_short_narration = array();
        $day = date('j');
        $sql = "SELECT * FROM `tblsolutionitems` WHERE sol_item_cat_id = '" . $fav_cat_id . "' AND sol_item_id IN('" . $sol_id_implode . "') ORDER BY `sol_item_id` DESC";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $days = ($row['day']);
                $arr_days = explode(",", $days);
                array_push($arr_box_title, stripslashes($row['sol_box_title']));
                array_push($arr_banner_type, stripslashes($row['sol_box_type']));
                array_push($arr_banner, stripslashes($row['sol_box_banner']));
                array_push($arr_box_desc, stripslashes($row['sol_box_desc']));
                array_push($arr_mind_jumble_box_id, stripslashes($row['sol_item_id']));
                array_push($arr_credit_line, stripslashes($row['sol_credit_line']));
                array_push($arr_credit_line_url, stripslashes($row['sol_credit_line_url']));
                array_push($arr_sound_clip_id, stripslashes($row['sound_clip_id']));
            }
        }
        return array($arr_box_title, $arr_banner_type, $arr_banner, $arr_box_desc, $arr_mind_jumble_box_id, $arr_credit_line, $arr_credit_line_url, $arr_sound_clip_id);
    }
    public function getSressBusterBannerString($banner) {
        $search = 'v=';
        $pos = strpos($banner, $search);
        $str = strlen($banner);
        $rest = substr($banner, $pos + 2, $str);
        return 'http://www.youtube.com/embed/' . $rest;
    }
    public function get_MindJumbleBoxCode($banner_id) {
        list($mind_jumble_box_id, $box_title, $banner_type, $banner, $box_desc, $credit_line) = $this->getMindJumbleDetails($banner_id);
        $output = '<table align="center" width="290" border="0" cellspacing="0" cellpadding="0" style="padding-left:10px; padding-right:10px;" >



					 <tr id="slider_main_bg">



						<td height="30" align="left" valign="middle"><span class="Header_brown">' . $box_title . '</span></td>



						  </tr>



						  <tr>



							 <td align="left" valign="middle">';
        if ($banner_type == 'Flash') {
            $output.= '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=7,0,19,0" width="270" ><param name="movie" value="' . SITE_URL . "/uploads/" . $banner . '" /> <param name="wmode" value="transparent" /><param name="quality" value="high" /><embed src="' . SITE_URL . "/uploads/" . $banner . '" quality="high" pluginspage="http://www.macromedia.com/go/getflashplayer" type="application/x-shockwave-flash" width="270"  wmode="transparent"></embed>



                                                            </object>';
        } elseif ($banner_type == 'Image') {
            $output.= '<img src="' . SITE_URL . "/uploads/" . $banner . '" width="270" border="0" />';
        } elseif ($banner_type == 'Video') {
            $output.= '<iframe width="270" src="' . $this->getSressBusterBannerString($banner) . '" frameborder="0" allowfullscreen></iframe>';
        } elseif ($banner_type == 'Audio') {
            $output.= '<embed type="application/x-shockwave-flash" flashvars="audioUrl=' . SITE_URL . "/uploads/" . $banner . '" src="http://www.google.com/reader/ui/3523697345-audio-player.swf" width="270" height="27" quality="best"  wmode="transparent"></embed>';
        }
        $output.= '</td>

                     </tr>

                         <tr>

                             <td height="25" align="right" valign="top"><span class="footer">' . $credit_line . '</span></td>

                          </tr>

                        <tr>

                              <td align="left" valign="top">' . $box_desc . '</td>



                        </tr></table>';
        return $output;
    }
    public function getMindJumbleDetails($banner_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $mind_jumble_box_id = '';
        $box_title = '';
        $box_type = '';
        $banner = '';
        $box_type = '';
        $credit_line = '';
        $sql = "SELECT * FROM `tblmindjumble` WHERE mind_jumble_box_id = '" . $banner_id . "' ";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $mind_jumble_box_id = stripslashes($row['mind_jumble_box_id']);
            $box_title = stripslashes($row['box_title']);
            $banner_type = stripslashes($row['box_type']);
            $banner = stripslashes($row['box_banner']);
            $box_desc = stripslashes($row['box_desc']);
            $credit_line = stripslashes($row['credit_line']);
        }
        return array($mind_jumble_box_id, $box_title, $banner_type, $banner, $box_desc, $credit_line);
    }
    function get_allpdfcode($select_title, $short_narration) {
        $day = date('j');
        $page_id = '44';
        list($arr_pdf_id, $arr_pdf1, $arr_pdf_title1, $arr_credit1, $arr_credit_url1, $arr_status1) = $this->getMindJumbelAllPDF($day, $select_title, $short_narration);
        //print_r($arr_pdf_id);
        if (count($arr_pdf1) > 0) {
            $output.= '<table border="0" width="100%" cellpadding="0" cellspacing="0">



					<tr>



					<td align="left" valign="top"><strong>Know More:</strong></td>



					</tr>';
            for ($i = 0;$i < count($arr_pdf1);$i++) {
                $output.= '<tr>



					<td height="50"  align="left" valign="top">



					<a href="' . SITE_URL . "/uploads/" . $arr_pdf1[$i] . '" target="_blank" class="body_link">' . $arr_pdf_title1[$i] . '</a>



					<input type="checkbox" class="chk_pdf" id="chk_pdf_' . $arr_pdf_id[$i] . '" name="chk_pdf[]" value="' . $arr_pdf_id[$i] . '" />



					<br /><a href="' . $arr_credit_url1[$i] . 'target="_blank"><span class="footer">' . $arr_credit1[$i] . '</span></a></td></tr>';
            }
            $output.= '<tr><td><input name="submit" type="button" id="submit" value="Add To Library"  onclick="PDF_Library(\'' . $page_id . '\')"/></td></tr>';
            $output.= '</table>';
        }
        return $output;
    }
    function getMindJumbelAllPDF($day, $select_title, $short_narration) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $arr_pdf_id = array();
        $arr_pdf = array();
        $arr_pdf_title = array();
        $arr_credit = array();
        $arr_credit_url = array();
        $arr_status = array();
        $arr_days = array();
        if ($select_title != '' && $short_narration == '') {
            $sql = "SELECT * FROM `tblmindjumblepdf` WHERE `title_id` = '" . $select_title . "' AND status = '1'  ORDER BY `mind_jumble_pdf_add_date` ASC";
        } elseif ($select_title != '' && $short_narration != '') {
            $sql = "SELECT * FROM `tblmindjumblepdf` WHERE `title_id` = '" . $select_title . "' AND `short_narration` = '" . $short_narration . "' AND status = '1'  ORDER BY `mind_jumble_pdf_add_date` ASC";
        }
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $days = ($row['day']);
                $arr_days = explode(",", $days);
                if (in_array($day, $arr_days)) {
                    array_push($arr_pdf_id, $row['mind_jumble_pdf_id']);
                    array_push($arr_pdf, stripslashes($row['pdf']));
                    array_push($arr_pdf_title, stripslashes($row['pdf_title']));
                    array_push($arr_credit, stripslashes($row['credit']));
                    array_push($arr_credit_url, stripslashes($row['credit_url']));
                    array_push($arr_status, stripslashes($row['status']));
                }
            }
        }
        return array($arr_pdf_id, $arr_pdf, $arr_pdf_title, $arr_credit, $arr_credit_url, $arr_status);
    }
    public function GetCommentCode($select_title, $short_narration) {
        list($arr_comment_id, $arr_parent_comment_id, $arr_comment, $arr_user_id, $arr_comment_type, $arr_comment_add_date) = $this->getallcomment($select_title, $short_narration);
        if (count($arr_comment_id) > 0) {
            $output.= '<table border="0" width="100%" cellpadding="0" cellspacing="0">

					<tr>

					<td align="left" valign="top" class="Header_brown"><strong>Recent Comments</strong></td>

					</tr>

					</table><div class="commentbox">

					<table border="0" width="100%" cellpadding="0" cellspacing="0">';
            for ($i = 0;$i < count($arr_comment_id);$i++) {
                $name = $this->getUserFullNameById($arr_user_id[$i]);
                $time = strtotime($arr_comment_add_date[$i]);
                $time = $time + 19800;
                $day = date('d-M-Y h:i A', $time);
                $date1 = date('d-m-y', $time);
                $date2 = date('d-m-y');
                $diff = abs(strtotime($date2) - strtotime($date1));
                $years = floor($diff / (365 * 60 * 60 * 24));
                $months = floor(($diff - $years * 365 * 60 * 60 * 24) / (30 * 60 * 60 * 24));
                $days = floor(($diff - $years * 365 * 60 * 60 * 24 - $months * 30 * 60 * 60 * 24) / (60 * 60 * 24));
                $t1 = $day;
                $total = timeDiff($t1, date("Y-m-d H:i:s"));
                $len_comment = strlen($arr_comment[$i]);
                $first_comment = substr($arr_comment[$i], 0, 60);
                $last_comment = substr($arr_comment[$i], 61, $len_comment);
                $comment = $first_comment . '<br/>' . $last_comment;
                $output.= '<tr>

							   		<td width="50%" align="left" valign="top">' . $comment . '</td>';
                $output.= '	<td width="20%" align="right" valign="top" class="footer">' . $name . '</td>';
                $output.= ' <td width="30%" align="right" valign="top" class="footer">' . $day . '<br/>' . $total . '</td></tr>';
                $output.= '<tr>

						<td height="25"  align="left" valign="top">&nbsp;</td></tr>';
            }
            $output.= '</table></div>';
        }
        return $output;
    }
    function getallcomment($select_title, $short_narration) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $arr_comment_id = array();
        $arr_parent_comment_id = array();
        $arr_comment = array();
        $arr_user_id = array();
        $arr_comment_type = array();
        $arr_comment_add_date = array();
        if ($select_title != '' && $short_narration == '') {
            $sql = "SELECT * FROM `tblcomments` WHERE `select_title` = '" . $select_title . "' AND `status` = '1'  ORDER BY `comment_add_date` DESC";
        } elseif ($select_title != '' && $short_narration != '') {
            $sql = "SELECT * FROM `tblcomments` WHERE `select_title` = '" . $select_title . "' AND `short_narration` = '" . $short_narration . "' AND `status` = '1' ORDER BY `comment_add_date` DESC";
        }
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                array_push($arr_comment_id, stripslashes($row['comment_id']));
                array_push($arr_parent_comment_id, stripslashes($row['parent_comment_id']));
                array_push($arr_comment, stripslashes($row['comment']));
                array_push($arr_user_id, stripslashes($row['user_id']));
                array_push($arr_comment_type, stripslashes($row['comment_type']));
                array_push($arr_comment_add_date, stripslashes($row['comment_add_date']));
            }
        }
        return array($arr_comment_id, $arr_parent_comment_id, $arr_comment, $arr_user_id, $arr_comment_type, $arr_comment_add_date);
    }
    public function is_user($email) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $temp_arr = array();
        $sql = "SELECT * FROM `tblusers` WHERE `email` = '" . $email . "'";
        //echo "<br>Testkk sql = ".$sql;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            return true;
        } else {
            return false;
        }
    }
    public function is_refered($email) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $sql = "SELECT * FROM `tblreferal` WHERE `email_id` = '" . $email . "'";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            return true;
        } else {
            return false;
        }
    }
    public function addreferafriend($tdata) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $id = 0;
        $sql = "INSERT INTO `tblreferal` (`email_id` ,`user_id`, `name` ,`message`,`status`) 

			VALUES ('" . addslashes($tdata['email']) . "','" . addslashes($tdata['user_id']) . "','" . addslashes($tdata['user_name']) . "','" . addslashes($tdata['message']) . "','0')";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $id = $DBH->lastInsertId();
        }
        return $id;
    }
    public function chkIfRequestAlreadySentByUser($pro_user_id, $user_email) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return = false;
        $sql = "SELECT * FROM `tbladviserreferrals` WHERE `user_id` = '" . $pro_user_id . "' AND `user_email` = '" . $user_email . "' AND `invite_by_user` = '1' ";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            if ($row['request_status'] != '2') {
                $return = true;
            }
        }
        return $return;
    }
    public function chkProEmailExists($email) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return = false;
        $sql = "SELECT * FROM `tblprofusers` WHERE `email` = '" . $email . "'";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function chkIfUserIsAdvisersReferralsChkByProEmail($pro_user_email, $user_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return = false;
        $pro_user_id = $this->getProUserId($pro_user_email);
        $user_email = $this->getUserEmailById($user_id);
        //$sql = "SELECT * FROM `tbladviserreferrals` WHERE `user_id` = '" . $pro_user_id . "' AND `user_email` = '" . $user_email . "' AND `request_status` = '1'";
        //update by ample 06-03-20
        $sql = "SELECT * FROM `tbladviserreferrals` WHERE `vendor_id` = '" . $pro_user_id . "' AND `user_email` = '" . $user_email . "' AND `request_status` = '1'";
        //echo '<br>'.$sql;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function getProUserId($email) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $pro_user_id = 0;
        $sql = "SELECT * FROM `tblvendors` WHERE `vendor_email` = '" . $email . "' AND `vendor_status` = '1'";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $pro_user_id = $row['vendor_id'];
        }
        return $pro_user_id;
    }
    //Update by ample
    public function addUsersReferral($pro_user_id, $user_email, $user_name, $message, $new_user, $invite_by_user, $referral_status="0") {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $ar_id = 0;
        //commented by rahul
        // $sql = "INSERT INTO `tbladviserreferrals`(`user_id`,`user_email`,`user_name`,`message`,`request_status`,`new_user`,`invite_by_user`,`referral_status`) VALUES ('" . addslashes($pro_user_id) . "','" . addslashes($user_email) . "','" . addslashes($user_name) . "','" . addslashes($message) . "','0','" . addslashes($new_user) . "','" . addslashes($invite_by_user) . "','" . addslashes($referral_status) . "')";
        // $STH = $DBH->prepare($sql);
        // $STH->execute();

        $sql = "INSERT INTO tbladviserreferrals
        (user_id, user_email, user_name, message, request_status, new_user, invite_by_user, referral_status, vendor_id,referral_accept_date,request_accept_date,report_id,permission_type,last_status_updated_by_adviser) 
        VALUES (:user_id, :user_email, :user_name, :message, 0, :new_user, :invite_by_user, :referral_status, :vendor_id, :referral_accept_date,:request_accept_date,:report_id,:permission_type,:last_status_updated_by_adviser)";

        $stmt = $DBH->prepare($sql);
        $stmt->execute([
            ':user_id'         => $pro_user_id,
            ':user_email'      => $user_email,
            ':user_name'       => $user_name,
            ':message'         => $message,
            ':new_user'        => $new_user,
            ':invite_by_user'  => $invite_by_user,
            ':referral_status' => $referral_status ?? NULL,
            ':vendor_id'       => $vendor_id ?? NULL, 
            ':referral_accept_date' => NULL,
            ':request_accept_date' => '0000-00-00',
            ':report_id' => NULL,
            ':permission_type' => NULL,
            ':last_status_updated_by_adviser' => NULL,
        ]);

        //table altered by rahul
        //ALTER TABLE `tbladviserreferrals` CHANGE `vendor_id` `vendor_id` INT(200) NULL DEFAULT NULL, CHANGE `request_sent_date` `request_sent_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, CHANGE `referral_accept_date` `referral_accept_date` DATETIME NULL DEFAULT NULL, CHANGE `referral_status` `referral_status` INT(1) NULL DEFAULT NULL, CHANGE `report_id` `report_id` VARCHAR(250) CHARACTER SET latin1 COLLATE latin1_swedish_ci NULL DEFAULT NULL, CHANGE `permission_type` `permission_type` TEXT CHARACTER SET latin1 COLLATE latin1_swedish_ci NULL DEFAULT NULL, CHANGE `last_status_updated_by_adviser` `last_status_updated_by_adviser` INT(1) NULL DEFAULT NULL;


        if ($stmt->rowCount() > 0) {
            $ar_id = $DBH->lastInsertId();
        }
        return $ar_id;
    }
    public function get_all_refered($user_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $temp_arr = array();
        $sql = "SELECT * FROM `tblreferal` WHERE `user_id` = '" . $user_id . "'";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $temp_arr[] = $row;
            }
        }
        return $temp_arr;
    }
    public function getUserRegistrationDateByEmail($email) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $user_add_date = '';
        $sql = "SELECT * FROM `tblusers` WHERE `email` = '" . $email . "'";
        //echo "<br>Testkk sql = ".$sql;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $user_add_date = date('d/m/Y h:i:s A', strtotime($row['user_add_date']));
        }
        return $user_add_date;
    }
    public function getAllUserAdviserReferrals($user_id, $pro_user_id, $status, $invite_start_date, $invite_end_date, $status_start_date, $status_end_date) {
        // date formet update by ample 24-10-19
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $temp_arr = array();
        $user_email = $this->getUserEmailById($user_id);
        if ($pro_user_id != '') {
            $puemail = $this->getProUserEmailById($pro_user_id);
            $str_sql_pro_user_id1 = " AND `user_email` = '" . $puemail . "' ";
            $str_sql_pro_user_id2 = " AND `vendor_id` = '" . $pro_user_id . "' ";
        } else {
            $str_sql_pro_user_id1 = "";
            $str_sql_pro_user_id2 = "";
        }
        if ($status != '') {
            if ($status == '1') {
                $str_sql_status1 = " AND `request_status` = '1' ";
                $str_sql_status2 = " AND `request_status` = '1' ";
            } elseif ($status == '2') {
                $str_sql_status1 = " AND `request_status` = '2' ";
                $str_sql_status2 = " AND `request_status` = '2' ";
            } elseif ($status == '3') {
                $str_sql_status1 = " AND `request_status` = '3' ";
                $str_sql_status2 = " AND `request_status` = '3' ";
            } else {
                $str_sql_status1 = " AND `request_status` = '0' ";
                $str_sql_status2 = " AND `request_status` = '0' ";
            }
        } else {
            $str_sql_status1 = "";
            $str_sql_status2 = "";
        }
        if ($invite_start_date == '' && $invite_end_date == '') {
            $str_sql_invite_date1 = "";
            $str_sql_invite_date2 = "";
        } else {
            // date formet update by ample 24-10-19
            if ($invite_start_date != '' && $invite_end_date == '') {
                $invite_start_date = str_replace('/', '-', $invite_start_date);
                $str_sql_invite_date1 = " AND `request_sent_date` = '" . date('Y-m-d', strtotime($invite_start_date)) . "' ";
                $str_sql_invite_date2 = " AND `request_sent_date` = '" . date('Y-m-d', strtotime($invite_start_date)) . "' ";
            } elseif ($invite_start_date == '' && $invite_end_date != '') {
                $invite_end_date = str_replace('/', '-', $invite_end_date);
                $invite_end_date = date('Y-m-d', strtotime('+1 day', strtotime($invite_end_date)));
                $str_sql_invite_date1 = " AND `request_sent_date` = '" . date('Y-m-d', strtotime($invite_end_date)) . "' ";
                $str_sql_invite_date2 = " AND `request_sent_date` = '" . date('Y-m-d', strtotime($invite_end_date)) . "' ";
            } else {
                $invite_start_date = str_replace('/', '-', $invite_start_date);
                $invite_end_date = str_replace('/', '-', $invite_end_date);
                $invite_end_date = date('Y-m-d', strtotime('+1 day', strtotime($invite_end_date)));
                $str_sql_invite_date1 = " AND `request_sent_date` >= '" . date('Y-m-d', strtotime($invite_start_date)) . "' AND `request_sent_date` <= '" . date('Y-m-d', strtotime($invite_end_date)) . "' ";
                $str_sql_invite_date2 = " AND `request_sent_date` >= '" . date('Y-m-d', strtotime($invite_start_date)) . "' AND `request_sent_date` <= '" . date('Y-m-d', strtotime($invite_end_date)) . "' ";
            }
        }
        // date formet update by ample 24-10-19
        if ($status_start_date == '' && $status_end_date == '') {
            $str_sql_status_date1 = "";
            $str_sql_status_date2 = "";
        } else {
            if ($status_start_date != '' && $status_end_date == '') {
                $status_start_date = str_replace('/', '-', $status_start_date);
                $str_sql_status_date1 = " AND `request_accept_date` = '" . date('Y-m-d', strtotime($status_start_date)) . "' ";
                $str_sql_status_date2 = " AND `request_accept_date` = '" . date('Y-m-d', strtotime($status_start_date)) . "' ";
            } elseif ($status_start_date == '' && $status_end_date != '') {
                $status_end_date = str_replace('/', '-', $status_end_date);
                $status_end_date = date('Y-m-d', strtotime('+1 day', strtotime($status_end_date)));
                $str_sql_status_date1 = " AND `request_accept_date` = '" . date('Y-m-d', strtotime($status_end_date)) . "' ";
                $str_sql_status_date2 = " AND `request_accept_date` = '" . date('Y-m-d', strtotime($status_end_date)) . "' ";
            } else {
                $status_start_date = str_replace('/', '-', $status_start_date);
                $status_end_date = str_replace('/', '-', $status_end_date);
                $status_end_date = date('Y-m-d', strtotime('+1 day', strtotime($status_end_date)));
                $str_sql_status_date1 = " AND `request_accept_date` >= '" . date('Y-m-d', strtotime($status_start_date)) . "' AND `request_accept_date` <= '" . date('Y-m-d', strtotime($status_end_date)) . "' ";
                $str_sql_status_date2 = " AND `request_accept_date` >= '" . date('Y-m-d', strtotime($status_start_date)) . "' AND `request_accept_date` <= '" . date('Y-m-d', strtotime($status_end_date)) . "' ";
            }
        }
        //update vy ample 24-10-19
        $sql = "SELECT * FROM `tbladviserreferrals` WHERE " . "(`user_id` = '" . $user_id . "' " . $str_sql_pro_user_id1 . " " . $str_sql_status1 . " " . $str_sql_invite_date1 . " " . $str_sql_status_date1 . " AND `invite_by_user` = '1') " . "OR (`user_email` = '" . $user_email . "'  " . $str_sql_pro_user_id2 . " " . $str_sql_status2 . " " . $str_sql_invite_date2 . " " . $str_sql_status_date2 . " AND `invite_by_user` = '0') " . " ORDER BY request_sent_date";
        // echo $invite_start_date;  echo "------";  echo $invite_end_date;  echo "<br>";
        // echo  $sql;
        //  die('zddf');
        //echo '<br>'.$sql;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $temp_arr[] = $row;
            }
        }
        return $temp_arr;
    }
    public function getProUserEmailById($pro_user_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $email = '';
        $sql = "SELECT * FROM `tblvendors` WHERE `vendor_id` = '" . $pro_user_id . "'";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $email = $row['vendor_email'];
        }
        return $email;
    }
    public function getUsersAdviserOptions($user_id, $pro_user_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $option_str = '';
        $email = $this->getUserEmailById($user_id);
        $sql = "SELECT tar.* , tpu.vendor_name as name FROM `tbladviserreferrals` AS tar " . "LEFT JOIN `tblvendors` AS tpu ON tar.user_email = tpu.vendor_email " . "WHERE (tar.user_email = '" . $email . "' OR tar.vendor_id = '" . $user_id . "' ) AND tar.invite_by_user = '0' AND tar.request_status = '1'  " . "ORDER BY tpu.vendor_name ASC";
        //echo $sql;
        //echo '<br>';
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                if ($row['vendor_id'] == $pro_user_id) {
                    $sel = ' selected ';
                } else {
                    $sel = '';
                }
                $option_str.= '<option value="' . $row['vendor_id'] . '" ' . $sel . '>' . stripslashes($row['name']) . '</option>';
            }
        }
        //        $sql = "SELECT tar.*, tpu.vendor_name as name, tpu.vendor_id AS puser_id FROM `tbladviserreferrals` AS tar "
        //
        //                . "LEFT JOIN `tblvendors` AS tpu ON tar.user_email = tpu.vendor_email  "
        //
        //                . "WHERE (tar.user_email = '".$email."' OR tar.pro_user_id = '".$user_id."' ) AND tar.invite_by_user = '1' AND tar.request_status = '1' "
        //
        //                . "ORDER BY tpu.vendor_name ASC";
        //echo $sql;
        //        $STH2 = $DBH->prepare($sql);
        //        $STH2->execute();
        //	if($STH2->rowCount() > 0)
        //	{
        //
        //		while($row = $STH2->fetch(PDO::FETCH_ASSOC) )
        //
        //		{
        //			if($row['puser_id'] == $pro_user_id)
        //			{
        //				$sel = ' selected ';
        //			}
        //			else
        //			{
        //				$sel = '';
        //			}
        //			$option_str .= '<option value="'.$row['puser_id'].'" '.$sel.'>'.stripslashes($row['name']).'</option>';
        //		}
        //	}
        return $option_str;
    }
    public function getProUserFullNameById($pro_user_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return = false;
        $name = '';
        $sql = "SELECT * FROM `tblvendors` WHERE `vendor_id` = '" . $pro_user_id . "'";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $return = true;
            $name = stripslashes($row['vendor_name']);
        }
        return $name;
    }
    public function getMyFavList($user_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        //echo $_SESSION['user_id'];
        $arr_ufs_id = array();
        $arr_page_id = array();
        $arr_sc_id = array();
        $arr_ufs_note = array();
        $arr_ufs_cat_id = array();
        $arr_ufs_priority = array();
        $arr_ufs_add_date = array();
        $sql = "SELECT * FROM `tblusersfavscrolling` AS TA

			LEFT JOIN `tblpages` TS ON TA.page_id = TS.page_id

			WHERE `user_id` = '" . $user_id . "' AND TA.ufs_status = '1' ORDER BY TS.menu_title ASC,TA.ufs_add_date DESC";
        //echo $sql;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                array_push($arr_ufs_id, $row['ufs_id']);
                array_push($arr_page_id, stripslashes($row['page_id']));
                array_push($arr_sc_id, stripslashes($row['sc_id']));
                array_push($arr_ufs_note, stripslashes($row['ufs_note']));
                array_push($arr_ufs_cat_id, stripslashes($row['ufs_cat_id']));
                array_push($arr_ufs_priority, stripslashes($row['ufs_priority']));
                array_push($arr_ufs_add_date, stripslashes($row['ufs_add_date']));
            }
        }
        return array($arr_ufs_id, $arr_page_id, $arr_sc_id, $arr_ufs_note, $arr_ufs_cat_id, $arr_ufs_priority, $arr_ufs_add_date);
    }
    public function search_myfavlist($user_id, $page_id, $start_date, $end_date, $ufs_cat_id, $ufs_priority ,$search="") {
        list($arr_ufs_id, $arr_page_id, $arr_menu_title, $arr_sc_id, $arr_ufs_note, $arr_ufs_cat_id, $arr_ufs_cat, $arr_ufs_priority, $arr_ufs_add_date, $arr_user_name, $arr_ufs_type) = $this->GetMyFavListDetails($user_id, $page_id, $start_date, $end_date, $ufs_cat_id, $ufs_priority ,$search="");


        $output.= '<table width="100%" border="1" align="center" cellpadding="5" cellspacing="1" bgcolor="#CCCCCC" class="table table-bordered table-striped">



                    <tr class="active">



                        <td width="2.5%"  align="center" valign="middle" bgcolor="#FFFFFF"><strong>Sr No</strong></td>



                        <!--<td width="10%"  align="center" valign="middle" bgcolor="#FFFFFF"><strong>Page Name</strong></td>-->



                        <!--<td width="10%"  align="center" valign="middle" bgcolor="#FFFFFF"><strong>Window Title</strong></td>-->



                        <td width="10%"  align="center" valign="middle" bgcolor="#FFFFFF"><strong>Title</strong></td>



                        <td width="20%"  align="center" valign="middle" bgcolor="#FFFFFF" style="min-width: 175px;"><strong>Content</strong></td>



                        <td width="20%"  align="center" valign="middle" bgcolor="#FFFFFF"><strong>Note</strong></td>



                        <td width="10%"  align="center" valign="middle" bgcolor="#FFFFFF"><strong>Category</strong></td>



                        <td width="10%"  align="center" valign="middle" bgcolor="#FFFFFF"><strong>Priority</strong></td>



                        <td width="10%"  align="center" valign="middle" bgcolor="#FFFFFF"><strong>Date</strong></td>



                        <td width="7.5%"  align="center" valign="middle" bgcolor="#FFFFFF" style="min-width: 100px;"> </td>


                    </tr>';
        if (count($arr_ufs_id) > 0) {
            for ($i = 0, $j = 1;$i < count($arr_ufs_id);$i++, $j++) {

                if ($arr_ufs_type[$i] == '2') {
                    list($sc_title, $str_content, $rss_feed_item_link, $rss_feed_item_json) = $this->getRssFeedItemDetails($arr_sc_id[$i]);
                }
                else
                if ($arr_ufs_type[$i] == '1') {
                    $sw_header = '';
                    list($sc_title, $str_content, $credit_line, $credit_line_url) = $this->getSolutionItemDetails($arr_sc_id[$i]);
                } else {
                    $sw_header = '';
                    $sc_title = '';
                    $str_content = '';
                    list($sw_header, $sc_title, $sc_content_type, $sc_content, $sc_image, $sc_video, $sc_flash, $rss_feed_item_id) = $this->getScrollingContentDetailsForFavList($arr_sc_id[$i]);
                    if ($sc_content_type == 'image') {
                        $str_content = '<img border="0" width="50" src="' . SITE_URL . '/uploads/' . $sc_image . '" >';
                    } elseif ($sc_content_type == 'video') {
                        $str_content = '<iframe width="50" height="50" src="' . getBannerString($sc_video) . '" frameborder="0" allowfullscreen></iframe>';
                    } elseif ($sc_content_type == 'flash') {
                        $str_content = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=7,0,19,0" width="50" height="50"><param name="movie" value="' . SITE_URL . "/uploads/" . $sc_flash . '" /><param name="quality" value="high" /><embed src="' . SITE_URL . "/uploads/" . $sc_flash . '" quality="high" pluginspage="http://www.macromedia.com/go/getflashplayer" type="application/x-shockwave-flash" width="50" height="50"></embed></object>';
                    } elseif ($sc_content_type == 'rss') {
                        list($rss_feed_item_title, $rss_feed_item_desc, $rss_feed_item_link, $rss_feed_item_json) = $this->getRssFeedItemDetails($rss_feed_item_id);
                        $str_content = $rss_feed_item_title;
                    } else {
                        $str_content = $sc_content;
                    }

                }
                $date = date('d-M-Y', strtotime($arr_ufs_add_date[$i]));
                // if ($arr_ufs_priority[$i] == '1') {
                //     $priority = 'Yes';
                // } else {
                //     $priority = 'No';
                // }
                //if($arr_ufs_cat_id[$i] > 0)
                //{
                $ufs_cat = $arr_ufs_cat[$i];
                //}
                //else
                //{
                //$ufs_cat = '';
                //}
                $output.= '	<tr>



                                    <td  align="center" valign="top" bgcolor="#FFFFFF">' . $j . '</td>



                                    <!--<td  align="center" valign="top" bgcolor="#FFFFFF">' . $arr_menu_title[$i] . '</td>-->



                                    <!--<td  align="center" valign="top" bgcolor="#FFFFFF">' . $sw_header . '</td>-->



                                    <td  align="center" valign="top" bgcolor="#FFFFFF">' . $sc_title . '</td>



                                    <td  align="center" valign="top" bgcolor="#FFFFFF">' . $str_content . '</td>



                                    <td  align="center" valign="top" bgcolor="#FFFFFF">' . $arr_ufs_note[$i] . '</td>



                                    <td  align="center" valign="top" bgcolor="#FFFFFF">' . $ufs_cat . '</td>



                                    <td  align="center" valign="top" bgcolor="#FFFFFF">' . $this->getFavCategoryNameRamakant($arr_ufs_priority[$i]) . '</td>



                                    <td  align="center" class="footer" valign="top" bgcolor="#FFFFFF">' . $date . '</td>


                                    <td  align="center" valign="top" bgcolor="#FFFFFF" class="footer">


                                    <button class="btn btn-warning btn-sm" onclick="Update_FavList(\'' . $arr_ufs_id[$i] . '\')"><i class="fa fa-pencil" aria-hidden="true"></i></button>
					

                                    <button class="btn btn-danger btn-sm" onclick="Delete_MyFavItem(\'' . $arr_ufs_id[$i] . '\')"><i class="fa fa-trash-o" aria-hidden="true"></i></button>

                                    </td>



				</tr>';
            }
        } else {
            $output.= '	<tr style="background:#FFFFFF;"><td align="center" colspan="11">No Record Found</td></tr>';
        }
        $output.= '</table>';
        return $output;
    }
    public function GetMyFavListDetails($user_id, $page_id, $start_date, $end_date, $ufs_cat_id, $ufs_priority ,$search="") {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $arr_ufs_id = array();
        $arr_page_id = array();
        $arr_menu_title = array();
        $arr_sc_id = array();
        $arr_ufs_note = array();
        $arr_ufs_cat_id = array();
        $arr_ufs_cat = array();
        $arr_ufs_priority = array();
        $arr_ufs_add_date = array();
        $arr_user_name = array();
        $arr_ufs_type = array();
        if ($page_id != '') {
            $str_page_id = " AND TA.page_id = '" . $page_id . "' ";
        } else {
            $str_page_id = "";
        }
        if ($ufs_cat_id != '') {
            $str_ufs_cat_id = " AND TA.ufs_cat_id = '" . $ufs_cat_id . "' ";
        } else {
            $str_ufs_cat_id = "";
        }
        if ($ufs_priority != '') {
            $str_ufs_priority = " AND TA.ufs_priority = '" . $ufs_priority . "' ";
        } else {
            $str_ufs_priority = "";
        }
        if ($user_id != '') {
            $str_user_id = " AND TA.user_id = '" . $user_id . "' ";
        } else {
            $str_user_id = "";
        }
        $sql = "SELECT TA.* , TS.menu_title , TFC.fav_cat , TU.name FROM `tblusersfavscrolling` AS TA



			LEFT JOIN `tblpages` TS ON TA.page_id = TS.page_id



			LEFT JOIN `tblfavcategory` TFC ON TA.ufs_cat_id = TFC.fav_cat_id



			LEFT JOIN `tblusers` TU ON TA.user_id = TU.user_id



			WHERE DATE(TA.ufs_add_date) >= '" . date('Y-m-d', strtotime($start_date)) . "' AND DATE(TA.ufs_add_date) <= '" . date('Y-m-d', strtotime($end_date)) . "' " . $str_user_id . " " . $str_page_id . " " . $str_ufs_cat_id . " " . $str_ufs_priority . " AND TA.ufs_status = '1' ORDER BY TA.ufs_add_date DESC";

        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                array_push($arr_ufs_id, $row['ufs_id']);
                array_push($arr_page_id, stripslashes($row['page_id']));
                array_push($arr_menu_title, stripslashes($row['menu_title']));
                array_push($arr_sc_id, stripslashes($row['sc_id']));
                array_push($arr_ufs_note, stripslashes($row['ufs_note']));
                array_push($arr_ufs_cat_id, stripslashes($row['ufs_cat_id']));
                array_push($arr_ufs_cat, stripslashes($row['fav_cat']));
                array_push($arr_ufs_priority, stripslashes($row['ufs_priority']));
                array_push($arr_ufs_add_date, stripslashes($row['ufs_add_date']));
                array_push($arr_user_name, stripslashes($row['name']));
                array_push($arr_ufs_type, stripslashes($row['ufs_type']));
            }
        }
        return array($arr_ufs_id, $arr_page_id, $arr_menu_title, $arr_sc_id, $arr_ufs_note, $arr_ufs_cat_id, $arr_ufs_cat, $arr_ufs_priority, $arr_ufs_add_date, $arr_user_name, $arr_ufs_type);
    }
    public function getSolutionItemDetails($sol_item_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $box_title = '';
        $box_desc = '';
        $credit_line = '';
        $credit_line_url = '';
        $sql = "SELECT * FROM `tblsolutionitems` WHERE sol_item_id = '" . $sol_item_id . "' ";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $box_title = stripslashes($row['topic_subject']);
            $box_desc = stripslashes($row['narration']);
            $credit_line = stripslashes($row['credit']);
            $credit_line_url = stripslashes($row['credit_url']);
        }
        return array($box_title, $box_desc, $credit_line, $credit_line_url);
    }
    public function getFavCategoryOptions($fav_cat_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $option_str = '';
        $sql = "SELECT * FROM `tblfavcategory` WHERE `fav_cat_type_id` IN (1,2) AND `fav_cat_status` = '1' AND `fav_cat_deleted` = '0' ORDER BY `fav_cat` ASC";
        //echo $sql;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                if ($row['fav_cat_id'] == $fav_cat_id) {
                    $sel = ' selected ';
                } else {
                    $sel = '';
                }
                $option_str.= '<option value="' . $row['fav_cat_id'] . '" ' . $sel . '>' . stripslashes($row['fav_cat']) . '</option>';
            }
        }
        return $option_str;
    }
    public function getScrollingWindowsPagesOptions($page_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $option_str = '';
        $sql = "SELECT * FROM `tblpages` WHERE `adviser_panel` = '0' AND `vender_panel` = '0' AND `show_in_manage_menu` = '1' AND `show_in_list` = '1' ORDER BY `menu_title` ASC";
        //echo $sql;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                if ($row['page_id'] == $page_id) {
                    $sel = ' selected ';
                } else {
                    $sel = '';
                }
                $option_str.= '<option value="' . $row['page_id'] . '" ' . $sel . '>' . stripslashes($row['menu_title']) . '</option>';
            }
        }
        return $option_str;
    }
    public function getMyLibrary($user_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $arr_library_id = array();
        $arr_page_id = array();
        $arr_values = array();
        $arr_library_add_date = array();
        $arr_note = array();
        $sql = "SELECT * FROM `tbllibrary` AS TA



				LEFT JOIN `tblpages` TS ON TA.page_id = TS.page_id



				 WHERE `user_id` = '" . $user_id . "' AND TA.status = '1' ORDER BY TA.library_add_date DESC";
        //echo $sql;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                array_push($arr_library_id, $row['library_id']);
                array_push($arr_page_id, stripslashes($row['page_id']));
                array_push($arr_values, stripslashes($row['values']));
                array_push($arr_library_add_date, stripslashes($row['library_add_date']));
                array_push($arr_note, stripslashes($row['note']));
            }
        }
        return array($arr_library_id, $arr_page_id, $arr_values, $arr_library_add_date, $arr_note);
    }
     //update by ample 14-08-20
    public function GetMyLibrary_Details($user_id, $search, $start_date, $end_date, $priority) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
            $str_search="";
            if($search)
            {
                $str_search=" AND (TA.category LIKE '%".$search."%' OR TA.title LIKE '%".$search."%' OR TA.note LIKE '%".$search."%')";
            }
            $str_priority="";
            if ($priority) 
            {
                $str_priority = " AND TA.priority = '" . $priority . "' ";
            } 
        
            $sql = "SELECT * FROM `tblfavlibrary` AS TA

				WHERE `user_id` = '" . $user_id . "' AND DATE(TA.add_date) >= '" . date('Y-m-d', strtotime($start_date)) . "' AND DATE(TA.add_date) <= '" . date('Y-m-d', strtotime($end_date)) . "' AND  TA.status = '1' ".$str_search." ".$str_priority." AND TA.data_type='Library' ORDER BY TA.add_date DESC";
        
        //echo $sql;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]=$row;
            }
        }
        return $data;
    }
    //copy by ample 06-10-20
    public function GetMyFavourite_Details($user_id, $search, $start_date, $end_date, $priority) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
            $str_search="";
            if($search)
            {
                $str_search=" AND (TA.category LIKE '%".$search."%' OR TA.title LIKE '%".$search."%' OR TA.note LIKE '%".$search."%')";
            }
            $str_priority="";
            if ($priority) 
            {
                $str_priority = " AND TA.priority = '" . $priority . "' ";
            }
        
            $sql = "SELECT * FROM `tblfavlibrary` AS TA

                WHERE `user_id` = '" . $user_id . "' AND DATE(TA.add_date) >= '" . date('Y-m-d', strtotime($start_date)) . "' AND DATE(TA.add_date) <= '" . date('Y-m-d', strtotime($end_date)) . "' AND  TA.status = '1' ".$str_search." ".$str_priority." AND TA.data_type='Favourite' ORDER BY TA.add_date DESC";
        
        //echo $sql;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]=$row;
            }
        }
        return $data;
    }
    public function get_PageName($page_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $page_name = '';
        $sql = "SELECT * FROM `tblpages` WHERE  `page_id` = '" . $page_id . "' ";
        //echo $sql;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $page_name = stripslashes($row['page_name']);
        }
        return $page_name;
    }
    public function get_UserReportname($user) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $page_name = '';
        $sql = "SELECT `report_name`,`page_cat_id` FROM `tbl_recordshow_dropdown` WHERE  `enduse` = '" . $user . "' AND pag_cat_status=1 AND is_deleted=0";
        //update sql by ample 13-04-20 (status & delete)
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $report_name = stripslashes($row['report_name']);
                $report_id = stripslashes($row['page_cat_id']);
                $arr_va[] = array($report_name, $report_id);
            }
        }
        return $arr_va;
    }
    public function get_library_pdf($page_id, $values) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $pdf = '';
        if ($page_id == '44') {
            $sql = "SELECT * FROM `tblmindjumblepdf` WHERE mind_jumble_pdf_id =  '" . $values . "'";
        } elseif ($page_id == '10') {
            $sql = "SELECT * FROM `tblangerventpdf` WHERE anger_vent_pdf_id =  '" . $values . "'";
        } elseif ($page_id == '9') {
            $sql = "SELECT * FROM `tblstressbusterpdf` WHERE stress_buster_pdf_id = '" . $values . "'";
        } elseif ($page_id == '127') {
            $sql = "SELECT * FROM `tblsolutionitems` WHERE sol_item_id = '" . $values . "'";
        }
        //echo $sql.'<br/>';
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            if ($page_id == '127') {
                $pdf = stripslashes($row['sol_box_banner']);
                $pdf_title = stripslashes($row['sol_box_title']);
            } else {
                $pdf = stripslashes($row['pdf']);
                $pdf_title = stripslashes($row['pdf_title']);
            }
        }
        return array($pdf, $pdf_title);
    }
    public function Library_Feedback($page_id) {
        $temp_page_id = $this->getTemppageId($page_id);
        $output.= '<form id="frm_feedback" name="frm_feedback" method="post" action="#" enctype="multipart/form-data">



                             <input type="hidden" name="main_page_id" id="main_page_id" value="' . $main_page_id . '" />



							 <input type="hidden" name="hdn_p_id" id="hdn_p_id" value="" />



							 <table cellpadding="0" cellspacing="0" width="75%" align="center" border="0">



								<tr>



								  <td width="60%" align="left" valign="top">&nbsp;</td>



								  <td width="40%" align="left" valign="top">&nbsp;</td>



							  	</tr>



							  </table>				



                              <table cellpadding="0" cellspacing="0" width="75%" align="center" border="0">



									<tr>



										 <td width="60%" height="40" align="left" valign="top">Subject:</td>



										 <td width="40%" height="40" align="left" valign="top">



											<select id="temp_page_id" name="temp_page_id">



											  ' . $this->getFeeadBackPages($temp_page_id) . '



											 </select>



										</td>



                                   </tr>';
        if ($this->isLoggedIn()) {
            $user_id = $_SESSION['user_id'];
            $name = $this->getUserFullNameById($user_id);
            $email = $this->getUserEmailById($user_id);
            $readonly = ' readonly ';
        } else {
            $readonly = '';
        }
        $output.= '<tr>



						  <td width="60%" height="40" align="left" valign="top">Name:</td>



						  <td width="40%" height="40" align="left" valign="top">



								<input type="text" id="name" name="name"' . $readonly . 'value="' . $name . '"/>



						   </td>



					  </tr>



					  <tr>



						 <td width="60%" height="40" align="left" valign="top">Email:</td>



						 <td width="40%" height="40" align="left" valign="top">



							<input type="text" id="email" name="email"' . $readonly . ' value="' . $email . '"/>



						  </td>



					  </tr>



					  <tr>



						<td width="60%" height="110" align="left" valign="top">Feedback and Suggestions:</td>



						<td width="40%" height="110" align="left" valign="top">



							<textarea  cols="30" rows="5" type="text" id="feedback" name="feedback">' . $textarea . '</textarea>



						</td>



					 </tr>



					 <tr>



						<td width="60%" height="40" align="left" valign="middle">&nbsp;</td>



						<td width="40%" height="40" align="left" valign="middle"><input name="submit" type="button" class="button" id="submit" value="Submit"  onclick="GetFeedback()"/>



						</td>



					</tr>	



				  </table>



	



				</form>';
        return $output;
    }
    public function Make_Note($library_id, $page_id) {
        list($page_name, $pdf_title, $note) = $this->Make_Note_Details($library_id, $page_id);
        $output.= '<table border="0" width="75%" cellpadding="0" cellspacing="0">



						<tr>



							 <td width="30%" height="40" align="right" valign="top">&nbsp;</td>



							 <td width="5%" height="40" align="center" valign="top">&nbsp;</td>



							 <td width="45%" height="40" align="left" valign="top">&nbsp;</td>



						</tr>



						<tr>



							 <td width="30%" height="40" align="right" valign="top"><strong>Page Name</strong></td>



							 <td width="5%" height="40" align="center" valign="top"><strong>:</strong></td>



							 <td width="45%" height="40" align="left" valign="top">' . $page_name . '</td>



						</tr>



						<tr>



							 <td width="30%" height="40" align="right" valign="top"><strong>PDF:</strong></td>



							 <td width="5%" height="40" align="center" valign="top"><strong>:</strong></td>



							 <td width="45%" height="40" align="left" valign="top">' . $pdf_title . '</td>



						</tr>';
        $output.= '<tr>



						   <td width="30%" height="40" align="right" valign="top"><strong>Note:</strong></td>



						   <td width="5%" height="40" align="center" valign="top"><strong>:</strong></td>



						   <td width="45%" height="40" align="left" valign="top"><textarea  cols="30" rows="5" type="text" id="note" name="note">' . $note . '</textarea></td>



					   </tr>';
        $output.= '<tr>



							 <td width="30%" height="20" align="right" valign="top">&nbsp;</td>



							 <td width="5%" height="20" align="center" valign="top">&nbsp;</td>



							 <td width="45%" height="20" align="left" valign="top">&nbsp;</td>



						</tr>



						<tr>



						    <td width="30%" height="20" align="right" valign="top">&nbsp;</td>



						    <td width="5%" height="20" align="center" valign="top">&nbsp;</td>



						    <td width="45%" height="20" align="left" valign="top"><input class="btnNote" name="btnNote" id="btnNote"  type="button" value="Save" onclick="Save_Note(' . $library_id . ')" />



					   </tr>';
        $output.= '</table>';
        return $output;
    }
    public function Make_Note_Details($library_id, $page_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $page_name = '';
        $pdf_title = '';
        $note = '';
        if ($page_id == '44') {
            $sql = "SELECT * FROM `tbllibrary` AS TA

				LEFT JOIN `tblpages` TS ON TA.page_id = TS.page_id

				LEFT JOIN `tblmindjumblepdf` TP ON TA.values = TP.mind_jumble_pdf_id  

				WHERE `library_id` = '" . $library_id . "'";
        } elseif ($page_id == '10') {
            $sql = "SELECT * FROM `tbllibrary` AS TA

				LEFT JOIN `tblpages` TS ON TA.page_id = TS.page_id

				LEFT JOIN `tblangerventpdf` TP ON TA.values = TP.anger_vent_pdf_id  

				WHERE `library_id` = '" . $library_id . "'";
        } elseif ($page_id == '9') {
            $sql = "SELECT * FROM `tbllibrary` AS TA

				LEFT JOIN `tblpages` TS ON TA.page_id = TS.page_id

				LEFT JOIN `tblstressbusterpdf` TP ON TA.values = TP.stress_buster_pdf_id  

				WHERE `library_id` = '" . $library_id . "'";
        } elseif ($page_id == '127') {
            $sql = "SELECT * FROM `tbllibrary` AS TA

				LEFT JOIN `tblpages` TS ON TA.page_id = TS.page_id

				LEFT JOIN `tblsolutionitems` TP ON TA.values = TP.sol_item_id  

				WHERE `library_id` = '" . $library_id . "'";
        }
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $page_name = stripslashes($row['page_name']);
            if ($page_id == '127') {
                $pdf_title = stripslashes($row['sol_box_title']);
            } else {
                $pdf_title = stripslashes($row['pdf_title']);
            }
            $note = stripslashes($row['note']);
        }
        return array($page_name, $pdf_title, $note);
    }
    //update by ample 14-08-20
    public function search_library($user_id, $search, $start_date, $end_date, $priority) {
        $lib_data = $this->GetMyLibrary_Details($user_id, $search, $start_date, $end_date, $priority);
        $output.= '<table width="100%" border="1" align="center" cellpadding="5" cellspacing="1" bgcolor="#CCCCCC" class="table table-bordered table-striped">



                        		<tr class="active"> 



									<td width="10%"  align="center" valign="middle" bgcolor="#FFFFFF"><strong>Sr No</strong></td>


                                    <td width="10%"  align="center" valign="middle" bgcolor="#FFFFFF"><strong>Priority</strong></td>

			    					<td width="10%"  align="center" valign="middle" bgcolor="#FFFFFF"><strong>Category</strong></td>



               						<td width="20%"  align="center" valign="middle" bgcolor="#FFFFFF"><strong>Title</strong></td>


                                    <td width="10%"  align="center" valign="middle" bgcolor="#FFFFFF"><strong>Content</strong></td>


                                    <td width="20%"  align="center" valign="middle" bgcolor="#FFFFFF"><strong>Note</strong></td>



                                    <td width="10%"  align="center" valign="middle" bgcolor="#FFFFFF"><strong>Date</strong></td>


                                    <td width="10%"  align="center" valign="middle" bgcolor="#FFFFFF" style="min-width: 100px;"></td>



                          		</tr>';
        if (count($lib_data) > 0) {
            foreach ($lib_data as $key => $value) {
                    $key=$key+1;
                    $content='';
                    $link="";
                    $read_more="";
                    if($value['section']=='wsi')
                    {
                        $data=$this->getSolutionItemDetailMain($value['type_id']);
                        $content=$data['narration'];
                        $link='wsi_read_more.php?type=wsi&token='.base64_encode($value["type_id"]);
                    }
                    elseif ($value['section']=='wsi-mj') {
                        $data=$this->get_wsi_mindjumpble_data($value['type_id']);
                        $content=$data['short_narration'];
                        $link='wsi_read_more.php?type=mj&token='.base64_encode($value["type_id"]);

                    }
                    elseif ($value['section']=='wsi-rss') {
                        $data=$this->get_wsi_rss_feed_data($value['type_id']);
                        $content=$data['rss_feed_item_desc'];
                        $link='wsi_read_more.php?type=rss&token='.base64_encode($value["type_id"]);

                    }

                    $content=substr($content, 0, 51) .((strlen($content) > 51) ? '...' : '');

                    if(strlen($content) > 49 && !empty($link))
                    {
                        $read_more='<a href="'.$link.'" target="_blank">Read More</a>';
                    }

                $output.= '		   <tr>



                                  <td  align="center" valign="top" bgcolor="#FFFFFF">' . $key . '</td>


                                  <td  align="center" valign="top" bgcolor="#FFFFFF">' . $this->getFavCategoryNameRamakant($value['priority']) . '</td>



                                  <td  align="center" valign="top" bgcolor="#FFFFFF">' . $value['category'] . '</td>



                                   <td  align="center" valign="top" bgcolor="#FFFFFF">' . $value['title'] . '</td>

                                   <td  align="left" valign="top" bgcolor="#FFFFFF" class="footer">

                                        '.$content.'

                                        '.$read_more.'

                                   </td>

                                   <td  align="center" valign="top" bgcolor="#FFFFFF">' . $value['note'] . '</td>


                                  <td  align="center" class="footer" valign="top" bgcolor="#FFFFFF">' . date('d-M-Y', strtotime($value['add_date'])) . '</td>

                                 
                                <td  align="center" valign="top" bgcolor="#FFFFFF" class="footer">

                                    <button class="btn btn-warning btn-sm" onclick="Update_FavLibraryData(\'' . $value['id'] . '\')"><i class="fa fa-pencil" aria-hidden="true"></i></button>
                    

                                    <button class="btn btn-danger btn-sm" onclick="Delete_FavLibrary(\'' . $value['id'] . '\')"><i class="fa fa-trash-o" aria-hidden="true"></i></button>


                                   </td>

                               </tr>';
            }
        } else {
            $output.= '			<tr style="background:#FFFFFF;"><td align="center" colspan="7">No Record Found</td></tr>';
        }
        $output.= '</table>';
        return $output;
    }
    //copy by ample 06-10-20
    public function search_Favourite($user_id, $search, $start_date, $end_date, $priority) {
        $lib_data = $this->GetMyFavourite_Details($user_id, $search, $start_date, $end_date, $priority);
        $output.= '<table width="100%" border="1" align="center" cellpadding="5" cellspacing="1" bgcolor="#CCCCCC" class="table table-bordered table-striped">



                                <tr class="active"> 



                                    <td width="10%"  align="center" valign="middle" bgcolor="#FFFFFF"><strong>Sr No</strong></td>

                                    <td width="10%"  align="center" valign="middle" bgcolor="#FFFFFF"><strong>Priority</strong></td>

                                    <td width="10%"  align="center" valign="middle" bgcolor="#FFFFFF"><strong>Category</strong></td>



                                    <td width="20%"  align="center" valign="middle" bgcolor="#FFFFFF"><strong>Title</strong></td>


                                    <td width="10%"  align="center" valign="middle" bgcolor="#FFFFFF"><strong>URL</strong></td>


                                    <td width="20%"  align="center" valign="middle" bgcolor="#FFFFFF"><strong>Note</strong></td>



                                    <td width="10%"  align="center" valign="middle" bgcolor="#FFFFFF"><strong>Date</strong></td>


                                    <td width="10%"  align="center" valign="middle" bgcolor="#FFFFFF" style="min-width: 100px;"></td>



                                </tr>';
        if (count($lib_data) > 0) {
            foreach ($lib_data as $key => $value) {
                    $key=$key+1;
                $output.= '        <tr>



                                  <td  align="center" valign="top" bgcolor="#FFFFFF">' . $key . '</td>

                                    <td  align="center" valign="top" bgcolor="#FFFFFF">' . $this->getFavCategoryNameRamakant($value['priority']) . '</td>


                                  <td  align="center" valign="top" bgcolor="#FFFFFF">' . $value['category'] . '</td>



                                   <td  align="center" valign="top" bgcolor="#FFFFFF">' . $value['title'] . '</td>

                                   <td  align="left" valign="top" bgcolor="#FFFFFF" class="footer"><a href="' . SITE_URL . "/uploads/" . $value['file'] . '" target="_blank" class="body_link">' . $value['file'] . '</a></td>

                                   <td  align="center" valign="top" bgcolor="#FFFFFF">' . $value['note'] . '</td>


                                  <td  align="center" class="footer" valign="top" bgcolor="#FFFFFF">' . date('d-M-Y', strtotime($value['add_date'])) . '</td>

                                 
                                <td  align="center" valign="top" bgcolor="#FFFFFF" class="footer">

                                    <button class="btn btn-warning btn-sm" onclick="Update_FavLibraryData(\'' . $value['id'] . '\')"><i class="fa fa-pencil" aria-hidden="true"></i></button>
                    

                                    <button class="btn btn-danger btn-sm" onclick="Delete_FavLibrary(\'' . $value['id'] . '\')"><i class="fa fa-trash-o" aria-hidden="true"></i></button>


                                   </td>

                               </tr>';
            }
        } else {
            $output.= '         <tr style="background:#FFFFFF;"><td align="center" colspan="7">No Record Found</td></tr>';
        }
        $output.= '</table>';
        return $output;
    }
    public function getUserIdReset($email) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $user_id = 0;
        $sql = "SELECT * FROM `tblusers` WHERE `email` = '" . $email . "' AND `status` = '1'";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $user_id = $row['user_id'];
        }
        return $user_id;
    }
    public function getUserIdReset_vendor($email) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $user_id = 0;
        $sql = "SELECT * FROM `tblvendors` WHERE `vendor_email` = '" . $email . "' AND `vendor_status` = '1'";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $user_id = $row['vendor_id'];
        }
        return $user_id;
    }
    public function ResetPassword($password, $user_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return = false;
        $sql = "UPDATE `tblusers` set `password` = '" . md5($password) . "' where user_id = '" . $user_id . "'";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function ResetPassword_vendor($password, $user_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return = false;
        $sql = "UPDATE `tblvendors` set `vendor_password` = '" . md5($password) . "' where vendor_id = '" . $user_id . "'";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function chkVendorEmailExists($email) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return = false;
        $sql = "SELECT * FROM `tblvendors` WHERE `vendor_email` = '" . $email . "'";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function AddUserUploads($data) {
        $data['sub_cat_id'] = is_numeric($data['sub_cat_id']) ? (int)$data['sub_cat_id'] : 0;
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "INSERT INTO `tbl_user_uploads`(`user_id`, `banner_type`, `rss_text`, `video_url`, `image_video_audio_pdf_credit_line`, `image_video_audio_pdf_credit_url`, `documents_credit_line`, `documents_credit_url`, `image_video_audio_pdf`, `documents`, `from_page`,`ref_code`,`box_title`,`sub_cat_id`,`user_tags`,`approved_by`,`approved_date`,`show_where`,`admin_notes`,`admin_tags`)" . "VALUES ('" . $data['user_id'] . "',

                '" . addslashes($data['banner_type']) . "',

                '" . addslashes($data['rss_text']) . "',

                '" . addslashes($data['video_url']) . "',

                '" . addslashes($data['image_video_audio_pdf_credit_line']) . "',

                '" . addslashes($data['image_video_audio_pdf_credit_url']) . "','" . addslashes($data['documents_credit_line']) . "','" . addslashes($data['documents_credit_url']) . "',

                '" . addslashes($data['image_video_audio_pdf']) . "',

                '" . addslashes($data['documents']) . "',

                '" . addslashes($data['from_page']) . "',

                '" . addslashes($data['ref_code']) . "',

                '" . addslashes($data['box_title']) . "',

                '" . addslashes($data['sub_cat_id']) . "',

                '" . addslashes($data['get_tags']) . "',0,'0000-00-00','','','')";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function getDesignIconByProfCat($profile_cat, $sub_cat_id, $day_month_year) {
        $DBH = new DatabaseHandler();
        $sql = "SELECT * FROM `tbl_icons` WHERE `fav_cat_type_id` = '" . $profile_cat . "' AND `fav_cat_id` = '" . $sub_cat_id . "' AND status = 1 ORDER BY `icons_id` ASC";
        // $sql = "SELECT * FROM `tbl_icons` WHERE `fav_cat_type_id` = '".$profile_cat."' and status = 1 ORDER BY `icons_id` ASC";
        $STH = $DBH->query($sql);
        $data = array();
        $single_date = date("Y-m-d", strtotime($day_month_year));
        //echo '<br>';
        $all = date("d", strtotime($day_month_year));
        //echo '<br>';
        $month_wise = date("m", strtotime($day_month_year));
        //echo '<br>';
        $days_of_week = date('w', strtotime($day_month_year));
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                //$data =  $row;
                //echo $row['listing_date_type'];
                //echo '<br>';
                if ($row['listing_date_type'] == 'single_date') {
                    if ($single_date == $row['single_date']) {
                        $data[] = $row;
                    }
                } elseif ($row['listing_date_type'] == 'all') {
                    $all_arr = explode(',', $row['days_of_month']);
                    if (in_array($all, $all_arr)) {
                        $data[] = $row;
                    }
                } elseif ($row['listing_date_type'] == 'days_of_month') {
                    $all_arr = explode(',', $row['days_of_month']);
                    if (in_array($all, $all_arr)) {
                        $data[] = $row;
                    }
                } elseif ($row['listing_date_type'] == 'date_range') {
                    if (($row['start_date'] >= $single_date) && ($single_date <= $row['end_date'])) {
                        $data[] = $row;
                    }
                } elseif ($row['listing_date_type'] == 'month_wise') {
                    $all_arr = explode(',', $row['months']);
                    if (in_array($month_wise, $all_arr)) {
                        $data[] = $row;
                    }
                } elseif ($row['listing_date_type'] == 'days_of_week') {
                    $all_arr = explode(',', $row['days_of_week']);
                    if (in_array($days_of_week, $all_arr)) {
                        $data[] = $row;
                    }
                }
            }
            // echo '<pre>';
            // print_r($data);
            // echo '</pre>';
            // $row = $STH->fetch(PDO::FETCH_ASSOC);
            
        }
        return $data;
    }
    //update by ample 24-01-20
    public function getDesignIconByProfCatKR($day_month_year, $group_id, $ref_num) {
        $all_arr = explode(',', $ref_num);
        $str = implode('\',\'', $all_arr);
        $DBH = new DatabaseHandler();
        $sql = "SELECT * FROM `tbl_design_your_life` WHERE status = 1 and `group_code_id` = '" . $group_id . "' and ref_code IN ('" . $str . "') ORDER BY `id` ASC";
        // $sql = "SELECT * FROM `tbl_design_your_life` WHERE `show_to_user` = 1 AND status = 1 and `group_code_id` = '" . $group_id . "' and ref_code IN ('" . $str . "') ORDER BY `id` ASC";
        // $sql = "SELECT * FROM `tbl_icons` WHERE `fav_cat_type_id` = '".$profile_cat."' AND `fav_cat_id` = '".$sub_cat_id."' AND status = 1 ORDER BY `icons_id` ASC";
        $STH = $DBH->query($sql);
        $data = array();
        $single_date = date("Y-m-d", strtotime($day_month_year));
        //echo '<br>';
        $all = date("d", strtotime($day_month_year));
        //echo '<br>';
        $month_wise = date("m", strtotime($day_month_year));
        //echo '<br>';
        $days_of_week = date('w', strtotime($day_month_year));
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                if ($row['listing_date_type'] == 'single_date') {
                    if ($single_date == $row['single_date']) {
                        $data[] = $row;
                    }
                } elseif ($row['listing_date_type'] == 'all') {
                    $all_arr = explode(',', $row['days_of_month']);
                    if (in_array($all, $all_arr)) {
                        $data[] = $row;
                    }
                } elseif ($row['listing_date_type'] == 'days_of_month') {
                    $all_arr = explode(',', $row['days_of_month']);
                    if (in_array($all, $all_arr)) {
                        $data[] = $row;
                    }
                } elseif ($row['listing_date_type'] == 'month_wise') {
                    $all_arr = explode(',', $row['months']);
                    if (in_array($month_wise, $all_arr)) {
                        $data[] = $row;
                    }
                } elseif ($row['listing_date_type'] == 'days_of_week') {
                    $all_arr = explode(',', $row['days_of_week']);
                    if (in_array($days_of_week, $all_arr)) {
                        $data[] = $row;
                    }
                }
            }
        }

        if ($data != 0) {
            foreach ($data as $date_val) {
                $sql1 = "SELECT * FROM `tbl_icons` WHERE `fav_cat_type_id` = '" . $date_val['prof_cat_id'] . "' AND `fav_cat_id` = '" . $date_val['sub_cat_id'] . "' AND status = 1 ORDER BY `icons_id` ASC";
                $STH1 = $DBH->query($sql1);
                if ($STH1->rowCount() > 0) {
                    while ($row1 = $STH1->fetch(PDO::FETCH_ASSOC)) {
                        //$data1[]=$row1;
                        if ($row1['listing_date_type'] == 'single_date') {
                            if ($single_date == $row1['single_date']) {
                                $data1[] = $row1;
                            }
                        } elseif ($row1['listing_date_type'] == 'all') {
                            $all_arr = explode(',', $row1['days_of_month']);
                            if (in_array($all, $all_arr)) {
                                $data1[] = $row1;
                            }
                        } elseif ($row1['listing_date_type'] == 'days_of_month') {
                            $all_arr = explode(',', $row1['days_of_month']);
                            if (in_array($all, $all_arr)) {
                                $data1[] = $row1;
                            }
                        } elseif ($row1['listing_date_type'] == 'month_wise') {
                            $all_arr = explode(',', $row1['months']);
                            if (in_array($month_wise, $all_arr)) {
                                $data1[] = $row1;
                            }
                        } elseif ($row1['listing_date_type'] == 'days_of_week') {
                            $all_arr = explode(',', $row1['days_of_week']);
                            if (in_array($days_of_week, $all_arr)) {
                                $data1[] = $row1;
                            }
                        }
                    }
                }
            }
        }

        return $data1;
    }
    //add by ample 28-10-20
    public function getDesignIconByGroupRef($day_month_year, $group_id, $ref_num) {
        $all_arr = explode(',', $ref_num);
        $str = implode('\',\'', $all_arr);
        $DBH = new DatabaseHandler();
        $sql = "SELECT * FROM `tbl_design_your_life` WHERE status = 1 and `group_code_id` = '" . $group_id . "' and ref_code IN ('" . $str . "') ORDER BY `order_show` ASC";

        $STH = $DBH->query($sql);
        $data = array(); $data1 = array();
        $single_date = date("Y-m-d", strtotime($day_month_year));
        //echo '<br>';
        $all = date("d", strtotime($day_month_year));
        //echo '<br>';
        $month_wise = date("m", strtotime($day_month_year));
        //echo '<br>';
        $days_of_week = date('w', strtotime($day_month_year));
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[] = $row;
            }
        }

        // if ($data != 0) {
        //     foreach ($data as $key=>$date_val) {
        //         $sql1 = "SELECT * FROM `tbl_icons` WHERE `fav_cat_type_id` = '" . $date_val['prof_cat_id'] . "' AND `fav_cat_id` = '" . $date_val['sub_cat_id'] . "' AND status = 1 ORDER BY `order_no` ASC";
        //         $STH1 = $DBH->query($sql1);
        //         if ($STH1->rowCount() > 0) {
        //                 $row1 = $STH1->fetch(PDO::FETCH_ASSOC);
        //                 $data1[] = $row1;
        //                 $data1[$key]['design_id']=$date_val['id'];
                    
        //         }
        //     }
        // }

        $today=date('Y-m-d');
        $month = date('n', strtotime($today));
        $week = date('w', strtotime($today))+1;
        $day = date('j', strtotime($today));
        $user_id = $_SESSION['user_id'];

        if ($data != 0) {
            foreach ($data as $key=>$date_val) {


                    if(!empty($user_id))
                    {   
                        $user_info=$this->getUserDetails($user_id);
                         $sql1 = "SELECT DISTINCT icons_id,tbs.* FROM `tbl_icons` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.icons_id=tcs.redirect_id WHERE status=1 AND deleted=0 AND `fav_cat_type_id` = '" . $date_val['prof_cat_id'] . "' AND `fav_cat_id` = '" . $date_val['sub_cat_id'] . "' AND redirect='icon'  AND (publish_date_type='' OR publish_date_type IS NULL ) AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))"; 
                        $sql1.= " UNION SELECT DISTINCT icons_id,tbs.* FROM `tbl_icons` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.icons_id=tcs.redirect_id WHERE status=1 AND deleted=0 AND `fav_cat_type_id` = '" . $date_val['prof_cat_id'] . "' AND `fav_cat_id` = '" . $date_val['sub_cat_id'] . "' AND redirect='icon' AND publish_date_type='single_date' AND publish_single_date = '".$today."' AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))";
                        $sql1.= " UNION SELECT DISTINCT icons_id,tbs.* FROM `tbl_icons` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.icons_id=tcs.redirect_id WHERE status=1 AND deleted=0 AND `fav_cat_type_id` = '" . $date_val['prof_cat_id'] . "' AND `fav_cat_id` = '" . $date_val['sub_cat_id'] . "' AND redirect='icon' AND publish_date_type='date_range' AND (publish_start_date <= '".$today."' AND publish_end_date >= '".$today."') AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))";
                        $sql1.= " UNION SELECT DISTINCT icons_id,tbs.* FROM `tbl_icons` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.icons_id=tcs.redirect_id WHERE status=1 AND deleted=0 AND `fav_cat_type_id` = '" . $date_val['prof_cat_id'] . "' AND `fav_cat_id` = '" . $date_val['sub_cat_id'] . "' AND redirect='icon' AND publish_date_type='days_of_week' AND publish_days_of_week regexp '[[:<:]]".$week."[[:>:]]' AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))";
                        $sql1.= " UNION SELECT DISTINCT icons_id,tbs.* FROM `tbl_icons` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.icons_id=tcs.redirect_id WHERE status=1 AND deleted=0 AND `fav_cat_type_id` = '" . $date_val['prof_cat_id'] . "' AND `fav_cat_id` = '" . $date_val['sub_cat_id'] . "' AND redirect='icon' AND publish_date_type='days_of_month' AND publish_days_of_month regexp '[[:<:]]".$day."[[:>:]]' AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))";
                        $sql1.= " UNION SELECT DISTINCT icons_id,tbs.* FROM `tbl_icons` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.icons_id=tcs.redirect_id WHERE status=1 AND deleted=0 AND `fav_cat_type_id` = '" . $date_val['prof_cat_id'] . "' AND `fav_cat_id` = '" . $date_val['sub_cat_id'] . "' AND redirect='icon' AND publish_date_type='month_wise' AND publish_month_wise regexp '[[:<:]]".$month."[[:>:]]' AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))";
                        $sql1.= " UNION SELECT DISTINCT icons_id,tbs.* FROM `tbl_icons` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.icons_id=tcs.redirect_id WHERE status=1 AND deleted=0 AND `fav_cat_type_id` = '" . $date_val['prof_cat_id'] . "' AND `fav_cat_id` = '" . $date_val['sub_cat_id'] . "' AND redirect='icon' AND publish_date_type='single_date' AND publish_single_date = '".$today."' AND (state_id=0 OR state_id IS NULL)";
                        $sql1.= " UNION SELECT DISTINCT icons_id,tbs.* FROM `tbl_icons` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.icons_id=tcs.redirect_id WHERE status=1 AND deleted=0 AND `fav_cat_type_id` = '" . $date_val['prof_cat_id'] . "' AND `fav_cat_id` = '" . $date_val['sub_cat_id'] . "' AND redirect='icon' AND publish_date_type='date_range' AND (publish_start_date <= '".$today."' AND publish_end_date >= '".$today."') AND (state_id=0 OR state_id IS NULL)";
                        $sql1.= " UNION SELECT DISTINCT icons_id,tbs.* FROM `tbl_icons` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.icons_id=tcs.redirect_id WHERE status=1 AND deleted=0 AND `fav_cat_type_id` = '" . $date_val['prof_cat_id'] . "' AND `fav_cat_id` = '" . $date_val['sub_cat_id'] . "' AND redirect='icon' AND publish_date_type='days_of_week' AND publish_days_of_week regexp '[[:<:]]".$week."[[:>:]]' AND (state_id=0 OR state_id IS NULL)";
                        $sql1.= " UNION SELECT DISTINCT icons_id,tbs.* FROM `tbl_icons` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.icons_id=tcs.redirect_id WHERE status=1 AND deleted=0 AND `fav_cat_type_id` = '" . $date_val['prof_cat_id'] . "' AND `fav_cat_id` = '" . $date_val['sub_cat_id'] . "' AND redirect='icon' AND publish_date_type='days_of_month' AND publish_days_of_month regexp '[[:<:]]".$day."[[:>:]]' AND (state_id=0 OR state_id IS NULL)";
                         $sql1.= " UNION SELECT DISTINCT icons_id,tbs.* FROM `tbl_icons` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.icons_id=tcs.redirect_id WHERE status=1 AND deleted=0 AND `fav_cat_type_id` = '" . $date_val['prof_cat_id'] . "' AND `fav_cat_id` = '" . $date_val['sub_cat_id'] . "' AND redirect='icon' AND publish_date_type='month_wise' AND publish_month_wise regexp '[[:<:]]".$month."[[:>:]]' AND (state_id=0 OR state_id IS NULL)";
                        $sql1.= " UNION SELECT DISTINCT icons_id,tbs.* FROM `tbl_icons` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.icons_id=tcs.redirect_id WHERE status=1 AND deleted=0 AND `fav_cat_type_id` = '" . $date_val['prof_cat_id'] . "' AND `fav_cat_id` = '" . $date_val['sub_cat_id'] . "' AND (redirect='icon' OR redirect IS NULL) AND (publish_date_type='' OR publish_date_type IS NULL ) AND (state_id=0 OR state_id IS NULL)";
                        //$sql1.=" ORDER BY order_no ASC";

                    }
                    else
                    {
                        $sql1= "SELECT DISTINCT icons_id,tbs.* FROM `tbl_icons` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.icons_id=tcs.redirect_id WHERE status=1 AND deleted=0 AND `fav_cat_type_id` = '" . $date_val['prof_cat_id'] . "' AND `fav_cat_id` = '" . $date_val['sub_cat_id'] . "' AND redirect='icon' AND publish_date_type='single_date' AND publish_single_date = '".$today."' AND (state_id=0 OR state_id IS NULL)";
                        $sql1.= " UNION SELECT DISTINCT icons_id,tbs.* FROM `tbl_icons` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.icons_id=tcs.redirect_id WHERE status=1 AND deleted=0 AND `fav_cat_type_id` = '" . $date_val['prof_cat_id'] . "' AND `fav_cat_id` = '" . $date_val['sub_cat_id'] . "' AND redirect='icon' AND publish_date_type='date_range' AND (publish_start_date <= '".$today."' AND publish_end_date >= '".$today."') AND (state_id=0 OR state_id IS NULL)";
                        $sql1.= " UNION SELECT DISTINCT icons_id,tbs.* FROM `tbl_icons` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.icons_id=tcs.redirect_id WHERE status=1 AND deleted=0 AND `fav_cat_type_id` = '" . $date_val['prof_cat_id'] . "' AND `fav_cat_id` = '" . $date_val['sub_cat_id'] . "' AND redirect='icon' AND publish_date_type='days_of_week' AND publish_days_of_week regexp '[[:<:]]".$week."[[:>:]]' AND (state_id=0 OR state_id IS NULL)";
                        $sql1.= " UNION SELECT DISTINCT icons_id,tbs.* FROM `tbl_icons` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.icons_id=tcs.redirect_id WHERE status=1 AND deleted=0 AND `fav_cat_type_id` = '" . $date_val['prof_cat_id'] . "' AND `fav_cat_id` = '" . $date_val['sub_cat_id'] . "' AND redirect='icon' AND publish_date_type='days_of_month' AND publish_days_of_month regexp '[[:<:]]".$day."[[:>:]]' AND (state_id=0 OR state_id IS NULL)";
                         $sql1.= " UNION SELECT DISTINCT icons_id,tbs.* FROM `tbl_icons` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.icons_id=tcs.redirect_id WHERE status=1 AND deleted=0 AND `fav_cat_type_id` = '" . $date_val['prof_cat_id'] . "' AND `fav_cat_id` = '" . $date_val['sub_cat_id'] . "' AND redirect='icon' AND publish_date_type='month_wise' AND publish_month_wise regexp '[[:<:]]".$month."[[:>:]]' AND (state_id=0 OR state_id IS NULL)";
                        $sql1.= " UNION SELECT DISTINCT icons_id,tbs.* FROM `tbl_icons` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.icons_id=tcs.redirect_id WHERE status=1 AND deleted=0 AND `fav_cat_type_id` = '" . $date_val['prof_cat_id'] . "' AND `fav_cat_id` = '" . $date_val['sub_cat_id'] . "' AND (redirect='icon' OR redirect IS NULL) AND (publish_date_type='' OR publish_date_type IS NULL ) AND (state_id=0 OR state_id IS NULL)"; 
                        //$sql.=" ORDER BY order_no ASC";
                    }
                
                        
                $STH1 = $DBH->query($sql1);
                if ($STH1->rowCount() > 0) {
                        $row1 = $STH1->fetch(PDO::FETCH_ASSOC);
                        $data1[] = $row1;
                        $data1[$key]['design_id']=$date_val['id'];
                    
                }
            }
        }

        return $data1;
    }

    public function GetRefNumer($sub_cat_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $refcode = '';
        $sql = "SELECT * FROM `tbl_design_your_life` WHERE `sub_cat_id` = '" . $sub_cat_id . "' and `show_to_user` = 1  ";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $refcode = $row['ref_code'];
        }
        return $refcode;
    }
    public function Post_user_design_data($data) {
        // echo '<pre>';
        // print_r($data);
        // echo '</pre>';
        // die('---');
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return = false;

        //add by ample 10-04-20
        $single_date_main=$start_date_main=$end_date_main=$months_main=$days_week_main=$days_of_month_main='';
        $date_type=addslashes($data['listing_date_type']);
        if($date_type=='single_date')
        {
            $single_date_main=addslashes(date("Y-m-d",strtotime($data['single_date_main'])));
        }
        elseif ($date_type=='date_range') {
            $start_date_main=addslashes(date("Y-m-d",strtotime($data['start_date_main'])));
            $end_date_main=addslashes(date("Y-m-d",strtotime($data['end_date_main'])));
        }
        elseif ($date_type=='days_of_month') {
            $days_of_month_main=addslashes(implode(',', $data['days_of_month_main']));
        }
        elseif ($date_type=='days_of_week') {
            $days_of_week_main=addslashes(implode(',', $data['days_of_week_main']));
        }
        elseif ($date_type=='month_wise') {
            $months_main=addslashes(implode(',', $data['months_main']));
        }

        if(empty($data['duration_main']) || empty($data['unit_main']))
        {
            $data['duration_main']="";
            $data['unit_main']="";
        }
        if(empty($start_date_main)){
            $start_date_main = '0000-00-00';
        }
        if(empty($end_date_main)){
            $end_date_main = '0000-00-00';
        }
        if(empty($single_date_main)){
            $single_date_main = '0000-00-00';
        }
         $data['unit_main'] = is_numeric($data['unit_main']) ? (int)$data['unit_main'] : 0;
        
        $data['redirect_page'] = is_numeric($data['redirect_page']) ? (int)$data['redirect_page'] : 0;
        $data['redirect_id'] = is_numeric($data['redirect_id']) ? (int)$data['redirect_id'] : 0;
        $data['vendor_id'] = is_numeric($data['vendor_id']) ? (int)$data['vendor_id'] : 0;
        //update by ample 10-04-20 & update 22-04-20 & update 24-04-20 &update 27-04-20
       $sql = "INSERT INTO `tbl_user_design_your_data`(`user_id`, `vendor_id`, `box_title`,`ref_code`,`listing_date_type`, `days_of_month`, `single_date`, `start_date`, `end_date`, `days_of_week`, `months`, `location_fav_cat`, `user_response_fav_cat`,`user_what_fav_cat`,`alerts_fav_cat`,`bes_time`,`duration`,`scale`,`comment`,unit,redirect_page,redirect_id,redirect,post_by,prof_cat_id,sub_cat_id) "
                . "VALUES ('".$data['user_id']."','".$data['vendor_id']."','".addslashes($data['title_id'])."','".addslashes($data['ref_code'])."','".$date_type."','".$days_of_month_main."','".$single_date_main."','".$start_date_main."','".$end_date_main."','".$days_of_week_main."','".$months_main."','".addslashes($data['location_main'])."','".addslashes($data['User_view_main'])."','".addslashes($data['User_Interaction_main'])."','".addslashes($data['alert_main'])."','".addslashes($data['bes_time_main'])."','".addslashes($data['duration_main'])."','".addslashes($data['scale_main'])."','".addslashes($data['comment_main'])."','".addslashes($data['unit_main'])."','".addslashes($data['redirect_page'])."','".addslashes($data['redirect_id'])."','".addslashes($data['redirect'])."','".addslashes($data['post_by'])."',0,0)";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $id = $DBH->lastInsertId();
            $data['design_data_id'] = $id;
            if (!empty($data['fav_cat_2'])) {

                //add by ample 01-06-20
                if($data['qr_icon_type']==0)
                {   
                    foreach ($data['fav_cat_2'] as $key => $value) {
                        $final = array();
                        $final['user_input'] = $value;
                        $final['user_id'] = $data['user_id'];
                        $final['vendor_id'] = $data['vendor_id'];
                        $final['design_data_id'] = $data['design_data_id'];
                        $final['is_special_data'] = 0;
                        $this->userdata_inputs_save($final);
                    }
                }
                else
                {
                     //$data_arr = array_values(array_filter($data['fav_cat_2']));

                    $data_arr = $data['fav_cat_2'];

                    for ($i = 0;$i < count($data_arr);$i++) {

                        if(!empty($data_arr[$i]))
                        {
                            $final = array();
                            $final['fav_cat_2'] = $data_arr[$i];
                            $final['sub_cat'] = $data['sub_cat'][$i];
                            $final['prof_cat'] = $data['prof_cat'][$i];
                            $final['canv_show_fetch'] = $data['canv_show_fetch'][$i];
                            $final['canv_sub_cat_link'] = $data['canv_sub_cat_link'][$i];
                            $final['comment'] = $data['comment'][$i];
                            
                            if($data['qr_icon_type']==2)
                            {
                                $final['location'] = implode(',', $data['location'][$i]);
                                $final['User_view'] = implode(',', $data['User_view'][$i]);
                                $final['User_Interaction'] = implode(',', $data['User_Interaction'][$i]);
                                $final['alert'] =  implode(',', $data['alert'][$i]);
                            }
                            else
                            {
                                $final['location'] = $data['location'][$i];
                                $final['User_view'] = $data['User_view'][$i];
                                $final['User_Interaction'] = $data['User_Interaction'][$i];
                                $final['alert'] = $data['alert'][$i];
                            }
                            $final['scale'] = $data['scale'][$i];
                            $final['bes_time'] = $data['bes_time'][$i];
                            $final['duration'] = $data['duration'][$i];
                            $final['unit'] = $data['unit'][$i]; //update  by ample 22-04-20
                            $final['rank'] = ''; //add  by ample  08-06-20

                             //add by ample 10-04-20
                            $single_date=$start_date=$end_date=$months=$days_week=$days_of_month='';
                            $final['single_date']=$final['start_date']=$final['end_date']=$final['days_of_month']=$final['days_of_week']=$final['months']='';
                            $final['userdate'] = $data['userdate'][$i];
                            if($final['userdate']=='single_date')
                            {
                                $final['single_date'] = ($data['single_date'][$i] != "" ? date('Y-m-d', strtotime($data['single_date'][$i])) : "");
                            }
                            elseif ($final['userdate']=='date_range') {
                                $final['start_date'] = ($data['start_date'][$i] != "" ? date('Y-m-d', strtotime($data['start_date'][$i])) : "");
                                $final['end_date'] = ($data['end_date'][$i] != "" ? date('Y-m-d', strtotime($data['end_date'][$i])) : "");
                            }
                            elseif ($final['userdate']=='days_of_month') {
                                $days_of_month = $data['days_of_month'][$i];
                                $final['days_of_month'] = implode(',', $days_of_month);
                            }
                            elseif ($final['userdate']=='days_of_week') {
                                $days_of_week = $data['days_of_week'][$i];
                                $final['days_of_week'] = implode(',', $days_of_week);
                            }
                            elseif ($final['userdate']=='month_wise') {
                                $months = $data['months'][$i];
                                $final['months'] = implode(',', $months);
                            }
                            $final['is_special_data'] = 0;
                            $final['user_id'] = $data['user_id'];
                            $final['vendor_id'] = $data['vendor_id'];
                            $final['design_data_id'] = $data['design_data_id'];
                            $this->userdata_fav_cat_2_kr($final);
                        }
                      
                        
                    }
                }

            }
            if (!empty($data['user_input'])) {

                //add by ample 01-06-20
                if($data['other_icon_type']==0)
                {   
                    foreach ($data['user_input'] as $key => $value) {
                        $final = array();
                        $final['user_input'] = $value;
                        $final['user_id'] = $data['user_id'];
                        $final['vendor_id'] = $data['vendor_id'];
                        $final['design_data_id'] = $data['design_data_id'];
                        $final['is_special_data'] = 0;
                        $this->userdata_inputs_save($final);
                    }
                }
                else
                {   

                    //$data_arr = array_values(array_fitler($data['user_input']));

                    $data_arr = $data['user_input'];

                    for ($i = 0;$i < count($data_arr);$i++) {

                        if(!empty($data_arr[$i]))
                        {
                            $final = array();
                            $final['user_input'] = $data_arr[$i];
                            $final['sub_cat_lo'] = $data['sub_cat_lo'][$i];
                            $final['prof_cat_lo'] = $data['prof_cat_lo'][$i];
                            $final['canv_show_fetch_lo'] = $data['canv_show_fetch_lo'][$i];
                            $final['canv_sub_cat_link_lo'] = $data['canv_sub_cat_link_lo'][$i];
                            $final['comment_lo'] = $data['comment_lo'][$i];
                            if($data['other_icon_type']==2)
                            {
                                $final['location_lo'] = implode(',', $data['location_lo'][$i]);
                                $final['User_view_lo'] = implode(',', $data['User_view_lo'][$i]);
                                $final['User_Interaction_lo'] = implode(',', $data['User_Interaction_lo'][$i]);
                                $final['alert_lo'] =  implode(',', $data['alert_lo'][$i]);
                            }
                            else
                            {
                                $final['location_lo'] = $data['location_lo'][$i];
                                $final['User_view_lo'] = $data['User_view_lo'][$i];
                                $final['User_Interaction_lo'] = $data['User_Interaction_lo'][$i];
                                $final['alert_lo'] = $data['alert_lo'][$i];
                            }
                            $final['scale_lo'] = $data['scale_lo'][$i];
                            $final['bes_time_lo'] = $data['bes_time_lo'][$i];
                            $final['duration_lo'] = $data['duration_lo'][$i];
                            $final['unit_lo'] = $data['unit_lo'][$i]; //update  by ample 22-04-20
                            $final['rank'] = ''; //add  by ample  08-06-20

                            //add by ample 10-04-20
                            $single_date_lo=$start_date_lo=$end_date_lo=$months_lo=$days_week_lo=$days_of_month_lo='';
                            $final['single_date_lo']=$final['start_date_lo']=$final['end_date_lo']=$final['days_of_month_lo']=$final['days_of_week_lo']=$final['months_lo']='';
                            $final['userdate_lo'] = $data['userdate_lo'][$i];
                            if($final['userdate_lo']=='single_date')
                            {
                                $final['single_date_lo'] = ($data['single_date_lo'][$i] != "" ? date('Y-m-d', strtotime($data['single_date_lo'][$i])) : "");
                            }
                            elseif ($final['userdate_lo']=='date_range') {
                                $final['start_date_lo'] = ($data['start_date_lo'][$i] != "" ? date('Y-m-d', strtotime($data['start_date_lo'][$i])) : "");
                                $final['end_date_lo'] = ($data['end_date_lo'][$i] != "" ? date('Y-m-d', strtotime($data['end_date_lo'][$i])) : "");
                            }
                            elseif ($final['userdate_lo']=='days_of_month') {
                                $days_of_month_lo = $data['days_of_month_lo'][$i];
                                $final['days_of_month_lo'] = implode(',', $days_of_month_lo);
                            }
                            elseif ($final['userdate_lo']=='days_of_week') {
                                $days_of_week_lo = $data['days_of_week_lo'][$i];
                                $final['days_of_week_lo'] = implode(',', $days_of_week_lo);
                            }
                            elseif ($final['userdate_lo']=='month_wise') {
                                $months_lo = $data['months_lo'][$i];
                                $final['months_lo'] = implode(',', $months_lo);
                            }

                            $final['is_special_data'] = 0;
                            $final['user_id'] = $data['user_id'];
                            $final['vendor_id'] = $data['vendor_id'];
                            $final['design_data_id'] = $data['design_data_id'];
                            $this->userdata_inputs_kr($final);

                        }
                        
                    }
                
                }
            }
            //special text save 01-06-20 by ample
            if (!empty($data['special_text'])) {
                //$data_arr = array_values(array_fitler($data['special_text']));
                $data_arr = $data['special_text'];
                for ($i = 0;$i < count($data_arr);$i++) {
                    $final = array();
                    $final['user_input'] = $data_arr[$i];
                    $final['sub_cat_lo'] = '';
                    $final['prof_cat_lo'] = '';
                    $final['canv_show_fetch_lo'] = '';
                    $final['canv_sub_cat_link_lo'] = '';
                    $final['comment_lo'] = $data['comment_SP'][$i];
                    if($data['SP_icon_type'][$i]==2)
                    {
                        $final['location_lo'] = implode(',', (array)$data['location_SP'][$i]);
                        $final['User_view_lo'] = implode(',', (array)$data['User_view_SP'][$i]);
                        $final['User_Interaction_lo'] = implode(',', (array)$data['User_Interaction_SP'][$i]);
                        $final['alert_lo'] =  implode(',', (array)$data['alert_SP'][$i]);
                    }
                    else
                    {
                        $final['location_lo'] = $data['location_SP'][$i];
                        $final['User_view_lo'] = $data['User_view_SP'][$i];
                        $final['User_Interaction_lo'] = $data['User_Interaction_SP'][$i];
                        $final['alert_lo'] =  $data['alert_SP'][$i];
                    }
                    $final['scale_lo'] = $data['scale_SP'][$i];
                    $final['bes_time_lo'] = $data['bes_time_SP'][$i];
                    $final['duration_lo'] = $data['duration_SP'][$i];
                    $final['unit_lo'] = $data['unit_SP'][$i]; //update  by ample 22-04-20
                    $final['rank'] = $data['rank_SP'][$i]; //add  by ample  08-06-20

                    //add by ample 10-04-20
                    $single_date_lo=$start_date_lo=$end_date_lo=$months_lo=$days_week_lo=$days_of_month_lo='';
                    $final['single_date_lo']=$final['start_date_lo']=$final['end_date_lo']=$final['days_of_month_lo']=$final['days_of_week_lo']=$final['months_lo']='';
                    $final['userdate_lo'] = $data['userdate_SP'][$i];
                    if($final['userdate_lo']=='single_date')
                    {
                        $final['single_date_lo'] = ($data['single_date_SP'][$i] != "" ? date('Y-m-d', strtotime($data['single_date_SP'][$i])) : "");
                    }
                    elseif ($final['userdate_lo']=='date_range') {
                        $final['start_date_lo'] = ($data['start_date_SP'][$i] != "" ? date('Y-m-d', strtotime($data['start_date_SP'][$i])) : "");
                        $final['end_date_lo'] = ($data['end_date_SP'][$i] != "" ? date('Y-m-d', strtotime($data['end_date_SP'][$i])) : "");
                    }
                    elseif ($final['userdate_lo']=='days_of_month') {
                        $days_of_month_lo = $data['days_of_month_SP'][$i];
                        $final['days_of_month_lo'] = implode(',', (array)$days_of_month_lo);
                    }
                    elseif ($final['userdate_lo']=='days_of_week') {
                        $days_of_week_lo = $data['days_of_week_SP'][$i];
                        $final['days_of_week_lo'] = implode(',', (array)$days_of_week_lo);
                    }
                    elseif ($final['userdate_lo']=='month_wise') {
                        $months_lo = $data['months_SP'][$i];
                        $final['months_lo'] = implode(',', (array)$months_lo);
                    }

                    
                    // echo '<pre>';
                    // print_r($final);
                    // echo '</pre>';
                    $final['is_special_data'] = 1;
                    $final['user_id'] = $data['user_id'];
                    $final['vendor_id'] = $data['vendor_id'];
                    $final['design_data_id'] = $data['design_data_id'];
                    $this->userdata_inputs_kr($final);
                }
            }
            // die();
            $DBH->commit();
            $return = true;
        }
        return $return;
    }
    public function userdata_fav_cat_2_kr($data) {
        $DBH = new DatabaseHandler();
        $return = false;
        if(empty($data['duration']) || empty($data['unit']))
        {
            $data['duration']="";
            $data['unit']="";
        }
        $data['scale'] = is_numeric($data['scale']) ? (int)$data['scale'] : 0;
        $data['unit'] = is_numeric($data['unit']) ? (int)$data['unit'] : 0;
        if(empty($data['single_date'])){
            $data['single_date'] = '0000-00-00';
        }
        if(empty($data['start_date'])){
            $data['start_date'] = '0000-00-00';
        }
        if(empty($data['end_date'])){
            $data['end_date'] = '0000-00-00';
        }
        //01-06-20 chnage table tbl_user_design_favcat_data to tbl_design_user_inputs/ 1 colum update
        $sql = "INSERT INTO `tbl_design_user_inputs`(`user_id`,`vendor_id`, `user_input`,`design_data_id`,`sub_cat`,`prof_cat`,`canv_show_fetch`,`canv_sub_cat_link`,`comment`,`location_fav_cat`,`user_response_fav_cat`,`user_Interaction`,`alerts_fav_cat`,`scale`,`listing_date_type`,`days_of_month`,`single_date`,`start_date`,`end_date`,`months`,`days_of_week`,`bes_time`,`duration`,unit,is_special_data,rank) " . "VALUES ('" . $data['user_id'] . "','" . $data['vendor_id'] . "','" . addslashes($data['fav_cat_2']) . "','" . addslashes($data['design_data_id']) . "','" . addslashes($data['sub_cat']) . "','" . addslashes($data['prof_cat']) . "','" . addslashes($data['canv_show_fetch']) . "','" . addslashes($data['canv_sub_cat_link']) . "','" . addslashes($data['comment']) . "','" . addslashes($data['location']) . "','" . addslashes($data['User_view']) . "','" . addslashes($data['User_Interaction']) . "','" . addslashes($data['alert']) . "','" . addslashes($data['scale']) . "','" . addslashes($data['userdate']) . "','" . addslashes($data['days_of_month']) . "','" . $data['single_date'] . "','" . $data['start_date'] . "','" . $data['end_date'] . "','" . addslashes($data['months']) . "','" . addslashes($data['days_of_week']) . "','" . addslashes($data['bes_time']) . "','" . addslashes($data['duration']) . "','" . addslashes($data['unit']) . "','" . addslashes($data['is_special_data']) . "',0)";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function userdata_fav_cat_2($data) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "INSERT INTO `tbl_user_design_favcat_data`(`user_id`, `fav_cat_2`,`design_data_id`) " . "VALUES ('" . $data['user_id'] . "','" . addslashes($data['fav_cat_2']) . "','" . addslashes($data['design_data_id']) . "')";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    //update ample 01-06-20 & update 08-06-20
    public function userdata_inputs_kr($data) {
        $DBH = new DatabaseHandler();
        $return = false;
        if(empty($data['duration_lo']) || empty($data['unit_lo']))
        {
            $data['duration_lo']="";
            $data['unit_lo']="";
        }
        $data['scale_lo'] = is_numeric($data['scale_lo']) ? (int)$data['scale_lo'] : 0;
        $data['unit_lo'] = is_numeric($data['unit_lo']) ? (int)$data['unit_lo'] : 0;
        $data['rank'] = is_numeric($data['rank']) ? (int)$data['rank'] : 0;
        $data['prof_cat_lo'] = is_numeric($data['prof_cat_lo']) ? (int)$data['prof_cat_lo'] : 0;
        $data['canv_show_fetch_lo'] = is_numeric($data['canv_show_fetch_lo']) ? (int)$data['canv_show_fetch_lo'] : 0;
        if(empty($data['single_date_lo'])){
            $data['single_date_lo'] = '0000-00-00';
        }
        if(empty($data['start_date_lo'])){
            $data['start_date_lo'] = '0000-00-00';
        }
        if(empty($data['end_date_lo'])){
            $data['end_date_lo'] = '0000-00-00';
        }
        $sql = "INSERT INTO `tbl_design_user_inputs`(`user_id`,`vendor_id`, `user_input`,`design_data_id`,`sub_cat`,`prof_cat`,`canv_show_fetch`,`canv_sub_cat_link`,`comment`,`location_fav_cat`,`user_response_fav_cat`,`user_Interaction`,`alerts_fav_cat`,`scale`,`listing_date_type`,`days_of_month`,`single_date`,`start_date`,`end_date`,`months`,`days_of_week`,`bes_time`,`duration`,unit,is_special_data,rank) " . "VALUES ('" . $data['user_id'] . "','" . $data['vendor_id'] . "','" . addslashes($data['user_input']) . "','" . addslashes($data['design_data_id']) . "','" . addslashes($data['sub_cat_lo']) . "','" . addslashes($data['prof_cat_lo']) . "','" . addslashes($data['canv_show_fetch_lo']) . "','" . addslashes($data['canv_sub_cat_link_lo']) . "','" . addslashes($data['comment_lo']) . "','" . addslashes($data['location_lo']) . "','" . addslashes($data['User_view_lo']) . "','" . addslashes($data['User_Interaction_lo']) . "','" . addslashes($data['alert_lo']) . "','" . addslashes($data['scale_lo']) . "','" . addslashes($data['userdate_lo']) . "','" . addslashes($data['days_of_month_lo']) . "','" . $data['single_date_lo'] . "','" . $data['start_date_lo'] . "','" . $data['end_date_lo'] . "','" . addslashes($data['months_lo']) . "','" . addslashes($data['days_of_week_lo']) . "','" . addslashes($data['bes_time_lo']) . "','" . addslashes($data['duration_lo']) . "','" . addslashes($data['unit_lo']) . "','" . addslashes($data['is_special_data']) . "','" . addslashes($data['rank']) . "')";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    //add by ample 01-06-20
    public function userdata_inputs_save($data) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "INSERT INTO `tbl_design_user_inputs`(`user_id`,`vendor_id`, `user_input`,`design_data_id`,`sub_cat`,`prof_cat`,`canv_show_fetch`,`canv_sub_cat_link`,`comment`,`location_fav_cat`,`user_response_fav_cat`,`user_Interaction`,`alerts_fav_cat`,`scale`,`listing_date_type`,`days_of_month`,`single_date`,`start_date`,`end_date`,`months`,`days_of_week`,`bes_time`,`duration`,unit,is_special_data) " . "VALUES ('" . $data['user_id'] . "','" . $data['vendor_id'] . "','" . addslashes($data['user_input']) . "','" . addslashes($data['design_data_id']) . "','','','','','','','','','','','','','','','','','','','','','" . addslashes($data['is_special_data']) . "')";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function userdata_inputs($data) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "INSERT INTO `tbl_design_user_inputs`(`user_id`, `user_input`,`design_data_id`) " . "VALUES ('" . $data['user_id'] . "','" . addslashes($data['user_input']) . "','" . addslashes($data['design_data_id']) . "')";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function getDesignIconByFavCat($fav_cat) {
        $DBH = new DatabaseHandler();
        $icon = '';
        $sql = "SELECT * FROM `tbl_icons` WHERE `fav_cat_id` = '" . $fav_cat . "' ORDER BY `icons_add_date` DESC LIMIT 1";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $icon = $row['image'];
        }
        return $icon;
    }
    public function get_user_reports_permissions($user_id) {
        $DBH = new DatabaseHandler();
        $food_chart = 0;
        $each_meal_per_day_chart = 0;
        $my_activity_calories_chart = 0;
        $my_activity_calories_pi_chart = 0;
        $activity_analysis_chart = 0;
        $meal_chart = 0;
        $dpwd_chart = 0;
        $mwt_report = 0;
        $datewise_emotions_report = 0;
        $statementwise_emotions_report = 0;
        $statementwise_emotions_pi_report = 0;
        $angervent_intensity_report = 0;
        $stressbuster_intensity_report = 0;
        $sql = "SELECT * FROM `tblusers` WHERE `user_id` = '" . $user_id . "'";
        //echo $sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $food_chart = $row['food_chart'];
            $each_meal_per_day_chart = $row['each_meal_per_day_chart'];
            $my_activity_calories_chart = $row['my_activity_calories_chart'];
            $my_activity_calories_pi_chart = $row['my_activity_calories_pi_chart'];
            $activity_analysis_chart = $row['activity_analysis_chart'];
            $meal_chart = $row['meal_chart'];
            $dpwd_chart = $row['dpwd_chart'];
            $mwt_report = $row['mwt_report'];
            $datewise_emotions_report = $row['datewise_emotions_report'];
            $statementwise_emotions_report = $row['statementwise_emotions_report'];
            $statementwise_emotions_pi_report = $row['statementwise_emotions_pi_report'];
            $angervent_intensity_report = $row['angervent_intensity_report'];
            $stressbuster_intensity_report = $row['stressbuster_intensity_report'];
        }
        return array($food_chart, $each_meal_per_day_chart, $my_activity_calories_chart, $my_activity_calories_pi_chart, $activity_analysis_chart, $meal_chart, $dpwd_chart, $mwt_report, $datewise_emotions_report, $statementwise_emotions_report, $statementwise_emotions_pi_report, $angervent_intensity_report, $stressbuster_intensity_report);
    }
    function getModuleWiseKeywordsOptions($user_id, $report_module, $pro_user_id, $module_keyword) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        if ($pro_user_id == '') {
            $sql_str_pro = "";
        } else {
            $sql_str_pro = " AND `practitioner_id` = '" . $pro_user_id . "' ";
        }
        //echo '<br>user_id = '.$user_id.' , report_module = '.$report_module;
        if ($report_module == 'wae_report' || $report_module == '15') {
            $bms_id_str = '';
            $sql = "SELECT DISTINCT `selected_wae_id` FROM `tbluserswae` WHERE `user_id` = '" . $user_id . "' AND `wae_old_data` = '0' ";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $bms_id_str.= $row['selected_wae_id'] . ',';
                }
                $bms_id_str = substr($bms_id_str, 0, -1);
            }
            $sql = "SELECT * FROM `tblworkandenvironments` WHERE `wae_id` IN (" . $bms_id_str . ") AND `status` = '1' " . $sql_str_pro . " ORDER BY `listing_order` ASC , `wae_add_date` DESC ";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $practitioner_id = $row['practitioner_id'];
                    $str_user_id = $row['user_id'];
                    $country_id = $row['country_id'];
                    $str_state_id = $row['state_id'];
                    $str_city_id = $row['city_id'];
                    $str_place_id = $row['place_id'];
                    if ($pro_user_id == '' || $pro_user_id == '0') {
                        //echo '<br>in if';
                        $add_to_record = true;
                    } else {
                        //echo '<br>in else';
                        $add_to_record = $this->chkIfQuestionInUserCriteria($practitioner_id, $str_user_id, $user_id, $country_id, $str_state_id, $str_city_id, $str_place_id);
                    }
                    if ($add_to_record) {
                        if ($row['wae_id'] == $module_keyword) {
                            $sel = ' selected ';
                        } else {
                            $sel = '';
                        }
                        $option_str.= '<option value="' . $row['wae_id'] . '" ' . $sel . '>' . stripslashes($row['situation']) . '</option>';
                    }
                }
            }
        } elseif ($report_module == 'gs_report' || $report_module == '16') {
            $bms_id_str = '';
            $sql = "SELECT DISTINCT `selected_gs_id` FROM `tblusersgs` WHERE `user_id` = '" . $user_id . "' AND `gs_old_data` = '0' ";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $bms_id_str.= $row['selected_gs_id'] . ',';
                }
                $bms_id_str = substr($bms_id_str, 0, -1);
            }
            $sql = "SELECT * FROM `tblgeneralstressors` WHERE `gs_id` IN (" . $bms_id_str . ") AND `status` = '1' " . $sql_str_pro . " ORDER BY `listing_order` ASC , `gs_add_date` DESC ";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $practitioner_id = $row['practitioner_id'];
                    $str_user_id = $row['user_id'];
                    $country_id = $row['country_id'];
                    $str_state_id = $row['state_id'];
                    $str_city_id = $row['city_id'];
                    $str_place_id = $row['place_id'];
                    if ($pro_user_id == '' || $pro_user_id == '0') {
                        //echo '<br>in if';
                        $add_to_record = true;
                    } else {
                        //echo '<br>in else';
                        $add_to_record = $this->chkIfQuestionInUserCriteria($practitioner_id, $str_user_id, $user_id, $country_id, $str_state_id, $str_city_id, $str_place_id);
                    }
                    if ($add_to_record) {
                        if ($row['gs_id'] == $module_keyword) {
                            $sel = ' selected ';
                        } else {
                            $sel = '';
                        }
                        $option_str.= '<option value="' . $row['gs_id'] . '" ' . $sel . '>' . stripslashes($row['situation']) . '</option>';
                    }
                }
            }
        } elseif ($report_module == 'sleep_report' || $report_module == '17') {
            $bms_id_str = '';
            $sql = "SELECT DISTINCT `selected_sleep_id` FROM `tbluserssleep` WHERE `user_id` = '" . $user_id . "' AND `sleep_old_data` = '0' ";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $bms_id_str.= $row['selected_sleep_id'] . ',';
                }
                $bms_id_str = substr($bms_id_str, 0, -1);
            }
            $sql = "SELECT * FROM `tblsleeps` WHERE `sleep_id` IN (" . $bms_id_str . ") AND `status` = '1' " . $sql_str_pro . " ORDER BY `listing_order` ASC , `sleep_add_date` DESC ";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $practitioner_id = $row['practitioner_id'];
                    $str_user_id = $row['user_id'];
                    $country_id = $row['country_id'];
                    $str_state_id = $row['state_id'];
                    $str_city_id = $row['city_id'];
                    $str_place_id = $row['place_id'];
                    if ($pro_user_id == '' || $pro_user_id == '0') {
                        //echo '<br>in if';
                        $add_to_record = true;
                    } else {
                        //echo '<br>in else';
                        $add_to_record = $this->chkIfQuestionInUserCriteria($practitioner_id, $str_user_id, $user_id, $country_id, $str_state_id, $str_city_id, $str_place_id);
                    }
                    if ($add_to_record) {
                        if ($row['sleep_id'] == $module_keyword) {
                            $sel = ' selected ';
                        } else {
                            $sel = '';
                        }
                        $option_str.= '<option value="' . $row['sleep_id'] . '" ' . $sel . '>' . stripslashes($row['situation']) . '</option>';
                    }
                }
            }
        } elseif ($report_module == 'mc_report' || $report_module == '18') {
            $bms_id_str = '';
            $sql = "SELECT DISTINCT `selected_mc_id` FROM `tblusersmc` WHERE `user_id` = '" . $user_id . "' AND `mc_old_data` = '0' ";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $bms_id_str.= $row['selected_mc_id'] . ',';
                }
                $bms_id_str = substr($bms_id_str, 0, -1);
            }
            $sql = "SELECT * FROM `tblmycommunications` WHERE `mc_id` IN (" . $bms_id_str . ") AND `status` = '1' " . $sql_str_pro . " ORDER BY `listing_order` ASC , `mc_add_date` DESC ";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $practitioner_id = $row['practitioner_id'];
                    $str_user_id = $row['user_id'];
                    $country_id = $row['country_id'];
                    $str_state_id = $row['state_id'];
                    $str_city_id = $row['city_id'];
                    $str_place_id = $row['place_id'];
                    if ($pro_user_id == '' || $pro_user_id == '0') {
                        //echo '<br>in if';
                        $add_to_record = true;
                    } else {
                        //echo '<br>in else';
                        $add_to_record = $this->chkIfQuestionInUserCriteria($practitioner_id, $str_user_id, $user_id, $country_id, $str_state_id, $str_city_id, $str_place_id);
                    }
                    if ($add_to_record) {
                        if ($row['mc_id'] == $module_keyword) {
                            $sel = ' selected ';
                        } else {
                            $sel = '';
                        }
                        $option_str.= '<option value="' . $row['mc_id'] . '" ' . $sel . '>' . stripslashes($row['situation']) . '</option>';
                    }
                }
            }
        } elseif ($report_module == 'mr_report' || $report_module == '19') {
            $bms_id_str = '';
            $sql = "SELECT DISTINCT `selected_mr_id` FROM `tblusersmr` WHERE `user_id` = '" . $user_id . "' AND `mr_old_data` = '0' ";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $bms_id_str.= $row['selected_mr_id'] . ',';
                }
                $bms_id_str = substr($bms_id_str, 0, -1);
            }
            $sql = "SELECT * FROM `tblmyrelations` WHERE `mr_id` IN (" . $bms_id_str . ") AND `status` = '1' " . $sql_str_pro . " ORDER BY `listing_order` ASC , `mr_add_date` DESC ";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $practitioner_id = $row['practitioner_id'];
                    $str_user_id = $row['user_id'];
                    $country_id = $row['country_id'];
                    $str_state_id = $row['state_id'];
                    $str_city_id = $row['city_id'];
                    $str_place_id = $row['place_id'];
                    if ($pro_user_id == '' || $pro_user_id == '0') {
                        //echo '<br>in if';
                        $add_to_record = true;
                    } else {
                        //echo '<br>in else';
                        $add_to_record = $this->chkIfQuestionInUserCriteria($practitioner_id, $str_user_id, $user_id, $country_id, $str_state_id, $str_city_id, $str_place_id);
                    }
                    if ($add_to_record) {
                        if ($row['mr_id'] == $module_keyword) {
                            $sel = ' selected ';
                        } else {
                            $sel = '';
                        }
                        $option_str.= '<option value="' . $row['mr_id'] . '" ' . $sel . '>' . stripslashes($row['situation']) . '</option>';
                    }
                }
            }
        } elseif ($report_module == 'mle_report' || $report_module == '20') {
            $bms_id_str = '';
            $sql = "SELECT DISTINCT `selected_mle_id` FROM `tblusersmle` WHERE `user_id` = '" . $user_id . "' AND `mle_old_data` = '0' ";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $bms_id_str.= $row['selected_mle_id'] . ',';
                }
                $bms_id_str = substr($bms_id_str, 0, -1);
            }
            $sql = "SELECT * FROM `tblmajorlifeevents` WHERE mle_id IN (" . $bms_id_str . ") AND `status` = '1' " . $sql_str_pro . " ORDER BY `listing_order` ASC , `mle_add_date` DESC ";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $practitioner_id = $row['practitioner_id'];
                    $str_user_id = $row['user_id'];
                    $country_id = $row['country_id'];
                    $str_state_id = $row['state_id'];
                    $str_city_id = $row['city_id'];
                    $str_place_id = $row['place_id'];
                    if ($pro_user_id == '' || $pro_user_id == '0') {
                        //echo '<br>in if';
                        $add_to_record = true;
                    } else {
                        //echo '<br>in else';
                        $add_to_record = $this->chkIfQuestionInUserCriteria($practitioner_id, $str_user_id, $user_id, $country_id, $str_state_id, $str_city_id, $str_place_id);
                    }
                    if ($add_to_record) {
                        if ($row['mle_id'] == $module_keyword) {
                            $sel = ' selected ';
                        } else {
                            $sel = '';
                        }
                        $option_str.= '<option value="' . $row['mle_id'] . '" ' . $sel . '>' . stripslashes($row['situation']) . '</option>';
                    }
                }
            }
        } elseif ($report_module == 'adct_report' || $report_module == '21') {
            $bms_id_str = '';
            $sql = "SELECT DISTINCT `selected_adct_id` FROM `tblusersadct` WHERE `user_id` = '" . $user_id . "' AND `adct_old_data` = '0' ";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $bms_id_str.= $row['selected_adct_id'] . ',';
                }
                $bms_id_str = substr($bms_id_str, 0, -1);
            }
            $sql = "SELECT * FROM `tbladdictions` WHERE `adct_id` IN (" . $bms_id_str . ") AND `status` = '1' " . $sql_str_pro . " ORDER BY `listing_order` ASC , `adct_add_date` DESC ";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $practitioner_id = $row['practitioner_id'];
                    $str_user_id = $row['user_id'];
                    $country_id = $row['country_id'];
                    $str_state_id = $row['state_id'];
                    $str_city_id = $row['city_id'];
                    $str_place_id = $row['place_id'];
                    if ($pro_user_id == '' || $pro_user_id == '0') {
                        //echo '<br>in if';
                        $add_to_record = true;
                    } else {
                        //echo '<br>in else';
                        $add_to_record = $this->chkIfQuestionInUserCriteria($practitioner_id, $str_user_id, $user_id, $country_id, $str_state_id, $str_city_id, $str_place_id);
                    }
                    if ($add_to_record) {
                        if ($row['adct_id'] == $module_keyword) {
                            $sel = ' selected ';
                        } else {
                            $sel = '';
                        }
                        $option_str.= '<option value="' . $row['adct_id'] . '" ' . $sel . '>' . stripslashes($row['situation']) . '</option>';
                    }
                }
            }
        } elseif ($report_module == 'bps_report' || $report_module == '22') {
            $bms_id_str = '';
            $sql = "SELECT DISTINCT `bms_id` FROM `tblusersbps` WHERE `user_id` = '" . $user_id . "' AND `bps_old_data` = '0' ";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $bms_id_str.= $row['bms_id'] . ',';
                }
                $bms_id_str = substr($bms_id_str, 0, -1);
            }
            $sql = "SELECT * FROM `tblbodymainsymptoms` WHERE `bms_id` IN (" . $bms_id_str . ") AND `bmst_id` = '1' AND `bms_status` = '1' AND `bms_deleted` = '0' ORDER BY bms_name";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    if ($row['bms_id'] == $module_keyword) {
                        $sel = ' selected ';
                    } else {
                        $sel = '';
                    }
                    $option_str.= '<option value="' . $row['bms_id'] . '" ' . $sel . '>' . stripslashes($row['bms_name']) . '</option>';
                }
            }
        } elseif ($report_module == 'bes_report' || $report_module == '23') {
            $bms_id_str = '';
            $sql = "SELECT DISTINCT `bms_id` FROM `tblusersbes` WHERE `user_id` = '" . $user_id . "' AND `bes_old_data` = '0' ";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $bms_id_str.= $row['bms_id'] . ',';
                }
                $bms_id_str = substr($bms_id_str, 0, -1);
            }
            $sql = "SELECT * FROM `tblbodymainsymptoms` WHERE `bms_id` IN (" . $bms_id_str . ") AND `bmst_id` = '2' `bms_status` = '1' AND `bms_deleted` = '0' ORDER BY bms_name";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    if ($row['bms_id'] == $module_keyword) {
                        $sel = ' selected ';
                    } else {
                        $sel = '';
                    }
                    $option_str.= '<option value="' . $row['bms_id'] . '" ' . $sel . '>' . stripslashes($row['bms_name']) . '</option>';
                }
            }
        } elseif ($report_module == 'mdt_report' || $report_module == '24') {
            $bms_id_str = '';
            /*
            
            
            
            $sql = "SELECT DISTINCT `bms_id` FROM `tblusersmdt` WHERE `user_id` = '".$user_id."' AND `bms_entry_type` = 'situation' AND `bms_id` > '0' AND `mdt_old_data` = '0' ";
            
            
            
            //echo '<br>'.$sql;
            
            
            
            $result = mysql_query($sql,$link);
            
            
            
            if( ($result) && (mysql_num_rows($result) > 0) )
            
            
            
            {
            
            
            
            $return = true;
            
            
            
            while ($row = mysql_fetch_assoc($result)) 
            
            
            
            {
            
            
            
                $bms_id_str .= $row['bms_id'].',';
            
            
            
            }
            
            
            
            $bms_id_str = substr($bms_id_str, 0,-1);
            
            
            
            }
            
            
            
            
            
            
            
            
            
            
            
            if($bms_id_str != '')
            
            
            
            {
            
            
            
            //$sql = "SELECT * FROM `tblbodymainsymptoms` WHERE `bms_status` = '1' AND `bms_deleted` = '0' ORDER BY bms_name";
            
            
            
            $sql = "SELECT * FROM `tblbodymainsymptoms` WHERE `bms_id` IN (".$bms_id_str.") AND `bms_status` = '1' AND `bms_deleted` = '0' ORDER BY bms_name";
            
            
            
            //echo '<br>'.$sql;
            
            
            
            $result = mysql_query($sql,$link);
            
            
            
            if( ($result) && (mysql_num_rows($result) > 0) )
            
            
            
            {
            
            
            
                $return = true;
            
            
            
                while ($row = mysql_fetch_assoc($result)) 
            
            
            
                {
            
            
            
                    if($row['bms_id'] == $module_keyword)
            
            
            
                    {
            
            
            
                        $sel = ' selected ';
            
            
            
                    }
            
            
            
                    else
            
            
            
                    {
            
            
            
                        $sel = '';
            
            
            
                    }		
            
            
            
                    $option_str .= '<option value="'.$row['bms_id'].'" '.$sel.'>'.stripslashes($row['bms_name']).'</option>';
            
            
            
                }
            
            
            
            }
            
            
            
            }
            
            
            
            *
            
            
            
            */
            $bms_id_str = '';
            $sql = "SELECT DISTINCT `bms_id` FROM `tblusersmdt` WHERE `user_id` = '" . $user_id . "' AND `bms_entry_type` = 'situation' AND `bms_type` = 'bms'  AND `bms_id` > '0' AND `mdt_old_data` = '0' ";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $bms_id_str.= $row['bms_id'] . ',';
                }
                $bms_id_str = substr($bms_id_str, 0, -1);
            }
            if ($bms_id_str != '') {
                $sql = "SELECT * FROM `tblbodymainsymptoms` WHERE `bms_id` IN (" . $bms_id_str . ") AND `bms_status` = '1' AND `bms_deleted` = '0' ORDER BY bms_name";
                //echo '<br>'.$sql;
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    $return = true;
                    while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                        $chk_val = 'bms_' . $row['bms_id'];
                        if ($chk_val == $module_keyword) {
                            $sel = ' selected ';
                        } else {
                            $sel = '';
                        }
                        $option_str.= '<option value="' . $chk_val . '" ' . $sel . '>' . stripslashes($row['bms_name']) . '</option>';
                    }
                }
            }
            $bms_id_str = '';
            $sql = "SELECT DISTINCT `bms_id` FROM `tblusersmdt` WHERE `user_id` = '" . $user_id . "' AND `bms_entry_type` = 'situation' AND `bms_type` = 'adct'  AND `bms_id` > '0' AND `mdt_old_data` = '0' ";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $bms_id_str.= $row['bms_id'] . ',';
                }
                $bms_id_str = substr($bms_id_str, 0, -1);
            }
            if ($bms_id_str != '') {
                $sql = "SELECT * FROM `tbladdictions` WHERE `adct_id` IN (" . $bms_id_str . ") ORDER BY situation";
                //echo '<br>'.$sql;
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    $return = true;
                    while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                        $chk_val = 'adct_' . $row['adct_id'];
                        if ($chk_val == $module_keyword) {
                            $sel = ' selected ';
                        } else {
                            $sel = '';
                        }
                        $option_str.= '<option value="' . $chk_val . '" ' . $sel . '>' . stripslashes($row['situation']) . '</option>';
                    }
                }
            }
            $bms_id_str = '';
            $sql = "SELECT DISTINCT `bms_id` FROM `tblusersmdt` WHERE `user_id` = '" . $user_id . "' AND `bms_entry_type` = 'situation' AND `bms_type` = 'sleep'  AND `bms_id` > '0' AND `mdt_old_data` = '0' ";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $bms_id_str.= $row['bms_id'] . ',';
                }
                $bms_id_str = substr($bms_id_str, 0, -1);
            }
            if ($bms_id_str != '') {
                $sql = "SELECT * FROM `tblsleeps` WHERE `sleep_id` IN (" . $bms_id_str . ") ORDER BY situation";
                //echo '<br>'.$sql;
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    $return = true;
                    while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                        $chk_val = 'sleep_' . $row['sleep_id'];
                        if ($chk_val == $module_keyword) {
                            $sel = ' selected ';
                        } else {
                            $sel = '';
                        }
                        $option_str.= '<option value="' . $chk_val . '" ' . $sel . '>' . stripslashes($row['situation']) . '</option>';
                    }
                }
            }
            $bms_id_str = '';
            $sql = "SELECT DISTINCT `bms_id` FROM `tblusersmdt` WHERE `user_id` = '" . $user_id . "' AND `bms_entry_type` = 'situation' AND `bms_type` = 'gs'  AND `bms_id` > '0' AND `mdt_old_data` = '0' ";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $bms_id_str.= $row['bms_id'] . ',';
                }
                $bms_id_str = substr($bms_id_str, 0, -1);
            }
            if ($bms_id_str != '') {
                $sql = "SELECT * FROM `tblgeneralstressors` WHERE `gs_id` IN (" . $bms_id_str . ") ORDER BY situation";
                //echo '<br>'.$sql;
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    $return = true;
                    while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                        $chk_val = 'gs_' . $row['gs_id'];
                        if ($chk_val == $module_keyword) {
                            $sel = ' selected ';
                        } else {
                            $sel = '';
                        }
                        $option_str.= '<option value="' . $chk_val . '" ' . $sel . '>' . stripslashes($row['situation']) . '</option>';
                    }
                }
            }
            $bms_id_str = '';
            $sql = "SELECT DISTINCT `bms_id` FROM `tblusersmdt` WHERE `user_id` = '" . $user_id . "' AND `bms_entry_type` = 'situation' AND `bms_type` = 'wae'  AND `bms_id` > '0' AND `mdt_old_data` = '0' ";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $bms_id_str.= $row['bms_id'] . ',';
                }
                $bms_id_str = substr($bms_id_str, 0, -1);
            }
            if ($bms_id_str != '') {
                $sql = "SELECT * FROM `tblworkandenvironments` WHERE `wae_id` IN (" . $bms_id_str . ") ORDER BY situation";
                //echo '<br>'.$sql;
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    $return = true;
                    while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                        $chk_val = 'wae_' . $row['wae_id'];
                        if ($chk_val == $module_keyword) {
                            $sel = ' selected ';
                        } else {
                            $sel = '';
                        }
                        $option_str.= '<option value="' . $chk_val . '" ' . $sel . '>' . stripslashes($row['situation']) . '</option>';
                    }
                }
            }
            $bms_id_str = '';
            $sql = "SELECT DISTINCT `bms_id` FROM `tblusersmdt` WHERE `user_id` = '" . $user_id . "' AND `bms_entry_type` = 'situation' AND `bms_type` = 'mc'  AND `bms_id` > '0' AND `mdt_old_data` = '0' ";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $bms_id_str.= $row['bms_id'] . ',';
                }
                $bms_id_str = substr($bms_id_str, 0, -1);
            }
            if ($bms_id_str != '') {
                $sql = "SELECT * FROM `tblmycommunications` WHERE `mc_id` IN (" . $bms_id_str . ") ORDER BY situation";
                //echo '<br>'.$sql;
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    $return = true;
                    while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                        $chk_val = 'mc_' . $row['mc_id'];
                        if ($chk_val == $module_keyword) {
                            $sel = ' selected ';
                        } else {
                            $sel = '';
                        }
                        $option_str.= '<option value="' . $chk_val . '" ' . $sel . '>' . stripslashes($row['situation']) . '</option>';
                    }
                }
            }
            $bms_id_str = '';
            $sql = "SELECT DISTINCT `bms_id` FROM `tblusersmdt` WHERE `user_id` = '" . $user_id . "' AND `bms_entry_type` = 'situation' AND `bms_type` = 'mr'  AND `bms_id` > '0' AND `mdt_old_data` = '0' ";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $bms_id_str.= $row['bms_id'] . ',';
                }
                $bms_id_str = substr($bms_id_str, 0, -1);
            }
            if ($bms_id_str != '') {
                $sql = "SELECT * FROM `tblmyrelations` WHERE `mr_id` IN (" . $bms_id_str . ") ORDER BY situation";
                //echo '<br>'.$sql;
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    $return = true;
                    while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                        $chk_val = 'mr_' . $row['mr_id'];
                        if ($chk_val == $module_keyword) {
                            $sel = ' selected ';
                        } else {
                            $sel = '';
                        }
                        $option_str.= '<option value="' . $chk_val . '" ' . $sel . '>' . stripslashes($row['situation']) . '</option>';
                    }
                }
            }
            $bms_id_str = '';
            $sql = "SELECT DISTINCT `bms_id` FROM `tblusersmdt` WHERE `user_id` = '" . $user_id . "' AND `bms_entry_type` = 'situation' AND `bms_type` = 'mle'  AND `bms_id` > '0' AND `mdt_old_data` = '0' ";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $bms_id_str.= $row['bms_id'] . ',';
                }
                $bms_id_str = substr($bms_id_str, 0, -1);
            }
            if ($bms_id_str != '') {
                $sql = "SELECT * FROM `tblmajorlifeevents` WHERE `mle_id` IN (" . $bms_id_str . ") ORDER BY situation";
                //echo '<br>'.$sql;
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    $return = true;
                    while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                        $chk_val = 'mle_' . $row['mle_id'];
                        if ($chk_val == $module_keyword) {
                            $sel = ' selected ';
                        } else {
                            $sel = '';
                        }
                        $option_str.= '<option value="' . $chk_val . '" ' . $sel . '>' . stripslashes($row['situation']) . '</option>';
                    }
                }
            }
        } elseif ($report_module == 'food_report' || $report_module == '1') {
            $bms_id_str = '';
            $sql = "SELECT DISTINCT `meal_id` FROM `tblusersmeals` WHERE `user_id` = '" . $user_id . "' ";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $bms_id_str.= $row['meal_id'] . ',';
                }
                $bms_id_str = substr($bms_id_str, 0, -1);
            }
            $veg_str = " WHERE `meal_id` IN (" . $bms_id_str . ") ";
            list($food_veg_nonveg, $beef, $pork) = $this->getFoodVegNonVegOfUser($user_id);
            if ($food_veg_nonveg == 'V') {
                $veg_str.= " AND `food_veg_nonveg` != 'NV' AND `food_veg_nonveg` != 'E' AND `food_veg_nonveg` != 'B' AND `food_veg_nonveg` != 'P' ";
            } elseif ($food_veg_nonveg == 'VE') {
                $veg_str.= " AND `food_veg_nonveg` != 'NV' AND `food_veg_nonveg` != 'B' AND `food_veg_nonveg` != 'P' ";
            } else {
                if ($beef == '0') {
                    $veg_str.= " AND `food_veg_nonveg` != 'B' ";
                    if ($pork == '0') {
                        $veg_str.= " AND `food_veg_nonveg` != 'P' ";
                    }
                } else {
                    if ($pork == '0') {
                        $veg_str.= " AND `food_veg_nonveg` != 'P' ";
                    }
                }
            }
            $sql = "SELECT * FROM `tbldailymeals` " . $veg_str . " ORDER BY `meal_item` ASC";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    if ($row['meal_id'] == $module_keyword) {
                        $sel = ' selected ';
                    } else {
                        $sel = '';
                    }
                    $option_str.= '<option value="' . $row['meal_id'] . '" ' . $sel . '>' . stripslashes($row['meal_item']) . '</option>';
                }
            }
        } elseif ($report_module == 'activity_report' || $report_module == 'activity_analysis_report' || $report_module == '4' || $report_module == '14') {
            $bms_id_str = '';
            $sql = "SELECT DISTINCT `activity_id` FROM `tblusersdailyactivity` WHERE `user_id` = '" . $user_id . "' ";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $bms_id_str.= $row['activity_id'] . ',';
                }
                $bms_id_str = substr($bms_id_str, 0, -1);
            }
            $sql = "SELECT * FROM `tbldailyactivity` WHERE `activity_id` IN (" . $bms_id_str . ") ORDER BY `activity` ASC";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    if ($row['activity_id'] == $module_keyword) {
                        $sel = ' selected ';
                    } else {
                        $sel = '';
                    }
                    $option_str.= '<option value="' . $row['activity_id'] . '" ' . $sel . '>' . stripslashes($row['activity']) . '</option>';
                }
            }
        }
        return $option_str;
    }
    public function chkIfQuestionInUserCriteria($practitioner_id, $str_user_id, $user_id, $country_id, $str_state_id, $str_city_id, $str_place_id) {
        $add_to_record = false;
        $chk_next = false;
        //echo '<br>33333333333333333';
        list($return, $name, $email, $dob, $height, $weight, $sex, $mobile, $state_id, $city_id, $place_id, $food_veg_nonveg, $beef, $pork, $user_practitioner_id, $user_country_id) = getUserDetails($user_id);
        if ($return) {
            if ($practitioner_id == '' || $practitioner_id == '0') {
                $chk_next = true;
            } else {
                //echo '<br>else222222222';
                if ($str_user_id == '') {
                    if ($this->chkIfUserIsAdvisersReferrals($practitioner_id, $user_id)) {
                        $chk_next = true;
                    }
                } else {
                    $arr_user_id = array();
                    $pos4 = strpos($str_user_id, ',');
                    if ($pos4 !== false) {
                        $arr_user_id = explode(',', $str_user_id);
                    } else {
                        array_push($arr_user_id, $str_user_id);
                    }
                    if (in_array($user_id, $arr_user_id) || $arr_user_id[0] == '') {
                        if ($this->chkIfUserIsAdvisersReferrals($practitioner_id, $user_id)) {
                            $chk_next = true;
                        }
                    }
                }
            }
            if ($chk_next) {
                if ($country_id == '0') {
                    $chk_next = true;
                } elseif ($country_id == $user_country_id) {
                    $chk_next = true;
                } else {
                    $chk_next = false;
                }
            }
            if ($chk_next) {
                if ($str_state_id == '') {
                    $chk_next = true;
                } else {
                    $arr_state_id = array();
                    $pos1 = strpos($str_state_id, ',');
                    if ($pos1 !== false) {
                        $arr_state_id = explode(',', $str_state_id);
                    } else {
                        array_push($arr_state_id, $str_state_id);
                    }
                    if (in_array($state_id, $arr_state_id) || $arr_state_id[0] == '') {
                        $chk_next = true;
                    } else {
                        $chk_next = false;
                    }
                }
            }
            if ($chk_next) {
                if ($str_city_id == '') {
                    $chk_next = true;
                } else {
                    $arr_city_id = array();
                    $pos2 = strpos($str_city_id, ',');
                    if ($pos2 !== false) {
                        $arr_city_id = explode(',', $str_city_id);
                    } else {
                        array_push($arr_city_id, $str_city_id);
                    }
                    if (in_array($city_id, $arr_city_id) || $arr_city_id[0] == '') {
                        $chk_next = true;
                    } else {
                        $chk_next = false;
                    }
                }
            }
            if ($chk_next) {
                if ($str_place_id == '') {
                    $chk_next = true;
                } else {
                    $arr_place_id = array();
                    $pos3 = strpos($str_place_id, ',');
                    if ($pos3 !== false) {
                        $arr_place_id = explode(',', $str_place_id);
                    } else {
                        array_push($arr_place_id, $str_place_id);
                    }
                    if (in_array($place_id, $arr_place_id) || $arr_place_id[0] == '') {
                        $chk_next = true;
                    } else {
                        $chk_next = false;
                    }
                }
            }
            if ($chk_next) {
                $add_to_record = true;
            }
        }
        return $add_to_record;
    }
    public function getFoodVegNonVegOfUser($user_id) {
        $DBH = new DatabaseHandler();
        $food_veg_nonveg = '';
        $beef = '0';
        $pork = '0';
        $sql = "SELECT * FROM `tblusers` WHERE `user_id` = '" . $user_id . "' ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $food_veg_nonveg = stripslashes($row['food_veg_nonveg']);
            $beef = stripslashes($row['beef']);
            $pork = stripslashes($row['pork']);
        }
        return array($food_veg_nonveg, $beef, $pork);
    }
    public function chkIfUserIsAdvisersReferrals($pro_user_id, $user_id) {
        $DBH = new DatabaseHandler();
        $return = false;
        $user_email = $this->getUserEmailById($user_id);
        $pro_user_email = $this->getProUserEmailById($pro_user_id);
        //$sql = "SELECT * FROM `tbladviserreferrals` WHERE `pro_user_id` = '".$pro_user_id."' AND `user_email` = '".$user_email."' AND `request_status` = '1'";
        $sql = "SELECT * FROM `tbladviserreferrals` WHERE (`user_id` = '" . $pro_user_id . "' AND `user_email` = '" . $user_email . "' AND `request_status` = '1' AND `invite_by_user` = '0') OR (`user_id` = '" . $user_id . "' AND `user_email` = '" . $pro_user_email . "' AND `request_status` = '1' AND `invite_by_user` = '1')";
        //echo '<br>'.$sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    //add by ample
    public function chkIfIsAdvisersReferralsData($pro_user_id, $user_id) {
        $DBH = new DatabaseHandler();
        $ar_id = $request_status=$last_status="";
        $user_email = $this->getUserEmailById($user_id);
        $pro_user_email = $this->getProUserEmailById($pro_user_id);
        $sql = "SELECT * FROM `tbladviserreferrals` WHERE (`vendor_id` = '" . $pro_user_id . "' AND `user_email` = '" . $user_email . "' AND `invite_by_user` = '0') OR (`user_id` = '" . $user_id . "' AND `user_email` = '" . $pro_user_email . "' AND `invite_by_user` = '1')";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $ar_id = $row['ar_id'];
            $request_status = $row['request_status'];
            $last_status=$row['last_status_updated_by_adviser'];
        }
        return array($ar_id, $request_status,$last_status);
    }
    public function getModuleWiseCriteriaOptions($user_id, $report_module, $pro_user_id, $module_criteria) {
        $option_str = '';
        if ($report_module == 'activity_report' || $report_module == '14') {
            if ($module_criteria == '3') {
                $sel = ' selected ';
            } else {
                $sel = '';
            }
            $option_str.= '<option value="3" ' . $sel . '>Duration</option>';
            if ($module_criteria == '4') {
                $sel = ' selected ';
            } else {
                $sel = '';
            }
            $option_str.= '<option value="4" ' . $sel . '>Time</option>';
        } elseif ($report_module == 'activity_analysis_report' || $report_module == '4') {
            if ($module_criteria == '3') {
                $sel = ' selected ';
            } else {
                $sel = '';
            }
            $option_str.= '<option value="3" ' . $sel . '>Duration</option>';
            if ($module_criteria == '4') {
                $sel = ' selected ';
            } else {
                $sel = '';
            }
            $option_str.= '<option value="4" ' . $sel . '>Time</option>';
            if ($module_criteria == '8') {
                $sel = ' selected ';
            } else {
                $sel = '';
            }
            $option_str.= '<option value="8" ' . $sel . '>Calories Burnt</option>';
        } elseif ($report_module == 'food_report' || $report_module == '1') {
            if ($module_criteria == '4') {
                $sel = ' selected ';
            } else {
                $sel = '';
            }
            $option_str.= '<option value="4" ' . $sel . '>Time</option>';
            if ($module_criteria == '5') {
                $sel = ' selected ';
            } else {
                $sel = '';
            }
            $option_str.= '<option value="5" ' . $sel . '>Quantity</option>';
            if ($module_criteria == '6') {
                $sel = ' selected ';
            } else {
                $sel = '';
            }
            $option_str.= '<option value="6" ' . $sel . '>My Desire</option>';
        } elseif ($report_module == 'meal_time_report' || $report_module == '5') {
            if ($module_criteria == '4') {
                $sel = ' selected ';
            } else {
                $sel = '';
            }
            $option_str.= '<option value="4" ' . $sel . '>Time</option>';
        } elseif ($report_module == 'bps_report' || $report_module == '22') {
        } elseif ($report_module == 'mdt_report' || $report_module == '24') {
            if ($module_criteria == '9') {
                $sel = ' selected ';
            } else {
                $sel = '';
            }
            $option_str.= '<option value="9" ' . $sel . '>Triggers</option>';
            if ($module_criteria == '3') {
                $sel = ' selected ';
            } else {
                $sel = '';
            }
            $option_str.= '<option value="3" ' . $sel . '>Duration</option>';
            if ($module_criteria == '4') {
                $sel = ' selected ';
            } else {
                $sel = '';
            }
            $option_str.= '<option value="4" ' . $sel . '>Time</option>';
        } elseif ($report_module == '') {
        } else {
            /*
            
            
            
            if($module_criteria == '1')
            
            
            
            {
            
            
            
            $sel = ' selected ';
            
            
            
            }
            
            
            
            else
            
            
            
            {
            
            
            
            $sel = '';
            
            
            
            }
            
            
            
            $option_str .= '<option value="1" '.$sel.'>My Target</option>';
            
            
            
            
            
            
            
            if($module_criteria == '2')
            
            
            
            {
            
            
            
            $sel = ' selected ';
            
            
            
            }
            
            
            
            else
            
            
            
            {
            
            
            
            $sel = '';
            
            
            
            }
            
            
            
            $option_str .= '<option value="2" '.$sel.'>My Adviser Target</option>';
            
            
            
            *
            
            
            
            */
        }
        if ($module_criteria == '7') {
            $sel = ' selected ';
        } else {
            $sel = '';
        }
        $option_str.= '<option value="7" ' . $sel . '>Days</option>';
        return $option_str;
    }
    public function getTriggerCriteriaOptions($user_id, $trigger_criteria) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $bms_id_str = '';
        $sql = "SELECT DISTINCT `bms_id` FROM `tblusersmdt` WHERE `user_id` = '" . $user_id . "' AND `bms_entry_type` = 'trigger' AND `bms_type` = 'bms'  AND `bms_id` > '0' AND `mdt_old_data` = '0' ";
        //echo '<br>'.$sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $bms_id_str.= $row['bms_id'] . ',';
            }
            $bms_id_str = substr($bms_id_str, 0, -1);
        }
        if ($bms_id_str != '') {
            $sql = "SELECT * FROM `tblbodymainsymptoms` WHERE `bms_id` IN (" . $bms_id_str . ") AND `bms_status` = '1' AND `bms_deleted` = '0' ORDER BY bms_name";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $chk_val = 'bms_' . $row['bms_id'];
                    if ($chk_val == $trigger_criteria) {
                        $sel = ' selected ';
                    } else {
                        $sel = '';
                    }
                    $option_str.= '<option value="' . $chk_val . '" ' . $sel . '>' . stripslashes($row['bms_name']) . '</option>';
                }
            }
        }
        $bms_id_str = '';
        $sql = "SELECT DISTINCT `bms_id` FROM `tblusersmdt` WHERE `user_id` = '" . $user_id . "' AND `bms_entry_type` = 'trigger' AND `bms_type` = 'adct'  AND `bms_id` > '0' AND `mdt_old_data` = '0' ";
        //echo '<br>'.$sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $bms_id_str.= $row['bms_id'] . ',';
            }
            $bms_id_str = substr($bms_id_str, 0, -1);
        }
        if ($bms_id_str != '') {
            $sql = "SELECT * FROM `tbladdictions` WHERE `adct_id` IN (" . $bms_id_str . ") ORDER BY situation";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $chk_val = 'adct_' . $row['adct_id'];
                    if ($chk_val == $trigger_criteria) {
                        $sel = ' selected ';
                    } else {
                        $sel = '';
                    }
                    $option_str.= '<option value="' . $chk_val . '" ' . $sel . '>' . stripslashes($row['situation']) . '</option>';
                }
            }
        }
        $bms_id_str = '';
        $sql = "SELECT DISTINCT `bms_id` FROM `tblusersmdt` WHERE `user_id` = '" . $user_id . "' AND `bms_entry_type` = 'trigger' AND `bms_type` = 'sleep'  AND `bms_id` > '0' AND `mdt_old_data` = '0' ";
        //echo '<br>'.$sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $bms_id_str.= $row['bms_id'] . ',';
            }
            $bms_id_str = substr($bms_id_str, 0, -1);
        }
        if ($bms_id_str != '') {
            $sql = "SELECT * FROM `tblsleeps` WHERE `sleep_id` IN (" . $bms_id_str . ") ORDER BY situation";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $chk_val = 'sleep_' . $row['sleep_id'];
                    if ($chk_val == $trigger_criteria) {
                        $sel = ' selected ';
                    } else {
                        $sel = '';
                    }
                    $option_str.= '<option value="' . $chk_val . '" ' . $sel . '>' . stripslashes($row['situation']) . '</option>';
                }
            }
        }
        $bms_id_str = '';
        $sql = "SELECT DISTINCT `bms_id` FROM `tblusersmdt` WHERE `user_id` = '" . $user_id . "' AND `bms_entry_type` = 'trigger' AND `bms_type` = 'gs'  AND `bms_id` > '0' AND `mdt_old_data` = '0' ";
        //echo '<br>'.$sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $bms_id_str.= $row['bms_id'] . ',';
            }
            $bms_id_str = substr($bms_id_str, 0, -1);
        }
        if ($bms_id_str != '') {
            $sql = "SELECT * FROM `tblgeneralstressors` WHERE `gs_id` IN (" . $bms_id_str . ") ORDER BY situation";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $chk_val = 'gs_' . $row['gs_id'];
                    if ($chk_val == $trigger_criteria) {
                        $sel = ' selected ';
                    } else {
                        $sel = '';
                    }
                    $option_str.= '<option value="' . $chk_val . '" ' . $sel . '>' . stripslashes($row['situation']) . '</option>';
                }
            }
        }
        $bms_id_str = '';
        $sql = "SELECT DISTINCT `bms_id` FROM `tblusersmdt` WHERE `user_id` = '" . $user_id . "' AND `bms_entry_type` = 'trigger' AND `bms_type` = 'wae'  AND `bms_id` > '0' AND `mdt_old_data` = '0' ";
        //echo '<br>'.$sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $bms_id_str.= $row['bms_id'] . ',';
            }
            $bms_id_str = substr($bms_id_str, 0, -1);
        }
        if ($bms_id_str != '') {
            $sql = "SELECT * FROM `tblworkandenvironments` WHERE `wae_id` IN (" . $bms_id_str . ") ORDER BY situation";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $chk_val = 'wae_' . $row['wae_id'];
                    if ($chk_val == $trigger_criteria) {
                        $sel = ' selected ';
                    } else {
                        $sel = '';
                    }
                    $option_str.= '<option value="' . $chk_val . '" ' . $sel . '>' . stripslashes($row['situation']) . '</option>';
                }
            }
        }
        $bms_id_str = '';
        $sql = "SELECT DISTINCT `bms_id` FROM `tblusersmdt` WHERE `user_id` = '" . $user_id . "' AND `bms_entry_type` = 'trigger' AND `bms_type` = 'mc'  AND `bms_id` > '0' AND `mdt_old_data` = '0' ";
        //echo '<br>'.$sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $bms_id_str.= $row['bms_id'] . ',';
            }
            $bms_id_str = substr($bms_id_str, 0, -1);
        }
        if ($bms_id_str != '') {
            $sql = "SELECT * FROM `tblmycommunications` WHERE `mc_id` IN (" . $bms_id_str . ") ORDER BY situation";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $chk_val = 'mc_' . $row['mc_id'];
                    if ($chk_val == $trigger_criteria) {
                        $sel = ' selected ';
                    } else {
                        $sel = '';
                    }
                    $option_str.= '<option value="' . $chk_val . '" ' . $sel . '>' . stripslashes($row['situation']) . '</option>';
                }
            }
        }
        $bms_id_str = '';
        $sql = "SELECT DISTINCT `bms_id` FROM `tblusersmdt` WHERE `user_id` = '" . $user_id . "' AND `bms_entry_type` = 'trigger' AND `bms_type` = 'mr'  AND `bms_id` > '0' AND `mdt_old_data` = '0' ";
        //echo '<br>'.$sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $bms_id_str.= $row['bms_id'] . ',';
            }
            $bms_id_str = substr($bms_id_str, 0, -1);
        }
        if ($bms_id_str != '') {
            $sql = "SELECT * FROM `tblmyrelations` WHERE `mr_id` IN (" . $bms_id_str . ") ORDER BY situation";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $chk_val = 'mr_' . $row['mr_id'];
                    if ($chk_val == $trigger_criteria) {
                        $sel = ' selected ';
                    } else {
                        $sel = '';
                    }
                    $option_str.= '<option value="' . $chk_val . '" ' . $sel . '>' . stripslashes($row['situation']) . '</option>';
                }
            }
        }
        $bms_id_str = '';
        $sql = "SELECT DISTINCT `bms_id` FROM `tblusersmdt` WHERE `user_id` = '" . $user_id . "' AND `bms_entry_type` = 'trigger' AND `bms_type` = 'mle'  AND `bms_id` > '0' AND `mdt_old_data` = '0' ";
        //echo '<br>'.$sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $bms_id_str.= $row['bms_id'] . ',';
            }
            $bms_id_str = substr($bms_id_str, 0, -1);
        }
        if ($bms_id_str != '') {
            $sql = "SELECT * FROM `tblmajorlifeevents` WHERE `mle_id` IN (" . $bms_id_str . ") ORDER BY situation";
            //echo '<br>'.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $chk_val = 'mle_' . $row['mle_id'];
                    if ($chk_val == $trigger_criteria) {
                        $sel = ' selected ';
                    } else {
                        $sel = '';
                    }
                    $option_str.= '<option value="' . $chk_val . '" ' . $sel . '>' . stripslashes($row['situation']) . '</option>';
                }
            }
        }
        return $option_str;
    }
    public function getModuleWiseCriteriaScaleOptions($user_id, $report_module, $pro_user_id, $module_criteria, $criteria_scale_range) {
        $option_str = '';
        //echo 'module_criteria = '.$module_criteria;
        if ($module_criteria == '6') {
            $arr_scale_range = array(5 => '=(Equal)');
        } elseif ($module_criteria == '7') {
            $arr_scale_range = array(5 => '=(Equal)', 6 => 'Range');
        } else {
            $arr_scale_range = array(1 => '<(Less Than)', 2 => '>(Greater Than)', 3 => ' &le; (Less than or Equal to)', 4 => ' &ge; (Greater than or Equal to)', 5 => '=(Equal)', 6 => 'Range');
        }
        foreach ($arr_scale_range as $k => $v) {
            if ($k == $criteria_scale_range) {
                $selected = ' selected ';
            } else {
                $selected = '';
            }
            $option_str.= '<option value="' . $k . '" ' . $selected . ' >' . $v . '</option>';
        }
        return $option_str;
    }
    public function getModuleWiseCriteriaScaleValues($user_id, $report_module, $pro_user_id, $module_criteria, $criteria_scale_range, $start_criteria_scale_value, $end_criteria_scale_value) {
        $option_str = '';
        if ($criteria_scale_range == '') {
            $div_start_criteria_scale_value = 'none';
            $div_end_criteria_scale_value = 'none';
            $start_criteria_scale_value = '';
            $end_criteria_scale_value = '';
        } elseif ($criteria_scale_range == '6') {
            $div_start_criteria_scale_value = '';
            $div_end_criteria_scale_value = '';
            $option_str.= '<span class="Header_brown"><strong>Criteria Value:</strong>&nbsp;&nbsp;&nbsp;</span>';
        } else {
            $div_start_criteria_scale_value = '';
            $div_end_criteria_scale_value = 'none';
            $end_criteria_scale_value = '';
            $option_str.= '<span class="Header_brown"><strong>Criteria Value:</strong>&nbsp;&nbsp;&nbsp;</span>';
        }
        //echo 'module_criteria = '.$module_criteria;
        if ($module_criteria == '1' || $module_criteria == '2' || $module_criteria == '9') {
            $option_str.= '<span id="div_start_criteria_scale_value" style="display:' . $div_start_criteria_scale_value . '">



                        <select name="start_criteria_scale_value" id="start_criteria_scale_value" style="width:50px;">



                        ';
            for ($i = 1;$i <= 10;$i++) {
                if ($i == $start_criteria_scale_value) {
                    $sel = ' selected ';
                } else {
                    $sel = '';
                }
                $option_str.= '<option value="' . $i . '" ' . $sel . '>' . $i . '</option>';
            }
            $option_str.= '</select></span>';
            $option_str.= '<span id="div_end_criteria_scale_value" style="display:' . $div_end_criteria_scale_value . '">



                        &nbsp; - &nbsp;



                        <select name="end_criteria_scale_value" id="end_criteria_scale_value" style="width:50px;">



                        ';
            for ($i = 1;$i <= 10;$i++) {
                if ($i == $end_criteria_scale_value) {
                    $sel = ' selected ';
                } else {
                    $sel = '';
                }
                $option_str.= '<option value="' . $i . '" ' . $sel . '>' . $i . '</option>';
            }
            $option_str.= '</select></span>';
        } elseif ($module_criteria == '4') {
            $option_str.= '<span id="div_start_criteria_scale_value" style="display:' . $div_start_criteria_scale_value . '">';
            $option_str.= '<select name="start_criteria_scale_value" id="start_criteria_scale_value" style="width:100px;">



                        ';
            $option_str.= $this->getTimeOptions(0, 24, $start_criteria_scale_value);
            $option_str.= '</select>';
            $option_str.= '</span>';
            $option_str.= '<span id="div_end_criteria_scale_value" style="display:' . $div_end_criteria_scale_value . '">



                        &nbsp; - &nbsp;';
            $option_str.= '<select name="end_criteria_scale_value" id="end_criteria_scale_value" style="width:100px;">



                        ';
            $option_str.= $this->getTimeOptions(0, 24, $end_criteria_scale_value);
            $option_str.= '</select>';
            $option_str.= '</span>';
        } elseif ($module_criteria == '5') {
            $option_str.= '<span id="div_start_criteria_scale_value" style="display:' . $div_start_criteria_scale_value . '">';
            $option_str.= '<select name="start_criteria_scale_value" id="start_criteria_scale_value" style="width:100px;">



                        ';
            $option_str.= $this->getMealQuantityOptions($start_criteria_scale_value);
            $option_str.= '</select>';
            $option_str.= '</span>';
            $option_str.= '<span id="div_end_criteria_scale_value" style="display:' . $div_end_criteria_scale_value . '">



                        &nbsp; - &nbsp;';
            $option_str.= '<select name="end_criteria_scale_value" id="end_criteria_scale_value" style="width:100px;">



                        ';
            $option_str.= $this->getMealQuantityOptions($end_criteria_scale_value);
            $option_str.= '</select>';
            $option_str.= '</span>';
        } elseif ($module_criteria == '6') {
            $option_str.= '<span id="div_start_criteria_scale_value" style="display:' . $div_start_criteria_scale_value . '">';
            $option_str.= '<select name="start_criteria_scale_value" id="start_criteria_scale_value" style="width:100px;">



                        ';
            $option_str.= $this->getMealLikeOptions($start_criteria_scale_value);
            $option_str.= '</select>';
            $option_str.= '</span>';
            $option_str.= '<span id="div_end_criteria_scale_value" style="display:' . $div_end_criteria_scale_value . '">';
            $option_str.= '<input type="hidden" name="end_criteria_scale_value" id="end_criteria_scale_value" value="' . $end_criteria_scale_value . '">';
            $option_str.= '</span>';
        } elseif ($module_criteria == '7') {
            $option_str.= '<span id="div_start_criteria_scale_value" style="display:' . $div_start_criteria_scale_value . '">';
            $option_str.= '<select name="start_criteria_scale_value" id="start_criteria_scale_value" style="width:100px;">



                        ';
            $option_str.= $this->getDayOfWeekOptions($start_criteria_scale_value);
            $option_str.= '</select>';
            $option_str.= '</span>';
            $option_str.= '<span id="div_end_criteria_scale_value" style="display:' . $div_end_criteria_scale_value . '">&nbsp; - &nbsp';
            $option_str.= '<select name="end_criteria_scale_value" id="end_criteria_scale_value" style="width:100px;">



                        ';
            $option_str.= $this->getDayOfWeekOptions($end_criteria_scale_value);
            $option_str.= '</select>';
            $option_str.= '</span>';
        } elseif ($module_criteria == '3') {
            $option_str.= '<span id="div_start_criteria_scale_value" style="display:' . $div_start_criteria_scale_value . '">



                        <input style="width:50px;" maxlength="3" type="text" name="start_criteria_scale_value" id="start_criteria_scale_value" value="' . $start_criteria_scale_value . '"> (Mins)</span>';
            $option_str.= '<span id="div_end_criteria_scale_value" style="display:' . $div_end_criteria_scale_value . '">&nbsp; - &nbsp;



                        <input style="width:50px;" maxlength="3" type="text" name="end_criteria_scale_value" id="end_criteria_scale_value" value="' . $end_criteria_scale_value . '"> (Mins)</span>';
        } elseif ($module_criteria == '8') {
            $option_str.= '<span id="div_start_criteria_scale_value" style="display:' . $div_start_criteria_scale_value . '">



                        <input style="width:50px;" maxlength="4" type="text" name="start_criteria_scale_value" id="start_criteria_scale_value" value="' . $start_criteria_scale_value . '"></span>';
            $option_str.= '<span id="div_end_criteria_scale_value" style="display:' . $div_end_criteria_scale_value . '">&nbsp; - &nbsp;



                        <input style="width:50px;" maxlength="4" type="text" name="end_criteria_scale_value" id="end_criteria_scale_value" value="' . $end_criteria_scale_value . '"></span>';
        } else {
            $option_str.= '<span id="div_start_criteria_scale_value" style="display:' . $div_start_criteria_scale_value . '">



                        <input type="hidden" name="start_criteria_scale_value" id="start_criteria_scale_value" value="' . $start_criteria_scale_value . '"></span>';
            $option_str.= '<span id="div_end_criteria_scale_value" style="display:' . $div_end_criteria_scale_value . '">



                        <input type="hidden" name="end_criteria_scale_value" id="end_criteria_scale_value" value="' . $end_criteria_scale_value . '"></span>';
        }
        return $option_str;
    }
    public function getTimeOptions($start_time, $end_time, $time) {
        $start = $start_time * 60 + 0;
        $end = $end_time * 60 + 0;
        for ($i = $start;$i < $end;$i+= 15) {
            $minute = $i % 60;
            $hour = ($i - $minute) / 60;
            if (($hour >= 24) && ($hour <= 36)) {
                $hour = $hour - 24;
            }
            if (($hour >= 0) && ($hour < 12)) {
                $str = 'AM';
            } else {
                $str = 'PM';
            }
            $val = sprintf('%02d:%02d', $hour, $minute);
            $val = $val . ' ' . $str;
            if ($time == $val) {
                $selected = ' selected ';
            } else {
                $selected = '';
            }
            $option_str.= '<option value="' . $val . '" ' . $selected . ' >' . $val . '</option>';
        }
        return $option_str;
    }
    public function getMealQuantityOptions($breakfast_quantity) {
        $option_str = '';
        if ($breakfast_quantity == '1') {
            $sel = ' selected ';
        } else {
            $sel = '';
        }
        $option_str.= '<option value="1" ' . $sel . '>1</option>';
        if ($breakfast_quantity == '1/4') {
            $sel = ' selected ';
        } else {
            $sel = '';
        }
        $option_str.= '<option value="1/4" ' . $sel . '>1/4</option>';
        if ($breakfast_quantity == '1/3') {
            $sel = ' selected ';
        } else {
            $sel = '';
        }
        $option_str.= '<option value="1/3" ' . $sel . '>1/3</option>';
        if ($breakfast_quantity == '1/2') {
            $sel = ' selected ';
        } else {
            $sel = '';
        }
        $option_str.= '<option value="1/2" ' . $sel . '>1/2</option>';
        if ($breakfast_quantity == '2') {
            $sel = ' selected ';
        } else {
            $sel = '';
        }
        $option_str.= '<option value="2" ' . $sel . '>2</option>';
        if ($breakfast_quantity == '2/3') {
            $sel = ' selected ';
        } else {
            $sel = '';
        }
        $option_str.= '<option value="2/3" ' . $sel . '>2/3</option>';
        for ($j = 3;$j <= 1000;$j++) {
            if ($breakfast_quantity == $j) {
                $sel = ' selected ';
            } else {
                $sel = '';
            }
            $option_str.= '<option value="' . $j . '" ' . $sel . '>' . $j . '</option>';
        }
        return $option_str;
    }
    public function getMealLikeOptions($breakfast_meal_like) {
        $arr_food_like = array('Like', 'Dislike', 'Favourite', 'Allergic');
        $option_str = '';
        for ($i = 0;$i < count($arr_food_like);$i++) {
            if ($breakfast_meal_like == $arr_food_like[$i]) {
                $sel = ' selected ';
            } else {
                $sel = '';
            }
            $option_str.= '<option value="' . $arr_food_like[$i] . '" ' . $sel . '>' . $arr_food_like[$i] . '</option>';
        }
        if ($breakfast_meal_like == '') {
            $sel = ' selected ';
        } else {
            $sel = '';
        }
        $option_str.= '<option value="" ' . $sel . '>None</option>';
        return $option_str;
    }
    public function getDayOfWeekOptions($day_of_week) {
        $option_str = '';
        $arr_day_of_week = array(0 => 'Sunday', 1 => 'Monday', 2 => 'Tuesday', 3 => 'Wednesday', 4 => 'Thursday', 5 => 'Friday', 6 => 'Saturday');
        foreach ($arr_day_of_week as $k => $v) {
            if ($k == $day_of_week) {
                $selected = ' selected ';
            } else {
                $selected = '';
            }
            $option_str.= '<option value="' . $k . '" ' . $selected . ' >' . $v . '</option>';
        }
        return $option_str;
    }
    public function getAgeOfUser($user_id) {
        $dob = getDOBOfUser($user_id);
        $age = convertDobToAge($dob);
        return $age;
    }
    public function getDOBOfUser($user_id) {
        $DBH = new DatabaseHandler();
        $dob = '0000-00-00';
        $sql = "SELECT * FROM `tblusers` WHERE `user_id` = '" . $user_id . "' ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $dob = stripslashes($row['dob']);
        }
        return $dob;
    }
    public function convertDobToAge($dob) {
        // See http://php.net/date for what the first arguments mean.
        $iDiffYear = date('Y') - date('Y', strtotime($dob));
        $iDiffMonth = date('n') - date('n', strtotime($dob));
        $iDiffDay = date('j') - date('j', strtotime($dob));
        // If birthday has not happen yet for this year, subtract 1.
        if ($iDiffMonth < 0 || ($iDiffMonth == 0 && $iDiffDay < 0)) {
            $iDiffYear--;
        }
        return $iDiffYear;
    }
    public function getHeightOfUser($user_id) {
        $DBH = new DatabaseHandler();
        $height = 0;
        $height_id = $this->getHeightIdOfUser($user_id);
        $sql = "SELECT * FROM `tblheights` WHERE `height_id` = '" . $height_id . "' ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $height = stripslashes($row['height_cms']);
        }
        return $height;
    }
    public function getHeightIdOfUser($user_id) {
        $DBH = new DatabaseHandler();
        $height = 0;
        $sql = "SELECT * FROM `tblusers` WHERE `user_id` = '" . $user_id . "' ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $row = $STH->fetch(PDO::FETCH_ASSOC);
            $height = stripslashes($row['height']);
        }
        return $height;
    }
    // public function getWeightOfUser($user_id)
    // {
    // 	$DBH = new DatabaseHandler();
    // 	$weight = 0;
    // 	$sql = "SELECT * FROM `tblusers` WHERE `user_id` = '".$user_id."' ";
    // 	$STH = $DBH->query($sql);
    //         if($STH->rowCount() > 0)
    //         {
    // 		$row = $STH->fetch(PDO::FETCH_ASSOC);
    // 		$weight = stripslashes($row['weight']);
    // 	}
    // 	return $weight;
    // }
    public function Get_Digital_Life_drop($page_id) {
        // echo "hi";
        // exit;
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $option_str = '';
        $sql = "SELECT * FROM `tblpagedropdowns` WHERE `pdm_id` = '18' AND `pd_deleted` = '0' ";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $page_id_str = stripslashes($row['page_id_str']);
            $sql2 = "SELECT * FROM `tblpages` WHERE `page_id` IN (" . $page_id_str . ") AND `show_in_list` = '1' AND `adviser_panel` = '0' AND `vender_panel` = '0' ORDER BY `menu_title` ASC";
            //$sql = "SELECT * FROM `tblpages` WHERE  AND `show_in_feedback` = '1' ORDER BY `page_name` ASC";
            //echo $sql;
            $STH2 = $DBH->prepare($sql2);
            $STH2->execute();
            if ($STH2->rowCount() > 0) {
                if ($page_id == 0) {
                    $sel = ' selected ';
                } else {
                    $sel = '';
                }
                $option_str.= '<option value="0" ' . $sel . '>Select</option>';
                while ($row = $STH2->fetch(PDO::FETCH_ASSOC)) {
                    if ($row['page_id'] == $page_id) {
                        $sel = ' selected ';
                    } else {
                        $sel = '';
                    }
                    $option_str.= '<option value="' . $row['page_id'] . '" ' . $sel . '>' . stripslashes($row['page_name']) . '</option>';
                }
            }
        }
        return $option_str;
    }
    public function getPageLinkByid($page_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $menu_link = '';
        $sql = "SELECT * FROM `tblpages` WHERE `page_id` ='" . $page_id . "' AND `adviser_panel` = '0' AND `vender_panel` = '0' ORDER BY `menu_title` ASC";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $menu_link = $row['menu_link'];
        }
        return $menu_link;
    }
    public function GETMYDAYTODAYKEWORD($user_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $option_str = '';
        $sql = "SELECT DISTINCT(bms_name) FROM `tblusersmdt` WHERE `user_id` = '" . $user_id . "' ";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            if ($page_id == 0) {
                $sel = ' selected ';
            } else {
                $sel = '';
            }
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                if ($row['bms_name'] == $page_id) {
                    $sel = ' selected ';
                } else {
                    $sel = '';
                }
                $option_str.= '<option value="' . $row['bms_name'] . '" ' . $sel . '>' . stripslashes($row['bms_name']) . '</option>';
            }
        }
        return $option_str;
    }
    public function GETMYCANVASKEWORD($user_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $option_str = '';
        $sql = "SELECT DISTINCT(main_tab) FROM `tbl_mycanvas` WHERE `user_id` = '" . $user_id . "' ";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            if ($page_id == 0) {
                $sel = ' selected ';
            } else {
                $sel = '';
            }
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                if ($row['main_tab'] == $page_id) {
                    $sel = ' selected ';
                } else {
                    $sel = '';
                }
                $option_str.= '<option value="' . $row['main_tab'] . '" ' . $sel . '>' . stripslashes($row['main_tab']) . '</option>';
            }
        }
        return $option_str;
    }
    public function GETMYDESIGNKEWORD($user_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $option_str = '';
        $sql = "SELECT DISTINCT(box_title) FROM `tbl_user_design_your_data` WHERE `user_id` = '" . $user_id . "' ";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            if ($page_id == 0) {
                $sel = ' selected ';
            } else {
                $sel = '';
            }
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                if ($row['box_title'] == $page_id) {
                    $sel = ' selected ';
                } else {
                    $sel = '';
                }
                $option_str.= '<option value="' . $row['box_title'] . '" ' . $sel . '>' . stripslashes($row['box_title']) . '</option>';
            }
        }
        return $option_str;
    }
    public function GETDesignData($sub_cat_id, $day_month_year) {
        $DBH = new DatabaseHandler();
        $data = array();
        $sql = "SELECT * FROM `tbl_design_your_life` WHERE  sub_cat_id = '" . $sub_cat_id . "' and `status` = '1' ";
        $STH = $DBH->query($sql);
        $single_date = date("Y-m-d", strtotime($day_month_year));
        //echo '<br>';
        $all = date("d", strtotime($day_month_year));
        //echo '<br>';
        $month_wise = date("m", strtotime($day_month_year));
        //echo '<br>';
        $days_of_week = date('w', strtotime($day_month_year));
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                if ($row['listing_date_type'] == 'single_date') {
                    if ($single_date == $row['single_date']) {
                        $data[] = $row;
                    }
                } elseif ($row['listing_date_type'] == 'all') {
                    $all_arr = explode(',', $row['days_of_month']);
                    if (in_array($all, $all_arr)) {
                        $data[] = $row;
                    }
                } elseif ($row['listing_date_type'] == 'days_of_month') {
                    $all_arr = explode(',', $row['days_of_month']);
                    if (in_array($all, $all_arr)) {
                        $data[] = $row;
                    }
                } elseif ($row['listing_date_type'] == 'date_range') {
                    if (($row['start_date'] <= $single_date) && ($row['end_date'] >= $single_date)) {
                        $data[] = $row;
                    }
                } elseif ($row['listing_date_type'] == 'month_wise') {
                    $all_arr = explode(',', $row['months']);
                    if (in_array($month_wise, $all_arr)) {
                        $data[] = $row;
                    }
                } elseif ($row['listing_date_type'] == 'days_of_week') {
                    $all_arr = explode(',', $row['days_of_week']);
                    if (in_array($days_of_week, $all_arr)) {
                        $data[] = $row;
                    }
                }
            }
        }
        return $data;
    }
    /* query update by ample 25-10-19 remove  tar.invite_by_user = '1'  */
    public function getAllMyAdviserInvitationsByUserID($user_id, $vendor_id = '') {
        $search_vendor_id = $vendor_id != '' ? ' AND tar.vendor_id="' . $vendor_id . '"' : '';
        $DBH = new DatabaseHandler();
        $temp_arr = array();
        $sql = "SELECT * FROM `tbladviserreferrals` AS tar LEFT JOIN `tblvendors` AS tpf ON tar.vendor_id = tpf.vendor_id WHERE (tar.request_status = '1' OR tar.request_status = '3') AND tar.user_id='" . $user_id . "' " . $search_vendor_id . " ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $temp_arr[] = $row;
            }
        }
        return $temp_arr;
    }
    public function getAllMyAdviserInvitations($user_id, $vendor_id = '') {
        $DBH = new DatabaseHandler();
        $temp_arr = array();
        if ($vender_id != '') {
            $str_sql_vendor_id = " AND tar.vendor_id = '" . $vendor_id . "' ";
        } else {
            $str_sql_vendor_id = "";
        }
        //update queary by ample 26-10-19
        //$sql="SELECT * FROM `tbladviserreferrals` AS tar LEFT JOIN `tblvendors` AS tpf ON tar.vendor_id = tpf.vendor_id WHERE tar.invite_by_user = '1' AND (tar.request_status = '1' OR tar.request_status = '3') AND tar.user_id";
        if ($vendor_id) {
            $sql = "SELECT * FROM `tbladviserreferrals` AS tar LEFT JOIN `tblvendors` AS tpf ON tar.vendor_id = tpf.vendor_id WHERE  (tar.request_status = '1' OR tar.request_status = '3') AND tar.user_id=" . $user_id . " AND tar.vendor_id=" . $vendor_id;
        } else {
            $sql = "SELECT * FROM `tbladviserreferrals` AS tar LEFT JOIN `tblvendors` AS tpf ON tar.vendor_id = tpf.vendor_id WHERE (tar.request_status = '1' OR tar.request_status = '3') AND tar.user_id=" . $user_id;
        }
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $temp_arr[] = $row;
            }
        }
        return $temp_arr;
    }
    public function getAdviserStatusActivationsRecords($ar_id, $user_id, $vendor_id) {
        $DBH = new DatabaseHandler();
        $arr_record = array();
        $sql = "SELECT * FROM `tbladviseractivation` WHERE  `ar_id` = '" . $ar_id . "' AND `user_id` = '" . $user_id . "'AND `vendor_id`='" . $vendor_id . "' ORDER BY aa_add_date DESC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $arr_record[] = $row;
            }
        }
        return $arr_record;
    }
    public function getUsersAllAdviserOptions($user_id, $pro_user_id) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $email = $this->getUserEmailById($user_id);
        $sql = "SELECT tar.* , tpu.name FROM `tbladviserreferrals` AS tar " . "LEFT JOIN `tblprofusers` AS tpu ON tar.pro_user_id = tpu.pro_user_id  " . "WHERE tar.user_email = '" . $email . "' AND tar.invite_by_user = '0'" . "ORDER BY tpu.name ASC";
        //echo $sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                if ($row['pro_user_id'] == $pro_user_id) {
                    $sel = ' selected ';
                } else {
                    $sel = '';
                }
                $option_str.= '<option value="' . $row['pro_user_id'] . '" ' . $sel . '>' . stripslashes($row['name']) . '</option>';
            }
        }
        $sql = "SELECT tar.*, tpu.name , tpu.pro_user_id AS puser_id FROM `tbladviserreferrals` AS tar " . "LEFT JOIN `tblprofusers` AS tpu ON tar.user_email = tpu.email  " . "WHERE tar.pro_user_id = '" . $user_id . "' AND tar.invite_by_user = '1' " . "ORDER BY tpu.name ASC";
        //echo $sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                if ($row['puser_id'] == $pro_user_id) {
                    $sel = ' selected ';
                } else {
                    $sel = '';
                }
                $option_str.= '<option value="' . $row['puser_id'] . '" ' . $sel . '>' . stripslashes($row['name']) . '</option>';
            }
        }
        return $option_str;
    }
    public function getUsersAcceptedAdviserOptions($user_id, $vendor_id = '') {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $sql = "SELECT tar.* ,tpu.vendor_name FROM `tbladviserreferrals` AS tar " . "LEFT JOIN `tblvendors` AS tpu ON tar.vendor_id = tpu.vendor_id  " . "WHERE ( tar.request_status = '1' OR tar.request_status = '3') AND tar.user_id='" . $user_id . "'" . "ORDER BY tpu.vendor_name ASC";
        $STH = $DBH->query($sql);
        $option_str = '<option value="">All Advisers</option>';
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                if ($row['vendor_id'] != 0 && $row['vendor_id'] != '') {
                    if ($row['vendor_id'] == $vendor_id) {
                        $option_str.= '<option value="' . $row['vendor_id'] . '" selected>' . $row['vendor_name'] . '</option>';
                    } else {
                        $option_str.= '<option value="' . $row['vendor_id'] . '">' . $row['vendor_name'] . '</option>';
                    }
                }
            }
        }
        return $option_str;
    }
    //copyb by ample 23-07-20
    public function getUsersAcceptedAdviserOptionsNew($user_id, $vendor_id = '') {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $sql = "SELECT tar.* ,tpu.vendor_name FROM `tbladviserreferrals` AS tar " . "LEFT JOIN `tblvendors` AS tpu ON tar.vendor_id = tpu.vendor_id  " . "WHERE ( tar.request_status = '1' OR tar.request_status = '3') AND tar.user_id='" . $user_id . "'" . "ORDER BY tpu.vendor_name ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                if ($row['vendor_id'] != 0 && $row['vendor_id'] != '') {
                    if ($row['vendor_id'] == $vendor_id) {
                        $option_str.= '<option value="' . $row['vendor_id'] . '" selected>' . $row['vendor_name'] . '</option>';
                    } else {
                        $option_str.= '<option value="' . $row['vendor_id'] . '">' . $row['vendor_name'] . '</option>';
                    }
                }
            }
        }
        return $option_str;
    }
    //update function by ample 30-10-19
    public function getAdviserReportsPermissions($user_id, $pro_user_id, $ar_id) {
        $DBH = new DatabaseHandler();
        $temp_arr = array();
        //update queary by ample 26-10-19
        $sql = "SELECT * FROM `tbladviserreportpermission` WHERE `user_id` = '" . $user_id . "' AND `pro_user_id` = '" . $pro_user_id . "' AND `ar_id` = '" . $ar_id . "' ORDER BY `arp_add_date` DESC";
        //$sql = "SELECT * FROM `tbladviserreportpermission` WHERE `ar_id` = '".$ar_id."' ORDER BY `arp_add_date` DESC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $temp_arr[] = $row;
                //echo '<br><br><pre>';
                //print_r($row);
                //echo '<br></pre>';
                
            }
        }
        return $temp_arr;
    }
    //function update by ample 30-10-19
    public function getReportTypeNameString($str_report_id, $str_permission_type) {
        $DBH = new DatabaseHandler();
        $output = '';
        if ($str_report_id != '') {
            $arr_temp_report_id = explode(',', $str_report_id);
            $arr_temp_permission_type = explode(',', $str_permission_type);
            for ($i = 0;$i < count($arr_temp_report_id);$i++) {
                //update query
                $sql = "SELECT * FROM `tbl_recordshow_dropdown` WHERE `page_cat_id`  = '" . $arr_temp_report_id[$i] . "'";
                //$sql = "SELECT * FROM `tblpages` WHERE `page_id`  = '".$arr_temp_report_id[$i]."'";
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    $row = $STH->fetch(PDO::FETCH_ASSOC);
                    //comment by ample beacuse not use 30-10-19
                    // if($arr_temp_permission_type[$i] == '2')
                    // {
                    // 	$temp_permission_type = 'Standard Set';
                    // }
                    // elseif($arr_temp_permission_type[$i] == '3')
                    // {
                    // 	$temp_permission_type = 'Adviser Set';
                    // }
                    // else
                    // {
                    // 	$temp_permission_type = 'Both Set';
                    // }
                    //$output .= $row['page_name'].'('.$temp_permission_type.'), ';
                    $output.= $row['report_name'];
                    $output.= ',';
                }
            }
            $output = substr($output, 0, -2);
        }
        return $output;
    }
    // Commenent date 10-5-2019   as changing pro_user_id to vendor id in copy
    // public function getUsersAllAdviserQueries($user_id,$pro_user_id,$pg_id,$start_date,$end_date,$search_keywords)
    // {
    // 	$DBH = new DatabaseHandler();
    // 	$arr_aq_id = array();
    // 	$arr_aq_user_unique_id = array();
    // 	$arr_page_id = array();
    // 	$arr_permission_type = array();
    // 	$arr_user_id = array();
    // 	$arr_name = array();
    // 	$arr_email = array();
    // 	$arr_feedback = array();
    // 	$arr_pro_user_id = array();
    // 	$arr_feedback_add_date = array();
    // 	$arr_user_read = array();
    // 	$arr_pro_user_read = array();
    // 	if($pro_user_id != '')
    // 	{
    // 		$str_sql_pro_user_id = " AND `pro_user_id` = '".$pro_user_id."' ";
    // 	}
    // 	else
    // 	{
    // 		$str_sql_pro_user_id = '';
    // 	}
    // 	if($pg_id != '')
    // 	{
    // 		$arr_temp = explode('_',$pg_id);
    // 		$temp_page_id = $arr_temp[0];
    // 		$temp_permission_type = $arr_temp[1];
    // 		$str_sql_pg_id = " AND `page_id` = '".$temp_page_id."' AND `permission_type` = '".$temp_permission_type."' ";
    // 	}
    // 	else
    // 	{
    // 		$str_sql_pg_id = '';
    // 	}
    // 	if($search_keywords != '')
    // 	{
    // 		$str_sql_search_keywords = " AND ( `query` LIKE '%".$search_keywords."%' OR `aq_user_unique_id` LIKE '%".$search_keywords."%' )";
    // 	}
    // 	else
    // 	{
    // 		$str_sql_search_keywords = '';
    // 	}
    // 	$sql = "SELECT * FROM `tbladviserqueries` WHERE  `user_id` = '".$user_id."' AND `parent_aq_id` = '0' AND `from_user` = '1' AND DATE(aq_add_date) >= '".date('Y-m-d',strtotime($start_date))."' AND DATE(aq_add_date) <= '".date('Y-m-d',strtotime($end_date))."' ".$str_sql_pro_user_id." ".$str_sql_pg_id." ".$str_sql_search_keywords."  ORDER BY `aq_add_date` DESC";
    // 	$STH = $DBH->query($sql);
    // 	if( $STH->rowCount() > 0 )
    //         {
    //             while($row = $STH->fetch(PDO::FETCH_ASSOC))
    //             {
    // 			array_push($arr_aq_id , stripslashes($row['aq_id']));
    // 			array_push($arr_aq_user_unique_id , stripslashes($row['aq_user_unique_id']));
    // 			array_push($arr_page_id , stripslashes($row['page_id']));
    // 			array_push($arr_permission_type , stripslashes($row['permission_type']));
    // 			array_push($arr_user_id , stripslashes($row['user_id']));
    // 			array_push($arr_name , stripslashes($row['user_name']));
    // 			array_push($arr_email , stripslashes($row['user_email']));
    // 			array_push($arr_feedback , stripslashes($row['query']));
    // 			array_push($arr_feedback_add_date , stripslashes($row['aq_add_date']));
    // 			array_push($arr_pro_user_id , stripslashes($row['pro_user_id']));
    // 			array_push($arr_user_read , stripslashes($row['user_read']));
    // 			array_push($arr_pro_user_read , stripslashes($row['pro_user_read']));
    // 		}
    // 	}
    // 	return array($arr_aq_id,$arr_aq_user_unique_id,$arr_page_id,$arr_permission_type,$arr_user_id,$arr_name,$arr_email,$arr_feedback,$arr_feedback_add_date,$arr_pro_user_id,$arr_user_read,$arr_pro_user_read);
    // }
    //update by ample 04-03-20
    public function getUsersAllAdviserQueries($user_id, $vendor_id, $pg_id, $start_date, $end_date, $search_keywords) {
        $DBH = new DatabaseHandler();
        $arr_aq_id = array();
        $arr_aq_user_unique_id = array();
        $arr_page_id = array();
        $arr_page_tbl = array();
        $arr_permission_type = array();
        $arr_user_id = array();
        $arr_name = array();
        $arr_email = array();
        $arr_feedback = array();
        $arr_vendor_id = array();
        $arr_feedback_add_date = array();
        $arr_user_read = array();
        $arr_pro_user_read = array();
        //add by ample 25-3-30
        $arr_from_user = array();
        if ($vendor_id != '') {
            $str_sql_pro_user_id = " AND `vendor_id` = '" . $vendor_id . "' ";
        } else {
            $str_sql_pro_user_id = '';
        }
        if ($pg_id != '') {
            //change by ample 04-03-20
            $arr_temp = explode('|', $pg_id);
            //$arr_temp = explode('_', $pg_id);
            $temp_page_id = $arr_temp[0];
            // $temp_permission_type = $arr_temp[1];
            $temp_page_tbl = $arr_temp[1];
            // $str_sql_pg_id = " AND `page_id` = '".$temp_page_id."' AND `permission_type` = '".$temp_permission_type."' ";
            $str_sql_pg_id = " AND `page_id` = '".$temp_page_id."' AND `page_table` = '".$temp_page_tbl."' ";
        } else {
            $str_sql_pg_id = '';
        }
        if ($search_keywords != '') {
            $str_sql_search_keywords = " AND ( `query` LIKE '%" . $search_keywords . "%' OR `aq_user_unique_id` LIKE '%" . $search_keywords . "%' )";
        } else {
            $str_sql_search_keywords = '';
        }
        //update by ample remove from_user=1 25-03-20
        $sql = "SELECT * FROM `tbladviserqueries` WHERE  `user_id` = '" . $user_id . "' AND `parent_aq_id` = '0' AND  DATE(aq_add_date) >= '" . date('Y-m-d', strtotime($start_date)) . "' AND DATE(aq_add_date) <= '" . date('Y-m-d', strtotime($end_date)) . "' " . $str_sql_pro_user_id . " " . $str_sql_pg_id . " " . $str_sql_search_keywords . "  ORDER BY `aq_add_date` DESC";
        $STH = $DBH->query($sql);


        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                
                array_push($arr_aq_id, stripslashes($row['aq_id']));
                array_push($arr_aq_user_unique_id, stripslashes($row['aq_user_unique_id']));
                array_push($arr_page_id, stripslashes($row['page_id']));
                array_push($arr_page_tbl, stripslashes($row['page_table'])); // update by ample;
                array_push($arr_permission_type, stripslashes($row['permission_type']));
                array_push($arr_user_id, stripslashes($row['user_id']));
                array_push($arr_name, stripslashes($row['user_name']));
                array_push($arr_email, stripslashes($row['user_email']));
                array_push($arr_feedback, stripslashes($row['query']));
                array_push($arr_feedback_add_date, stripslashes($row['aq_add_date']));
                array_push($arr_vendor_id, stripslashes($row['vendor_id']));
                array_push($arr_user_read, stripslashes($row['user_read']));
                array_push($arr_pro_user_read, stripslashes($row['pro_user_read']));
                array_push($arr_from_user, stripslashes($row['from_user']));
            }
        }
        /// update by ample;
        return array($arr_aq_id, $arr_aq_user_unique_id, $arr_page_id, $arr_page_tbl, $arr_permission_type, $arr_user_id, $arr_name, $arr_email, $arr_feedback, $arr_feedback_add_date, $arr_vendor_id, $arr_user_read, $arr_pro_user_read,$arr_from_user);
    }
    public function getAdviserQueryPageOptions($page_id, $user_id, $pro_user_id, $show_all) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        if ($page_id == '0_0') {
            $sel = ' selected ';
        } else {
            $sel = '';
        }
        //$option_str .= '<option value="0_0" '.$sel.'>My Query</option>';
        list($str_report_id, $str_permission_type) = $this->getUserAcceptedReportId($user_id, $pro_user_id);
        if ($str_report_id != '') {
            $arr_report_id = explode(',', $str_report_id);
            $arr_permission_type = explode(',', $str_permission_type);
            for ($i = 0;$i < count($arr_report_id);$i++) {
                $sql = "SELECT * FROM `tblusersreports` WHERE report_id = '".$arr_report_id[$i]."' ORDER BY `report_name` ASC";
                //commen 03-02-20
                //$sql = "SELECT * FROM `tblpagedropdowns` WHERE pd_id = '20' and  `pd_status` = 1 ";
                //echo $sql;
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    $row = $STH->fetch(PDO::FETCH_ASSOC);
                    $page_id_arr = explode(',', $row['page_id_str']);
                    //                            echo '<pre>';
                    //                            print_r($page_id_arr);
                    //                            echo '</pre>';
                    for ($i = 0;$i < count($page_id_arr);$i++)
                    //while($row = $STH->fetch(PDO::FETCH_ASSOC))
                    {
                        if ($page_id == $page_id_arr[$i] . '_1') {
                            $sel1 = '';
                            $sel2 = ' selected ';
                        } elseif ($page_id == $page_id_arr[$i] . '_0') {
                            $sel1 = ' selected ';
                            $sel2 = '';
                        } else {
                            $sel1 = '';
                            $sel2 = '';
                        }
                        if ($arr_permission_type[$i] == '2') {
                            $option_str.= '<option value="' . $page_id_arr[$i] . '_0" ' . $sel1 . '>' . $this->get_PageName($page_id_arr[$i]) . ' (Standard Set)</option>';
                        } elseif ($arr_permission_type[$i] == '3') {
                            $option_str.= '<option value="' . $page_id_arr[$i] . '_1" ' . $sel2 . '>' . $this->get_PageName($page_id_arr[$i]) . ' (Adviser Set)</option>';
                        } else {
                            $option_str.= '<option value="' . $page_id_arr[$i] . '_0" ' . $sel1 . '>' . $this->get_PageName($page_id_arr[$i]) . ' (Standard Set)</option>';
                            $option_str.= '<option value="' . $page_id_arr[$i] . '_1" ' . $sel2 . '>' . $this->get_PageName($page_id_arr[$i]) . ' (Adviser Set)</option>';
                        }
                    }
                }
            }
        } elseif ($show_all == '1') {
            //$sql = "SELECT * FROM `tblusersreports` ORDER BY `report_name` ASC";
            $sql = "SELECT * FROM `tblpagedropdowns` WHERE pd_id = '20' and  `pd_status` = 1 ";
            //echo $sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $row = $STH->fetch(PDO::FETCH_ASSOC);
                //                    echo $row['page_id_str'];
                //                    die();
                $page_id_arr = explode(',', $row['page_id_str']);
                //                    echo '<pre>';
                //                            print_r($page_id_arr);
                //                            echo '</pre>';
                for ($i = 0;$i < count($page_id_arr);$i++)
                //while($row = $STH->fetch(PDO::FETCH_ASSOC))
                {
                    $sql2 = "SELECT * FROM `tbladviserplanatributes` WHERE `page_id` = '" . $page_id_arr[$i] . "' AND `apa_status` = '1' AND `show_for_user` = '1' ORDER BY `apa_id` DESC LIMIT 1";
                    //echo $sql;
                    $STH2 = $DBH->query($sql2);
                    if ($STH2->rowCount() > 0) {
                        $row2 = $STH2->fetch(PDO::FETCH_ASSOC);
                        $temp_apa_id = $row2['apa_id'];
                        if ($this->chkUserPlanFeaturePermission($user_id, $temp_apa_id)) {
                            if ($page_id == $page_id_arr[$i] . '_1') {
                                $sel1 = '';
                                $sel2 = ' selected ';
                            } elseif ($page_id == $page_id_arr[$i] . '_0') {
                                $sel1 = ' selected ';
                                $sel2 = '';
                            } else {
                                $sel1 = '';
                                $sel2 = '';
                            }
                            $option_str.= '<option value="' . $page_id_arr[$i] . '_0" ' . $sel1 . '>' . $this->get_PageName($page_id_arr[$i]) . ' (Standard Set)</option>';
                            $option_str.= '<option value="' . $page_id_arr[$i] . '_1" ' . $sel2 . '>' . $this->get_PageName($page_id_arr[$i]) . ' (Adviser Set)</option>';
                            //die();
                            
                        }
                    }
                }
            }
        }
        return $option_str;
    }
    //write by ample
    // public function getAdviserQueryReference($user_id="", $vendor_id="",$show_all='0') {
    //     $DBH = new DatabaseHandler();
    //     $option_str = '';
        
    //     if($show_all=='1')
    //     {
    //         $data=array();
    //         $sql = "SELECT * FROM `tblusersreports` WHERE report_status='1' ORDER BY `report_name` ASC";
    //         $STH = $DBH->query($sql);
    //         if ($STH->rowCount() > 0) 
    //         {
    //             while($row= $STH->fetch(PDO::FETCH_ASSOC))
    //             {   
    //                 $data[] = $row;
    //             }
    //         } 
    //         if(!empty($data))
    //         {
    //             foreach ($data as $key => $value) {
    //                     $option_str.= '<option value="' . $value["report_id"] .'|tblusersreports">' . $value["report_name"] .' </option>';
    //                 }
    //         }
            
    //     }
    //     else
    //     {
    //         $str_report_id = $this->selectReportName($vendor_id);
    //         if (!empty($str_report_id)) { 
    //             $arr_report_id = explode(',',$str_report_id);
    //             for ($i = 0;$i < count($arr_report_id);$i++) {
    //                 $sql = "SELECT * FROM `tblusersreports` WHERE report_id = '".$arr_report_id[$i]."' AND report_status='1' ORDER BY `report_name` ASC";
                   
    //                 $STH = $DBH->query($sql);
    //                 if ($STH->rowCount() > 0) {
    //                         $row = $STH->fetch(PDO::FETCH_ASSOC);
    //                         $option_str.= '<option value="' . $row["report_id"] .'|tblusersreports">' . $row["report_name"] .' </option>';
    //                     }
    //                 }
    //             }
    //     }

    //     $option_str.=$this->getManageFavCatDropdownData('36');
    //     return $option_str;
    // }
    //add by ample 03-03-20 & update 04-03-20 & again update 13-04-20 (table change tbluserreport to tbl_recordshow_dropdown)
	public function getAdviserQueryReference($user_id="", $vendor_id="",$show_all='0') {
        $DBH = new DatabaseHandler();
        $option_str = '';
		
		if($show_all=='1')
		{
			$data=array();
			$sql = "SELECT page_cat_id,report_name FROM `tbl_recordshow_dropdown` WHERE pag_cat_status='1' AND is_deleted='0' AND enduse='user' ORDER BY `report_name` ASC";
			$STH = $DBH->query($sql);
			if ($STH->rowCount() > 0) 
			{
				while($row= $STH->fetch(PDO::FETCH_ASSOC))
				{	
					$data[] = $row;
                }
			} 
			if(!empty($data))
			{
				foreach ($data as $key => $value) {
						$option_str.= '<option value="' . $value["page_cat_id"] .'|tbl_recordshow_dropdown">' . $value["report_name"] .' </option>';
					}
			}
			
		}
		else
		{
			$str_report_id = $this->selectReportName($vendor_id);
			if (!empty($str_report_id)) { 
				$arr_report_id = explode(',',$str_report_id);
				for ($i = 0;$i < count($arr_report_id);$i++) {
					$sql = "SELECT * FROM `tbl_recordshow_dropdown` WHERE page_cat_id = '".$arr_report_id[$i]."' AND pag_cat_status='1' AND is_deleted='0' AND enduse='user' ORDER BY `report_name` ASC";
				   
					$STH = $DBH->query($sql);
					if ($STH->rowCount() > 0) {
							$row = $STH->fetch(PDO::FETCH_ASSOC);
							$option_str.= '<option value="' . $row["page_cat_id"] .'|tbl_recordshow_dropdown">' . $row["report_name"] .' </option>';
						}
					}
				}
		}

        $option_str.=$this->getManageFavCatDropdownData('36');
        return $option_str;
    }
    //add by ample 03-03-20
    public function getManageFavCatDropdown($id="")
    {
        $DBH = new DatabaseHandler();
        $data = array();
        $sql = "SELECT * FROM `tbl_page_fav_cat_dropdown` WHERE `page_cat_id` = '" . $id . "' LIMIT 1";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $data = $row;
        }
        return $data;
    }
    public function getManageFavCatDropdownData($id="")
    {   
        $option_str = '';
        $data=$this->getManageFavCatDropdown($id);
        if(!empty($data))
        {
            $data['subcat']='';
            for ($i=0; $i < 10; $i++) { 
                if(!empty($data['sub_cat'.$i]))
                {

                    $data['subcat']=$data['subcat'].','.$data['sub_cat'.$i];
                }
                $data['subcat'] = trim($data['subcat'],",");
            }
            $newData=$this->GetCategoryNameByid($data['subcat']);
            if(!empty($newData))
            {
                 foreach ($newData as $key => $value) {
                     $option_str.= '<option value="' . $value["activity_id"].'|tblfavcategory">' . $value["activity_name"] .' </option>';
                 }
            }
        }
        return $option_str;  
    }
    public function getManageFavCatDropdownDataOption($id="",$sel_id="")
    {   
        $option_str = '<option value="">select</option>';
        $data=$this->getManageFavCatDropdown($id);
        if(!empty($data))
        {
            $data['subcat']='';
            for ($i=0; $i < 10; $i++) { 
                if(!empty($data['sub_cat'.$i]))
                {

                    $data['subcat']=$data['subcat'].','.$data['sub_cat'.$i];
                }
                $data['subcat'] = trim($data['subcat'],",");
            }
            $newData=$this->GetCategoryNameByid($data['subcat']);
            if(!empty($newData))
            {   

                 foreach ($newData as $key => $value) {
                    $sel="";
                    if ($value["activity_id"]==$sel_id)
                      {
                        $sel="selected";
                      }
                     $option_str.= '<option value="' . $value["activity_id"].'" '.$sel.'>' . $value["activity_name"] .' </option>';
                 }
            }
        }
        return $option_str;  
    }
    public function getUserAcceptedReportId($user_id, $pro_user_id) {
        $DBH = new DatabaseHandler();
        $str_report_id = '';
        $str_permission_type = '';
        $user_email = $this->getUserEmailById($user_id);
        $pro_user_email = $this->getProUserEmailById($pro_user_id);
        //$sql = "SELECT * FROM `tbladviserreferrals` WHERE `pro_user_id` = '".$pro_user_id."' AND `user_email` = '".$user_email."' AND `request_status` = '1' ORDER BY `ar_id` DESC LIMIT 1";
        if ($pro_user_id != '') {
            $sql = "SELECT * FROM `tbladviserreferrals` " . "WHERE ( (`vendor_id` = '" . $pro_user_id . "' AND `user_email` = '" . $user_email . "' AND `invite_by_user` = '0') " . "OR (`vendor_id` = '" . $user_id . "' AND `user_email` = '" . $pro_user_email . "' AND `invite_by_user` = '1') ) " . "AND ( `request_status` = '1' ) ORDER BY `ar_id` DESC LIMIT 1";
        } else {
            $sql = "SELECT * FROM `tbladviserreferrals` " . "WHERE ( (`user_email` = '" . $user_email . "' AND `invite_by_user` = '0') " . "OR (`vendor_id` = '" . $user_id . "' AND `invite_by_user` = '0') ) " . "AND ( `request_status` = '1' ) ORDER BY `ar_id`";
        }
        //echo $sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $str_report_id = array();
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $str_report_id[] = $row['report_id'];
            }
            //$str_report_id = $row['report_id'];
            //$str_permission_type = $row['permission_type'];
            //list($str_report_id,$str_permission_type) = $this->getUserPlanRefinedReportsIds($user_id,$str_report_id,$str_permission_type);
            
        }
        $str_report_id = implode(',', $str_report_id);
        return $str_report_id;
    }
    public function getUserPlanRefinedReportsIds($user_id, $str_report_id, $str_permission_type) {
        $DBH = new DatabaseHandler();
        $return_str_report_id = '';
        $return_permission_type = '';
        if ($str_report_id != '') {
            $arr_report_id = explode(',', $str_report_id);
            $arr_permission_type = explode(',', $str_permission_type);
            for ($i = 0;$i < count($arr_report_id);$i++) {
                $sql = "SELECT * FROM `tbladviserplanatributes` WHERE `ref_report_id` = '" . $arr_report_id[$i] . "' AND `apa_status` = '1' AND `show_for_user` = '1' ORDER BY `apa_id` DESC LIMIT 1";
                //echo $sql;
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    $row = $STH->fetch(PDO::FETCH_ASSOC);
                    $temp_apa_id = $row['apa_id'];
                    if ($this->chkUserPlanFeaturePermission($user_id, $temp_apa_id)) {
                        $return_str_report_id.= $arr_report_id[$i] . ',';
                        $return_permission_type.= $arr_permission_type[$i] . ',';
                    }
                }
            }
            $return_str_report_id = substr($return_str_report_id, 0, -1);
            $return_permission_type = substr($return_permission_type, 0, -1);
        }
        return array($return_str_report_id, $return_permission_type);
    }
    //update by ample 01-11-19
    public function getAdviserRequestStatusAndArId($vendor_id, $user_id) {
        // echo "<pre>";print_r($pro_user_id);echo "</pre>";
        $DBH = new DatabaseHandler();
        //$request_status = $this->chkIfUserIsAdvisersReferrals($vendor_id, $user_id);
        $ar_id = '';
        $user_email = $this->getUserEmailById($user_id);
        // echo $sql = "SELECT * FROM `tbladviserreferrals` WHERE `pro_user_id` = '".$pro_user_id."' AND `user_email` = '".$user_email."' AND ( `request_status` = '1' || `request_status` = '3' ) ORDER BY `ar_id` DESC LIMIT 1";
        $sql = "SELECT * FROM `tbladviserreferrals` WHERE `vendor_id` = '" . $vendor_id . "' AND `user_id` = '" . $user_id . "' AND ( `request_status` = '1' || `request_status` = '3' ) ORDER BY `ar_id` DESC LIMIT 1";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $ar_id = $row['ar_id'];
            $request_status1 = $row['request_status'];
            $last_status=$row['last_status_updated_by_adviser'];
        }
        // echo "<pre>";print_r($row);echo "</pre>";
        // exit;
        return array($ar_id, $request_status1,$last_status);
    }
    public function getReportTypeName($report_id) {
        $DBH = new DatabaseHandler();
        $output = 'My Query';
        $sql = "SELECT * FROM `tblusersreports` WHERE `report_id`  = '" . $report_id . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $output = stripslashes($row['report_name']);
        }
        return $output;
    }
    //add by ample 03-04-20 & update 13-04-20
    public function getReferenceName($report_id="",$report_tbl="") {
        $DBH = new DatabaseHandler();
        $output = 'My Query';
        if($report_tbl=='tbl_recordshow_dropdown')
        {
            $sql = "SELECT report_name FROM `tbl_recordshow_dropdown` WHERE `page_cat_id`  = '" . $report_id . "'";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $row = $STH->fetch(PDO::FETCH_ASSOC);
                $output = stripslashes($row['report_name']);
            }
        }
        elseif ($report_tbl=='tblfavcategory') {
            $sql = "SELECT fav_cat FROM `tblfavcategory` WHERE `fav_cat_id`  = '" . $report_id . "'";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $row = $STH->fetch(PDO::FETCH_ASSOC);
                $output = stripslashes($row['fav_cat']);
            }
        }
        elseif($report_tbl=='tblusersreports')
        {
            $sql = "SELECT report_name FROM `tblusersreports` WHERE `report_id`  = '" . $report_id . "'";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $row = $STH->fetch(PDO::FETCH_ASSOC);
                $output = stripslashes($row['report_name']);
            }
        }
        return $output;
    }
    public function getAllAdviserQueriesByID($id) {
        $DBH = new DatabaseHandler();
        $temp_arr = array();
        $str_feedback_id = $this->getAllConvarsationIdAdviserQuery($id);
        $sql = "SELECT * FROM `tbladviserqueries` WHERE  `aq_id` IN (" . $str_feedback_id . ") ORDER BY `aq_add_date` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $temp_arr[] = $row;
            }
        }
        return $temp_arr;
    }
    public function getAllConvarsationIdAdviserQuery($id) {
        $main_parent_id = $this->getMainParantIdAdviserQuery($id);
        $str_feedback_id = $this->getRecursiveAdviserQueryId($main_parent_id, $main_parent_id);
        return $str_feedback_id;
    }
    public function getMainParantIdAdviserQuery($id) {
        $DBH = new DatabaseHandler();
        $sql = "SELECT * FROM `tbladviserqueries` WHERE `aq_id` = '" . $id . "' ORDER BY `aq_add_date` DESC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $parent_feedback_id = $row['parent_aq_id'];
            if ($parent_feedback_id == 0) {
                return $id;
            } else {
                //return $parent_feedback_id;
                //$DBH->disconnect();
                return $this->getMainParantIdAdviserQuery($parent_feedback_id);
            }
        } else {
            return 0;
        }
    }
    public function getRecursiveAdviserQueryId($main_parent_id, $return) {
        $DBH = new DatabaseHandler();
        $sql = "SELECT * FROM `tbladviserqueries` WHERE `parent_aq_id` = '" . $main_parent_id . "' ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $temp_feedback_id = $row['aq_id'];
                if ($return == '') {
                    $return.= $this->getRecursiveAdviserQueryId($temp_feedback_id, $main_parent_id) . ',';
                    //$DBH->disconnect();
                    
                } else {
                    $return.= ',' . $this->getRecursiveAdviserQueryId($temp_feedback_id, $main_parent_id);
                    //$DBH->disconnect();
                    
                }
            }
        } else {
            $return.= ',' . $main_parent_id;
        }
        return $return;
    }
    public function chk_valid_user_query_id($id, $user_id) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "SELECT * FROM `tbladviserqueries` WHERE `aq_id` = '" . $id . "' AND `user_id` = '" . $user_id . "' ";
        //echo $sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function setUserQueryRead($aq_id, $user_id, $user_read) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "UPDATE `tbladviserqueries` SET `user_read` = '" . $user_read . "' WHERE `aq_id` = '" . $aq_id . "' AND `user_id` = '" . $user_id . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function getAdviserQueryDetails($aq_id) {
        $DBH = new DatabaseHandler();
        $temp_arr = array();
        $sql = "SELECT * FROM `tbladviserqueries` WHERE `aq_id` = '" . $aq_id . "' ";
        //echo $sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $temp_arr[] = $row;
        }
        return $temp_arr;
    }
    public function showAcceptInvitationPopup($user_id, $ar_id, $pro_user_id) {
        $DBH = new DatabaseHandler();
        $output = '';
        $output.= '<div style="margin-top:15px;width:520px;height:400px;overflow:scroll;">';
        $output.= '	<table width="500" border="0" cellpadding="0" cellspacing="0" class="report" style="border-collapse:collapse;">

                            <tbody>

                                    <tr>

                                            <td height="30" colspan="2" align="left" valign="middle"><strong>I authorise Chaitanya Wellness (www.wellnessway4u.com) to provide access to my Adviser herein to MY following below Reports, solely at my Responsibility. I reconfirm that I have carefully read the Terms of Use for Users of this website. </strong></td>

                                    </tr>';
        //$sql = "SELECT * FROM `tblusersreports` WHERE `report_status` = '1' ORDER BY report_name ASC ";
        $sql = "SELECT * FROM `tblpagedropdowns` WHERE pd_id = '20' and  `pd_status` = 1 ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $i = 0;
            $j = 1;
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $page_id_arr = explode(',', $row['page_id_str']);
            for ($l = 0;$l < count($page_id_arr);$l++)
            //while ($row = $STH->fetch(PDO::FETCH_ASSOC))
            {
                $report_name = stripslashes($this->get_PageName($page_id_arr[$l]));
                $report_id = stripslashes($page_id_arr[$l]);
                $sql2 = "SELECT * FROM `tbladviserplanatributes` WHERE `page_id` = '" . $page_id_arr[$l] . "' AND `apa_status` = '1' AND `show_for_user` = '1' ORDER BY `apa_id` DESC LIMIT 1";
                $STH2 = $DBH->query($sql2);
                if ($STH2->rowCount() > 0) {
                    $row2 = $STH2->fetch(PDO::FETCH_ASSOC);
                    $temp_apa_id = $row2['apa_id'];
                    $flag = $this->Checkifplanexist($page_id_arr[$i]);
                    if ($flag) {
                        if ($this->chkUserPlanFeaturePermission($user_id, $temp_apa_id)) {
                            if ($this->chkReportTypePermissionForAdviser($ar_id, $report_id)) {
                                $selected = ' checked ';
                                $selval = $this->getPermissionTypeForAdviserReport($ar_id, $report_id);
                                if ($selval == '2') {
                                    $pt_selected1 = '';
                                    $pt_selected2 = ' selected ';
                                    $pt_selected3 = '';
                                } elseif ($selval == '3') {
                                    $pt_selected1 = '';
                                    $pt_selected2 = '';
                                    $pt_selected3 = ' selected ';
                                } else {
                                    $pt_selected1 = ' selected ';
                                    $pt_selected2 = '';
                                    $pt_selected3 = '';
                                }
                            } else {
                                $selected = '';
                                $pt_selected1 = ' selected ';
                                $pt_selected2 = '';
                                $pt_selected3 = '';
                            }
                            $output.= '<tr>

							<td width="300" height="30" align="left" valign="middle"><strong><input type="checkbox" ' . $selected . ' name="report_id" id="report_id_' . $i . '" value="' . $page_id_arr[$l] . '" />&nbsp;<strong>' . $report_name . '</strong></td>

							<td width="200" height="30" align="left" valign="middle">

								<select name="permission_type" id="permission_type_' . $i . '">

									<option value="1" ' . $pt_selected1 . ' >Both Set</option>

									<option value="2" ' . $pt_selected2 . ' >Standard Set</option>

									<option value="3" ' . $pt_selected3 . ' >Adviser Set</option>

								</select>

							</td>

							

						</tr>';
                            $i++;
                            $j++;
                        }
                    } else {
                        //echo 'hiiii';
                        if ($this->chkReportTypePermissionForAdviser($ar_id, $report_id)) {
                            $selected = ' checked ';
                            $selval = $this->getPermissionTypeForAdviserReport($ar_id, $report_id);
                            if ($selval == '2') {
                                $pt_selected1 = '';
                                $pt_selected2 = ' selected ';
                                $pt_selected3 = '';
                            } elseif ($selval == '3') {
                                $pt_selected1 = '';
                                $pt_selected2 = '';
                                $pt_selected3 = ' selected ';
                            } else {
                                $pt_selected1 = ' selected ';
                                $pt_selected2 = '';
                                $pt_selected3 = '';
                            }
                        } else {
                            $selected = '';
                            $pt_selected1 = ' selected ';
                            $pt_selected2 = '';
                            $pt_selected3 = '';
                        }
                        $output.= '<tr>

							<td width="300" height="30" align="left" valign="middle"><strong><input type="checkbox" ' . $selected . ' name="report_id" id="report_id_' . $i . '" value="' . $page_id_arr[$l] . '" />&nbsp;<strong>' . $report_name . '</strong></td>

							<td width="200" height="30" align="left" valign="middle">

								<select name="permission_type" id="permission_type_' . $i . '">

									<option value="1" ' . $pt_selected1 . ' >Both Set</option>

									<option value="2" ' . $pt_selected2 . ' >Standard Set</option>

									<option value="3" ' . $pt_selected3 . ' >Adviser Set</option>

								</select>

							</td>

							

						</tr>';
                        $i++;
                        $j++;
                    }
                } else {
                    if ($this->chkReportTypePermissionForAdviser($ar_id, $report_id)) {
                        $selected = ' checked ';
                        $selval = $this->getPermissionTypeForAdviserReport($ar_id, $report_id);
                        if ($selval == '2') {
                            $pt_selected1 = '';
                            $pt_selected2 = ' selected ';
                            $pt_selected3 = '';
                        } elseif ($selval == '3') {
                            $pt_selected1 = '';
                            $pt_selected2 = '';
                            $pt_selected3 = ' selected ';
                        } else {
                            $pt_selected1 = ' selected ';
                            $pt_selected2 = '';
                            $pt_selected3 = '';
                        }
                    } else {
                        $selected = '';
                        $pt_selected1 = ' selected ';
                        $pt_selected2 = '';
                        $pt_selected3 = '';
                    }
                    $output.= '<tr>

							<td width="300" height="30" align="left" valign="middle"><strong><input type="checkbox" ' . $selected . ' name="report_id" id="report_id_' . $i . '" value="' . $page_id_arr[$l] . '" />&nbsp;<strong>' . $report_name . '</strong></td>

							<td width="200" height="30" align="left" valign="middle">

								<select name="permission_type" id="permission_type_' . $i . '">

									<option value="1" ' . $pt_selected1 . ' >Both Set</option>

									<option value="2" ' . $pt_selected2 . ' >Standard Set</option>

									<option value="3" ' . $pt_selected3 . ' >Adviser Set</option>

								</select>

							</td>

							

						</tr>';
                    $i++;
                    $j++;
                }
            }
            $output.= '<tr>

							<td height="30" align="left" valign="middle"><strong><input type="button" name="btnDoAccept" id="btnDoAccept" value="Confirm" onclick="doAcceptAdviserInvitation(\'' . $ar_id . '\',\'' . $pro_user_id . '\')" />&nbsp;&nbsp;<input type="button" name="btnCancelPopup" id="btnCancelPopup" value="Cancel" /></strong></td>

							

						</tr>';
        }
        $output.= '</tbody>

					</table>

				</div>';
        return $output;
    }
    //update function by ample 30-10-19
    public function selectReportName($vendor_id = "") {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $page_name = '';
        //$sql ="SELECT `report_id`FROM `tbladviserreferrals` WHERE  `user_id` = '".$_SESSION['user_id']."'";
        //update sql by ample 30-10-19
        $sql = "SELECT `report_id`FROM `tbladviserreferrals` WHERE  `user_id` = '" . $_SESSION['user_id'] . "' AND `vendor_id` = '" . $vendor_id . "'";
        //echo $sql;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $report_id = stripslashes($row['report_id']);
                // $report_id = stripslashes($row['page_cat_id']);
                // $arr_va[]=array($report_name,$report_id);
                
            }
        }
        return $report_id;
    }
    //update function by ample =30-10-19
    public function showPatternsPopup($user_id, $ar_id, $vendor_id) {
        $DBH = new DatabaseHandler();
        $output = '';
        $output.= '<div style=""><table width="500" border="0" cellpadding="0" cellspacing="0" class="report" style="border-collapse:collapse;"><tbody><tr><td height="30" colspan="2" align="left" valign="middle"><strong>I provide access to my Adviser herein to MY following below Reports, solely at my Responsibility. I reconfirm that I have carefully read the Terms of Use for Users of this website.</strong></td></tr>';
        // $sql = "SELECT * FROM `tblpagedropdowns` WHERE pd_id = '20' and  `pd_status` = 1 ";
        // $STH = $DBH->query($sql);
        //        if( $STH->rowCount() > 0 )
        //        {
        // 	$i = 0;
        // 	$j = 1;
        //        $row = $STH->fetch(PDO::FETCH_ASSOC);
        // $page_id_arr = explode(',', $row['page_id_str']);
        //       for($l=0;$l<count($page_id_arr);$l++)
        // {
        //update this by ample =30-10-19
        //$report_id=$this->selectReportName();
        $report_id = $this->selectReportName($vendor_id);
        // echo "<pre>";print_r($report_id);echo "</pre>";
        $getarr = explode(',', $report_id);
        $report_name = $this->get_UserReportname('user');
        foreach ($report_name as $key => $value) {
            if (in_array($value[1], $getarr)) {
                $checked = "checked";
            } else {
                $checked = "";
            }
            $output.= '<tr><td width="300" height="30" align="left" valign="middle"><strong><input type="checkbox" name="report_id" id="report_id_' . $key . '" value="' . $value[1] . '" ' . $checked . ' />&nbsp;<strong>' . $value[0] . '</strong></td></tr>';
            // echo "<pre>";print_r($value);echo "</pre>";
        }
        // <td width="200" height="30" align="left" valign="middle">
        // 			<select name="permission_type" id="permission_type_'.$key.'">
        // 				<option value="1" '.$pt_selected1.' >Both Set</option>
        // 				<option value="2" '.$pt_selected2.' >Standard Set</option>
        // 				<option value="3" '.$pt_selected3.' >Adviser Set</option>
        // 			</select>
        // 		</td>
        // $report_id = stripslashes($page_id_arr[$l]);
        // $sql2 = "SELECT * FROM `tbladviserplanatributes` WHERE `page_id` = '".$page_id_arr[$l]."' AND `apa_status` = '1' AND `show_for_user` = '1' ORDER BY `apa_id` DESC LIMIT 1";
        // $STH2 = $DBH->query($sql2);
        // if($STH2->rowCount() > 0 )
        // {
        // $row2 = $STH2->fetch(PDO::FETCH_ASSOC);
        // $temp_apa_id = $row2['apa_id'];
        // $flag = $this->Checkifplanexist($page_id_arr[$i]);
        // if($flag)
        // {
        // if($this->chkUserPlanFeaturePermission($user_id,$temp_apa_id))
        // {
        // 	if($this->chkReportTypePermissionForAdviser($ar_id,$report_id))
        // 	{
        // $selected = ' checked ';
        // $selval = $this->getPermissionTypeForAdviserReport($ar_id,$report_id);
        // if($selval == '2')
        // {
        // 	$pt_selected1 = '';
        // 	$pt_selected2 = ' selected ';
        // 	$pt_selected3 = '';
        // }
        // elseif($selval == '3')
        // {
        // 	$pt_selected1 = '';
        // 	$pt_selected2 = '';
        // 	$pt_selected3 = ' selected ';
        // }
        // else
        // {
        // 	$pt_selected1 = ' selected ';
        // 	$pt_selected2 = '';
        // 	$pt_selected3 = '';
        // }
        // }
        // else
        // {
        // $selected = '';
        // $pt_selected1 = ' selected ';
        // $pt_selected2 = '';
        // $pt_selected3 = '';
        // }
        // -----------------------
        //           $output .= '<tr>
        // 	<td width="300" height="30" align="left" valign="middle"><strong><input type="checkbox" '.$selected.' name="report_id" id="report_id_'.$i.'" value="'.$page_id_arr[$l].'" />&nbsp;<strong>'.$report_name.'</strong></td>
        // 	<td width="200" height="30" align="left" valign="middle">
        // 		<select name="permission_type" id="permission_type_'.$i.'">
        // 			<option value="1" '.$pt_selected1.' >Both Set</option>
        // 			<option value="2" '.$pt_selected2.' >Standard Set</option>
        // 			<option value="3" '.$pt_selected3.' >Adviser Set</option>
        // 		</select>
        // 	</td>
        // </tr>';
        // --------------------
        // $i++;
        // $j++;
        // }
        // }
        // else
        // {
        //                              if($this->chkReportTypePermissionForAdviser($ar_id,$report_id))
        // {
        // 	$selected = ' checked ';
        // 	$selval = $this->getPermissionTypeForAdviserReport($ar_id,$report_id);
        // 	if($selval == '2')
        // 	{
        // 		$pt_selected1 = '';
        // 		$pt_selected2 = ' selected ';
        // 		$pt_selected3 = '';
        // 	}
        // 	elseif($selval == '3')
        // 	{
        // 		$pt_selected1 = '';
        // 		$pt_selected2 = '';
        // 		$pt_selected3 = ' selected ';
        // 	}
        // 	else
        // 	{
        // 		$pt_selected1 = ' selected ';
        // 		$pt_selected2 = '';
        // 		$pt_selected3 = '';
        // 	}
        // }
        // else
        // {
        // 	$selected = '';
        // 	$pt_selected1 = ' selected ';
        // 	$pt_selected2 = '';
        // 	$pt_selected3 = '';
        // }
        //                                    $output .= '<tr>
        // 		<td width="300" height="30" align="left" valign="middle"><strong><input type="checkbox" '.$selected.' name="report_id" id="report_id_'.$i.'" value="'.$page_id_arr[$l].'" />&nbsp;<strong>'.$report_name.'</strong></td>
        // 		<td width="200" height="30" align="left" valign="middle">
        // 			<select name="permission_type" id="permission_type_'.$i.'">
        // 				<option value="1" '.$pt_selected1.' >Both Set</option>
        // 				<option value="2" '.$pt_selected2.' >Standard Set</option>
        // 				<option value="3" '.$pt_selected3.' >Adviser Set</option>
        // 			</select>
        // 		</td>
        // 	</tr>';
        // $i++;
        // $j++;
        // }
        // }
        //          else
        //          {
        //                      if($this->chkReportTypePermissionForAdviser($ar_id,$report_id))
        // {
        // 	$selected = ' checked ';
        // 	$selval = $this->getPermissionTypeForAdviserReport($ar_id,$report_id);
        // 	if($selval == '2')
        // 	{
        // 		$pt_selected1 = '';
        // 		$pt_selected2 = ' selected ';
        // 		$pt_selected3 = '';
        // 	}
        // 	elseif($selval == '3')
        // 	{
        // 		$pt_selected1 = '';
        // 		$pt_selected2 = '';
        // 		$pt_selected3 = ' selected ';
        // 	}
        // 	else
        // 	{
        // 		$pt_selected1 = ' selected ';
        // 		$pt_selected2 = '';
        // 		$pt_selected3 = '';
        // 	}
        // }
        // else
        // {
        // $selected = '';
        // $pt_selected1 = ' selected ';
        // $pt_selected2 = '';
        // $pt_selected3 = '';
        // }
        //                                   $output .= '<tr>
        // 	<td width="300" height="30" align="left" valign="middle"><strong><input type="checkbox" '.$selected.' name="report_id" id="report_id_'.$i.'" value="'.$page_id_arr[$l].'" />&nbsp;<strong>'.$report_name.'</strong></td>
        // 	<td width="200" height="30" align="left" valign="middle">
        // 		<select name="permission_type" id="permission_type_'.$i.'">
        // 			<option value="1" '.$pt_selected1.' >Both Set</option>
        // 			<option value="2" '.$pt_selected2.' >Standard Set</option>
        // 			<option value="3" '.$pt_selected3.' >Adviser Set</option>
        // 		</select>
        // 	</td>
        // </tr>';
        // $i++;
        // $j++;
        //                    }
        // }
        $output.= '<tr><td height="30" align="left" valign="middle"><strong><input type="button" name="btnDoAccept" id="btnDoAccept" value="Confirm" onclick="doAcceptAdviserInvitation(\'' . $ar_id . '\',\'' . $vendor_id . '\')" />&nbsp;&nbsp;<input type="button" name="btnCancelPopup" id="btnCancelPopup" value="Cancel" /></strong></td></tr></tbody></table></div>';
        return $output;
    }
    public function chkReportTypePermissionForAdviser($ar_id, $report_id) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "SELECT * FROM `tbladviserreferrals` WHERE `ar_id` = '" . $ar_id . "' AND `report_id` != '' AND FIND_IN_SET('" . $report_id . "', report_id)";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function getPermissionTypeForAdviserReport($ar_id, $report_id) {
        $DBH = new DatabaseHandler();
        $return = '1';
        if ($this->chkReportTypePermissionForAdviser($ar_id, $report_id)) {
            $sql = "SELECT * FROM `tbladviserreferrals` WHERE `ar_id` = '" . $ar_id . "' ";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $row = $STH->fetch(PDO::FETCH_ASSOC);
                $str_report_id = stripslashes($row['report_id']);
                $str_permission_type = stripslashes($row['permission_type']);
                if ($str_permission_type != '') {
                    $arr_ri = explode(',', $str_report_id);
                    $arr_pt = explode(',', $str_permission_type);
                    $key = array_search($report_id, $arr_ri);
                    if ($key !== FALSE) {
                        if (isset($arr_pt[$key])) {
                            $return = $arr_pt[$key];
                        }
                    }
                }
            }
        }
        return $return;
    }
    //update function by ample 23-10-19 & 24-10-19 & 31-10-19
    public function doAcceptAdviserInvitation($ar_id, $report_id, $user_id, $vendor_id, $permission_type = "") {
        if (!empty($user_id)) {
            $user_id = $_SESSION['user_id'];
        }
        $report_type=0;
        //$pro_user_id = $vendor_id;
        $DBH = new DatabaseHandler();
        if ($this->chkIfAdviserRequestDateisUpdated($vendor_id, $user_id)) {
            //code comment and new add sql chnage  pro_user_id to user_id by ample 23-10-19
            // `permission_type` = '".$permission_type."'
            //$sql = "UPDATE `tbladviserreferrals` SET ". "`request_status` = '1' ,`last_status_updated_by_adviser` = '0',`user_id`='".$user_id."',`new_user`=0 WHERE `ar_id` = '".$ar_id."'";
            //$sql = "UPDATE `tbladviserreferrals` SET ". "`request_status` = '1' , `report_id` = '".$report_id."',`last_status_updated_by_adviser` = '0',`pro_user_id`='".$user_id."',`new_user`=0 WHERE `ar_id` = '".$ar_id."'";
            $sql = "UPDATE `tbladviserreferrals` SET " . " `request_status` = '1' , `report_id` = '" . $report_id . "' , `last_status_updated_by_adviser` = '0',`user_id`='" . $user_id . "' WHERE `ar_id` = '" . $ar_id . "'";
            //update by ample 29-02-20
            $report_type=1;
        } else {
            // `permission_type` = '".$permission_type."',
            //code comment and new add sql chnage  pro_user_id to user_id by ample 23-10-19
            // $sql = "UPDATE `tbladviserreferrals` SET "
            //                     . "`request_accept_date` = NOW() , `request_status` = '1' , `report_id` = '".$report_id."' , `last_status_updated_by_adviser` = '0',`pro_user_id`='".$user_id."',`new_user`=0 WHERE `ar_id` = '".$ar_id."'";
            $sql = "UPDATE `tbladviserreferrals` SET " . "`request_accept_date` = NOW() , `request_status` = '1' , `report_id` = '" . $report_id . "' , `last_status_updated_by_adviser` = '0',`user_id`='" . $user_id . "' WHERE `ar_id` = '" . $ar_id . "'";
            //update by ample 29-02-20
            $report_type=0;
        }
        // echo $report_id;
        $STH = $DBH->query($sql);
        $STH->rowCount();
        if ($STH->rowCount() > 0) {
            // ,`permission_type`//,'".$permission_type."'
            if($report_type==1)
            {
                $sql2 = "INSERT INTO `tbladviserreportpermission`(`ar_id`,`user_id`,`pro_user_id`,`report_id`) VALUES('" . $ar_id . "','" . $user_id . "','" . $vendor_id . "','" . $report_id . "')";
                $STH2 = $DBH->query($sql2);
                if ($STH2->rowCount() > 0) {
                    $return = true;
                }
            }
        }
        // echo "hi";
        // exit;
        return $return;
    }
    function doDeclineAdviserInvitation($ar_id, $user_id, $pro_user_id, $status_reason) {
        //global $link;
        $return = false;
        $DBH = new DatabaseHandler();
        $sql = "UPDATE `tbladviserreferrals` SET " . "`request_accept_date` = NOW() , `request_status` = '2' , `last_status_updated_by_adviser` = '0' " . "WHERE `ar_id` = '" . $ar_id . "' ";
        //$result = mysql_query($sql,$link);
        $STH = $DBH->query($sql);
        $STH->rowCount();
        if ($STH->rowCount() > 0) {
            $sql2 = "INSERT INTO `tbladviseractivation`(`ar_id`,`user_id`,`vendor_id`,`aa_status`,`aa_status_reason`,`aa_status_updated_by_adviser`) VALUES('" . $ar_id . "','" . $user_id . "','" . $pro_user_id . "','2','" . addslashes($status_reason) . "','0')";
            $STH2 = $DBH->query($sql2);
            if ($STH2->rowCount() > 0) {
                $return = true;
            }
        }
        return $return;
    }
    public function chkIfAdviserRequestDateisUpdated($vendor_id, $user_id) {
        $DBH = new DatabaseHandler();
        $return = true;
        $user_email = $this->getUserEmailById($user_id);
        //chane by ample 23-10-19
        //$sql = "SELECT * FROM `tbladviserreferrals` WHERE `pro_user_id` = '".$pro_user_id."' AND `user_email` = '".$user_email."' AND `request_accept_date` = '0000-00-00 00:00:00'";
        $sql = "SELECT * FROM `tbladviserreferrals` WHERE `vendor_id` = '" . $vendor_id . "' AND `user_email` = '" . $user_email . "' AND `request_accept_date` = '0000-00-00 00:00:00'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = false;
        }
        return $return;
    }
    function showDeactivateAdviserInvitationPopup($ar_id, $user_id, $vendor) {
        $output = '';
        $output.= '<div style="">';
        $output.= '<table width="500" border="0" cellpadding="0" cellspacing="0" class="report" style="border-collapse:collapse;">
					<tbody>';
        $output.= '<tr><td colspan="2" align="left" valign="middle" height="40">&nbsp;</td></tr>';
        $output.= '<tr><td width="35%" align="left" valign="top"><strong><span style="font-size:14px;">Reason for Deactivation:</span></strong></td>
					<td width="65%" align="left" valign="top"><textarea id="status_reason" name="status_reason" style="width:200px;height:100px;"></textarea></td>
				</tr>';
        $output.= '<tr><td colspan="2" align="left" valign="middle" height="40">&nbsp;</td></tr>';
        $output.= '<tr><td colspan="2" height="30" align="left" valign="middle"><strong><input type="button" name="btnDoAccept" id="btnDoAccept" value="Deactivate" onclick="deactivateAdviserInvitation(\'' . $ar_id . '\',\'' . $user_id . '\',\'' . $vendor . '\')" />&nbsp;&nbsp;<input type="button" name="btnCancelPopup" id="btnCancelPopup" value="Cancel" /></strong></td></tr>';
        $output.= '</tbody></table>
			</div>';
        return $output;
    }
    public function deactivateAdviserInvitation($ar_id, $user_id, $vendor_id, $status_reason) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "UPDATE `tbladviserreferrals` SET " . "`request_status` = '3' , `last_status_updated_by_adviser` = '0' " . "WHERE `ar_id` = '" . $ar_id . "' ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $sql2 = "INSERT INTO `tbladviseractivation`(`ar_id`,`user_id`,`aa_status`,`aa_status_reason`,`aa_status_updated_by_adviser`,`vendor_id`) VALUES('" . $ar_id . "','" . $user_id . "','3','" . addslashes($status_reason) . "','0','" . $vendor_id . "')";
            $STH2 = $DBH->query($sql2);
            if ($STH2->rowCount() > 0) {
                $return = true;
            }
        }
        return $return;
    }
    public function showActivateAdviserInvitationPopup($ar_id, $pro_user_id, $vendor) {
        $output = '';
        $output.= '<div style="">';
        $output.= '	<table width="500" border="0" cellpadding="0" cellspacing="0" class="report" style="border-collapse:collapse;">



					<tbody>



						';
        $output.= '		<tr>



							<td colspan="2" align="left" valign="middle" height="40">&nbsp;</td>



						</tr>';
        $output.= '		<tr>



							<td width="35%" align="left" valign="top"><strong><span style="font-size:14px;">Reason for Activation:</span></strong></td>



							<td width="65%" align="left" valign="top"><textarea id="status_reason" name="status_reason" style="width:200px;height:100px;"></textarea></td>



						</tr>';
        $output.= '		<tr>



							<td colspan="2" align="left" valign="middle" height="40">&nbsp;</td>



						</tr>';
        $output.= '		<tr>



							<td colspan="2" height="30" align="left" valign="middle"><strong><input type="button" name="btnDoAccept" id="btnDoAccept" value="Activate" onclick="activateAdviserInvitation(\'' . $ar_id . '\',\'' . $pro_user_id . '\',\'' . $vendor . '\')" />&nbsp;&nbsp;<input type="button" name="btnCancelPopup" id="btnCancelPopup" value="Cancel" /></strong></td>



							



						</tr>';
        $output.= '	</tbody>



					</table>



				</div>';
        return $output;
    }
    public function activateAdviserInvitation($ar_id, $user_id, $vendor_id, $status_reason) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "UPDATE `tbladviserreferrals` SET " . "`request_status` = '1' , `last_status_updated_by_adviser` = '0' " . "WHERE `ar_id` = '" . $ar_id . "' ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            // $sql2 = "INSERT INTO `tbladviseractivation`(`ar_id`,`user_id`,`pro_user_id`,`aa_status`,`aa_status_reason`,`aa_status_updated_by_adviser`,`vendor_id`) VALUES('".$ar_id."','".$user_id."','".$pro_user_id."','1','".addslashes($status_reason)."','0','".$vendor."')";
            $sql2 = "INSERT INTO `tbladviseractivation`(`ar_id`,`user_id`,`aa_status`,`aa_status_reason`,`aa_status_updated_by_adviser`,`vendor_id`) VALUES('" . $ar_id . "','" . $user_id . "','1','" . addslashes($status_reason) . "','0','" . $vendor_id . "')";
            $STH2 = $DBH->query($sql2);
            if ($STH2->rowCount() > 0) {
                $return = true;
            }
        }
        return $return;
    }
    public function showAdviserQueryPopup_OLD($user_id, $parent_aq_id) {
        $output = '';
        $name = $this->getUserFullNameById($user_id);
        $email = $this->getUserEmailById($user_id);
        $readonly = ' readonly ';
        $temp_pro_user_id = '';
        if ($parent_aq_id == '' || $parent_aq_id == '0' || $parent_aq_id == 0) {
            $readonly2 = '';
            $parent_aq_id = '0';
            $temp_page_id = '';
        } else {
            $query_data = $this->getAdviserQueryDetails($parent_aq_id);
            $temp_pro_user_id = $query_data[0]['pro_user_id'];
            $temp_page_id = $query_data[0]['page_id'] . '_' . $query_data[0]['permission_type'];
            $readonly2 = ' readonly ';
        }
        $output.= '<br><br>



				<form id="frmadviserquery" name="frmadviserquery" method="post" action="#" enctype="multipart/form-data">



					<input type="hidden" name="hdnparent_aq_id" id="hdnparent_aq_id" value="' . $parent_aq_id . '" />



					<input type="hidden" name="hdnname" id="hdnname" value="' . $name . '" />



					<input type="hidden" name="hdnemail" id="hdnemail" value="' . $email . '" />



					<table cellpadding="0" cellspacing="0" width="75%" align="center" border="0">';
        if ($parent_aq_id == '0') {
            $output.= '		<tr>



							<td width="60%" height="40" align="left" valign="top">Adviser:</td>



							<td width="40%" height="40" align="left" valign="top">



								<select id="temp_pro_user_id" name="temp_pro_user_id" ' . $readonly2 . ' onchange="getAdviserQueryPageOptions(' . $user_id . ',\'' . $readonly2 . '\',\'temp_pro_user_id\',\'temp_page_id\')" style="width:150px;">



									<option value="">Select Adviser</option>



									<!--' . $this->getUsersAdviserOptions($user_id, $temp_pro_user_id) . '-->

                                    ' . $this->getUsersAcceptedAdviserOptions($user_id, $temp_pro_user_id) . '



								</select>



							</td>



						</tr>



						<tr>



							<td width="60%" height="40" align="left" valign="top">Reference:</td>

							<td width="40%" height="40" align="left" valign="top" id="idreference2">

								<select id="temp_page_id" name="temp_page_id" ' . $readonly2 . ' style="width:150px;">

									<option value="">Select Reference</option>

									' . $this->getAdviserQueryPageOptions($temp_page_id, $user_id, $temp_pro_user_id, '0') . '

								</select>

							</td>

						</tr>';
        } else {
            $output.= '<tr>



							<td width="60%" height="40" align="left" valign="top">Adviser:</td>

							<td width="40%" height="40" align="left" valign="top">' . $this->getProUserFullNameById($temp_pro_user_id) . '

								<input type="hidden" id="temp_pro_user_id" name="temp_pro_user_id" value="' . $temp_pro_user_id . '" >

							</td>

						</tr>

						<tr>



							<td width="60%" height="40" align="left" valign="top">Reference:</td>

							<td width="40%" height="40" align="left" valign="top" id="idreference">' . $this->getReportTypeName($temp_page_id) . '

								<input type="hidden" id="temp_page_id" name="temp_page_id" value="' . $temp_page_id . '">

							</td>

						</tr>';
        }
        $output.= '	<tr>



							<td width="60%" height="110" align="left" valign="top">Query:</td>

							<td width="40%" height="110" align="left" valign="top">

							<textarea id="feedback_text" name="feedback_text" style="width:200px;height:100px;"></textarea>

                                                        </td>

						</tr>

						<tr>

							<td width="60%" height="40" align="left" valign="middle">&nbsp;</td>

							<td width="40%" height="40" align="left" valign="middle">

							<input name="submit" type="button" class="button" id="submit" value="Submit"  onclick="addAdviserQuery()"/>

							</td>

						</tr>   

					</table>

				</form>';
        return $output;
    }
    //update by ample 03-03-20
    public function showAdviserQueryPopup($user_id, $parent_aq_id,$temp_pro_user_id="") {
        $output = '';
        $name = $this->getUserFullNameById($user_id);
        $email = $this->getUserEmailById($user_id);
        $readonly = ' readonly ';
        if ($parent_aq_id == '' || $parent_aq_id == '0' || $parent_aq_id == 0) {
            $readonly2 = '';
            $parent_aq_id = '0';
            $temp_page_id = '';
        } else {
            $query_data = $this->getAdviserQueryDetails($parent_aq_id);
            // $temp_pro_user_id = $query_data[0]['pro_user_id'];
            // $temp_page_id = $query_data[0]['page_id'] . '_' . $query_data[0]['permission_type'];
            //change by ample
            $temp_page_id = $query_data[0]['page_id'] . '|' . $query_data[0]['page_table'];
            $page_id = $query_data[0]['page_id'];
            $page_tbl = $query_data[0]['page_table'];
            $readonly2 = ' readonly ';
        }
        $output.= '<br><br>



                <form id="frmadviserquery" name="frmadviserquery" method="post" action="#" enctype="multipart/form-data">



                    <input type="hidden" name="hdnparent_aq_id" id="hdnparent_aq_id" value="' . $parent_aq_id . '" />



                    <input type="hidden" name="hdnname" id="hdnname" value="' . $name . '" />



                    <input type="hidden" name="hdnemail" id="hdnemail" value="' . $email . '" />



                    <table cellpadding="0" cellspacing="0" width="75%" align="center" border="0">';
        if ($parent_aq_id == '0') {
            $output.= '<tr>



                            <td width="60%" height="40" align="left" valign="top">Adviser:</td>

                            <td width="40%" height="40" align="left" valign="top">' . $this->getProUserFullNameById($temp_pro_user_id) . '

                                <input type="hidden" id="temp_pro_user_id" name="temp_pro_user_id" value="' . $temp_pro_user_id . '" >

                            </td>

                        </tr>

                        <tr>



                            <td width="60%" height="40" align="left" valign="top">Reference:</td>

                            <td width="40%" height="40" align="left" valign="top" id="idreference">

                            <select id="temp_page_id" name="temp_page_id" ' . $readonly2 . ' style="width:150px;">

                                    <option value="">Select Reference</option>

                                    ' . $this->getAdviserQueryReference($user_id, $temp_pro_user_id) . '

                                </select>

                            </td>

                        </tr>';
        } else {
            $output.= '<tr>



                            <td width="60%" height="40" align="left" valign="top">Adviser:</td>

                            <td width="40%" height="40" align="left" valign="top">' . $this->getProUserFullNameById($temp_pro_user_id) . '

                                <input type="hidden" id="temp_pro_user_id" name="temp_pro_user_id" value="' . $temp_pro_user_id . '" >

                            </td>

                        </tr>

                        <tr>



                            <td width="60%" height="40" align="left" valign="top">Reference:</td>

                            <td width="40%" height="40" align="left" valign="top" id="idreference">' . $this->getReferenceName($page_id,$page_tbl) . '

                                <input type="hidden" id="temp_page_id" name="temp_page_id" value="' . $temp_page_id . '">

                            </td>

                        </tr>';
        }
        $output.= ' <tr>



                            <td width="60%" height="110" align="left" valign="top">Query:</td>

                            <td width="40%" height="110" align="left" valign="top">

                            <textarea id="feedback_text" name="feedback_text" style="width:200px;height:100px;"></textarea>

                                                        </td>

                        </tr>

                        <tr>

                            <td width="60%" height="40" align="left" valign="middle">&nbsp;</td>

                            <td width="40%" height="40" align="left" valign="middle">

                            <input name="submit" type="button" class="button" id="submit" value="Submit"  onclick="addAdviserQuery()"/>

                            </td>

                        </tr>   

                    </table>

                </form>';
        return $output;
    }
    //update ample 03-03-20
    public function addAdviserQuery($parent_aq_id, $page_id, $user_id, $name, $email, $pro_user_id, $from_user, $query) {
        $DBH = new DatabaseHandler();
        $return = false;
        if ($page_id == '') {
            $temp_page_id = '0';
            $temp_permission_type = '0';
			$page_table='';
        } else {
            $arr_temp = explode('|', $page_id);
            $temp_page_id = $arr_temp[0];
            $page_table = $arr_temp[1];
            $temp_permission_type = '0';
        }
        if ($from_user == '1') {
            $aq_user_unique_id = $this->getUserAqUniqueId($user_id);
        } else {
            $aq_user_unique_id = $this->getProUserAqUniqueId($pro_user_id);
        }
        //update vendor_id remove pro_user_id
        $sql = "INSERT INTO `tbladviserqueries`(`parent_aq_id`,`aq_user_unique_id`,`page_id`,`permission_type`,`user_id`,`user_name`,`user_email`,`vendor_id`,`query`,`from_user`,`aq_status`,page_table) VALUES ('" . addslashes($parent_aq_id) . "','" . addslashes($aq_user_unique_id) . "','" . addslashes($temp_page_id) . "','" . addslashes($temp_permission_type) . "','" . addslashes($user_id) . "','" . addslashes($name) . "','" . addslashes($email) . "','" . addslashes($pro_user_id) . "','" . addslashes($query) . "','" . addslashes($from_user) . "','1','" . addslashes($page_table) . "')";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    //add ample 06-04-20
    public function updateAdviserQuery($aq_id, $query) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "UPDATE `tbladviserqueries` SET `query` = '".$query."' WHERE `aq_id` = '".$aq_id."'";
        //echo $sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function getUserAqUniqueId($user_id) {
        $DBH = new DatabaseHandler();
        $return = '';
        $name = $this->getUserFullNameById($user_id);
        if ($name != '') {
            $str_name = strtoupper(substr($name, 0, 4));
            $sql = "SELECT * FROM `tbladviserqueries` WHERE `user_id` = '" . $user_id . "' AND `from_user` = '1' ";
            //echo $sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $num_rows = $STH->rowCount() + 1;
                if (strlen($num_rows) == 1) {
                    $num_rows = '0000' . $num_rows;
                } elseif (strlen($num_rows) == 2) {
                    $num_rows = '000' . $num_rows;
                } elseif (strlen($num_rows) == 3) {
                    $num_rows = '00' . $num_rows;
                } elseif (strlen($num_rows) == 4) {
                    $num_rows = '0' . $num_rows;
                } else {
                    $num_rows = $num_rows;
                }
                
            }
			$return = $str_name . $num_rows;
        }
        return $return;
    }
    public function getProUserAqUniqueId($pro_user_id) {
        $DBH = new DatabaseHandler();
        $return = '';
        $name = $this->getProUserFullNameById($pro_user_id);
        if ($name != '') {
            $str_name = strtoupper(substr($name, 0, 4));
            $sql = "SELECT * FROM `tbladviserqueries` WHERE `vender_id` = '" . $pro_user_id . "' AND `from_user` = '0' ";
            //echo $sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $num_rows = $STH->rowCount() + 1;
                if (strlen($num_rows) == 1) {
                    $num_rows = '0000' . $num_rows;
                } elseif (strlen($num_rows) == 2) {
                    $num_rows = '000' . $num_rows;
                } elseif (strlen($num_rows) == 3) {
                    $num_rows = '00' . $num_rows;
                } elseif (strlen($num_rows) == 4) {
                    $num_rows = '0' . $num_rows;
                } else {
                    $num_rows = $num_rows;
                }
                
            }
			$return = $str_name . $num_rows;
        }
        return $return;
    }
    public function getupaid($page_id) {
        $DBH = new DatabaseHandler();
        $user_upa_id = '';
        $sql = "SELECT * FROM `tbladviserplanatributes` WHERE `page_id` = '" . $page_id . "' AND `apa_status` = '1' ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $user_upa_id = $row['apa_id'];
        }
        return $user_upa_id;
    }
    public function Checkifplanexist($user_upa_id) {
        $DBH = new DatabaseHandler();
        $flag = false;
        $sql = "SELECT * FROM `tbladviserplanatributes` WHERE `page_id` = '" . $user_upa_id . "' AND `apa_status` = '1' ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $flag = true;
        }
        return $flag;
    }
    public function getReportnameOfUser($type) {
        $DBH = new DatabaseHandler();
        $flag = false;
        $sql = "SELECT * FROM `tbl_recordshow_dropdown` WHERE `enduse` = '" . $type . "' AND `pag_cat_status` = '1' AND `is_deleted`=0";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $html = "";
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                // $reportname=$row['report_name'];
                $html.= '<option value="' . $row['page_cat_id'] . '">' . $row['report_name'] . '</option>';
            }
        }
        return $html;
    }
    public function getAdviserQueryPageOptionsnew($page_id, $user_id, $pro_user_id, $show_all) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        if ($page_id == '0_0') {
            $sel = ' selected ';
        } else {
            $sel = '';
        }
        //$option_str .= '<option value="0_0" '.$sel.'>My Query</option>';
        $str_report_id = $this->getUserAcceptedReportId($user_id, $pro_user_id);
        if ($str_report_id != '') {
            $arr_report_id = explode(',', $str_report_id);
            for ($i = 0;$i < count($arr_report_id);$i++) {
                $option_str.= '<option value="' . $arr_report_id[$i] . '_0">' . $this->get_PageName($arr_report_id[$i]) . ' (Standard Set)</option>';
                $option_str.= '<option value="' . $arr_report_id[$i] . '_1">' . $this->get_PageName($arr_report_id[$i]) . ' (Adviser Set)</option>';
            }
        } elseif ($show_all == '1') {
            //$sql = "SELECT * FROM `tblusersreports` ORDER BY `report_name` ASC";
            $sql = "SELECT * FROM `tblpagedropdowns` WHERE pd_id = '20' and  `pd_status` = 1 ";
            //echo $sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $row = $STH->fetch(PDO::FETCH_ASSOC);
                //                    echo $row['page_id_str'];
                //                    die();
                $page_id_arr = explode(',', $row['page_id_str']);
                //                    echo '<pre>';
                //                            print_r($page_id_arr);
                //                            echo '</pre>';
                for ($i = 0;$i < count($page_id_arr);$i++)
                //while($row = $STH->fetch(PDO::FETCH_ASSOC))
                {
                    $sql2 = "SELECT * FROM `tbladviserplanatributes` WHERE `page_id` = '" . $page_id_arr[$i] . "' AND `apa_status` = '1' AND `show_for_user` = '1' ORDER BY `apa_id` DESC LIMIT 1";
                    //echo $sql;
                    $STH2 = $DBH->query($sql2);
                    if ($STH2->rowCount() > 0) {
                        $row2 = $STH2->fetch(PDO::FETCH_ASSOC);
                        $temp_apa_id = $row2['apa_id'];
                        if ($this->chkUserPlanFeaturePermission($user_id, $temp_apa_id)) {
                            if ($page_id == $page_id_arr[$i] . '_1') {
                                $sel1 = '';
                                $sel2 = ' selected ';
                            } elseif ($page_id == $page_id_arr[$i] . '_0') {
                                $sel1 = ' selected ';
                                $sel2 = '';
                            } else {
                                $sel1 = '';
                                $sel2 = '';
                            }
                            $option_str.= '<option value="' . $page_id_arr[$i] . '_0" ' . $sel1 . '>' . $this->get_PageName($page_id_arr[$i]) . ' (Standard Set)</option>';
                            $option_str.= '<option value="' . $page_id_arr[$i] . '_1" ' . $sel2 . '>' . $this->get_PageName($page_id_arr[$i]) . ' (Adviser Set)</option>';
                            //die();
                            
                        }
                    }
                }
            }
        }
        return $option_str;
    }
    public function getOrderDetailsByInvoice($invoice) {
        $DBH = new DatabaseHandler();
        $arr_record = array();
        try {
            $sql = "SELECT * FROM `tblorders` WHERE `invoice` = '" . $invoice . "' ";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $r = $STH->fetch(PDO::FETCH_ASSOC);
                $arr_record = $r;
            }
        }
        catch(Exception $e) {
            $stringData = '[getOrderDetailsByInvoice] Catch Error:' . $e->getMessage() . ', sql:' . $sql;
            $this->debuglog($stringData);
            return array();
        }
        // echo "<pre>";print_r($arr_record);echo "</pre>";
        // exit;
        return $arr_record;
    }
    public function updateOrderPaymentStatus($tdata) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return = false;
        try {
            $sql = "UPDATE `tblorders` SET 

					`order_status` = :order_status,

					`payment_status` = :payment_status,

					`ebs_trans_id` = :ebs_trans_id,

					`ebs_payment_id` = :ebs_payment_id,  

					`ebs_response_code` = :ebs_response_code,  

					`ebs_response_msg` = :ebs_response_msg,  

					`ebs_date` = :ebs_date,  

					`ebs_payment_method` = :ebs_payment_method,  

					`ebs_request_id` = :ebs_request_id,

					`ebs_secure_hash` = :ebs_secure_hash,

					`ebs_is_flagged` = :ebs_is_flagged,

					`order_payment_date` = :order_payment_date

					WHERE `invoice` = :invoice ";
            $STH = $DBH->prepare($sql);
            $STH->execute(array(':order_status' => addslashes($tdata['order_status']), ':payment_status' => addslashes($tdata['payment_status']), ':ebs_trans_id' => addslashes($tdata['ebs_trans_id']), ':ebs_payment_id' => addslashes($tdata['ebs_payment_id']), ':ebs_response_code' => addslashes($tdata['ebs_response_code']), ':ebs_response_msg' => addslashes($tdata['ebs_response_msg']), ':ebs_date' => addslashes($tdata['ebs_date']), ':ebs_payment_method' => addslashes($tdata['ebs_payment_method']), ':ebs_request_id' => addslashes($tdata['ebs_request_id']), ':ebs_secure_hash' => addslashes($tdata['ebs_secure_hash']), ':ebs_is_flagged' => addslashes($tdata['ebs_is_flagged']), ':order_payment_date' => date('Y-m-d H:i:s'), ':invoice' => $tdata['invoice']));
            $DBH->commit();
            $return = true;
        }
        catch(Exception $e) {
            $stringData = '[updateOrderPaymentStatus] Catch Error:' . $e->getMessage();
            $this->debuglog($stringData);
            return false;
        }
        return $return;
    }
    public function updateProdQtyAfterOrderPlaced($invoice) {
        $DBH = new DatabaseHandler();
        $return = false;
        $arr_order_cart_details = $this->getOrderCartDetailsByInvoice($invoice);
        if (count($arr_order_cart_details) > 0) {
            for ($i = 0;$i < count($arr_order_cart_details);$i++) {
                $old_cusine_qty = $this->getCusineCurrentStockQty($arr_order_cart_details[$i]['prod_id']);
                $this->debuglog('[updateProdQtyAfterOrderPlaced] invoice:' . $invoice . ', cusine_id:' . $arr_order_cart_details[$i]['prod_id'] . ', old_cusine_qty:' . $old_cusine_qty);
                if ($old_cusine_qty > 0) {
                    $cusine_qty = $old_cusine_qty - $arr_order_cart_details[$i]['prod_qty'];
                    $this->debuglog('[updateProdQtyAfterOrderPlaced] invoice:' . $invoice . ', cusine_id:' . $arr_order_cart_details[$i]['prod_id'] . ', old_cusine_qty:' . $old_cusine_qty . ', prod_qty:' . $arr_order_cart_details[$i]['prod_qty']);
                    try {
                        $sql = "UPDATE `tblcusinelocations` SET cusine_qty = '" . $cusine_qty . "'  WHERE `cusine_id` = '" . $arr_order_cart_details[$i]['prod_id'] . "' AND `default_price` = '1'  AND `culoc_deleted` = '0' ";
                        $this->debuglog('[updateProdQtyAfterOrderPlaced] sql:' . $sql);
                        $STH = $DBH->query($sql);
                        if ($STH->rowCount() > 0) {
                            $return = true;
                        }
                    }
                    catch(Exception $e) {
                        $stringData = '[updateProdQtyAfterOrderPlaced] Catch Error:' . $e->getMessage() . ', sql:' . $sql;
                        $this->debuglog($stringData);
                    }
                }
            }
        }
        return $return;
    }
    public function removeAllItemsFromCart() {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return = false;
        $cart_session_id = session_id();
        try {
            if (isset($_SESSION['current_showing_date']) && $_SESSION['current_showing_date'] != '') {
                $current_showing_date = $_SESSION['current_showing_date'];
            } else {
                $current_showing_date = '';
            }
            if (isset($_SESSION['topcityid']) && $_SESSION['topcityid'] != '') {
                $topcityid = $_SESSION['topcityid'];
            } else {
                $topcityid = '0';
            }
            if (isset($_SESSION['topareaid']) && $_SESSION['topareaid'] != '') {
                $topareaid = $_SESSION['topareaid'];
            } else {
                $topareaid = '0';
            }
            $sql = "UPDATE `tblcart` SET 

					`cart_status` = :cart_status,

					`cart_deleted` = :cart_deleted,

					`cart_deleted_date` = :cart_deleted_date

					WHERE 

					`cart_session_id` = :cart_session_id  AND 

					`cart_city_id` = :cart_city_id  AND 

					`cart_deleted` = '0' ";
            $STH = $DBH->prepare($sql);
            $STH->execute(array(':cart_status' => '1', ':cart_deleted' => '1', ':cart_deleted_date' => date('Y-m-d H:i:s'), ':cart_session_id' => $cart_session_id, ':cart_city_id' => $topcityid));
            $DBH->commit();
            $return = true;
        }
        catch(Exception $e) {
            $stringData = '[removeAllItemsFromCart] Catch Error:' . $e->getMessage();
            $this->debuglog($stringData);
            return false;
        }
        return $return;
    }
    public function sendInvoiceEmailToCustomer($invoice) {
        $arr_order_details = $this->getOrderDetailsByInvoice($invoice);
        $from_email = 'support@tastes-of-states.com';
        $from_name = 'Tastes of States';
        $subject = "Order placed successfully for Invoice - " . $invoice;
        $emailHTML = $this->getOrderInvoiceHtml($invoice);
        $to_email = $arr_order_details['user_email'];
        $mail = new PHPMailer();
        $mail->IsHTML(true);
        $mail->Host = "batmobile.websitewelcome.com"; // SMTP server
        $mail->From = $from_email;
        $mail->FromName = $from_name;
        $mail->AddAddress($to_email);
        $mail->Subject = $subject;
        $mail->Body = $emailHTML;
        $mail->Send();
        $mail->ClearAddresses();
    }
    public function getOrderSmsText($tdata) {
        if ($tdata['ebs_response_code'] == '0') {
            $return = "Your Order Successfully Completed. Your invoice no is " . $tdata['invoice'];
        } else {
            $return = "Your payment is failed. Your ref no is " . $tdata['invoice'];
        }
        return $return;
    }
    public function getOrderSmsTextAdmin($tdata) {
        if ($tdata['ebs_response_code'] == '0') {
            $return = "Dear Admin,Order Recieved with Invoice no : " . $tdata['invoice'];
        } else {
            $return = "Dear Admin,Payment failed of Invoice no : " . $tdata['invoice'];
        }
        return $return;
    }
    public function getUniqueVendorIdsOfInvoice($invoice) {
        $DBH = new DatabaseHandler();
        $arr_vendor_id = array();
        $arr_order_cart_details = $this->getOrderCartDetailsByInvoice($invoice);
        if (count($arr_order_cart_details) > 0) {
            foreach ($arr_order_cart_details as $record) {
                $arr_cusine_records = $this->getCusineDetails($record['prod_id']);
                if (count($arr_cusine_records) > 0) {
                    $arr_vendor_id[] = $arr_cusine_records['vendor_id'];
                }
            }
            $arr_vendor_id = array_unique($arr_vendor_id);
            $arr_vendor_id = array_values($arr_vendor_id);
        }
        return $arr_vendor_id;
    }
    public function getVendorContactNumber($vendor_id) {
        $DBH = new DatabaseHandler();
        $contact_number = '';
        $sql = "SELECT contact_number FROM `tblvendorlocations` WHERE `vendor_id` = '" . $vendor_id . "' AND `vloc_default` = '1' AND `vloc_deleted` = '0' ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $r = $STH->fetch(PDO::FETCH_ASSOC);
            $contact_number = stripslashes($r['contact_number']);
        }
        return $contact_number;
    }
    public function getOrderSmsTextVendor($tdata) {
        if ($tdata['ebs_response_code'] == '0') {
            $return = "You have Recieved order with Invoice no : " . $tdata['invoice'] . '-' . $tdata['vendor_id'];
        }
        return $return;
    }
    public function chkIfCartEmpty() {
        $DBH = new DatabaseHandler();
        $return = true;
        $cart_session_id = session_id();
        if ($this->isLoggedIn()) {
            $user_id = $_SESSION['user_id'];
        } else {
            $user_id = 0;
        }
        try {
            if (isset($_SESSION['current_showing_date']) && $_SESSION['current_showing_date'] != '') {
                $current_showing_date = $_SESSION['current_showing_date'];
            } else {
                $current_showing_date = '';
            }
            if (isset($_SESSION['topcityid']) && $_SESSION['topcityid'] != '') {
                $topcityid = $_SESSION['topcityid'];
            } else {
                $topcityid = '0';
            }
            if (isset($_SESSION['topareaid']) && $_SESSION['topareaid'] != '') {
                $topareaid = $_SESSION['topareaid'];
            } else {
                $topareaid = '0';
            }
            /*
            
            $sql = "SELECT * FROM `tblcart` WHERE
            
            `cart_session_id` = '".$cart_session_id."' AND
            
            `cart_delivery_date` = '".$current_showing_date."' AND
            
            `cart_city_id` = '".$topcityid."' AND
            
            `cart_area_id` = '".$topareaid."' AND
            
            `cart_status` = '0' AND
            
            `cart_deleted` = '0' ";
            
            */
            // $sql = "SELECT * FROM `tblcart` WHERE
            // 		`cart_session_id` = '".$cart_session_id."' AND
            // 		`cart_city_id` = '".$topcityid."' AND
            // 		`cart_status` = '0' AND
            // 		`cart_deleted` = '0' ";
            $sql = "SELECT * FROM `tblcart` WHERE `cart_session_id` = '" . $cart_session_id . "'";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = false;
            }
        }
        catch(Exception $e) {
            $stringData = '[chkIfCartEmpty] Catch Error:' . $e->getMessage() . ', sql:' . $sql;
            $this->debuglog($stringData);
            return true;
        }
        return $return;
        // echo "<pre>";print_r($return);echo "<pre>";
        // exit;
        
    }
    public function genrateInvoiceNumber($user_id) {
        $invoice = '';
        if (strlen($user_id) == 1) {
            $user_id = '000' . $user_id;
        } elseif (strlen($user_id) == 2) {
            $user_id = '00' . $user_id;
        } elseif (strlen($user_id) == 3) {
            $user_id = '0' . $user_id;
        } else {
            $user_id = $user_id;
        }
        $invoice = 'W4U' . date('ymdHi') . rand(100, 999) . $user_id;
        return $invoice;
    }
    public function getTaxDetailsByTaxId($tax_id) {
        $DBH = new DatabaseHandler();
        $output = array();
        $today = date('Y-m-d');
        try {
            $sql = "SELECT * FROM `tbltaxes` WHERE tax_id = '" . $tax_id . "' AND tax_effective_date <= '" . $today . "' AND tax_deleted = '0' AND tax_status = '1'  ";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $output = $r;
                }
            }
        }
        catch(Exception $e) {
            $stringData = '[getTaxDetailsByTaxId] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $output;
        }
        return $output;
    }
    public function getCartDetailsBySessId($cart_session_id) {
        $DBH = new DatabaseHandler();
        $arr_cart_records = array();
        $arr_cart_records['cart'] = array();
        $subtotal = 0;
        $discount_amount = 0;
        $tax_amount = 0;
        $shipping_price = 0;
        if ($this->isLoggedIn()) {
            $user_id = $_SESSION['user_id'];
        } else {
            $user_id = 0;
        }
        try {
            if (isset($_SESSION['current_showing_date']) && $_SESSION['current_showing_date'] != '') {
                $current_showing_date = $_SESSION['current_showing_date'];
            } else {
                $current_showing_date = '';
            }
            if (isset($_SESSION['topcityid']) && $_SESSION['topcityid'] != '') {
                $topcityid = $_SESSION['topcityid'];
            } else {
                $topcityid = '0';
            }
            if (isset($_SESSION['topareaid']) && $_SESSION['topareaid'] != '') {
                $topareaid = $_SESSION['topareaid'];
            } else {
                $topareaid = '0';
            }
            /*
            
            $sql = "SELECT * FROM `tblcart` WHERE
            
            `cart_session_id` = '".$cart_session_id."' AND
            
            `cart_delivery_date` = '".$current_showing_date."' AND
            
            `cart_city_id` = '".$topcityid."' AND
            
            `cart_area_id` = '".$topareaid."' AND
            
            `cart_status` = '0' AND
            
            `cart_deleted` = '0' ";
            
            */
            // $sql = "SELECT * FROM `tblcart` WHERE
            // 		`cart_session_id` = '".$cart_session_id."' AND
            // 		`cart_city_id` = '".$topcityid."' AND
            // 		`cart_status` = '0' AND
            // 		`cart_deleted` = '0' ";
            $sql = "SELECT * FROM `tblcart` WHERE `cart_session_id` = '" . $cart_session_id . "'";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $subtotal = 0;
                $cnt = 0;
                $cgst_amount = 0.00;
                $sgst_amount = 0.00;
                $cess_amount = 0.00;
                $gst_amount = 0.00;
                $arr_vendor_discount_amt = array();
                while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $obj = new frontclass();
                    $arr_cusine_details = $this->getCusineDetailsForCart($r['cusine_id']);
                    //echo '<br><pre>';
                    //print_r($arr_cusine_details);
                    //echo '<br></pre>';
                    if (isset($arr_cusine_details['cgst_tax']) && $arr_cusine_details['cgst_tax'] != '') {
                        $tax_calculated_amt_cgst = 0.00;
                        $arr_temp_tax_details = $this->getTaxDetailsByTaxId($arr_cusine_details['cgst_tax']);
                        if (count($arr_temp_tax_details) > 0) {
                            if ($arr_temp_tax_details['tax_type'] == '0') {
                                $tax_calculated_amt_cgst = $arr_temp_tax_details['tax_amount'];
                            } elseif ($arr_temp_tax_details['tax_type'] == '1') {
                                $tax_calculated_amt_cgst = ($r['subtotal'] * $arr_temp_tax_details['tax_percentage']) / 100;
                            } elseif ($arr_temp_tax_details['tax_type'] == '2') {
                            } elseif ($arr_temp_tax_details['tax_type'] == '3') {
                            }
                        }
                        if ($tax_calculated_amt_cgst > 0) {
                            $r['prod_cgst_tax_amount'] = $tax_calculated_amt_cgst;
                            $r['prod_cgst_tax_percentage'] = $arr_temp_tax_details['tax_percentage'];
                        } else {
                            $r['prod_cgst_tax_amount'] = '';
                            $r['prod_cgst_tax_percentage'] = '';
                        }
                        $cgst_amount = $cgst_amount + $tax_calculated_amt_cgst;
                    } else {
                        $r['prod_cgst_tax_amount'] = '';
                        $r['prod_cgst_tax_percentage'] = '';
                    }
                    if (isset($arr_cusine_details['sgst_tax']) && $arr_cusine_details['sgst_tax'] != '') {
                        $tax_calculated_amt_sgst = 0.00;
                        $arr_temp_tax_details = $this->getTaxDetailsByTaxId($arr_cusine_details['sgst_tax']);
                        if (count($arr_temp_tax_details) > 0) {
                            if ($arr_temp_tax_details['tax_type'] == '0') {
                                $tax_calculated_amt_sgst = $arr_temp_tax_details['tax_amount'];
                            } elseif ($arr_temp_tax_details['tax_type'] == '1') {
                                $tax_calculated_amt_sgst = ($r['subtotal'] * $arr_temp_tax_details['tax_percentage']) / 100;
                            } elseif ($arr_temp_tax_details['tax_type'] == '2') {
                            } elseif ($arr_temp_tax_details['tax_type'] == '3') {
                            }
                        }
                        if ($tax_calculated_amt_sgst > 0) {
                            $r['prod_sgst_tax_amount'] = $tax_calculated_amt_sgst;
                            $r['prod_sgst_tax_percentage'] = $arr_temp_tax_details['tax_percentage'];
                        } else {
                            $r['prod_sgst_tax_amount'] = '';
                            $r['prod_sgst_tax_percentage'] = '';
                        }
                        $sgst_amount = $sgst_amount + $tax_calculated_amt_sgst;
                    } else {
                        $r['prod_sgst_tax_amount'] = '';
                        $r['prod_sgst_tax_percentage'] = '';
                    }
                    if (isset($arr_cusine_details['cess_tax']) && $arr_cusine_details['cess_tax'] != '') {
                        $tax_calculated_amt_cess = 0.00;
                        $arr_temp_tax_details = $this->getTaxDetailsByTaxId($arr_cusine_details['cess_tax']);
                        if (count($arr_temp_tax_details) > 0) {
                            if ($arr_temp_tax_details['tax_type'] == '0') {
                                $tax_calculated_amt_cess = $arr_temp_tax_details['tax_amount'];
                            } elseif ($arr_temp_tax_details['tax_type'] == '1') {
                                $tax_calculated_amt_cess = ($r['subtotal'] * $arr_temp_tax_details['tax_percentage']) / 100;
                            } elseif ($arr_temp_tax_details['tax_type'] == '2') {
                            } elseif ($arr_temp_tax_details['tax_type'] == '3') {
                            }
                        }
                        if ($tax_calculated_amt_cess > 0) {
                            $r['prod_cess_tax_amount'] = $tax_calculated_amt_cess;
                            $r['prod_cess_tax_percentage'] = $arr_temp_tax_details['tax_percentage'];
                        } else {
                            $r['prod_cess_tax_amount'] = '';
                            $r['prod_cess_tax_percentage'] = '';
                        }
                        $cess_amount = $cess_amount + $tax_calculated_amt_cess;
                    } else {
                        $r['prod_cess_tax_amount'] = '';
                        $r['prod_cess_tax_percentage'] = '';
                    }
                    if (isset($arr_cusine_details['gst_tax']) && $arr_cusine_details['gst_tax'] != '') {
                        $tax_calculated_amt_gst = 0.00;
                        $arr_temp_tax_details = $this->getTaxDetailsByTaxId($arr_cusine_details['gst_tax']);
                        if (count($arr_temp_tax_details) > 0) {
                            if ($arr_temp_tax_details['tax_type'] == '0') {
                                $tax_calculated_amt_gst = $arr_temp_tax_details['tax_amount'];
                            } elseif ($arr_temp_tax_details['tax_type'] == '1') {
                                $tax_calculated_amt_gst = ($r['subtotal'] * $arr_temp_tax_details['tax_percentage']) / 100;
                            } elseif ($arr_temp_tax_details['tax_type'] == '2') {
                            } elseif ($arr_temp_tax_details['tax_type'] == '3') {
                            }
                        }
                        if ($tax_calculated_amt_gst > 0) {
                            $r['prod_gst_tax_amount'] = $tax_calculated_amt_gst;
                            $r['prod_gst_tax_percentage'] = $arr_temp_tax_details['tax_percentage'];
                        } else {
                            $r['prod_gst_tax_amount'] = '';
                            $r['prod_gst_tax_percentage'] = '';
                        }
                        $gst_amount = $gst_amount + $tax_calculated_amt_gst;
                    } else {
                        $r['prod_gst_tax_amount'] = '';
                        $r['prod_gst_tax_percentage'] = '';
                    }
                    $temp_cart_records = array();
                    $temp_cart_records['cart_session_id'] = $cart_session_id;
                    $temp_cart_records['user_id'] = $user_id;
                    $temp_cart_records['prod_id'] = $r['cusine_id'];
                    $temp_cart_records['prod_name'] = $this->getItemName($arr_cusine_details['item_id']);
                    $temp_cart_records['prod_image'] = $arr_cusine_details['cusine_image'];
                    $temp_cart_records['prod_qty'] = $r['qty'];
                    $temp_cart_records['prod_amt'] = $r['price'];
                    $temp_cart_records['prod_subtotal'] = $r['subtotal'];
                    $temp_cart_records['prod_currency_id'] = $r['currency_id'];
                    $temp_cart_records['prod_currency'] = $this->getCurrencyName($r['currency_id']);
                    $temp_cart_records['prod_ordering_type_id'] = $r['ordering_type_id'];
                    $temp_cart_records['prod_ordering_type'] = $this->getCategoryName($r['ordering_type_id']);
                    $temp_cart_records['prod_ordering_size_id'] = $r['ordering_size_id'];
                    $temp_cart_records['prod_ordering_size'] = $this->getCategoryName($r['ordering_size_id']);
                    $temp_cart_records['item_last_qty'] = $arr_cusine_details['cusine_qty'];
                    $temp_cart_records['cart_delivery_date'] = $r['cart_delivery_date'];
                    $temp_cart_records['cart_city_id'] = $r['cart_city_id'];
                    $temp_cart_records['cart_area_id'] = $r['cart_area_id'];
                    $temp_cart_records['is_offer'] = $r['is_offer'];
                    $temp_cart_records['offer_price'] = $r['offer_price'];
                    $temp_cart_records['prod_cgst_tax_amount'] = $r['prod_cgst_tax_amount'];
                    $temp_cart_records['prod_cgst_tax_percentage'] = $r['prod_cgst_tax_percentage'];
                    $temp_cart_records['prod_sgst_tax_amount'] = $r['prod_sgst_tax_amount'];
                    $temp_cart_records['prod_sgst_tax_percentage'] = $r['prod_sgst_tax_percentage'];
                    $temp_cart_records['prod_cess_tax_amount'] = $r['prod_cess_tax_amount'];
                    $temp_cart_records['prod_cess_tax_percentage'] = $r['prod_cess_tax_percentage'];
                    $temp_cart_records['prod_gst_tax_amount'] = $r['prod_gst_tax_amount'];
                    $temp_cart_records['prod_gst_tax_percentage'] = $r['prod_gst_tax_percentage'];
                    $arr_cart_records['cart'][$cnt] = $temp_cart_records;
                    $subtotal = $subtotal + $r['subtotal'];
                    $discount_coupon = $r['discount_coupon'];
                    if (array_key_exists($arr_cusine_details['vendor_id'], $arr_vendor_discount_amt)) {
                        $arr_vendor_discount_amt[$arr_cusine_details['vendor_id']]+= $r['subtotal'];
                    } else {
                        $arr_vendor_discount_amt[$arr_cusine_details['vendor_id']] = $r['subtotal'];
                    }
                    $cnt++;
                }
                $trade_discount = $this->getTradeDiscountPrice($subtotal, $topcityid);
                /////////
                $discount_amount = 0.00;
                /* Calculate Discount amount - Start */
                $discount_amount = 0.00;
                $discount_on_subtotal = false;
                $discount_on_final = false;
                $discount_vendor_id = 0;
                $arr_coupon_details = $this->getDiscountCouponDetailsByCoupon($discount_coupon);
                if (is_array($arr_coupon_details) && count($arr_coupon_details) > 0) {
                    $discount_vendor_id = $arr_coupon_details['vendor_id'];
                    if ($arr_coupon_details['vendor_id'] == '0') {
                        if ($arr_coupon_details['dc_type'] == '0') {
                            if ($arr_coupon_details['discount_price'] == '') {
                                $calculated_discount_price = 0.00;
                            } else {
                                $calculated_discount_price = $arr_coupon_details['discount_price'];
                            }
                            $discount_amount = $calculated_discount_price;
                            if ($arr_coupon_details['dc_applied_on'] == '0') {
                                $discount_on_subtotal = true;
                            } elseif ($arr_coupon_details['dc_applied_on'] == '1') {
                                $discount_on_final = true;
                            }
                        } elseif ($arr_coupon_details['dc_type'] == '1') {
                            if ($arr_coupon_details['dc_percentage'] == '') {
                                $calculated_discount_price = 0.00;
                            } else {
                                $calculated_discount_price = ($subtotal * $arr_coupon_details['dc_percentage']) / 100;
                                if ($arr_coupon_details['dc_applied_on'] == '0') {
                                    $discount_on_subtotal = true;
                                } elseif ($arr_coupon_details['dc_applied_on'] == '1') {
                                    $discount_on_final = true;
                                }
                            }
                            $discount_amount = $calculated_discount_price;
                        } elseif ($arr_coupon_details['dc_type'] == '2') {
                        }
                    } else {
                        if (array_key_exists($arr_coupon_details['vendor_id'], $arr_vendor_discount_amt)) {
                            if ($arr_coupon_details['dc_type'] == '0') {
                                if ($arr_coupon_details['discount_price'] == '') {
                                    $calculated_discount_price = 0.00;
                                } else {
                                    $calculated_discount_price = $arr_coupon_details['discount_price'];
                                }
                                $discount_amount = $calculated_discount_price;
                                if ($arr_coupon_details['dc_applied_on'] == '0') {
                                    $discount_on_subtotal = true;
                                } elseif ($arr_coupon_details['dc_applied_on'] == '1') {
                                    $discount_on_final = true;
                                }
                            } elseif ($arr_coupon_details['dc_type'] == '1') {
                                if ($arr_coupon_details['dc_percentage'] == '') {
                                    $calculated_discount_price = 0.00;
                                } else {
                                    $calculated_discount_price = ($arr_vendor_discount_amt[$arr_coupon_details['vendor_id']] * $arr_coupon_details['dc_percentage']) / 100;
                                    if ($arr_coupon_details['dc_applied_on'] == '0') {
                                        $discount_on_subtotal = true;
                                    } elseif ($arr_coupon_details['dc_applied_on'] == '1') {
                                        $discount_on_final = true;
                                    }
                                }
                                $discount_amount = $calculated_discount_price;
                            } elseif ($arr_coupon_details['dc_type'] == '2') {
                            }
                        } else {
                        }
                    }
                }
                /* Calculate Discount amount - End */
                //$shipping_price = $this->getShippingPrice($subtotal,$topcityid,$topareaid);
                $shipping_price = $this->getShippingPrice($subtotal, $topcityid);
                // echo "<pre>";print_r($shipping_price);echo "<pre>";
                //                exit;
                $tax_amount = 0.00;
                //$tax_amount = $cgst_amount + $sgst_amount + $cess_amount + $gst_amount;
                $tax_amount = $cgst_amount + $sgst_amount + $cess_amount;
                /*
                
                //Commentd - for deactivate common tax - Start
                
                $arr_tax_details = $this->getTaxDetails($topcityid,$topareaid);
                
                if(is_array($arr_tax_details) && count($arr_tax_details) > 0)
                
                {
                
                if($arr_tax_details['tax_type'] == '0')
                
                {
                
                if($arr_tax_details['tax_applied_on'] == '0')
                
                {
                
                $tax_amount = $tax_amount +	$arr_tax_details['tax_amount'];
                
                }
                
                elseif($arr_tax_details['tax_applied_on'] == '1')
                
                {
                
                $tax_amount = $tax_amount +	$arr_tax_details['tax_amount'];
                
                }
                
                elseif($arr_tax_details['tax_applied_on'] == '2' )
                
                {
                
                $tax_amount = $tax_amount +	$arr_tax_details['tax_amount'];
                
                }
                
                elseif($arr_tax_details['tax_applied_on'] == '3' )
                
                {
                
                $tax_amount = $tax_amount +	$arr_tax_details['tax_amount'];
                
                }
                
                else
                
                {
                
                
                
                }
                
                }
                
                elseif($arr_tax_details['tax_type'] == '1')
                
                {
                
                if($arr_tax_details['tax_applied_on'] == '0')
                
                {
                
                $tax_calculated_amt = ( $subtotal * $arr_tax_details['tax_percentage'] ) / 100;
                
                $tax_amount = $tax_amount +	$tax_calculated_amt;
                
                }
                
                elseif($arr_tax_details['tax_applied_on'] == '1')
                
                {
                
                $tax_calculated_amt = ( ( $subtotal - $discount_amount) * $arr_tax_details['tax_percentage'] ) / 100;
                
                $tax_amount = $tax_amount +	$tax_calculated_amt;
                
                }
                
                elseif($arr_tax_details['tax_applied_on'] == '2' )
                
                {
                
                $tax_calculated_amt = ( ( $subtotal - $discount_amount + $shipping_price) * $arr_tax_details['tax_percentage'] ) / 100;
                
                $tax_amount = $tax_amount +	$tax_calculated_amt;
                
                }
                
                elseif($arr_tax_details['tax_applied_on'] == '3' )
                
                {
                
                $tax_calculated_amt = ( ( $subtotal - $discount_amount + $shipping_price) * $arr_tax_details['tax_percentage'] ) / 100;
                
                $tax_amount = $tax_amount +	$tax_calculated_amt;
                
                }
                
                else
                
                {
                
                
                
                }
                
                }
                
                elseif($arr_tax_details['tax_type'] == '2')
                
                {
                
                
                
                }
                
                elseif($arr_tax_details['tax_type'] == '3')
                
                {
                
                
                
                }
                
                }
                
                //Commentd - for deactivate common tax - End
                
                */
                $total_amt = $subtotal - $trade_discount - $discount_amount + $tax_amount + $shipping_price;
            }
            $subtotal = number_format((float)$subtotal, 2, '.', '');
            $discount_amount = number_format((float)$discount_amount, 2, '.', '');
            $tax_amount = number_format((float)$tax_amount, 2, '.', '');
            $cgst_amount = number_format((float)$cgst_amount, 2, '.', '');
            $sgst_amount = number_format((float)$sgst_amount, 2, '.', '');
            $cess_amount = number_format((float)$cess_amount, 2, '.', '');
            $gst_amount = number_format((float)$gst_amount, 2, '.', '');
            $shipping_price = number_format((float)$shipping_price, 2, '.', '');
            $total_amt = number_format((float)$total_amt, 2, '.', '');
            $arr_cart_records['order_subtotal'] = $subtotal;
            $arr_cart_records['order_discount_coupon'] = $discount_coupon;
            $arr_cart_records['order_discount'] = $discount_amount;
            $arr_cart_records['order_discount_vendor_id'] = $discount_vendor_id;
            $arr_cart_records['order_trade_discount'] = $trade_discount;
            $arr_cart_records['order_tax'] = $tax_amount;
            $arr_cart_records['order_shipping_amt'] = $shipping_price;
            $arr_cart_records['order_total_amt'] = $total_amt;
            $arr_cart_records['order_cgst_tax_amount'] = $cgst_amount;
            $arr_cart_records['order_sgst_tax_amount'] = $sgst_amount;
            $arr_cart_records['order_cess_tax_amount'] = $cess_amount;
            $arr_cart_records['order_gst_tax_amount'] = $gst_amount;
        }
        catch(Exception $e) {
            $stringData = '[getCartDetailsBySessId] Catch Error:' . $e->getMessage() . ', sql:' . $sql;
            $this->debuglog($stringData);
            return $arr_cart_records;
        }
        return $arr_cart_records;
    }
    public function getDiscountCouponDetailsByCoupon($discount_coupon) {
        $DBH = new DatabaseHandler();
        $arr_record = array();
        // if($discount_coupon!="")
        // {
        $sql = "SELECT * FROM `tbldiscountcoupons` WHERE `discount_coupon` = '" . $discount_coupon . "' AND `dc_deleted` = '0' ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $r = $STH->fetch(PDO::FETCH_ASSOC);
            $arr_record = $r;
        }
        // }
        // else
        // {
        //  $arr_record ="";
        // }
        return $arr_record;
    }
    public function getCusineDetailsForCart($cusine_id) {
        $DBH = new DatabaseHandler();
        $arr_record = array();
        try {
            // echo $sql = "SELECT TBC.*,TCL.* FROM `tblcusines` AS TBC
            // 		LEFT JOIN `tblcusinelocations` AS TCL ON TBC.cusine_id = TCL.cusine_id
            // 		WHERE TBC.cusine_id = '".$cusine_id."' AND TBC.cusine_deleted = '0' AND TCL.culoc_deleted = '0' AND TCL.default_price = '1' ";
            // echo $sql="SELECT * FROM  tblcusines LEFT JOIN tblcusinelocations ON tblcusines.cusine_id = tblcusinelocations.cusine_id WHERE tblcusines.cusine_deleted='0' AND tblcusinelocations.culoc_deleted='0' AND tblcusinelocations.default_price='1' AND tblcusines.cusine_id='".$cusine_id."'";
            // $sql = "SELECT TBC.*,TCL.* FROM `tblcusines` AS TBC LEFT JOIN `tblcusinelocations` AS TCL ON TBC.cusine_id = TCL.cusine_id WHERE TBC.cusine_id = '".$cusine_id."' ";
            // $sql = "SELECT TBC.*,TCL.* FROM `tbl_event_details` AS TBC LEFT JOIN `tbl_event_loc_price` AS TCL ON TBC.event_id = TCL.event_id WHERE TBC.event_id = '".$cusine_id."' ";
            $sql = "SELECT TBC.*,TCL.*,TEP.* FROM `tbl_event_details` AS TBC LEFT JOIN `tbl_event_loc_price` AS TCL ON TBC.event_id = TCL.event_id  LEFT JOIN `tbl_event_price` AS TEP ON TBC.event_id = TEP.event_id WHERE TBC.event_id = '" . $cusine_id . "' ";
            // echo "<pre>";print_r('hi');echo "</pre>";
            // exit;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $r = $STH->fetch(PDO::FETCH_ASSOC);
                $arr_record = $r;
            }
        }
        catch(Exception $e) {
            $stringData = '[getCusineDetailsForCart] Catch Error:' . $e->getMessage() . ', sql:' . $sql;
            $this->debuglog($stringData);
            return $arr_record;
        }
        return $arr_record;
    }
    public function getItemName($item_id) {
        $DBH = new DatabaseHandler();
        $output = '';
        try {
            $sql = "SELECT `item_name` FROM `tblitems` WHERE `item_id`= '" . $item_id . "' ";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $r = $STH->fetch(PDO::FETCH_ASSOC);
                $output = $r['item_name'];
            }
            return $output;
        }
        catch(Exception $e) {
            $stringData = '[getItemName] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $output;
        }
    }
    public function getCurrencyName($currency_id) {
        $DBH = new DatabaseHandler();
        $output = '';
        try {
            $sql = "SELECT currency FROM `tblcurrencies` WHERE `currency_id` = '" . $currency_id . "' AND `currency_deleted` = '0' ";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $r = $STH->fetch(PDO::FETCH_ASSOC);
                $output = stripslashes($r['currency']);
            }
        }
        catch(Exception $e) {
            $stringData = '[getCurrencyName] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $output;
        }
        return $output;
    }
    public function getCategoryName($cat_id) {
        $DBH = new DatabaseHandler();
        $return = '';
        try {
            $sql = "SELECT cat_name FROM `tblcategories`  WHERE  `cat_id` = '" . $cat_id . "' AND `cat_deleted` = '0' ";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $r = $STH->fetch(PDO::FETCH_ASSOC);
                $return = $r['cat_name'];
            }
            return $return;
        }
        catch(Exception $e) {
            $stringData = '[getCategoryName] Catch Error:' . $e->getMessage() . ', sql:' . $sql;
            $this->debuglog($stringData);
            return '';
        }
    }
    public function createOrder($tdata) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return = false;
        try {
            $sql = "INSERT INTO `tblorders` (`invoice`,`cart_session_id`,`order_status`,`payment_status`,`user_id`,`user_name`,`user_email`,`user_mobile_no`,

					`user_building_name`,`user_floor_no`,`user_address`,`user_landmark`,`user_country_id`,`user_country_name`,`user_state_id`,`user_state_name`,

					`user_city_id`,`user_city_name`,`user_area_id`,`user_area_name`,`user_delivery_mobile_no`,`user_pincode`,

					`billing_building_name`,`billing_floor_no`,`billing_address`,`billing_landmark`,`billing_country_id`,`billing_country_name`,`billing_state_id`,`billing_state_name`,

					`billing_city_id`,`billing_city_name`,`billing_area_id`,`billing_area_name`,`billing_mobile_no`,`billing_pincode`,

					`order_subtotal`,`order_trade_discount`,`order_discount`,`order_tax`,`order_shipping_amt`,`order_total_amt`,`order_add_date`,`order_delivery_date`,`order_city_id`,`order_area_id`,`order_discount_coupon`,`delivery_name`,`billing_name`,`order_cgst_tax_amount`,`order_sgst_tax_amount`,`order_cess_tax_amount`,`order_gst_tax_amount`,`order_discount_vendor_id`) 

					VALUES (:invoice,:cart_session_id,:order_status,:payment_status,:user_id,:user_name,:user_email,:user_mobile_no,

					:user_building_name,:user_floor_no,:user_address,:user_landmark,:user_country_id,:user_country_name,:user_state_id,:user_state_name,

					:user_city_id,:user_city_name,:user_area_id,:user_area_name,:user_delivery_mobile_no,:user_pincode,

					:billing_building_name,:billing_floor_no,:billing_address,:billing_landmark,:billing_country_id,:billing_country_name,:billing_state_id,:billing_state_name,

					:billing_city_id,:billing_city_name,:billing_area_id,:billing_area_name,:billing_mobile_no,:billing_pincode,

					:order_subtotal,:order_trade_discount,:order_discount,:order_tax,:order_shipping_amt,:order_total_amt,:order_add_date,:order_delivery_date,:order_city_id,:order_area_id,:order_discount_coupon,:delivery_name,:billing_name,:order_cgst_tax_amount,:order_sgst_tax_amount,:order_cess_tax_amount,:order_gst_tax_amount,:order_discount_vendor_id)";
            $STH = $DBH->prepare($sql);
            $STH->execute(array(':invoice' => addslashes($tdata['invoice']), ':cart_session_id' => addslashes($tdata['cart_session_id']), ':order_status' => addslashes($tdata['order_status']), ':payment_status' => addslashes($tdata['payment_status']), ':user_id' => addslashes($tdata['user_id']), ':user_name' => addslashes($tdata['user_name']), ':user_email' => addslashes($tdata['user_email']), ':user_mobile_no' => addslashes($tdata['user_mobile_no']), ':user_building_name' => addslashes($tdata['user_building_name']), ':user_floor_no' => addslashes($tdata['user_floor_no']), ':user_address' => addslashes($tdata['user_address']), ':user_landmark' => addslashes($tdata['user_landmark']), ':user_country_id' => addslashes($tdata['user_country_id']), ':user_country_name' => addslashes($tdata['user_country_name']), ':user_state_id' => addslashes($tdata['user_state_id']), ':user_state_name' => addslashes($tdata['user_state_name']), ':user_city_id' => addslashes($tdata['user_city_id']), ':user_city_name' => addslashes($tdata['user_city_name']), ':user_area_id' => addslashes($tdata['user_area_id']), ':user_area_name' => addslashes($tdata['user_area_name']), ':user_delivery_mobile_no' => addslashes($tdata['user_delivery_mobile_no']), ':user_pincode' => addslashes($tdata['user_pincode']), ':billing_building_name' => addslashes($tdata['billing_building_name']), ':billing_floor_no' => addslashes($tdata['billing_floor_no']), ':billing_address' => addslashes($tdata['billing_address']), ':billing_landmark' => addslashes($tdata['billing_landmark']), ':billing_country_id' => addslashes($tdata['billing_country_id']), ':billing_country_name' => addslashes($tdata['billing_country_name']), ':billing_state_id' => addslashes($tdata['billing_state_id']), ':billing_state_name' => addslashes($tdata['billing_state_name']), ':billing_city_id' => addslashes($tdata['billing_city_id']), ':billing_city_name' => addslashes($tdata['billing_city_name']), ':billing_area_id' => addslashes($tdata['billing_area_id']), ':billing_area_name' => addslashes($tdata['billing_area_name']), ':billing_mobile_no' => addslashes($tdata['billing_mobile_no']), ':billing_pincode' => addslashes($tdata['billing_pincode']), ':order_subtotal' => addslashes($tdata['order_subtotal']), ':order_trade_discount' => addslashes($tdata['order_trade_discount']), ':order_discount' => addslashes($tdata['order_discount']), ':order_tax' => addslashes($tdata['order_tax']), ':order_shipping_amt' => addslashes($tdata['order_shipping_amt']), ':order_total_amt' => addslashes($tdata['order_total_amt']), ':order_add_date' => date('Y-m-d H:i:s'), ':order_delivery_date' => addslashes($tdata['cart'][0]['cart_delivery_date']), ':order_city_id' => addslashes($tdata['cart'][0]['cart_city_id']), ':order_area_id' => addslashes($tdata['cart'][0]['cart_area_id']), ':order_discount_coupon' => addslashes($tdata['order_discount_coupon']), ':delivery_name' => addslashes($tdata['delivery_name']), ':billing_name' => addslashes($tdata['billing_name']), ':order_cgst_tax_amount' => addslashes($tdata['order_cgst_tax_amount']), ':order_sgst_tax_amount' => addslashes($tdata['order_sgst_tax_amount']), ':order_cess_tax_amount' => addslashes($tdata['order_cess_tax_amount']), ':order_gst_tax_amount' => addslashes($tdata['order_gst_tax_amount']), ':order_discount_vendor_id' => addslashes($tdata['order_discount_vendor_id'])));
            $order_id = $DBH->lastInsertId();
            $DBH->commit();
            if ($order_id > 0) {
                $return = true;
                if (count($tdata['cart']) > 0) {
                    for ($i = 0;$i < count($tdata['cart']);$i++) {
                        $tdata_cart = array();
                        $tdata_cart['order_id'] = $order_id;
                        $tdata_cart['invoice'] = $tdata['invoice'];
                        $tdata_cart['cart_session_id'] = $tdata['cart_session_id'];
                        $tdata_cart['order_status'] = $tdata['order_status'];
                        $tdata_cart['payment_status'] = $tdata['payment_status'];
                        $tdata_cart['user_id'] = $tdata['user_id'];
                        $tdata_cart['prod_id'] = $tdata['cart'][$i]['prod_id'];
                        $tdata_cart['prod_name'] = $tdata['cart'][$i]['prod_name'];
                        $tdata_cart['prod_image'] = $tdata['cart'][$i]['prod_image'];
                        $tdata_cart['prod_qty'] = $tdata['cart'][$i]['prod_qty'];
                        $tdata_cart['prod_amt'] = $tdata['cart'][$i]['prod_amt'];
                        $tdata_cart['prod_subtotal'] = $tdata['cart'][$i]['prod_subtotal'];
                        $tdata_cart['prod_currency_id'] = $tdata['cart'][$i]['prod_currency_id'];
                        $tdata_cart['prod_currency'] = $tdata['cart'][$i]['prod_currency'];
                        $tdata_cart['prod_ordering_type_id'] = $tdata['cart'][$i]['prod_ordering_type_id'];
                        $tdata_cart['prod_ordering_type'] = $tdata['cart'][$i]['prod_ordering_type'];
                        $tdata_cart['prod_ordering_size_id'] = $tdata['cart'][$i]['prod_ordering_size_id'];
                        $tdata_cart['prod_ordering_size'] = $tdata['cart'][$i]['prod_ordering_size'];
                        $tdata_cart['item_last_qty'] = $tdata['cart'][$i]['item_last_qty'];
                        $tdata_cart['order_cart_delivery_date'] = $tdata['cart'][$i]['cart_delivery_date'];
                        $tdata_cart['order_cart_city_id'] = $tdata['cart'][$i]['cart_city_id'];
                        $tdata_cart['order_cart_area_id'] = $tdata['cart'][$i]['cart_area_id'];
                        $tdata_cart['is_offer'] = $tdata['cart'][$i]['is_offer'];
                        $tdata_cart['offer_price'] = $tdata['cart'][$i]['offer_price'];
                        $tdata_cart['prod_cgst_tax_amount'] = $tdata['cart'][$i]['prod_cgst_tax_amount'];
                        $tdata_cart['prod_cgst_tax_percentage'] = $tdata['cart'][$i]['prod_cgst_tax_percentage'];
                        $tdata_cart['prod_sgst_tax_amount'] = $tdata['cart'][$i]['prod_sgst_tax_amount'];
                        $tdata_cart['prod_sgst_tax_percentage'] = $tdata['cart'][$i]['prod_sgst_tax_percentage'];
                        $tdata_cart['prod_cess_tax_amount'] = $tdata['cart'][$i]['prod_cess_tax_amount'];
                        $tdata_cart['prod_cess_tax_percentage'] = $tdata['cart'][$i]['prod_cess_tax_percentage'];
                        $tdata_cart['prod_gst_tax_amount'] = $tdata['cart'][$i]['prod_gst_tax_amount'];
                        $tdata_cart['prod_gst_tax_percentage'] = $tdata['cart'][$i]['prod_gst_tax_percentage'];
                        $this->addOrderCart($tdata_cart);
                    }
                }
            }
        }
        catch(Exception $e) {
            $stringData = '[createOrder] Catch Error:' . $e->getMessage() . ', sql:' . $sql;
            $this->debuglog($stringData);
            return false;
        }
        return $return;
    }
    public function addOrderCart($tdata) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return = false;
        try {
            $sql = "INSERT INTO `tblordercart` (`order_id`,`invoice`,`cart_session_id`,`order_status`,`payment_status`,`user_id`,`prod_id`,`prod_name`,

					`prod_image`,`prod_qty`,`prod_amt`,`prod_subtotal`,`prod_currency_id`,`prod_currency`,`prod_ordering_type_id`,`prod_ordering_type`,

					`prod_ordering_size_id`,`prod_ordering_size`,`item_last_qty`,`order_cart_add_date`,`order_cart_delivery_date`,`order_cart_city_id`,

					`order_cart_area_id`,`is_offer`,`offer_price`,`prod_cgst_tax_amount`,`prod_cgst_tax_percentage`,`prod_sgst_tax_amount`,`prod_sgst_tax_percentage`,`prod_cess_tax_amount`,`prod_cess_tax_percentage`,`prod_gst_tax_amount`,`prod_gst_tax_percentage`) 

					VALUES (:order_id,:invoice,:cart_session_id,:order_status,:payment_status,:user_id,:prod_id,:prod_name,

					:prod_image,:prod_qty,:prod_amt,:prod_subtotal,:prod_currency_id,:prod_currency,:prod_ordering_type_id,:prod_ordering_type,

					:prod_ordering_size_id,:prod_ordering_size,:item_last_qty,:order_cart_add_date,:order_cart_delivery_date,:order_cart_city_id,

					:order_cart_area_id,:is_offer,:offer_price,:prod_cgst_tax_amount,:prod_cgst_tax_percentage,:prod_sgst_tax_amount,:prod_sgst_tax_percentage,:prod_cess_tax_amount,:prod_cess_tax_percentage,:prod_gst_tax_amount,:prod_gst_tax_percentage)";
            $STH = $DBH->prepare($sql);
            $STH->execute(array(':order_id' => addslashes($tdata['order_id']), ':invoice' => addslashes($tdata['invoice']), ':cart_session_id' => addslashes($tdata['cart_session_id']), ':order_status' => addslashes($tdata['order_status']), ':payment_status' => addslashes($tdata['payment_status']), ':user_id' => addslashes($tdata['user_id']), ':prod_id' => addslashes($tdata['prod_id']), ':prod_name' => addslashes($tdata['prod_name']), ':prod_image' => addslashes($tdata['prod_image']), ':prod_qty' => addslashes($tdata['prod_qty']), ':prod_amt' => addslashes($tdata['prod_amt']), ':prod_subtotal' => addslashes($tdata['prod_subtotal']), ':prod_currency_id' => addslashes($tdata['prod_currency_id']), ':prod_currency' => addslashes($tdata['prod_currency']), ':prod_ordering_type_id' => addslashes($tdata['prod_ordering_type_id']), ':prod_ordering_type' => addslashes($tdata['prod_ordering_type']), ':prod_ordering_size_id' => addslashes($tdata['prod_ordering_size_id']), ':prod_ordering_size' => addslashes($tdata['prod_ordering_size']), ':item_last_qty' => addslashes($tdata['item_last_qty']), ':order_cart_add_date' => date('Y-m-d H:i:s'), ':order_cart_delivery_date' => addslashes($tdata['order_cart_delivery_date']), ':order_cart_city_id' => addslashes($tdata['order_cart_city_id']), ':order_cart_area_id' => addslashes($tdata['order_cart_area_id']), ':is_offer' => addslashes($tdata['is_offer']), ':offer_price' => addslashes($tdata['offer_price']), ':prod_cgst_tax_amount' => addslashes($tdata['prod_cgst_tax_amount']), ':prod_cgst_tax_percentage' => addslashes($tdata['prod_cgst_tax_percentage']), ':prod_sgst_tax_amount' => addslashes($tdata['prod_sgst_tax_amount']), ':prod_sgst_tax_percentage' => addslashes($tdata['prod_sgst_tax_percentage']), ':prod_cess_tax_amount' => addslashes($tdata['prod_cess_tax_amount']), ':prod_cess_tax_percentage' => addslashes($tdata['prod_cess_tax_percentage']), ':prod_gst_tax_amount' => addslashes($tdata['prod_gst_tax_amount']), ':prod_gst_tax_percentage' => addslashes($tdata['prod_gst_tax_percentage'])));
            $order_cart_id = $DBH->lastInsertId();
            $DBH->commit();
            // echo"<pre>"; print_r($order_cart_id); echo "</pre>";
            // exit;
            if ($order_cart_id > 0) {
                $return = true;
            }
        }
        catch(Exception $e) {
            $stringData = '[addOrderCart] Catch Error:' . $e->getMessage() . ', sql:' . $sql;
            $this->debuglog($stringData);
            return false;
        }
        return $return;
    }
    public function getTradeDiscountPrice($subtotal, $city_id, $area_id = '') {
        $DBH = new DatabaseHandler();
        $output = 0;
        if ($subtotal == '' || $subtotal < 1) {
            return $output;
        }
        $today = date('Y-m-d');
        $total_discount_price = 0;
        $qty_discount_price = 0;
        $amt_discount_price = 0;
        $per_discount_price = 0;
        $arr_wt_qty = array();
        $arr_wt_min_qty = array();
        $arr_wt_max_qty = array();
        $arr_wt_discount_price = array();
        $arr_amt_subtotal = array();
        $arr_amt_min_order_amt = array();
        $arr_amt_max_order_amt = array();
        $arr_amt_discount_price = array();
        $arr_per_subtotal = array();
        $arr_per_min_order_amt = array();
        $arr_per_max_order_amt = array();
        $arr_per_sp_percentage = array();
        // $obj_temp = new commonFunctions();
        $obj = new frontclass();
        try {
            $cart_session_id = session_id();
            // $sql = "SELECT * FROM `tblcart` WHERE
            // `cart_session_id` = '".$cart_session_id."' AND
            // `cart_city_id` = '".$city_id."' AND
            // `cart_status` = '0' AND
            // `cart_deleted` = '0' ";
            $sql = "SELECT * FROM `tblcart` WHERE `cart_session_id` = '" . $cart_session_id . "'";
            $this->debuglog('[getTradeDiscountPrice] sql:' . $sql);
            $STH3 = $DBH->query($sql);
            // $sql = "SELECT * FROM `tblcart` WHERE `cart_session_id` = '".$cart_session_id."'";
            if ($STH3->rowCount() > 0) {
                $subtotal = 0;
                $cnt = 0;
                while ($r3 = $STH3->fetch(PDO::FETCH_ASSOC)) {
                    //$arr_cusine_details = $obj_temp->getCusineDetailsForCart($r3['cusine_id']);
                    $arr_cusine_weight = $this->getCusineAllWeight($r3['cusine_id']);
                    // $this->debuglog('[getTradeDiscountPrice]arr_cusine_weight cusine_id:'.$r3['cusine_id'].', city_id:'.$city_id.', arr_cusine_weight:<pre>'.print_r($arr_cusine_weight,1).'</pre>');
                    $temp_cwsp_count = 0;
                    if (count($arr_cusine_weight) > 0) {
                        $arr_temp_cwsp = array();
                        $arr_temp_cwqty = array();
                        for ($wq = 0;$wq < count($arr_cusine_weight);$wq++) {
                            $temp_wq_key = $city_id . '_' . $arr_cusine_weight[$wq]['cw_qt_cat_id'] . '_' . $arr_cusine_weight[$wq]['cw_qu_cat_id'];
                            // $this->debuglog('[getTradeDiscountPrice]arr_cusine_weight cusine_id:'.$r3['cusine_id'].', temp_wq_key:'.$temp_wq_key);
                            if ($obj->chkIfCusineHasQuantityWiseTradeDiscountPrice($city_id, $r3['cart_area_id'], $arr_cusine_weight[$wq]['cw_qt_cat_id'], $arr_cusine_weight[$wq]['cw_qu_cat_id'])) {
                                $temp_wq_qty_val = $arr_cusine_weight[$wq]['cw_quantity'] * $r3['qty'];
                                // -------------------------------echo "<pre>";print_r($temp_wq_qty_val);echo "<pre>";
                                $this->debuglog('[getTradeDiscountPrice]chkIfCusineHasQuantityWiseTradeDiscountPrice:Yes  cusine_id:' . $r3['cusine_id'] . ', temp_wq_key:' . $temp_wq_key);
                                $temp_cwsp_count++;
                                $arr_temp_cwsp[] = $temp_wq_key;
                                $arr_temp_cwqty[] = $temp_wq_qty_val;
                            } else {
                                $this->debuglog('[getTradeDiscountPrice]chkIfCusineHasQuantityWiseTradeDiscountPrice:No  cusine_id:' . $r3['cusine_id'] . ', temp_wq_key:' . $temp_wq_key);
                            }
                        }
                        if ($temp_cwsp_count >= 1) {
                            if (array_key_exists($arr_temp_cwsp[0], $arr_wt_qty)) {
                                $arr_wt_qty[$arr_temp_cwsp[0]]+= $arr_temp_cwqty[0];
                                $this->debuglog('[getTradeDiscountPrice]temp_cwsp_count >= 1 array_key_exists arr_wt_qty:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_cwsp[0]:' . $arr_temp_cwsp[0] . ', arr_temp_cwqty[0]:' . $arr_temp_cwqty[0]);
                            } else {
                                $arr_wt_qty[$arr_temp_cwsp[0]] = $arr_temp_cwqty[0];
                                $this->debuglog('[getTradeDiscountPrice]temp_cwsp_count >= 1 array_key_not_exists arr_wt_qty:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_cwsp[0]:' . $arr_temp_cwsp[0] . ', arr_temp_cwqty[0]:' . $arr_temp_cwqty[0]);
                            }
                        }
                    }
                    $temp_amt_count = 0;
                    $arr_temp_amtk = array();
                    $arr_temp_amts = array();
                    if ($temp_cwsp_count == 0) {
                        $temp_amt_key = $city_id;
                        $this->debuglog('[getTradeDiscountPrice]arr_amt_subtotal cusine_id:' . $r3['cusine_id'] . ', temp_amt_key:' . $temp_amt_key);
                        if ($obj->chkIfCusineHasAmountWiseTradeDiscountPrice($city_id, $r3['cart_area_id'])) {
                            $temp_amt_subtotal = $r3['subtotal'];
                            $this->debuglog('[getTradeDiscountPrice]chkIfCusineHasAmountWiseTradeDiscountPrice:Yes  cusine_id:' . $r3['cusine_id'] . ', temp_amt_key:' . $temp_amt_key);
                            $temp_amt_count++;
                            $arr_temp_amtk[] = $temp_amt_key;
                            $arr_temp_amts[] = $temp_amt_subtotal;
                        } else {
                            $this->debuglog('[getTradeDiscountPrice]chkIfCusineHasAmountWiseTradeDiscountPrice:No  cusine_id:' . $r3['cusine_id'] . ', temp_amt_key:' . $temp_amt_key);
                        }
                        if ($temp_amt_count > 0) {
                            if (array_key_exists($arr_temp_amtk[0], $arr_amt_subtotal)) {
                                $arr_amt_subtotal[$arr_temp_amtk[0]]+= $arr_temp_amts[0];
                                $this->debuglog('[getTradeDiscountPrice]temp_amt_count > 0 array_key_exists arr_amt_subtotal:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_amtk[0]:' . $arr_temp_amtk[0] . ', arr_temp_amts[0]:' . $arr_temp_amts[0]);
                            } else {
                                $arr_amt_subtotal[$arr_temp_amtk[0]] = $arr_temp_amts[0];
                                $this->debuglog('[getTradeDiscountPrice]temp_amt_count > 0 array_key_not_exists arr_amt_subtotal:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_amtk[0]:' . $arr_temp_amtk[0] . ', arr_temp_amts[0]:' . $arr_temp_amts[0]);
                            }
                        }
                    }
                    $temp_per_count = 0;
                    $arr_temp_perk = array();
                    $arr_temp_pers = array();
                    if ($temp_cwsp_count == 0 && $temp_amt_count == 0) {
                        $temp_per_key = $city_id;
                        $this->debuglog('[getTradeDiscountPrice]arr_per_subtotal cusine_id:' . $r3['cusine_id'] . ', temp_per_key:' . $temp_per_key);
                        if ($obj->chkIfCusineHasPercentWiseTradeDiscountPrice($city_id, $r3['cart_area_id'])) {
                            $temp_per_subtotal = $r3['subtotal'];
                            $this->debuglog('[getTradeDiscountPrice]chkIfCusineHasPercentWiseTradeDiscountPrice:Yes  cusine_id:' . $r3['cusine_id'] . ', temp_per_key:' . $temp_per_key);
                            $temp_per_count++;
                            $arr_temp_perk[] = $temp_per_key;
                            $arr_temp_pers[] = $temp_per_subtotal;
                        } else {
                            $this->debuglog('[getTradeDiscountPrice]chkIfCusineHasPercentWiseTradeDiscountPrice:No  cusine_id:' . $r3['cusine_id'] . ', temp_per_key:' . $temp_per_key);
                        }
                        if ($temp_per_count > 0) {
                            if (array_key_exists($arr_temp_perk[0], $arr_per_subtotal)) {
                                $arr_per_subtotal[$arr_temp_perk[0]]+= $arr_temp_pers[0];
                                $this->debuglog('[getTradeDiscountPrice]temp_per_count > 0 array_key_exists arr_per_subtotal:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_perk[0]:' . $arr_temp_perk[0] . ', arr_temp_pers[0]:' . $arr_temp_pers[0]);
                            } else {
                                $arr_per_subtotal[$arr_temp_perk[0]] = $arr_temp_pers[0];
                                $this->debuglog('[getTradeDiscountPrice]temp_per_count > 0 array_key_not_exists arr_per_subtotal:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_perk[0]:' . $arr_temp_perk[0] . ', arr_temp_pers[0]:' . $arr_temp_pers[0]);
                            }
                        }
                    }
                    $cnt++;
                }
            }
            /*
            
            echo '<br><pre>';
            
            print_r($arr_wt_qty);
            
            echo '<br></pre>';
            
            
            
            echo '<br><pre>';
            
            print_r($arr_amt_subtotal);
            
            echo '<br></pre>';
            
            
            
            echo '<br><pre>';
            
            print_r($arr_per_subtotal);
            
            echo '<br></pre>';
            
            */
            $this->debuglog('[getTradeDiscountPrice]arr_wt_qty :' . print_r($arr_wt_qty, 1));
            if (count($arr_wt_qty) > 0) {
                foreach ($arr_wt_qty as $tt_wt_qty_k => $tt_wt_qty_v) {
                    $this->debuglog('[getTradeDiscountPrice]arr_wt_qty tt_wt_qty_k:' . $tt_wt_qty_k . ', tt_wt_qty_v:' . $tt_wt_qty_v);
                    if ($tt_wt_qty_v > 0) {
                        $temp_arr_chk_cwsp = explode('_', $tt_wt_qty_k);
                        if (is_array($temp_arr_chk_cwsp) && count($temp_arr_chk_cwsp) > 0) {
                            $temp_city_id_chk_cwsp = $temp_arr_chk_cwsp[0];
                            $temp_area_id_chk_cwsp = '';
                            $temp_applied_on_chk_cwsp = $temp_arr_chk_cwsp[1];
                            $temp_qty_unit_chk_cwsp = $temp_arr_chk_cwsp[2];
                            $arr_cwsp_exact_match_values = array();
                            $arr_cwsp_exact_match_values = $obj->getCusineTradeDiscountPriceQuantityWise($temp_city_id_chk_cwsp, $temp_area_id_chk_cwsp, $temp_applied_on_chk_cwsp, $temp_qty_unit_chk_cwsp);
                            if (count($arr_cwsp_exact_match_values) > 0) {
                                $this->debuglog('[getTradeDiscountPrice]arr_wt_qty arr_cwsp_exact_match_values:' . print_r($arr_cwsp_exact_match_values, 1));
                                for ($em_cwsp = 0;$em_cwsp < count($arr_cwsp_exact_match_values);$em_cwsp++) {
                                    if (($tt_wt_qty_v >= $arr_cwsp_exact_match_values[$em_cwsp]['dc_min_qty_val']) && ($tt_wt_qty_v <= $arr_cwsp_exact_match_values[$em_cwsp]['dc_max_qty_val'])) {
                                        //echo '<br>tt_wt_qty_k:'.$tt_wt_qty_k;
                                        $qty_discount_price+= $arr_cwsp_exact_match_values[$em_cwsp]['discount_price'];
                                        $this->debuglog('[getTradeDiscountPrice]arr_wt_qty min max match qty_discount_price:' . $qty_discount_price . ', arr_cwsp_exact_match_values[$em_cwsp][discount_price]:' . $arr_cwsp_exact_match_values[$em_cwsp]['discount_price'] . ', dc_id:' . $arr_cwsp_exact_match_values[$em_cwsp]['dc_id']);
                                        break;
                                    } else {
                                        $this->debuglog('[getTradeDiscountPrice]arr_wt_qty min max not match arr_cwsp_exact_match_values[$em_cwsp][dc_min_qty_val]:' . $arr_cwsp_exact_match_values[$em_cwsp]['dc_min_qty_val'] . ', arr_cwsp_exact_match_values[$em_cwsp][dc_max_qty_val]:' . $arr_cwsp_exact_match_values[$em_cwsp]['dc_max_qty_val'] . ', dc_id:' . $arr_cwsp_exact_match_values[$em_cwsp]['dc_id']);
                                    }
                                }
                            } else {
                                $this->debuglog('[getTradeDiscountPrice]arr_wt_qty arr_cwsp_exact_match_values:No records');
                            }
                        } else {
                            $this->debuglog('[getTradeDiscountPrice]arr_wt_qty invalid key tt_wt_qty_k:' . $tt_wt_qty_k . ', tt_wt_qty_v:' . $tt_wt_qty_v);
                        }
                    }
                }
            }
            if ($qty_discount_price == 0) {
                $this->debuglog('[getTradeDiscountPrice]arr_amt_subtotal :' . print_r($arr_amt_subtotal, 1));
                if (count($arr_amt_subtotal) > 0) {
                    foreach ($arr_amt_subtotal as $tt_amt_qty_k => $tt_amt_qty_v) {
                        $this->debuglog('[getTradeDiscountPrice]arr_amt_subtotal tt_amt_qty_k:' . $tt_amt_qty_k . ', tt_amt_qty_v:' . $tt_amt_qty_v);
                        if ($tt_amt_qty_v > 0) {
                            $temp_city_id_chk_amt = $tt_amt_qty_k;
                            $temp_area_id_chk_amt = '';
                            $arr_amt_exact_match_values = array();
                            $arr_amt_exact_match_values = $obj->getCusineTradeDiscountPriceAmountWise($temp_city_id_chk_amt, $temp_area_id_chk_amt);
                            if (count($arr_amt_exact_match_values) > 0) {
                                $this->debuglog('[getTradeDiscountPrice]arr_amt_subtotal arr_amt_exact_match_values:' . print_r($arr_amt_exact_match_values, 1));
                                for ($em_amt = 0;$em_amt < count($arr_amt_exact_match_values);$em_amt++) {
                                    if (($tt_amt_qty_v >= $arr_amt_exact_match_values[$em_amt]['min_order_amount']) && ($tt_amt_qty_v <= $arr_amt_exact_match_values[$em_amt]['max_order_amount'])) {
                                        //echo '<br>tt_amt_qty_k:'.$tt_amt_qty_k;
                                        $amt_discount_price+= $arr_amt_exact_match_values[$em_amt]['discount_price'];
                                        $this->debuglog('[getTradeDiscountPrice]arr_amt_subtotal min max match amt_discount_price:' . $amt_discount_price . ', arr_amt_exact_match_values[$em_amt][discount_price]:' . $arr_amt_exact_match_values[$em_amt]['discount_price'] . ', dc_id:' . $arr_amt_exact_match_values[$em_amt]['dc_id']);
                                        break;
                                    } else {
                                        $this->debuglog('[getTradeDiscountPrice]arr_amt_subtotal min max not match arr_amt_exact_match_values[$em_amt][min_order_amount]:' . $arr_amt_exact_match_values[$em_amt]['min_order_amount'] . ', arr_amt_exact_match_values[$em_amt][max_order_amount]:' . $arr_amt_exact_match_values[$em_amt]['max_order_amount'] . ', dc_id:' . $arr_amt_exact_match_values[$em_amt]['dc_id']);
                                    }
                                }
                            } else {
                                $this->debuglog('[getTradeDiscountPrice]arr_amt_qty arr_amt_exact_match_values:No records');
                            }
                        }
                    }
                }
                if ($amt_discount_price == 0) {
                    $this->debuglog('[getTradeDiscountPrice]arr_per_subtotal :' . print_r($arr_per_subtotal, 1));
                    if (count($arr_per_subtotal) > 0) {
                        foreach ($arr_per_subtotal as $tt_per_qty_k => $tt_per_qty_v) {
                            $this->debuglog('[getTradeDiscountPrice]arr_per_subtotal tt_per_qty_k:' . $tt_per_qty_k . ', tt_per_qty_v:' . $tt_per_qty_v);
                            if ($tt_per_qty_v > 0) {
                                $temp_city_id_chk_per = $tt_per_qty_k;
                                $temp_area_id_chk_per = '';
                                $arr_per_exact_match_values = array();
                                $arr_per_exact_match_values = $obj->getCusineTradeDiscountPricePercentWise($temp_city_id_chk_per, $temp_area_id_chk_per);
                                if (count($arr_per_exact_match_values) > 0) {
                                    $this->debuglog('[getTradeDiscountPrice]arr_per_subtotal arr_per_exact_match_values:' . print_r($arr_per_exact_match_values, 1));
                                    for ($em_per = 0;$em_per < count($arr_per_exact_match_values);$em_per++) {
                                        if (($tt_per_qty_v >= $arr_per_exact_match_values[$em_per]['min_order_amount']) && ($tt_per_qty_v <= $arr_per_exact_match_values[$em_per]['max_order_amount'])) {
                                            //echo '<br>tt_per_qty_k:'.$tt_per_qty_k;
                                            $temp_per_val = $tt_per_qty_v * $arr_per_exact_match_values[$em_per]['dc_percentage'] / 100;
                                            $per_discount_price+= $temp_per_val;
                                            $this->debuglog('[getTradeDiscountPrice]arr_per_subtotal min max match per_discount_price:' . $per_discount_price . ', arr_per_exact_match_values[$em_per][dc_percentage]:' . $arr_per_exact_match_values[$em_per]['dc_percentage'] . ', dc_id:' . $arr_per_exact_match_values[$em_per]['dc_id']);
                                            break;
                                        } else {
                                            $this->debuglog('[getTradeDiscountPrice]arr_per_subtotal min max not match arr_per_exact_match_values[$em_per][min_order_amount]:' . $arr_per_exact_match_values[$em_per]['min_order_amount'] . ', arr_per_exact_match_values[$em_per][max_order_amount]:' . $arr_per_exact_match_values[$em_per]['max_order_amount'] . ', dc_id:' . $arr_per_exact_match_values[$em_per]['dc_id']);
                                        }
                                    }
                                } else {
                                    $this->debuglog('[getTradeDiscountPrice]arr_per_qty arr_per_exact_match_values:No records');
                                }
                            }
                        }
                    }
                }
            }
            $total_discount_price = $qty_discount_price + $amt_discount_price + $per_discount_price;
            $this->debuglog('[getTradeDiscountPrice]qty_discount_price:' . $qty_discount_price);
            $this->debuglog('[getTradeDiscountPrice]amt_discount_price:' . $amt_discount_price);
            $this->debuglog('[getTradeDiscountPrice]per_discount_price:' . $per_discount_price);
            $this->debuglog('[getTradeDiscountPrice]total_discount_price:' . $total_discount_price);
        }
        catch(Exception $e) {
            $stringData = '[getTradeDiscountPrice] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $total_discount_price;
        }
        return $total_discount_price;
    }
    public function chkIfCusineHasQuantityWiseTradeDiscountPrice($city_id, $area_id, $dc_applied_on, $dc_min_qty_id) {
        $DBH = new DatabaseHandler();
        $output = false;
        $state_id = $this->getStateIdOfCityId($city_id);
        $country_id = $this->getCountryIdOfCityId($city_id);
        $today = date('Y-m-d');
        // -------------------echo "<pre>";print_r($state_id);echo "<pre>";
        // exit;
        $effective_day_of_month = date('j');
        $effective_day_of_week = date('N');
        $effective_single_date = date('Y-m-d');
        $sql_dc_effective_date_str = " AND ( 

							( dc_effective_date_type = 'days_of_month' AND ( dc_effective_days_of_month = '-1' OR dc_effective_days_of_month = '" . $effective_day_of_month . "' OR  FIND_IN_SET(" . $effective_day_of_month . ", dc_effective_days_of_month) > 0 ) ) OR

							( dc_effective_date_type = 'days_of_week' AND ( dc_effective_days_of_week = '-1' OR dc_effective_days_of_week = '" . $effective_day_of_week . "' OR  FIND_IN_SET(" . $effective_day_of_week . ", dc_effective_days_of_week) > 0 ) ) OR

							( dc_effective_date_type = 'single_date' AND ( dc_effective_single_date <= '" . $effective_single_date . "' ) ) OR

							( dc_effective_date_type = 'date_range' AND ( dc_effective_start_date <= '" . $effective_single_date . "' AND dc_effective_end_date >= '" . $effective_single_date . "' ) ) 

							) ";
        $sql_common_str = " AND dc_trade_discount = '1' AND dc_applied_on = '" . $dc_applied_on . "' AND dc_min_qty_id = '" . $dc_min_qty_id . "' AND discount_price != '' AND dc_type = '2' AND dc_deleted = '0' AND dc_status = '1' " . $sql_dc_effective_date_str . " ORDER BY dc_add_date DESC LIMIT 1";
        try {
            $sql = "SELECT * FROM `tbldiscountcoupons` WHERE (( dc_city_id = '" . $city_id . "' ) OR

			 ( FIND_IN_SET(" . $city_id . ", dc_city_id) > 0 ) OR

			( dc_city_id = '-1' AND dc_state_id = '" . $state_id . "' ) OR 

					( dc_city_id = '-1' AND FIND_IN_SET(" . $state_id . ", dc_state_id) > 0 )  OR

					( dc_city_id = '-1' AND dc_state_id = '-1' AND dc_country_id = '" . $country_id . "' ) OR 

					( dc_city_id = '-1' AND dc_state_id = '-1' AND FIND_IN_SET(" . $country_id . ", dc_country_id) > 0  ) OR

					( dc_city_id = '-1' AND dc_state_id = '-1' AND dc_country_id = '-1' ) 

				) " . $sql_common_str;
            $this->debuglog('[chkIfCusineHasQuantityWiseTradeDiscountPrice] sql:' . $sql);
            $STH = $DBH->query($sql);
            // echo "<pre>";print_r($STH);echo "<pre>";
            //   exit;
            if ($STH->rowCount() > 0) {
                $output = true;
            }
            return $output;
        }
        catch(Exception $e) {
            $stringData = '[chkIfCusineHasQuantityWiseTradeDiscountPrice] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $output;
        }
    }
    public function chkIfCusineHasAmountWiseTradeDiscountPrice($city_id, $area_id) {
        $DBH = new DatabaseHandler();
        $output = false;
        $state_id = $this->getStateIdOfCityId($city_id);
        $country_id = $this->getCountryIdOfCityId($city_id);
        $today = date('Y-m-d');
        $effective_day_of_month = date('j');
        $effective_day_of_week = date('N');
        $effective_single_date = date('Y-m-d');
        $sql_dc_effective_date_str = " AND ( 

							( dc_effective_date_type = 'days_of_month' AND ( dc_effective_days_of_month = '-1' OR dc_effective_days_of_month = '" . $effective_day_of_month . "' OR  FIND_IN_SET(" . $effective_day_of_month . ", dc_effective_days_of_month) > 0 ) ) OR

							( dc_effective_date_type = 'days_of_week' AND ( dc_effective_days_of_week = '-1' OR dc_effective_days_of_week = '" . $effective_day_of_week . "' OR  FIND_IN_SET(" . $effective_day_of_week . ", dc_effective_days_of_week) > 0 ) ) OR

							( dc_effective_date_type = 'single_date' AND ( dc_effective_single_date <= '" . $effective_single_date . "' ) ) OR

							( dc_effective_date_type = 'date_range' AND ( dc_effective_start_date <= '" . $effective_single_date . "' AND dc_effective_end_date >= '" . $effective_single_date . "' ) ) 

							) ";
        $sql_common_str = " AND dc_trade_discount = '1' AND discount_price != '' AND dc_type = '0' AND dc_deleted = '0' AND dc_status = '1' " . $sql_dc_effective_date_str . " ORDER BY dc_add_date DESC LIMIT 1";
        try {
            $sql = "SELECT * FROM `tbldiscountcoupons` 

				WHERE ( 

					( dc_city_id = '" . $city_id . "' ) OR 

					( FIND_IN_SET(" . $city_id . ", dc_city_id) > 0 ) OR

					( dc_city_id = '-1' AND dc_state_id = '" . $state_id . "' ) OR 

					( dc_city_id = '-1' AND FIND_IN_SET(" . $state_id . ", dc_state_id) > 0 )  OR

					( dc_city_id = '-1' AND dc_state_id = '-1' AND dc_country_id = '" . $country_id . "' ) OR 

					( dc_city_id = '-1' AND dc_state_id = '-1' AND FIND_IN_SET(" . $country_id . ", dc_country_id) > 0  ) OR

					( dc_city_id = '-1' AND dc_state_id = '-1' AND dc_country_id = '-1' ) 

				) " . $sql_common_str;
            $this->debuglog('[chkIfCusineHasAmountWiseTradeDiscountPrice] sql:' . $sql);
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $output = true;
            }
            return $output;
        }
        catch(Exception $e) {
            $stringData = '[chkIfCusineHasAmountWiseTradeDiscountPrice] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $output;
        }
    }
    public function chkIfCusineHasPercentWiseTradeDiscountPrice($city_id, $area_id) {
        $DBH = new DatabaseHandler();
        $output = false;
        $state_id = $this->getStateIdOfCityId($city_id);
        $country_id = $this->getCountryIdOfCityId($city_id);
        $today = date('Y-m-d');
        $effective_day_of_month = date('j');
        $effective_day_of_week = date('N');
        $effective_single_date = date('Y-m-d');
        $sql_dc_effective_date_str = " AND ( 

							( dc_effective_date_type = 'days_of_month' AND ( dc_effective_days_of_month = '-1' OR dc_effective_days_of_month = '" . $effective_day_of_month . "' OR  FIND_IN_SET(" . $effective_day_of_month . ", dc_effective_days_of_month) > 0 ) ) OR

							( dc_effective_date_type = 'days_of_week' AND ( dc_effective_days_of_week = '-1' OR dc_effective_days_of_week = '" . $effective_day_of_week . "' OR  FIND_IN_SET(" . $effective_day_of_week . ", dc_effective_days_of_week) > 0 ) ) OR

							( dc_effective_date_type = 'single_date' AND ( dc_effective_single_date <= '" . $effective_single_date . "' ) ) OR

							( dc_effective_date_type = 'date_range' AND ( dc_effective_start_date <= '" . $effective_single_date . "' AND dc_effective_end_date >= '" . $effective_single_date . "' ) ) 

							) ";
        $sql_common_str = " AND dc_trade_discount = '1' AND dc_type = '1' AND dc_deleted = '0' AND dc_status = '1' " . $sql_dc_effective_date_str . " ORDER BY dc_add_date DESC LIMIT 1";
        try {
            $sql = "SELECT * FROM `tbldiscountcoupons` 

				WHERE ( 

					( dc_city_id = '" . $city_id . "' ) OR 

					( FIND_IN_SET(" . $city_id . ", dc_city_id) > 0 ) OR

					( dc_city_id = '-1' AND dc_state_id = '" . $state_id . "' ) OR 

					( dc_city_id = '-1' AND FIND_IN_SET(" . $state_id . ", dc_state_id) > 0 )  OR

					( dc_city_id = '-1' AND dc_state_id = '-1' AND dc_country_id = '" . $country_id . "' ) OR 

					( dc_city_id = '-1' AND dc_state_id = '-1' AND FIND_IN_SET(" . $country_id . ", dc_country_id) > 0  ) OR

					( dc_city_id = '-1' AND dc_state_id = '-1' AND dc_country_id = '-1' ) 

				) " . $sql_common_str;
            $this->debuglog('[chkIfCusineHasPercentWiseTradeDiscountPrice] sql:' . $sql);
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $output = true;
            }
            return $output;
        }
        catch(Exception $e) {
            $stringData = '[chkIfCusineHasPercentWiseTradeDiscountPrice] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $output;
        }
    }
    public function getCusineTradeDiscountPriceQuantityWise($city_id, $area_id, $dc_applied_on, $dc_min_qty_id) {
        $DBH = new DatabaseHandler();
        $output = array();
        $state_id = $this->getStateIdOfCityId($city_id);
        $country_id = $this->getCountryIdOfCityId($city_id);
        $today = date('Y-m-d');
        $effective_day_of_month = date('j');
        $effective_day_of_week = date('N');
        $effective_single_date = date('Y-m-d');
        $sql_dc_effective_date_str = " AND ( 

							( dc_effective_date_type = 'days_of_month' AND ( dc_effective_days_of_month = '-1' OR dc_effective_days_of_month = '" . $effective_day_of_month . "' OR  FIND_IN_SET(" . $effective_day_of_month . ", dc_effective_days_of_month) > 0 ) ) OR

							( dc_effective_date_type = 'days_of_week' AND ( dc_effective_days_of_week = '-1' OR dc_effective_days_of_week = '" . $effective_day_of_week . "' OR  FIND_IN_SET(" . $effective_day_of_week . ", dc_effective_days_of_week) > 0 ) ) OR

							( dc_effective_date_type = 'single_date' AND ( dc_effective_single_date <= '" . $effective_single_date . "' ) ) OR

							( dc_effective_date_type = 'date_range' AND ( dc_effective_start_date <= '" . $effective_single_date . "' AND dc_effective_end_date >= '" . $effective_single_date . "' ) ) 

							) ";
        $sql_common_str = " AND dc_trade_discount = '1' AND dc_applied_on = '" . $dc_applied_on . "' AND dc_min_qty_id = '" . $dc_min_qty_id . "' AND discount_price != '' AND dc_type = '2' AND dc_deleted = '0' AND dc_status = '1' " . $sql_dc_effective_date_str . " ORDER BY dc_add_date DESC ";
        try {
            $sql = "SELECT * FROM `tbldiscountcoupons` 

				WHERE ( 

					( dc_city_id = '" . $city_id . "' ) OR 

					( FIND_IN_SET(" . $city_id . ", dc_city_id) > 0 )  

				) " . $sql_common_str;
            $this->debuglog('[getCusineTradeDiscountPriceQuantityWise] sql:' . $sql);
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $output[] = $r;
                }
            } else {
                $sql = "SELECT * FROM `tbldiscountcoupons` 

					WHERE ( 

						( dc_city_id = '-1' AND dc_state_id = '" . $state_id . "' ) OR 

						( dc_city_id = '-1' AND FIND_IN_SET(" . $state_id . ", dc_state_id) > 0 )  

					) " . $sql_common_str;
                $this->debuglog('[getCusineTradeDiscountPriceQuantityWise] sql2:' . $sql);
                $STH2 = $DBH->query($sql);
                if ($STH2->rowCount() > 0) {
                    while ($r2 = $STH2->fetch(PDO::FETCH_ASSOC)) {
                        $output[] = $r2;
                    }
                } else {
                    $sql = "SELECT * FROM `tbldiscountcoupons` 

						WHERE ( 

							( dc_city_id = '-1' AND dc_state_id = '-1' AND dc_country_id = '" . $country_id . "' ) OR 

							( dc_city_id = '-1' AND dc_state_id = '-1' AND FIND_IN_SET(" . $country_id . ", dc_country_id) > 0  ) 

						) " . $sql_common_str;
                    $this->debuglog('[getCusineTradeDiscountPriceQuantityWise] sql3:' . $sql);
                    $STH3 = $DBH->query($sql);
                    if ($STH3->rowCount() > 0) {
                        while ($r3 = $STH3->fetch(PDO::FETCH_ASSOC)) {
                            $output[] = $r3;
                        }
                    } else {
                        $sql = "SELECT * FROM `tbldiscountcoupons` 

							WHERE ( 

								( dc_city_id = '-1' AND dc_state_id = '-1' AND dc_country_id = '-1' ) 

							) " . $sql_common_str;
                        $this->debuglog('[getCusineTradeDiscountPriceQuantityWise] sql4:' . $sql);
                        $STH4 = $DBH->query($sql);
                        if ($STH4->rowCount() > 0) {
                            while ($r4 = $STH4->fetch(PDO::FETCH_ASSOC)) {
                                $output[] = $r4;
                            }
                        }
                    }
                }
            }
            return $output;
        }
        catch(Exception $e) {
            $stringData = '[getCusineTradeDiscountPriceQuantityWise] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $output;
        }
    }
    public function getCusineTradeDiscountPriceAmountWise($city_id, $area_id) {
        $DBH = new DatabaseHandler();
        $output = array();
        $state_id = $this->getStateIdOfCityId($city_id);
        $country_id = $this->getCountryIdOfCityId($city_id);
        $today = date('Y-m-d');
        $effective_day_of_month = date('j');
        $effective_day_of_week = date('N');
        $effective_single_date = date('Y-m-d');
        $sql_dc_effective_date_str = " AND ( 

							( dc_effective_date_type = 'days_of_month' AND ( dc_effective_days_of_month = '-1' OR dc_effective_days_of_month = '" . $effective_day_of_month . "' OR  FIND_IN_SET(" . $effective_day_of_month . ", dc_effective_days_of_month) > 0 ) ) OR

							( dc_effective_date_type = 'days_of_week' AND ( dc_effective_days_of_week = '-1' OR dc_effective_days_of_week = '" . $effective_day_of_week . "' OR  FIND_IN_SET(" . $effective_day_of_week . ", dc_effective_days_of_week) > 0 ) ) OR

							( dc_effective_date_type = 'single_date' AND ( dc_effective_single_date <= '" . $effective_single_date . "' ) ) OR

							( dc_effective_date_type = 'date_range' AND ( dc_effective_start_date <= '" . $effective_single_date . "' AND dc_effective_end_date >= '" . $effective_single_date . "' ) ) 

							) ";
        $sql_common_str = " AND dc_trade_discount = '1' AND discount_price != '' AND dc_type = '0' AND dc_deleted = '0' AND dc_status = '1' " . $sql_dc_effective_date_str . " ORDER BY dc_add_date DESC ";
        try {
            $sql = "SELECT * FROM `tbldiscountcoupons` 

				WHERE ( 

					( dc_city_id = '" . $city_id . "' ) OR 

					( FIND_IN_SET(" . $city_id . ", dc_city_id) > 0 )  

				) " . $sql_common_str;
            $this->debuglog('[getCusineTradeDiscountPriceAmountWise] sql:' . $sql);
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $output[] = $r;
                }
            } else {
                $sql = "SELECT * FROM `tbldiscountcoupons` 

					WHERE ( 

						( dc_city_id = '-1' AND dc_state_id = '" . $state_id . "' ) OR 

						( dc_city_id = '-1' AND FIND_IN_SET(" . $state_id . ", dc_state_id) > 0 )  

					) " . $sql_common_str;
                $this->debuglog('[getCusineTradeDiscountPriceAmountWise] sql2:' . $sql);
                $STH2 = $DBH->query($sql);
                if ($STH2->rowCount() > 0) {
                    while ($r2 = $STH2->fetch(PDO::FETCH_ASSOC)) {
                        $output[] = $r2;
                    }
                } else {
                    $sql = "SELECT * FROM `tbldiscountcoupons` 

						WHERE ( 

							( dc_city_id = '-1' AND dc_state_id = '-1' AND dc_country_id = '" . $country_id . "' ) OR 

							( dc_city_id = '-1' AND dc_state_id = '-1' AND FIND_IN_SET(" . $country_id . ", dc_country_id) > 0  ) 

						) " . $sql_common_str;
                    $this->debuglog('[getCusineTradeDiscountPriceAmountWise] sql3:' . $sql);
                    $STH3 = $DBH->query($sql);
                    if ($STH3->rowCount() > 0) {
                        while ($r3 = $STH3->fetch(PDO::FETCH_ASSOC)) {
                            $output[] = $r3;
                        }
                    } else {
                        $sql = "SELECT * FROM `tbldiscountcoupons` 

							WHERE ( 

								( dc_city_id = '-1' AND dc_state_id = '-1' AND dc_country_id = '-1' ) 

							) " . $sql_common_str;
                        $this->debuglog('[getCusineTradeDiscountPriceAmountWise] sql4:' . $sql);
                        $STH4 = $DBH->query($sql);
                        if ($STH4->rowCount() > 0) {
                            while ($r4 = $STH4->fetch(PDO::FETCH_ASSOC)) {
                                $output[] = $r4;
                            }
                        }
                    }
                }
            }
            return $output;
        }
        catch(Exception $e) {
            $stringData = '[getCusineTradeDiscountPriceAmountWise] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $output;
        }
    }
    public function getFrontPageDetails($page_id) {
        $DBH = new DatabaseHandler();
        $arr_record = array();
        // $sql = "SELECT * FROM `tblpages` WHERE `page_id` = '".$page_id."' AND `page_deleted` = '0' ";
        $sql = "SELECT * FROM `tblpages` WHERE `page_id` = '" . $page_id . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $r = $STH->fetch(PDO::FETCH_ASSOC);
            foreach ($r as $key => $val) {
                $arr_record[$key] = stripslashes($val);
            }
            //$arr_record = $r;
            
        }
        return $arr_record;
    }
    public function getCusineTradeDiscountPricePercentWise($city_id, $area_id) {
        $DBH = new DatabaseHandler();
        $output = array();
        $state_id = $this->getStateIdOfCityId($city_id);
        $country_id = $this->getCountryIdOfCityId($city_id);
        $today = date('Y-m-d');
        $effective_day_of_month = date('j');
        $effective_day_of_week = date('N');
        $effective_single_date = date('Y-m-d');
        $sql_dc_effective_date_str = " AND ( 

							( dc_effective_date_type = 'days_of_month' AND ( dc_effective_days_of_month = '-1' OR dc_effective_days_of_month = '" . $effective_day_of_month . "' OR  FIND_IN_SET(" . $effective_day_of_month . ", dc_effective_days_of_month) > 0 ) ) OR

							( dc_effective_date_type = 'days_of_week' AND ( dc_effective_days_of_week = '-1' OR dc_effective_days_of_week = '" . $effective_day_of_week . "' OR  FIND_IN_SET(" . $effective_day_of_week . ", dc_effective_days_of_week) > 0 ) ) OR

							( dc_effective_date_type = 'single_date' AND ( dc_effective_single_date <= '" . $effective_single_date . "' ) ) OR

							( dc_effective_date_type = 'date_range' AND ( dc_effective_start_date <= '" . $effective_single_date . "' AND dc_effective_end_date >= '" . $effective_single_date . "' ) ) 

							) ";
        $sql_common_str = " AND dc_trade_discount = '1' AND dc_type = '1' AND dc_deleted = '0' AND dc_status = '1' " . $sql_dc_effective_date_str . " ORDER BY dc_add_date DESC ";
        try {
            $sql = "SELECT * FROM `tbldiscountcoupons` 

				WHERE ( 

					( dc_city_id = '" . $city_id . "' ) OR 

					( FIND_IN_SET(" . $city_id . ", dc_city_id) > 0 )  

				) " . $sql_common_str;
            $this->debuglog('[getCusineTradeDiscountPricePercentWise] sql:' . $sql);
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $output[] = $r;
                }
            } else {
                $sql = "SELECT * FROM `tbldiscountcoupons` 

					WHERE ( 

						( dc_city_id = '-1' AND dc_state_id = '" . $state_id . "' ) OR 

						( dc_city_id = '-1' AND FIND_IN_SET(" . $state_id . ", dc_state_id) > 0 )  

					) " . $sql_common_str;
                $this->debuglog('[getCusineTradeDiscountPricePercentWise] sql2:' . $sql);
                $STH2 = $DBH->query($sql);
                if ($STH2->rowCount() > 0) {
                    while ($r2 = $STH2->fetch(PDO::FETCH_ASSOC)) {
                        $output[] = $r2;
                    }
                } else {
                    $sql = "SELECT * FROM `tbldiscountcoupons` 

						WHERE ( 

							( dc_city_id = '-1' AND dc_state_id = '-1' AND dc_country_id = '" . $country_id . "' ) OR 

							( dc_city_id = '-1' AND dc_state_id = '-1' AND FIND_IN_SET(" . $country_id . ", dc_country_id) > 0  ) 

						) " . $sql_common_str;
                    $this->debuglog('[getCusineTradeDiscountPricePercentWise] sql3:' . $sql);
                    $STH3 = $DBH->query($sql);
                    if ($STH3->rowCount() > 0) {
                        while ($r3 = $STH3->fetch(PDO::FETCH_ASSOC)) {
                            $output[] = $r3;
                        }
                    } else {
                        $sql = "SELECT * FROM `tbldiscountcoupons` 

							WHERE ( 

								( dc_city_id = '-1' AND dc_state_id = '-1' AND dc_country_id = '-1' ) 

							) " . $sql_common_str;
                        $this->debuglog('[getCusineTradeDiscountPricePercentWise] sql4:' . $sql);
                        $STH4 = $DBH->query($sql);
                        if ($STH4->rowCount() > 0) {
                            while ($r4 = $STH4->fetch(PDO::FETCH_ASSOC)) {
                                $output[] = $r4;
                            }
                        }
                    }
                }
            }
            return $output;
        }
        catch(Exception $e) {
            $stringData = '[getCusineTradeDiscountPricePercentWise] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $output;
        }
    }
    public function getStateIdOfCityId($city_id) {
        $DBH = new DatabaseHandler();
        $state_id = 0;
        try {
            $sql = "SELECT state_id FROM `tblcities` WHERE city_id = '" . $city_id . "' ";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $r = $STH->fetch(PDO::FETCH_ASSOC);
                $state_id = $r['state_id'];
            }
        }
        catch(Exception $e) {
            $stringData = '[getStateIdOfCityId] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $state_id;
        }
        return $state_id;
    }
    public function getCountryIdOfCityId($city_id) {
        $DBH = new DatabaseHandler();
        $country_id = 0;
        try {
            $sql = "SELECT country_id FROM `tblcities` WHERE city_id = '" . $city_id . "' ";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $r = $STH->fetch(PDO::FETCH_ASSOC);
                $country_id = $r['country_id'];
            }
        }
        catch(Exception $e) {
            $stringData = '[getCountryIdOfCityId] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $country_id;
        }
        return $country_id;
    }
    public function getCusineAllWeight($cusine_id) {
        $DBH = new DatabaseHandler();
        $arr_record = array();
        try {
            // $sql = "SELECT * FROM `tblcusineweight` WHERE `cusine_id` = '".$cusine_id."' AND `cw_deleted` = '0' ";
            $sql = "SELECT * FROM `tblcusineweight` WHERE `cusine_id` = '" . $cusine_id . "'";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $arr_record[] = $r;
                }
            }
        }
        catch(Exception $e) {
            $stringData = '[getCusineAllWeight] Catch Error:' . $e->getMessage() . ', sql:' . $sql;
            $this->debuglog($stringData);
            return $arr_record;
        }
        return $arr_record;
    }
    public function getShippingPrice($subtotal, $city_id, $area_id = '') {
        $DBH = new DatabaseHandler();
        $output = 0;
        if ($subtotal == '' || $subtotal < 1) {
            return $output;
        }
        $today = date('Y-m-d');
        $total_shipping_price = 0;
        $qty_shipping_price = 0;
        $amt_shipping_price = 0;
        $per_shipping_price = 0;
        $arr_wt_qty = array();
        $arr_wt_min_qty = array();
        $arr_wt_max_qty = array();
        $arr_wt_shipping_price = array();
        $arr_amt_subtotal = array();
        $arr_amt_min_order_amt = array();
        $arr_amt_max_order_amt = array();
        $arr_amt_shipping_price = array();
        $arr_per_subtotal = array();
        $arr_per_min_order_amt = array();
        $arr_per_max_order_amt = array();
        $arr_per_sp_percentage = array();
        // $obj_temp = new commonFunctions();
        $obj = new frontclass();
        try {
            $cart_session_id = session_id();
            // $sql = "SELECT DISTINCT(cart_delivery_date) FROM `tblcart` WHERE
            // 		`cart_session_id` = '".$cart_session_id."' AND
            // 		`cart_city_id` = '".$city_id."' AND
            // 		`cart_delivery_date` != '0000-00-00' AND
            // 		`cart_status` = '0' AND
            // 		`cart_deleted` = '0' ";
            $sql = "SELECT DISTINCT(cart_delivery_date) FROM `tblcart` WHERE `cart_session_id` = '" . $cart_session_id . "'";
            $this->debuglog('[getShippingPrice]sql:' . $sql);
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $arr_wt_qty = array();
                    $arr_wt_min_qty = array();
                    $arr_wt_max_qty = array();
                    $arr_wt_shipping_price = array();
                    $arr_amt_subtotal = array();
                    $arr_amt_min_order_amt = array();
                    $arr_amt_max_order_amt = array();
                    $arr_amt_shipping_price = array();
                    $arr_per_subtotal = array();
                    $arr_per_min_order_amt = array();
                    $arr_per_max_order_amt = array();
                    $arr_per_sp_percentage = array();
                    // $sql2 = "SELECT DISTINCT(cart_area_id) FROM `tblcart` WHERE
                    // `cart_session_id` = '".$cart_session_id."' AND
                    // `cart_city_id` = '".$city_id."' AND
                    // `cart_delivery_date` = '".$r['cart_delivery_date']."' AND
                    // `cart_status` = '0' AND
                    // `cart_deleted` = '0' ";
                    $sql2 = "SELECT DISTINCT(cart_area_id) FROM `tblcart` WHERE `cart_session_id` = '" . $cart_session_id . "'";
                    $this->debuglog('[getShippingPrice]sql2:' . $sql2);
                    $STH2 = $DBH->query($sql2);
                    if ($STH2->rowCount() > 0) {
                        while ($r2 = $STH2->fetch(PDO::FETCH_ASSOC)) {
                            $arr_shipping_inclusive_details = $obj->getShippingPriceSPTypewise($city_id, $r2['cart_area_id'], 3);
                            $this->debuglog('[getShippingPrice] sp_type:3, city_id:' . $city_id . ', cart_area_id:' . $r2['cart_area_id'] . ', arr_shipping_inclusive_details:<pre>' . print_r($arr_shipping_inclusive_details, 1) . '</pre>');
                            if (count($arr_shipping_inclusive_details) > 0) {
                            } else {
                                // $sql3 = "SELECT * FROM `tblcart` WHERE
                                // `cart_session_id` = '".$cart_session_id."' AND
                                // `cart_city_id` = '".$city_id."' AND
                                // `cart_delivery_date` = '".$r['cart_delivery_date']."' AND
                                // `cart_area_id` = '".$r2['cart_area_id']."' AND
                                // `cart_status` = '0' AND
                                // `cart_deleted` = '0' ";
                                $sql3 = "SELECT * FROM `tblcart` WHERE `cart_session_id` = '" . $cart_session_id . "'";
                                $this->debuglog('[getShippingPrice] sql3:' . $sql3);
                                $STH3 = $DBH->query($sql3);
                                if ($STH3->rowCount() > 0) {
                                    $subtotal = 0;
                                    $cnt = 0;
                                    while ($r3 = $STH3->fetch(PDO::FETCH_ASSOC)) {
                                        $vendor_id = $obj->getVendorIdOfCusine($r3['cusine_id']);
                                        $arr_shipping_inclusive_details = $obj->getShippingPriceSPTypewise($city_id, $r2['cart_area_id'], 3, $vendor_id);
                                        // $this->debuglog('[getShippingPrice] sp_type:3, vendor_id:'.$vendor_id.', city_id:'.$city_id.', cart_area_id:'.$r2['cart_area_id'].', arr_shipping_inclusive_details:<pre>'.print_r($arr_shipping_inclusive_details,1).'</pre>');
                                        if (count($arr_shipping_inclusive_details) > 0) {
                                        } else {
                                            $vendor_qtywise_flag = false;
                                            $vendor_amtwise_flag = false;
                                            $vendor_perwise_flag = false;
                                            $admin_qtywise_flag = false;
                                            $admin_amtwise_flag = false;
                                            $admin_perwise_flag = false;
                                            $arr_cusine_weight = $obj->getCusineAllWeight($r3['cusine_id']);
                                            $this->debuglog('[getShippingPrice]arr_cusine_weight cusine_id:' . $r3['cusine_id'] . ', city_id:' . $city_id . ', cart_area_id:' . $r2['cart_area_id'] . ', arr_cusine_weight:<pre>' . print_r($arr_cusine_weight, 1) . '</pre>');
                                            $temp_cwsp_count = 0;
                                            if (count($arr_cusine_weight) > 0) {
                                                $arr_temp_cwsp = array();
                                                $arr_temp_cwqty = array();
                                                for ($wq = 0;$wq < count($arr_cusine_weight);$wq++) {
                                                    $temp_wq_key = $r['cart_delivery_date'] . '_' . $city_id . '_' . $r3['cart_area_id'] . '_' . $arr_cusine_weight[$wq]['cw_qt_cat_id'] . '_' . $arr_cusine_weight[$wq]['cw_qu_cat_id'] . '_' . $vendor_id;
                                                    $this->debuglog('[getShippingPrice]arr_cusine_weight cusine_id:' . $r3['cusine_id'] . ', temp_wq_key:' . $temp_wq_key);
                                                    if ($obj->chkIfCusineHasQuantityWiseShippingPrice($city_id, $r3['cart_area_id'], $arr_cusine_weight[$wq]['cw_qt_cat_id'], $arr_cusine_weight[$wq]['cw_qu_cat_id'], $vendor_id)) {
                                                        $temp_wq_qty_val = $arr_cusine_weight[$wq]['cw_quantity'] * $r3['qty'];
                                                        $this->debuglog('[getShippingPrice]chkIfCusineHasQuantityWiseShippingPrice:Yes  cusine_id:' . $r3['cusine_id'] . ', temp_wq_key:' . $temp_wq_key);
                                                        $temp_cwsp_count++;
                                                        $arr_temp_cwsp[] = $temp_wq_key;
                                                        $arr_temp_cwqty[] = $temp_wq_qty_val;
                                                    } else {
                                                        $this->debuglog('[getShippingPrice]chkIfCusineHasQuantityWiseShippingPrice:No  cusine_id:' . $r3['cusine_id'] . ', temp_wq_key:' . $temp_wq_key);
                                                    }
                                                }
                                                if ($temp_cwsp_count >= 1) {
                                                    $vendor_qtywise_flag = true;
                                                    if (array_key_exists($arr_temp_cwsp[0], $arr_wt_qty)) {
                                                        $arr_wt_qty[$arr_temp_cwsp[0]]+= $arr_temp_cwqty[0];
                                                        $this->debuglog('[getShippingPrice]temp_cwsp_count >= 1 array_key_exists arr_wt_qty:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_cwsp[0]:' . $arr_temp_cwsp[0] . ', arr_temp_cwqty[0]:' . $arr_temp_cwqty[0]);
                                                    } else {
                                                        $arr_wt_qty[$arr_temp_cwsp[0]] = $arr_temp_cwqty[0];
                                                        $this->debuglog('[getShippingPrice]temp_cwsp_count >= 1 array_key_not_exists arr_wt_qty:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_cwsp[0]:' . $arr_temp_cwsp[0] . ', arr_temp_cwqty[0]:' . $arr_temp_cwqty[0]);
                                                    }
                                                } else {
                                                    if ($r3['cart_area_id'] > 0) {
                                                        $temp_cwsp_count = 0;
                                                        $arr_temp_cwsp = array();
                                                        $arr_temp_cwqty = array();
                                                        for ($wq = 0;$wq < count($arr_cusine_weight);$wq++) {
                                                            $temp_wq_key = $r['cart_delivery_date'] . '_' . $city_id . '_0_' . $arr_cusine_weight[$wq]['cw_qt_cat_id'] . '_' . $arr_cusine_weight[$wq]['cw_qu_cat_id'] . '_' . $vendor_id;
                                                            $this->debuglog('[getShippingPrice]cart_area_id=0 arr_cusine_weight cusine_id:' . $r3['cusine_id'] . ', temp_wq_key:' . $temp_wq_key);
                                                            if ($obj->chkIfCusineHasQuantityWiseShippingPrice($city_id, 0, $arr_cusine_weight[$wq]['cw_qt_cat_id'], $arr_cusine_weight[$wq]['cw_qu_cat_id'], $vendor_id)) {
                                                                $temp_wq_qty_val = $arr_cusine_weight[$wq]['cw_quantity'] * $r3['qty'];
                                                                $this->debuglog('[getShippingPrice]cart_area_id=0 chkIfCusineHasQuantityWiseShippingPrice:Yes  cusine_id:' . $r3['cusine_id'] . ', temp_wq_key:' . $temp_wq_key);
                                                                $temp_cwsp_count++;
                                                                $arr_temp_cwsp[] = $temp_wq_key;
                                                                $arr_temp_cwqty[] = $temp_wq_qty_val;
                                                            } else {
                                                                $this->debuglog('[getShippingPrice]cart_area_id=0 chkIfCusineHasQuantityWiseShippingPrice:No  cusine_id:' . $r3['cusine_id'] . ', temp_wq_key:' . $temp_wq_key);
                                                            }
                                                        }
                                                        if ($temp_cwsp_count >= 1) {
                                                            $vendor_qtywise_flag = true;
                                                            if (array_key_exists($arr_temp_cwsp[0], $arr_wt_qty)) {
                                                                $arr_wt_qty[$arr_temp_cwsp[0]]+= $arr_temp_cwqty[0];
                                                                $this->debuglog('[getShippingPrice]cart_area_id=0 temp_cwsp_count >= 1 array_key_exists arr_wt_qty:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_cwsp[0]:' . $arr_temp_cwsp[0] . ', arr_temp_cwqty[0]:' . $arr_temp_cwqty[0]);
                                                            } else {
                                                                $arr_wt_qty[$arr_temp_cwsp[0]] = $arr_temp_cwqty[0];
                                                                $this->debuglog('[getShippingPrice]cart_area_id=0 temp_cwsp_count >= 1 array_key_not_exists arr_wt_qty:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_cwsp[0]:' . $arr_temp_cwsp[0] . ', arr_temp_cwqty[0]:' . $arr_temp_cwqty[0]);
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            $temp_amt_count = 0;
                                            $arr_temp_amtk = array();
                                            $arr_temp_amts = array();
                                            if ($temp_cwsp_count == 0) {
                                                $temp_amt_key = $r['cart_delivery_date'] . '_' . $city_id . '_' . $r3['cart_area_id'] . '_' . $vendor_id;
                                                $this->debuglog('[getShippingPrice]arr_amt_subtotal cusine_id:' . $r3['cusine_id'] . ', temp_amt_key:' . $temp_amt_key);
                                                if ($obj->chkIfCusineHasAmountWiseShippingPrice($city_id, $r3['cart_area_id'], $vendor_id)) {
                                                    $temp_amt_subtotal = $r3['subtotal'];
                                                    $this->debuglog('[getShippingPrice]chkIfCusineHasAmountWiseShippingPrice:Yes  cusine_id:' . $r3['cusine_id'] . ', temp_amt_key:' . $temp_amt_key);
                                                    $temp_amt_count++;
                                                    $arr_temp_amtk[] = $temp_amt_key;
                                                    $arr_temp_amts[] = $temp_amt_subtotal;
                                                } else {
                                                    $this->debuglog('[getShippingPrice]chkIfCusineHasAmountWiseShippingPrice:No  cusine_id:' . $r3['cusine_id'] . ', temp_amt_key:' . $temp_amt_key);
                                                }
                                                if ($temp_amt_count > 0) {
                                                    $vendor_amtwise_flag = true;
                                                    if (array_key_exists($arr_temp_amtk[0], $arr_amt_subtotal)) {
                                                        $arr_amt_subtotal[$arr_temp_amtk[0]]+= $arr_temp_amts[0];
                                                        $this->debuglog('[getShippingPrice]temp_amt_count > 0 array_key_exists arr_amt_subtotal:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_amtk[0]:' . $arr_temp_amtk[0] . ', arr_temp_amts[0]:' . $arr_temp_amts[0]);
                                                    } else {
                                                        $arr_amt_subtotal[$arr_temp_amtk[0]] = $arr_temp_amts[0];
                                                        $this->debuglog('[getShippingPrice]temp_amt_count > 0 array_key_not_exists arr_amt_subtotal:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_amtk[0]:' . $arr_temp_amtk[0] . ', arr_temp_amts[0]:' . $arr_temp_amts[0]);
                                                    }
                                                } else {
                                                    if ($r3['cart_area_id'] > 0) {
                                                        $temp_amt_count = 0;
                                                        $arr_temp_amtk = array();
                                                        $arr_temp_amts = array();
                                                        $temp_amt_key = $r['cart_delivery_date'] . '_' . $city_id . '_0_' . $vendor_id;
                                                        $this->debuglog('[getShippingPrice]cart_area_id=0 arr_amt_subtotal cusine_id:' . $r3['cusine_id'] . ', temp_amt_key:' . $temp_amt_key);
                                                        if ($obj->chkIfCusineHasAmountWiseShippingPrice($city_id, 0, $vendor_id)) {
                                                            $temp_amt_subtotal = $r3['subtotal'];
                                                            $this->debuglog('[getShippingPrice]cart_area_id=0 chkIfCusineHasAmountWiseShippingPrice:Yes  cusine_id:' . $r3['cusine_id'] . ', temp_amt_key:' . $temp_amt_key);
                                                            $temp_amt_count++;
                                                            $arr_temp_amtk[] = $temp_amt_key;
                                                            $arr_temp_amts[] = $temp_amt_subtotal;
                                                        } else {
                                                            $this->debuglog('[getShippingPrice]cart_area_id=0 chkIfCusineHasAmountWiseShippingPrice:No  cusine_id:' . $r3['cusine_id'] . ', temp_amt_key:' . $temp_amt_key);
                                                        }
                                                        if ($temp_amt_count > 0) {
                                                            $vendor_amtwise_flag = true;
                                                            if (array_key_exists($arr_temp_amtk[0], $arr_amt_subtotal)) {
                                                                $arr_amt_subtotal[$arr_temp_amtk[0]]+= $arr_temp_amts[0];
                                                                $this->debuglog('[getShippingPrice]cart_area_id=0 temp_amt_count > 0 array_key_exists arr_amt_subtotal:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_amtk[0]:' . $arr_temp_amtk[0] . ', arr_temp_amts[0]:' . $arr_temp_amts[0]);
                                                            } else {
                                                                $arr_amt_subtotal[$arr_temp_amtk[0]] = $arr_temp_amts[0];
                                                                $this->debuglog('[getShippingPrice]cart_area_id=0 temp_amt_count > 0 array_key_not_exists arr_amt_subtotal:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_amtk[0]:' . $arr_temp_amtk[0] . ', arr_temp_amts[0]:' . $arr_temp_amts[0]);
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            $temp_per_count = 0;
                                            $arr_temp_perk = array();
                                            $arr_temp_pers = array();
                                            if ($temp_cwsp_count == 0 && $temp_amt_count == 0) {
                                                $temp_per_key = $r['cart_delivery_date'] . '_' . $city_id . '_' . $r3['cart_area_id'] . '_' . $vendor_id;
                                                $this->debuglog('[getShippingPrice]arr_per_subtotal cusine_id:' . $r3['cusine_id'] . ', temp_per_key:' . $temp_per_key);
                                                if ($obj->chkIfCusineHasPercentWiseShippingPrice($city_id, $r3['cart_area_id'], $vendor_id)) {
                                                    $temp_per_subtotal = $r3['subtotal'];
                                                    $this->debuglog('[getShippingPrice]chkIfCusineHasPercentWiseShippingPrice:Yes  cusine_id:' . $r3['cusine_id'] . ', temp_per_key:' . $temp_per_key);
                                                    $temp_per_count++;
                                                    $arr_temp_perk[] = $temp_per_key;
                                                    $arr_temp_pers[] = $temp_per_subtotal;
                                                } else {
                                                    $this->debuglog('[getShippingPrice]chkIfCusineHasPercentWiseShippingPrice:No  cusine_id:' . $r3['cusine_id'] . ', temp_per_key:' . $temp_per_key);
                                                }
                                                if ($temp_per_count > 0) {
                                                    $vendor_perwise_flag = true;
                                                    if (array_key_exists($arr_temp_perk[0], $arr_per_subtotal)) {
                                                        $arr_per_subtotal[$arr_temp_perk[0]]+= $arr_temp_pers[0];
                                                        $this->debuglog('[getShippingPrice]temp_per_count > 0 array_key_exists arr_per_subtotal:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_perk[0]:' . $arr_temp_perk[0] . ', arr_temp_pers[0]:' . $arr_temp_pers[0]);
                                                    } else {
                                                        $arr_per_subtotal[$arr_temp_perk[0]] = $arr_temp_pers[0];
                                                        $this->debuglog('[getShippingPrice]temp_per_count > 0 array_key_not_exists arr_per_subtotal:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_perk[0]:' . $arr_temp_perk[0] . ', arr_temp_pers[0]:' . $arr_temp_pers[0]);
                                                    }
                                                } else {
                                                    if ($r3['cart_area_id'] > 0) {
                                                        $temp_per_count = 0;
                                                        $arr_temp_perk = array();
                                                        $arr_temp_pers = array();
                                                        $temp_per_key = $r['cart_delivery_date'] . '_' . $city_id . '_0_' . $vendor_id;
                                                        $this->debuglog('[getShippingPrice]cart_area_id=0 arr_per_subtotal cusine_id:' . $r3['cusine_id'] . ', temp_per_key:' . $temp_per_key);
                                                        if ($obj->chkIfCusineHasPercentWiseShippingPrice($city_id, 0, $vendor_id)) {
                                                            $temp_amt_subtotal = $r3['subtotal'];
                                                            $this->debuglog('[getShippingPrice]cart_area_id=0 chkIfCusineHasPercentWiseShippingPrice:Yes  cusine_id:' . $r3['cusine_id'] . ', temp_per_key:' . $temp_per_key);
                                                            $temp_per_count++;
                                                            $arr_temp_perk[] = $temp_per_key;
                                                            $arr_temp_pers[] = $temp_per_subtotal;
                                                        } else {
                                                            $this->debuglog('[getShippingPrice]cart_area_id=0 chkIfCusineHasPercentageWiseShippingPrice:No  cusine_id:' . $r3['cusine_id'] . ', temp_per_key:' . $temp_per_key);
                                                        }
                                                        if ($temp_per_count > 0) {
                                                            $vendor_perwise_flag = true;
                                                            if (array_key_exists($arr_temp_perk[0], $arr_per_subtotal)) {
                                                                $arr_per_subtotal[$arr_temp_perk[0]]+= $arr_temp_pers[0];
                                                                $this->debuglog('[getShippingPrice]cart_area_id=0 temp_per_count > 0 array_key_exists arr_per_subtotal:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_perk[0]:' . $arr_temp_perk[0] . ', arr_temp_pers[0]:' . $arr_temp_pers[0]);
                                                            } else {
                                                                $arr_per_subtotal[$arr_temp_perk[0]] = $arr_temp_pers[0];
                                                                $this->debuglog('[getShippingPrice]cart_area_id=0 temp_per_count > 0 array_key_not_exists arr_per_subtotal:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_perk[0]:' . $arr_temp_perk[0] . ', arr_temp_pers[0]:' . $arr_temp_pers[0]);
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            if ($vendor_qtywise_flag == true || $vendor_amtwise_flag == true || $vendor_perwise_flag == true) {
                                            } else {
                                                $this->debuglog('[getShippingPrice]2arr_cusine_weight chkforadmin cusine_id:' . $r3['cusine_id'] . ', city_id:' . $city_id . ', cart_area_id:' . $r2['cart_area_id'] . ', arr_cusine_weight:<pre>' . print_r($arr_cusine_weight, 1) . '</pre>');
                                                $temp_cwsp_count = 0;
                                                if (count($arr_cusine_weight) > 0) {
                                                    $arr_temp_cwsp = array();
                                                    $arr_temp_cwqty = array();
                                                    for ($wq = 0;$wq < count($arr_cusine_weight);$wq++) {
                                                        $temp_wq_key2 = $r['cart_delivery_date'] . '_' . $city_id . '_' . $r3['cart_area_id'] . '_' . $arr_cusine_weight[$wq]['cw_qt_cat_id'] . '_' . $arr_cusine_weight[$wq]['cw_qu_cat_id'] . '_0';
                                                        $this->debuglog('[getShippingPrice]2arr_cusine_weight cusine_id:' . $r3['cusine_id'] . ', temp_wq_key2:' . $temp_wq_key2);
                                                        if ($obj->chkIfCusineHasQuantityWiseShippingPrice($city_id, $r3['cart_area_id'], $arr_cusine_weight[$wq]['cw_qt_cat_id'], $arr_cusine_weight[$wq]['cw_qu_cat_id'])) {
                                                            $temp_wq_qty_val2 = $arr_cusine_weight[$wq]['cw_quantity'] * $r3['qty'];
                                                            $this->debuglog('[getShippingPrice]2chkIfCusineHasQuantityWiseShippingPrice:Yes  cusine_id:' . $r3['cusine_id'] . ', temp_wq_key2:' . $temp_wq_key2);
                                                            $temp_cwsp_count++;
                                                            $arr_temp_cwsp[] = $temp_wq_key2;
                                                            $arr_temp_cwqty[] = $temp_wq_qty_val2;
                                                        } else {
                                                            $this->debuglog('[getShippingPrice]2chkIfCusineHasQuantityWiseShippingPrice:No  cusine_id:' . $r3['cusine_id'] . ', temp_wq_key2:' . $temp_wq_key2);
                                                        }
                                                    }
                                                    if ($temp_cwsp_count >= 1) {
                                                        $admin_qtywise_flag = true;
                                                        if (array_key_exists($arr_temp_cwsp[0], $arr_wt_qty)) {
                                                            $arr_wt_qty[$arr_temp_cwsp[0]]+= $arr_temp_cwqty[0];
                                                            $this->debuglog('[getShippingPrice]2temp_cwsp_count >= 1 array_key_exists arr_wt_qty:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_cwsp[0]:' . $arr_temp_cwsp[0] . ', arr_temp_cwqty[0]:' . $arr_temp_cwqty[0]);
                                                        } else {
                                                            $arr_wt_qty[$arr_temp_cwsp[0]] = $arr_temp_cwqty[0];
                                                            $this->debuglog('[getShippingPrice]2temp_cwsp_count >= 1 array_key_not_exists arr_wt_qty:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_cwsp[0]:' . $arr_temp_cwsp[0] . ', arr_temp_cwqty[0]:' . $arr_temp_cwqty[0]);
                                                        }
                                                    } else {
                                                        if ($r3['cart_area_id'] > 0) {
                                                            $temp_cwsp_count = 0;
                                                            $arr_temp_cwsp = array();
                                                            $arr_temp_cwqty = array();
                                                            for ($wq = 0;$wq < count($arr_cusine_weight);$wq++) {
                                                                $temp_wq_key2 = $r['cart_delivery_date'] . '_' . $city_id . '_0_' . $arr_cusine_weight[$wq]['cw_qt_cat_id'] . '_' . $arr_cusine_weight[$wq]['cw_qu_cat_id'] . '_0';
                                                                $this->debuglog('[getShippingPrice]2cart_area_id=0 arr_cusine_weight cusine_id:' . $r3['cusine_id'] . ', temp_wq_key2:' . $temp_wq_key2);
                                                                if ($obj->chkIfCusineHasQuantityWiseShippingPrice($city_id, 0, $arr_cusine_weight[$wq]['cw_qt_cat_id'], $arr_cusine_weight[$wq]['cw_qu_cat_id'])) {
                                                                    $temp_wq_qty_val2 = $arr_cusine_weight[$wq]['cw_quantity'] * $r3['qty'];
                                                                    $this->debuglog('[getShippingPrice]2cart_area_id=0 chkIfCusineHasQuantityWiseShippingPrice:Yes  cusine_id:' . $r3['cusine_id'] . ', temp_wq_key2:' . $temp_wq_key2);
                                                                    $temp_cwsp_count++;
                                                                    $arr_temp_cwsp[] = $temp_wq_key2;
                                                                    $arr_temp_cwqty[] = $temp_wq_qty_val2;
                                                                } else {
                                                                    $this->debuglog('[getShippingPrice]2cart_area_id=0 chkIfCusineHasQuantityWiseShippingPrice:No  cusine_id:' . $r3['cusine_id'] . ', temp_wq_key2:' . $temp_wq_key2);
                                                                }
                                                            }
                                                            if ($temp_cwsp_count >= 1) {
                                                                $admin_qtywise_flag = true;
                                                                if (array_key_exists($arr_temp_cwsp[0], $arr_wt_qty)) {
                                                                    $arr_wt_qty[$arr_temp_cwsp[0]]+= $arr_temp_cwqty[0];
                                                                    $this->debuglog('[getShippingPrice]2cart_area_id=0 temp_cwsp_count >= 1 array_key_exists arr_wt_qty:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_cwsp[0]:' . $arr_temp_cwsp[0] . ', arr_temp_cwqty[0]:' . $arr_temp_cwqty[0]);
                                                                } else {
                                                                    $arr_wt_qty[$arr_temp_cwsp[0]] = $arr_temp_cwqty[0];
                                                                    $this->debuglog('[getShippingPrice]2cart_area_id=0 temp_cwsp_count >= 1 array_key_not_exists arr_wt_qty:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_cwsp[0]:' . $arr_temp_cwsp[0] . ', arr_temp_cwqty[0]:' . $arr_temp_cwqty[0]);
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                $temp_amt_count = 0;
                                                $arr_temp_amtk = array();
                                                $arr_temp_amts = array();
                                                if ($temp_cwsp_count == 0) {
                                                    $temp_amt_key2 = $r['cart_delivery_date'] . '_' . $city_id . '_' . $r3['cart_area_id'] . '_0';
                                                    $this->debuglog('[getShippingPrice]2arr_amt_subtotal cusine_id:' . $r3['cusine_id'] . ', temp_amt_key2:' . $temp_amt_key2);
                                                    if ($obj->chkIfCusineHasAmountWiseShippingPrice($city_id, $r3['cart_area_id'])) {
                                                        $temp_amt_subtotal = $r3['subtotal'];
                                                        $this->debuglog('[getShippingPrice]2chkIfCusineHasAmountWiseShippingPrice:Yes  cusine_id:' . $r3['cusine_id'] . ', temp_amt_key2:' . $temp_amt_key2);
                                                        $temp_amt_count++;
                                                        $arr_temp_amtk[] = $temp_amt_key2;
                                                        $arr_temp_amts[] = $temp_amt_subtotal;
                                                    } else {
                                                        $this->debuglog('[getShippingPrice]2chkIfCusineHasAmountWiseShippingPrice:No  cusine_id:' . $r3['cusine_id'] . ', temp_amt_key2:' . $temp_amt_key2);
                                                    }
                                                    if ($temp_amt_count > 0) {
                                                        $admin_amtwise_flag = true;
                                                        if (array_key_exists($arr_temp_amtk[0], $arr_amt_subtotal)) {
                                                            $arr_amt_subtotal[$arr_temp_amtk[0]]+= $arr_temp_amts[0];
                                                            $this->debuglog('[getShippingPrice]2temp_amt_count > 0 array_key_exists arr_amt_subtotal:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_amtk[0]:' . $arr_temp_amtk[0] . ', arr_temp_amts[0]:' . $arr_temp_amts[0]);
                                                        } else {
                                                            $arr_amt_subtotal[$arr_temp_amtk[0]] = $arr_temp_amts[0];
                                                            $this->debuglog('[getShippingPrice]2temp_amt_count > 0 array_key_not_exists arr_amt_subtotal:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_amtk[0]:' . $arr_temp_amtk[0] . ', arr_temp_amts[0]:' . $arr_temp_amts[0]);
                                                        }
                                                    } else {
                                                        if ($r3['cart_area_id'] > 0) {
                                                            $temp_amt_count = 0;
                                                            $arr_temp_amtk = array();
                                                            $arr_temp_amts = array();
                                                            $temp_amt_key2 = $r['cart_delivery_date'] . '_' . $city_id . '_0_0';
                                                            $this->debuglog('[getShippingPrice]2cart_area_id=0 arr_amt_subtotal cusine_id:' . $r3['cusine_id'] . ', temp_amt_key2:' . $temp_amt_key2);
                                                            if ($obj->chkIfCusineHasAmountWiseShippingPrice($city_id, 0)) {
                                                                $temp_amt_subtotal = $r3['subtotal'];
                                                                $this->debuglog('[getShippingPrice]2cart_area_id=0 chkIfCusineHasAmountWiseShippingPrice:Yes  cusine_id:' . $r3['cusine_id'] . ', temp_amt_key2:' . $temp_amt_key2);
                                                                $temp_amt_count++;
                                                                $arr_temp_amtk[] = $temp_amt_key2;
                                                                $arr_temp_amts[] = $temp_amt_subtotal;
                                                            } else {
                                                                $this->debuglog('[getShippingPrice]2cart_area_id=0 chkIfCusineHasAmountWiseShippingPrice:No  cusine_id:' . $r3['cusine_id'] . ', temp_amt_key2:' . $temp_amt_key2);
                                                            }
                                                            if ($temp_amt_count > 0) {
                                                                $admin_amtwise_flag = true;
                                                                if (array_key_exists($arr_temp_amtk[0], $arr_amt_subtotal)) {
                                                                    $arr_amt_subtotal[$arr_temp_amtk[0]]+= $arr_temp_amts[0];
                                                                    $this->debuglog('[getShippingPrice]2cart_area_id=0 temp_amt_count > 0 array_key_exists arr_amt_subtotal:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_amtk[0]:' . $arr_temp_amtk[0] . ', arr_temp_amts[0]:' . $arr_temp_amts[0]);
                                                                } else {
                                                                    $arr_amt_subtotal[$arr_temp_amtk[0]] = $arr_temp_amts[0];
                                                                    $this->debuglog('[getShippingPrice]2cart_area_id=0 temp_amt_count > 0 array_key_not_exists arr_amt_subtotal:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_amtk[0]:' . $arr_temp_amtk[0] . ', arr_temp_amts[0]:' . $arr_temp_amts[0]);
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                $temp_per_count = 0;
                                                $arr_temp_perk = array();
                                                $arr_temp_pers = array();
                                                if ($temp_cwsp_count == 0 && $temp_amt_count == 0) {
                                                    $temp_per_key2 = $r['cart_delivery_date'] . '_' . $city_id . '_' . $r3['cart_area_id'] . '_0';
                                                    $this->debuglog('[getShippingPrice]2arr_per_subtotal cusine_id:' . $r3['cusine_id'] . ', temp_per_key2:' . $temp_per_key2);
                                                    if ($obj->chkIfCusineHasPercentWiseShippingPrice($city_id, $r3['cart_area_id'])) {
                                                        $temp_per_subtotal = $r3['subtotal'];
                                                        $this->debuglog('[getShippingPrice]2chkIfCusineHasPercentWiseShippingPrice:Yes  cusine_id:' . $r3['cusine_id'] . ', temp_per_key2:' . $temp_per_key2);
                                                        $temp_per_count++;
                                                        $arr_temp_perk[] = $temp_per_key2;
                                                        $arr_temp_pers[] = $temp_per_subtotal;
                                                    } else {
                                                        $this->debuglog('[getShippingPrice]2chkIfCusineHasPercentWiseShippingPrice:No  cusine_id:' . $r3['cusine_id'] . ', temp_per_key2:' . $temp_per_key2);
                                                    }
                                                    if ($temp_per_count > 0) {
                                                        $admin_perwise_flag = true;
                                                        if (array_key_exists($arr_temp_perk[0], $arr_per_subtotal)) {
                                                            $arr_per_subtotal[$arr_temp_perk[0]]+= $arr_temp_pers[0];
                                                            $this->debuglog('[getShippingPrice]2temp_per_count > 0 array_key_exists arr_per_subtotal:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_perk[0]:' . $arr_temp_perk[0] . ', arr_temp_pers[0]:' . $arr_temp_pers[0]);
                                                        } else {
                                                            $arr_per_subtotal[$arr_temp_perk[0]] = $arr_temp_pers[0];
                                                            $this->debuglog('[getShippingPrice]2temp_per_count > 0 array_key_not_exists arr_per_subtotal:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_perk[0]:' . $arr_temp_perk[0] . ', arr_temp_pers[0]:' . $arr_temp_pers[0]);
                                                        }
                                                    } else {
                                                        if ($r3['cart_area_id'] > 0) {
                                                            $temp_per_count = 0;
                                                            $arr_temp_perk = array();
                                                            $arr_temp_pers = array();
                                                            $temp_per_key2 = $r['cart_delivery_date'] . '_' . $city_id . '_0_0';
                                                            $this->debuglog('[getShippingPrice]2cart_area_id=0 arr_per_subtotal cusine_id:' . $r3['cusine_id'] . ', temp_per_key2:' . $temp_per_key2);
                                                            if ($obj->chkIfCusineHasPercentWiseShippingPrice($city_id, 0)) {
                                                                $temp_amt_subtotal = $r3['subtotal'];
                                                                $this->debuglog('[getShippingPrice]2cart_area_id=0 chkIfCusineHasPercentWiseShippingPrice:Yes  cusine_id:' . $r3['cusine_id'] . ', temp_per_key2:' . $temp_per_key2);
                                                                $temp_per_count++;
                                                                $arr_temp_perk[] = $temp_per_key2;
                                                                $arr_temp_pers[] = $temp_per_subtotal;
                                                            } else {
                                                                $this->debuglog('[getShippingPrice]2cart_area_id=0 chkIfCusineHasPercentageWiseShippingPrice:No  cusine_id:' . $r3['cusine_id'] . ', temp_per_key2:' . $temp_per_key2);
                                                            }
                                                            if ($temp_per_count > 0) {
                                                                $admin_perwise_flag = true;
                                                                if (array_key_exists($arr_temp_perk[0], $arr_per_subtotal)) {
                                                                    $arr_per_subtotal[$arr_temp_perk[0]]+= $arr_temp_pers[0];
                                                                    $this->debuglog('[getShippingPrice]2cart_area_id=0 temp_per_count > 0 array_key_exists arr_per_subtotal:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_perk[0]:' . $arr_temp_perk[0] . ', arr_temp_pers[0]:' . $arr_temp_pers[0]);
                                                                } else {
                                                                    $arr_per_subtotal[$arr_temp_perk[0]] = $arr_temp_pers[0];
                                                                    $this->debuglog('[getShippingPrice]2cart_area_id=0 temp_per_count > 0 array_key_not_exists arr_per_subtotal:Yes  cusine_id:' . $r3['cusine_id'] . ', arr_temp_perk[0]:' . $arr_temp_perk[0] . ', arr_temp_pers[0]:' . $arr_temp_pers[0]);
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        $cnt++;
                                    }
                                }
                            }
                        }
                    }
                    /*
                    
                    echo '<br><pre>';
                    
                    print_r($arr_wt_qty);
                    
                    echo '<br></pre>';
                    
                    
                    
                    echo '<br><pre>';
                    
                    print_r($arr_amt_subtotal);
                    
                    echo '<br></pre>';
                    
                    
                    
                    echo '<br><pre>';
                    
                    print_r($arr_per_subtotal);
                    
                    echo '<br></pre>';
                    
                    */
                    $this->debuglog('[getShippingPrice]arr_wt_qty :' . print_r($arr_wt_qty, 1));
                    if (count($arr_wt_qty) > 0) {
                        foreach ($arr_wt_qty as $tt_wt_qty_k => $tt_wt_qty_v) {
                            $this->debuglog('[getShippingPrice]arr_wt_qty tt_wt_qty_k:' . $tt_wt_qty_k . ', tt_wt_qty_v:' . $tt_wt_qty_v);
                            if ($tt_wt_qty_v > 0) {
                                $temp_arr_chk_cwsp = explode('_', $tt_wt_qty_k);
                                if (is_array($temp_arr_chk_cwsp) && count($temp_arr_chk_cwsp) > 0) {
                                    $temp_city_id_chk_cwsp = $temp_arr_chk_cwsp[1];
                                    $temp_area_id_chk_cwsp = $temp_arr_chk_cwsp[2];
                                    $temp_applied_on_chk_cwsp = $temp_arr_chk_cwsp[3];
                                    $temp_qty_unit_chk_cwsp = $temp_arr_chk_cwsp[4];
                                    $temp_qty_vendor_id = $temp_arr_chk_cwsp[5];
                                    $arr_cwsp_exact_match_values = array();
                                    $arr_cwsp_exact_match_values = $obj->getCusineShippingPriceQuantityWise($temp_city_id_chk_cwsp, $temp_area_id_chk_cwsp, $temp_applied_on_chk_cwsp, $temp_qty_unit_chk_cwsp, $temp_qty_vendor_id);
                                    if (count($arr_cwsp_exact_match_values) > 0) {
                                        $this->debuglog('[getShippingPrice]arr_wt_qty arr_cwsp_exact_match_values:' . print_r($arr_cwsp_exact_match_values, 1));
                                        for ($em_cwsp = 0;$em_cwsp < count($arr_cwsp_exact_match_values);$em_cwsp++) {
                                            if (($tt_wt_qty_v >= $arr_cwsp_exact_match_values[$em_cwsp]['sp_min_qty_val']) && ($tt_wt_qty_v <= $arr_cwsp_exact_match_values[$em_cwsp]['sp_max_qty_val'])) {
                                                //echo '<br>tt_wt_qty_k:'.$tt_wt_qty_k;
                                                $qty_shipping_price+= $arr_cwsp_exact_match_values[$em_cwsp]['shipping_price'];
                                                $this->debuglog('[getShippingPrice]arr_wt_qty min max match qty_shipping_price:' . $qty_shipping_price . ', arr_cwsp_exact_match_values[$em_cwsp][shipping_price]:' . $arr_cwsp_exact_match_values[$em_cwsp]['shipping_price'] . ', sp_id:' . $arr_cwsp_exact_match_values[$em_cwsp]['sp_id']);
                                                break;
                                            } else {
                                                $this->debuglog('[getShippingPrice]arr_wt_qty min max not match arr_cwsp_exact_match_values[$em_cwsp][sp_min_qty_val]:' . $arr_cwsp_exact_match_values[$em_cwsp]['sp_min_qty_val'] . ', arr_cwsp_exact_match_values[$em_cwsp][sp_max_qty_val]:' . $arr_cwsp_exact_match_values[$em_cwsp]['sp_max_qty_val'] . ', sp_id:' . $arr_cwsp_exact_match_values[$em_cwsp]['sp_id']);
                                            }
                                        }
                                    } else {
                                        $this->debuglog('[getShippingPrice]arr_wt_qty arr_cwsp_exact_match_values:No records');
                                    }
                                } else {
                                    $this->debuglog('[getShippingPrice]arr_wt_qty invalid key tt_wt_qty_k:' . $tt_wt_qty_k . ', tt_wt_qty_v:' . $tt_wt_qty_v);
                                }
                            }
                        }
                    }
                    $this->debuglog('[getShippingPrice]arr_amt_subtotal :' . print_r($arr_amt_subtotal, 1));
                    if (count($arr_amt_subtotal) > 0) {
                        foreach ($arr_amt_subtotal as $tt_amt_qty_k => $tt_amt_qty_v) {
                            $this->debuglog('[getShippingPrice]arr_amt_subtotal tt_amt_qty_k:' . $tt_amt_qty_k . ', tt_amt_qty_v:' . $tt_amt_qty_v);
                            if ($tt_amt_qty_v > 0) {
                                $temp_arr_chk_amt = explode('_', $tt_amt_qty_k);
                                if (is_array($temp_arr_chk_amt) && count($temp_arr_chk_amt) > 0) {
                                    $temp_city_id_chk_amt = $temp_arr_chk_amt[1];
                                    $temp_area_id_chk_amt = $temp_arr_chk_amt[2];
                                    $temp_amt_vendor_id = $temp_arr_chk_amt[3];
                                    $arr_amt_exact_match_values = array();
                                    $arr_amt_exact_match_values = $obj->getCusineShippingPriceAmountWise($temp_city_id_chk_amt, $temp_area_id_chk_amt, $temp_amt_vendor_id);
                                    if (count($arr_amt_exact_match_values) > 0) {
                                        $this->debuglog('[getShippingPrice]arr_amt_subtotal arr_amt_exact_match_values:' . print_r($arr_amt_exact_match_values, 1));
                                        for ($em_amt = 0;$em_amt < count($arr_amt_exact_match_values);$em_amt++) {
                                            if (($tt_amt_qty_v >= $arr_amt_exact_match_values[$em_amt]['min_order_amount']) && ($tt_amt_qty_v <= $arr_amt_exact_match_values[$em_amt]['max_order_amount'])) {
                                                //echo '<br>tt_amt_qty_k:'.$tt_amt_qty_k;
                                                $amt_shipping_price+= $arr_amt_exact_match_values[$em_amt]['shipping_price'];
                                                $this->debuglog('[getShippingPrice]arr_amt_subtotal min max match amt_shipping_price:' . $amt_shipping_price . ', arr_amt_exact_match_values[$em_amt][shipping_price]:' . $arr_amt_exact_match_values[$em_amt]['shipping_price'] . ', sp_id:' . $arr_amt_exact_match_values[$em_amt]['sp_id']);
                                                break;
                                            } else {
                                                $this->debuglog('[getShippingPrice]arr_amt_subtotal min max not match arr_amt_exact_match_values[$em_amt][min_order_amount]:' . $arr_amt_exact_match_values[$em_amt]['min_order_amount'] . ', arr_amt_exact_match_values[$em_amt][max_order_amount]:' . $arr_amt_exact_match_values[$em_amt]['max_order_amount'] . ', sp_id:' . $arr_amt_exact_match_values[$em_amt]['sp_id']);
                                            }
                                        }
                                    } else {
                                        $this->debuglog('[getShippingPrice]arr_amt_qty arr_amt_exact_match_values:No records');
                                    }
                                } else {
                                    $this->debuglog('[getShippingPrice]arr_amt_subtotal invalid key tt_amt_qty_k:' . $tt_amt_qty_k . ', tt_amt_qty_v:' . $tt_amt_qty_v);
                                }
                            }
                        }
                    }
                    $this->debuglog('[getShippingPrice]arr_per_subtotal :' . print_r($arr_per_subtotal, 1));
                    if (count($arr_per_subtotal) > 0) {
                        foreach ($arr_per_subtotal as $tt_per_qty_k => $tt_per_qty_v) {
                            $this->debuglog('[getShippingPrice]arr_per_subtotal tt_per_qty_k:' . $tt_per_qty_k . ', tt_per_qty_v:' . $tt_per_qty_v);
                            if ($tt_per_qty_v > 0) {
                                $temp_arr_chk_per = explode('_', $tt_per_qty_k);
                                if (is_array($temp_arr_chk_per) && count($temp_arr_chk_per) > 0) {
                                    $temp_city_id_chk_per = $temp_arr_chk_per[1];
                                    $temp_area_id_chk_per = $temp_arr_chk_per[2];
                                    $temp_per_vendor_id = $temp_arr_chk_per[3];
                                    $arr_per_exact_match_values = array();
                                    $arr_per_exact_match_values = $obj->getCusineShippingPricePercentWise($temp_city_id_chk_per, $temp_area_id_chk_per, $temp_per_vendor_id);
                                    if (count($arr_per_exact_match_values) > 0) {
                                        $this->debuglog('[getShippingPrice]arr_per_subtotal arr_per_exact_match_values:' . print_r($arr_per_exact_match_values, 1));
                                        for ($em_per = 0;$em_per < count($arr_per_exact_match_values);$em_per++) {
                                            if (($tt_per_qty_v >= $arr_per_exact_match_values[$em_per]['min_order_amount']) && ($tt_per_qty_v <= $arr_per_exact_match_values[$em_per]['max_order_amount'])) {
                                                //echo '<br>tt_per_qty_k:'.$tt_per_qty_k;
                                                $temp_per_val = $tt_per_qty_v * $arr_per_exact_match_values[$em_per]['sp_percentage'] / 100;
                                                $per_shipping_price+= $temp_per_val;
                                                $this->debuglog('[getShippingPrice]arr_per_subtotal min max match per_shipping_price:' . $per_shipping_price . ', arr_per_exact_match_values[$em_per][sp_percentage]:' . $arr_per_exact_match_values[$em_per]['sp_percentage'] . ', sp_id:' . $arr_per_exact_match_values[$em_per]['sp_id']);
                                                break;
                                            } else {
                                                $this->debuglog('[getShippingPrice]arr_per_subtotal min max not match arr_per_exact_match_values[$em_per][min_order_amount]:' . $arr_per_exact_match_values[$em_per]['min_order_amount'] . ', arr_per_exact_match_values[$em_per][max_order_amount]:' . $arr_per_exact_match_values[$em_per]['max_order_amount'] . ', sp_id:' . $arr_per_exact_match_values[$em_per]['sp_id']);
                                            }
                                        }
                                    } else {
                                        $this->debuglog('[getShippingPrice]arr_per_qty arr_per_exact_match_values:No records');
                                    }
                                } else {
                                    $this->debuglog('[getShippingPrice]arr_per_subtotal invalid key tt_per_qty_k:' . $tt_per_qty_k . ', tt_per_qty_v:' . $tt_per_qty_v);
                                }
                            }
                        }
                    }
                }
            }
            $total_shipping_price = $qty_shipping_price + $amt_shipping_price + $per_shipping_price;
            $this->debuglog('[getShippingPrice]qty_shipping_price:' . $qty_shipping_price);
            $this->debuglog('[getShippingPrice]amt_shipping_price:' . $amt_shipping_price);
            $this->debuglog('[getShippingPrice]per_shipping_price:' . $per_shipping_price);
            $this->debuglog('[getShippingPrice]total_shipping_price:' . $total_shipping_price);
        }
        catch(Exception $e) {
            $stringData = '[getShippingPrice] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $total_shipping_price;
        }
        return $total_shipping_price;
    }
    public function debuglogpayment($stringData) {
        //     	echo "<pre>";print_r($stringData );echo "</pre>";
        // exit;
        $logFile = SITE_PATH . "/logs/debuglog_payment_" . date("Y-m-d") . ".txt";
        $fh = fopen($logFile, 'a');
        fwrite($fh, "\n\n----------------------------------------------------\nDEBUG_START - time: " . date("Y-m-d H:i:s") . "\n" . $stringData . "\nDEBUG_END - time: " . date("Y-m-d H:i:s") . "\n----------------------------------------------------\n\n");
        fclose($fh);
    }
    public function updateUserOnlineTimestamp($user_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return = false;
        $user_online_timestamp = date('Y-m-d H:i:s');
        try {
            $sql = "UPDATE `tblusers` SET 

					`user_online_timestamp` = :user_online_timestamp  

					WHERE `user_id` = :user_id ";
            $STH = $DBH->prepare($sql);
            $STH->execute(array(':user_online_timestamp' => $user_online_timestamp, ':user_id' => $user_id));
            $DBH->commit();
            $return = true;
        }
        catch(Exception $e) {
            $stringData = '[updateUserOnlineTimestamp] Catch Error:' . $e->getMessage();
            $this->debuglog($stringData);
            return false;
        }
        return $return;
    }
    public function getCusineShippingPricePercentWise($city_id, $area_id, $vendor_id = '0') {
        $DBH = new DatabaseHandler();
        $output = array();
        $sql_vendor_id_str = "";
        if ($vendor_id == '' || $vendor_id == '0') {
            $sql_vendor_id_str = " AND vendor_id = '0' ";
        } elseif ($vendor_id > 0) {
            $sql_vendor_id_str = " AND vendor_id = '" . $vendor_id . "' ";
        }
        $state_id = $this->getStateIdOfCityId($city_id);
        $country_id = $this->getCountryIdOfCityId($city_id);
        $today = date('Y-m-d');
        $sql_common_str = " AND sp_type = '1' " . $sql_vendor_id_str . " AND sp_deleted = '0' AND sp_status = '1' AND sp_effective_date <= '" . $today . "' ORDER BY sp_effective_date DESC, sp_add_date DESC ";
        try {
            if ($area_id == '' || $area_id == '-1' || $area_id == '0') {
                $sql = "SELECT * FROM `tblshippingprices` 

					WHERE ( 

						( sp_area_id = '-1' AND sp_city_id = '" . $city_id . "' ) OR 

						( sp_area_id = '-1' AND FIND_IN_SET(" . $city_id . ", sp_city_id) > 0 )  

					) " . $sql_common_str;
                $this->debuglog('[getCusineShippingPricePercentWise] sql:' . $sql);
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                        $output[] = $r;
                    }
                } else {
                    $sql = "SELECT * FROM `tblshippingprices` 

						WHERE ( 

							( sp_area_id = '-1' AND sp_city_id = '-1' AND sp_state_id = '" . $state_id . "' ) OR 

							( sp_area_id = '-1' AND sp_city_id = '-1' AND FIND_IN_SET(" . $state_id . ", sp_state_id) > 0 )  

						) " . $sql_common_str;
                    $this->debuglog('[getCusineShippingPricePercentWise] sql2:' . $sql);
                    $STH2 = $DBH->query($sql);
                    if ($STH2->rowCount() > 0) {
                        while ($r2 = $STH2->fetch(PDO::FETCH_ASSOC)) {
                            $output[] = $r2;
                        }
                    } else {
                        $sql = "SELECT * FROM `tblshippingprices` 

							WHERE ( 

								( sp_area_id = '-1' AND sp_city_id = '-1' AND sp_state_id = '-1' AND sp_country_id = '" . $country_id . "' ) OR 

								( sp_area_id = '-1' AND sp_city_id = '-1' AND sp_state_id = '-1' AND FIND_IN_SET(" . $country_id . ", sp_country_id) > 0  ) 

							) " . $sql_common_str;
                        $this->debuglog('[getCusineShippingPricePercentWise] sql3:' . $sql);
                        $STH3 = $DBH->query($sql);
                        if ($STH3->rowCount() > 0) {
                            while ($r3 = $STH3->fetch(PDO::FETCH_ASSOC)) {
                                $output[] = $r3;
                            }
                        } else {
                            $sql = "SELECT * FROM `tblshippingprices` 

								WHERE ( 

									( sp_area_id = '-1' AND sp_city_id = '-1' AND sp_state_id = '-1' AND sp_country_id = '-1' ) 

								) " . $sql_common_str;
                            $this->debuglog('[getCusineShippingPricePercentWise] sql4:' . $sql);
                            $STH4 = $DBH->query($sql);
                            if ($STH4->rowCount() > 0) {
                                while ($r4 = $STH4->fetch(PDO::FETCH_ASSOC)) {
                                    $output[] = $r4;
                                }
                            }
                        }
                    }
                }
            } else {
                $sql = "SELECT * FROM `tblshippingprices` 

					WHERE ( 

						( sp_city_id = '" . $city_id . "' AND sp_area_id = '" . $area_id . "' ) OR 

						( FIND_IN_SET(" . $city_id . ", sp_city_id) > 0 AND sp_area_id = '" . $area_id . "' ) OR 

						( sp_city_id = '-1' AND sp_area_id = '" . $area_id . "' ) OR 

						( sp_city_id = '" . $city_id . "' AND FIND_IN_SET(" . $area_id . ", sp_area_id) > 0  ) OR 

						( FIND_IN_SET(" . $city_id . ", sp_city_id) > 0 AND FIND_IN_SET(" . $area_id . ", sp_area_id) > 0  ) OR 

						( sp_city_id = '-1' AND FIND_IN_SET(" . $area_id . ", sp_area_id) > 0  ) 

					) " . $sql_common_str;
                $this->debuglog('[getCusineShippingPricePercentWise] sql5:' . $sql);
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                        $output[] = $r;
                    }
                }
            }
            return $output;
        }
        catch(Exception $e) {
            $stringData = '[getCusineShippingPricePercentWise] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $output;
        }
    }
    public function getCusineShippingPriceAmountWise($city_id, $area_id, $vendor_id = '0') {
        $DBH = new DatabaseHandler();
        $output = array();
        $sql_vendor_id_str = "";
        if ($vendor_id == '' || $vendor_id == '0') {
            $sql_vendor_id_str = " AND vendor_id = '0' ";
        } elseif ($vendor_id > 0) {
            $sql_vendor_id_str = " AND vendor_id = '" . $vendor_id . "' ";
        }
        $state_id = $this->getStateIdOfCityId($city_id);
        $country_id = $this->getCountryIdOfCityId($city_id);
        $today = date('Y-m-d');
        $sql_common_str = " AND shipping_price != '' AND sp_type = '0' " . $sql_vendor_id_str . " AND sp_deleted = '0' AND sp_status = '1' AND sp_effective_date <= '" . $today . "' ORDER BY sp_effective_date DESC, sp_add_date DESC ";
        try {
            if ($area_id == '' || $area_id == '-1' || $area_id == '0') {
                $sql = "SELECT * FROM `tblshippingprices` 

					WHERE ( 

						( sp_area_id = '-1' AND sp_city_id = '" . $city_id . "' ) OR 

						( sp_area_id = '-1' AND FIND_IN_SET(" . $city_id . ", sp_city_id) > 0 )  

					) " . $sql_common_str;
                $this->debuglog('[getCusineShippingPriceAmountWise] sql:' . $sql);
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                        $output[] = $r;
                    }
                } else {
                    $sql = "SELECT * FROM `tblshippingprices` 

						WHERE ( 

							( sp_area_id = '-1' AND sp_city_id = '-1' AND sp_state_id = '" . $state_id . "' ) OR 

							( sp_area_id = '-1' AND sp_city_id = '-1' AND FIND_IN_SET(" . $state_id . ", sp_state_id) > 0 )  

						) " . $sql_common_str;
                    $this->debuglog('[getCusineShippingPriceAmountWise] sql2:' . $sql);
                    $STH2 = $DBH->query($sql);
                    if ($STH2->rowCount() > 0) {
                        while ($r2 = $STH2->fetch(PDO::FETCH_ASSOC)) {
                            $output[] = $r2;
                        }
                    } else {
                        $sql = "SELECT * FROM `tblshippingprices` 

							WHERE ( 

								( sp_area_id = '-1' AND sp_city_id = '-1' AND sp_state_id = '-1' AND sp_country_id = '" . $country_id . "' ) OR 

								( sp_area_id = '-1' AND sp_city_id = '-1' AND sp_state_id = '-1' AND FIND_IN_SET(" . $country_id . ", sp_country_id) > 0  ) 

							) " . $sql_common_str;
                        $this->debuglog('[getCusineShippingPriceAmountWise] sql3:' . $sql);
                        $STH3 = $DBH->query($sql);
                        if ($STH3->rowCount() > 0) {
                            while ($r3 = $STH3->fetch(PDO::FETCH_ASSOC)) {
                                $output[] = $r3;
                            }
                        } else {
                            $sql = "SELECT * FROM `tblshippingprices` 

								WHERE ( 

									( sp_area_id = '-1' AND sp_city_id = '-1' AND sp_state_id = '-1' AND sp_country_id = '-1' ) 

								) " . $sql_common_str;
                            $this->debuglog('[getCusineShippingPriceAmountWise] sql4:' . $sql);
                            $STH4 = $DBH->query($sql);
                            if ($STH4->rowCount() > 0) {
                                while ($r4 = $STH4->fetch(PDO::FETCH_ASSOC)) {
                                    $output[] = $r4;
                                }
                            }
                        }
                    }
                }
            } else {
                $sql = "SELECT * FROM `tblshippingprices` 

					WHERE ( 

						( sp_city_id = '" . $city_id . "' AND sp_area_id = '" . $area_id . "' ) OR 

						( FIND_IN_SET(" . $city_id . ", sp_city_id) > 0 AND sp_area_id = '" . $area_id . "' ) OR 

						( sp_city_id = '-1' AND sp_area_id = '" . $area_id . "' ) OR 

						( sp_city_id = '" . $city_id . "' AND FIND_IN_SET(" . $area_id . ", sp_area_id) > 0  ) OR 

						( FIND_IN_SET(" . $city_id . ", sp_city_id) > 0 AND FIND_IN_SET(" . $area_id . ", sp_area_id) > 0  ) OR 

						( sp_city_id = '-1' AND FIND_IN_SET(" . $area_id . ", sp_area_id) > 0  ) 

					) " . $sql_common_str;
                $this->debuglog('[getCusineShippingPriceAmountWise] sql5:' . $sql);
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                        $output[] = $r;
                    }
                }
            }
            return $output;
        }
        catch(Exception $e) {
            $stringData = '[getCusineShippingPriceAmountWise] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $output;
        }
    }
    public function getCusineShippingPriceQuantityWise($city_id, $area_id, $sp_applied_on, $sp_min_qty_id, $vendor_id = '0') {
        $DBH = new DatabaseHandler();
        $output = array();
        $sql_vendor_id_str = "";
        if ($vendor_id == '' || $vendor_id == '0') {
            $sql_vendor_id_str = " AND vendor_id = '0' ";
        } elseif ($vendor_id > 0) {
            $sql_vendor_id_str = " AND vendor_id = '" . $vendor_id . "' ";
        }
        $state_id = $this->getStateIdOfCityId($city_id);
        $country_id = $this->getCountryIdOfCityId($city_id);
        $today = date('Y-m-d');
        $sql_common_str = " AND sp_applied_on = '" . $sp_applied_on . "' AND sp_min_qty_id = '" . $sp_min_qty_id . "' " . $sql_vendor_id_str . " AND shipping_price != '' AND sp_type = '2' AND sp_deleted = '0' AND sp_status = '1' AND sp_effective_date <= '" . $today . "' ORDER BY sp_effective_date DESC, sp_add_date DESC ";
        try {
            if ($area_id == '' || $area_id == '-1' || $area_id == '0') {
                $sql = "SELECT * FROM `tblshippingprices` 

					WHERE ( 

						( sp_area_id = '-1' AND sp_city_id = '" . $city_id . "' ) OR 

						( sp_area_id = '-1' AND FIND_IN_SET(" . $city_id . ", sp_city_id) > 0 )  

					) " . $sql_common_str;
                $this->debuglog('[getCusineShippingPriceQuantityWise] sql:' . $sql);
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                        $output[] = $r;
                    }
                } else {
                    $sql = "SELECT * FROM `tblshippingprices` 

						WHERE ( 

							( sp_area_id = '-1' AND sp_city_id = '-1' AND sp_state_id = '" . $state_id . "' ) OR 

							( sp_area_id = '-1' AND sp_city_id = '-1' AND FIND_IN_SET(" . $state_id . ", sp_state_id) > 0 )  

						) " . $sql_common_str;
                    $this->debuglog('[getCusineShippingPriceQuantityWise] sql2:' . $sql);
                    $STH2 = $DBH->query($sql);
                    if ($STH2->rowCount() > 0) {
                        while ($r2 = $STH2->fetch(PDO::FETCH_ASSOC)) {
                            $output[] = $r2;
                        }
                    } else {
                        $sql = "SELECT * FROM `tblshippingprices` 

							WHERE ( 

								( sp_area_id = '-1' AND sp_city_id = '-1' AND sp_state_id = '-1' AND sp_country_id = '" . $country_id . "' ) OR 

								( sp_area_id = '-1' AND sp_city_id = '-1' AND sp_state_id = '-1' AND FIND_IN_SET(" . $country_id . ", sp_country_id) > 0  ) 

							) " . $sql_common_str;
                        $this->debuglog('[getCusineShippingPriceQuantityWise] sql3:' . $sql);
                        $STH3 = $DBH->query($sql);
                        if ($STH3->rowCount() > 0) {
                            while ($r3 = $STH3->fetch(PDO::FETCH_ASSOC)) {
                                $output[] = $r3;
                            }
                        } else {
                            $sql = "SELECT * FROM `tblshippingprices` 

								WHERE ( 

									( sp_area_id = '-1' AND sp_city_id = '-1' AND sp_state_id = '-1' AND sp_country_id = '-1' ) 

								) " . $sql_common_str;
                            $this->debuglog('[getCusineShippingPriceQuantityWise] sql4:' . $sql);
                            $STH4 = $DBH->query($sql);
                            if ($STH4->rowCount() > 0) {
                                while ($r4 = $STH4->fetch(PDO::FETCH_ASSOC)) {
                                    $output[] = $r4;
                                }
                            }
                        }
                    }
                }
            } else {
                $sql = "SELECT * FROM `tblshippingprices` 

					WHERE ( 

						( sp_city_id = '" . $city_id . "' AND sp_area_id = '" . $area_id . "' ) OR 

						( FIND_IN_SET(" . $city_id . ", sp_city_id) > 0 AND sp_area_id = '" . $area_id . "' ) OR 

						( sp_city_id = '-1' AND sp_area_id = '" . $area_id . "' ) OR 

						( sp_city_id = '" . $city_id . "' AND FIND_IN_SET(" . $area_id . ", sp_area_id) > 0  ) OR 

						( FIND_IN_SET(" . $city_id . ", sp_city_id) > 0 AND FIND_IN_SET(" . $area_id . ", sp_area_id) > 0  ) OR 

						( sp_city_id = '-1' AND FIND_IN_SET(" . $area_id . ", sp_area_id) > 0  ) 

					) " . $sql_common_str;
                $this->debuglog('[getCusineShippingPriceQuantityWise] sql5:' . $sql);
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                        $output[] = $r;
                    }
                }
            }
            return $output;
        }
        catch(Exception $e) {
            $stringData = '[getCusineShippingPriceQuantityWise] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $output;
        }
    }
    public function chkIfCusineHasAmountWiseShippingPrice($city_id, $area_id, $vendor_id = '0') {
        $DBH = new DatabaseHandler();
        $output = false;
        $sql_vendor_id_str = "";
        if ($vendor_id == '' || $vendor_id == '0') {
            $sql_vendor_id_str = " AND vendor_id = '0' ";
        } elseif ($vendor_id > 0) {
            $sql_vendor_id_str = " AND vendor_id = '" . $vendor_id . "' ";
        }
        $state_id = $this->getStateIdOfCityId($city_id);
        $country_id = $this->getCountryIdOfCityId($city_id);
        $today = date('Y-m-d');
        $sql_common_str = " AND shipping_price != '' AND sp_type = '0' " . $sql_vendor_id_str . " AND sp_deleted = '0' AND sp_status = '1' AND sp_effective_date <= '" . $today . "' ORDER BY sp_effective_date DESC, sp_add_date DESC LIMIT 1";
        try {
            if ($area_id == '' || $area_id == '-1' || $area_id == '0') {
                $sql = "SELECT * FROM `tblshippingprices` 

					WHERE ( 

						( sp_area_id = '-1' AND sp_city_id = '" . $city_id . "' ) OR 

						( sp_area_id = '-1' AND FIND_IN_SET(" . $city_id . ", sp_city_id) > 0 ) OR

						( sp_area_id = '-1' AND sp_city_id = '-1' AND sp_state_id = '" . $state_id . "' ) OR 

						( sp_area_id = '-1' AND sp_city_id = '-1' AND FIND_IN_SET(" . $state_id . ", sp_state_id) > 0 ) OR 

						( sp_area_id = '-1' AND sp_city_id = '-1' AND sp_state_id = '-1' AND sp_country_id = '" . $country_id . "' ) OR 

						( sp_area_id = '-1' AND sp_city_id = '-1' AND sp_state_id = '-1' AND FIND_IN_SET(" . $country_id . ", sp_country_id) > 0  ) OR

						( sp_area_id = '-1' AND sp_city_id = '-1' AND sp_state_id = '-1' AND sp_country_id = '-1' ) 

					) " . $sql_common_str;
                $this->debuglog('[chkIfCusineHasAmountWiseShippingPrice] sql:' . $sql);
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    $output = true;
                }
            } else {
                $sql = "SELECT * FROM `tblshippingprices` 

					WHERE ( 

						( sp_city_id = '" . $city_id . "' AND sp_area_id = '" . $area_id . "' ) OR 

						( FIND_IN_SET(" . $city_id . ", sp_city_id) > 0 AND sp_area_id = '" . $area_id . "' ) OR 

						( sp_city_id = '-1' AND sp_area_id = '" . $area_id . "' ) OR 

						( sp_city_id = '" . $city_id . "' AND FIND_IN_SET(" . $area_id . ", sp_area_id) > 0  ) OR 

						( FIND_IN_SET(" . $city_id . ", sp_city_id) > 0 AND FIND_IN_SET(" . $area_id . ", sp_area_id) > 0  ) OR 

						( sp_city_id = '-1' AND FIND_IN_SET(" . $area_id . ", sp_area_id) > 0  ) 

					) " . $sql_common_str;
                $this->debuglog('[chkIfCusineHasAmountWiseShippingPrice] sql:' . $sql);
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    $output = true;
                }
            }
            return $output;
        }
        catch(Exception $e) {
            $stringData = '[chkIfCusineHasAmountWiseShippingPrice] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $output;
        }
    }
    public function chkIfCusineHasPercentWiseShippingPrice($city_id, $area_id, $vendor_id = '0') { ///
        $DBH = new DatabaseHandler();
        $output = false;
        $sql_vendor_id_str = "";
        if ($vendor_id == '' || $vendor_id == '0') {
            $sql_vendor_id_str = " AND vendor_id = '0' ";
        } elseif ($vendor_id > 0) {
            $sql_vendor_id_str = " AND vendor_id = '" . $vendor_id . "' ";
        }
        $state_id = $this->getStateIdOfCityId($city_id);
        $country_id = $this->getCountryIdOfCityId($city_id);
        $today = date('Y-m-d');
        $sql_common_str = " AND sp_type = '1' " . $sql_vendor_id_str . " AND sp_deleted = '0' AND sp_status = '1' AND sp_effective_date <= '" . $today . "' ORDER BY sp_effective_date DESC, sp_add_date DESC LIMIT 1";
        try {
            if ($area_id == '' || $area_id == '-1' || $area_id == '0') {
                $sql = "SELECT * FROM `tblshippingprices` 

					WHERE ( 

						( sp_area_id = '-1' AND sp_city_id = '" . $city_id . "' ) OR 

						( sp_area_id = '-1' AND FIND_IN_SET(" . $city_id . ", sp_city_id) > 0 ) OR 

						( sp_area_id = '-1' AND sp_city_id = '-1' AND sp_state_id = '" . $state_id . "' ) OR 

						( sp_area_id = '-1' AND sp_city_id = '-1' AND FIND_IN_SET(" . $state_id . ", sp_state_id) > 0 ) OR 

						( sp_area_id = '-1' AND sp_city_id = '-1' AND sp_state_id = '-1' AND sp_country_id = '" . $country_id . "' ) OR 

						( sp_area_id = '-1' AND sp_city_id = '-1' AND sp_state_id = '-1' AND FIND_IN_SET(" . $country_id . ", sp_country_id) > 0  ) OR

						( sp_area_id = '-1' AND sp_city_id = '-1' AND sp_state_id = '-1' AND sp_country_id = '-1' ) 

					) " . $sql_common_str;
                $this->debuglog('[chkIfCusineHasPercentWiseShippingPrice] sql:' . $sql);
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    $output = true;
                }
            } else {
                $sql = "SELECT * FROM `tblshippingprices` 

					WHERE ( 

						( sp_city_id = '" . $city_id . "' AND sp_area_id = '" . $area_id . "' ) OR 

						( FIND_IN_SET(" . $city_id . ", sp_city_id) > 0 AND sp_area_id = '" . $area_id . "' ) OR 

						( sp_city_id = '-1' AND sp_area_id = '" . $area_id . "' ) OR 

						( sp_city_id = '" . $city_id . "' AND FIND_IN_SET(" . $area_id . ", sp_area_id) > 0  ) OR 

						( FIND_IN_SET(" . $city_id . ", sp_city_id) > 0 AND FIND_IN_SET(" . $area_id . ", sp_area_id) > 0  ) OR 

						( sp_city_id = '-1' AND FIND_IN_SET(" . $area_id . ", sp_area_id) > 0  ) 

					) " . $sql_common_str;
                $this->debuglog('[chkIfCusineHasPercentWiseShippingPrice] sql:' . $sql);
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    $output = true;
                }
            }
            return $output;
        }
        catch(Exception $e) {
            $stringData = '[chkIfCusineHasPercentWiseShippingPrice] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $output;
        }
    }
    public function chkIfCusineHasQuantityWiseShippingPrice($city_id, $area_id, $sp_applied_on, $sp_min_qty_id, $vendor_id = '0') {
        $DBH = new DatabaseHandler();
        $output = false;
        $sql_vendor_id_str = "";
        if ($vendor_id == '' || $vendor_id == '0') {
            $sql_vendor_id_str = " AND vendor_id = '0' ";
        } elseif ($vendor_id > 0) {
            $sql_vendor_id_str = " AND vendor_id = '" . $vendor_id . "' ";
        }
        $state_id = $this->getStateIdOfCityId($city_id);
        $country_id = $this->getCountryIdOfCityId($city_id);
        $today = date('Y-m-d');
        $sql_common_str = " AND sp_applied_on = '" . $sp_applied_on . "' AND sp_min_qty_id = '" . $sp_min_qty_id . "' " . $sql_vendor_id_str . " AND shipping_price != '' AND sp_type = '2' AND sp_deleted = '0' AND sp_status = '1' AND sp_effective_date <= '" . $today . "' ORDER BY sp_effective_date DESC, sp_add_date DESC LIMIT 1";
        try {
            if ($area_id == '' || $area_id == '-1' || $area_id == '0') {
                $sql = "SELECT * FROM `tblshippingprices` 

					WHERE ( 

						( sp_area_id = '-1' AND sp_city_id = '" . $city_id . "' ) OR 

						( sp_area_id = '-1' AND FIND_IN_SET(" . $city_id . ", sp_city_id) > 0 ) OR

						( sp_area_id = '-1' AND sp_city_id = '-1' AND sp_state_id = '" . $state_id . "' ) OR 

						( sp_area_id = '-1' AND sp_city_id = '-1' AND FIND_IN_SET(" . $state_id . ", sp_state_id) > 0 )  OR

						( sp_area_id = '-1' AND sp_city_id = '-1' AND sp_state_id = '-1' AND sp_country_id = '" . $country_id . "' ) OR 

						( sp_area_id = '-1' AND sp_city_id = '-1' AND sp_state_id = '-1' AND FIND_IN_SET(" . $country_id . ", sp_country_id) > 0  ) OR

						( sp_area_id = '-1' AND sp_city_id = '-1' AND sp_state_id = '-1' AND sp_country_id = '-1' ) 

					) " . $sql_common_str;
                $this->debuglog('[chkIfCusineHasQuantityWiseShippingPrice] sql:' . $sql);
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    $output = true;
                }
            } else {
                $sql = "SELECT * FROM `tblshippingprices` 

					WHERE ( 

						( sp_city_id = '" . $city_id . "' AND sp_area_id = '" . $area_id . "' ) OR 

						( FIND_IN_SET(" . $city_id . ", sp_city_id) > 0 AND sp_area_id = '" . $area_id . "' ) OR 

						( sp_city_id = '-1' AND sp_area_id = '" . $area_id . "' ) OR 

						( sp_city_id = '" . $city_id . "' AND FIND_IN_SET(" . $area_id . ", sp_area_id) > 0  ) OR 

						( FIND_IN_SET(" . $city_id . ", sp_city_id) > 0 AND FIND_IN_SET(" . $area_id . ", sp_area_id) > 0  ) OR 

						( sp_city_id = '-1' AND FIND_IN_SET(" . $area_id . ", sp_area_id) > 0  ) 

					) " . $sql_common_str;
                $this->debuglog('[chkIfCusineHasQuantityWiseShippingPrice] sql:' . $sql);
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    $output = true;
                }
            }
            return $output;
        }
        catch(Exception $e) {
            $stringData = '[chkIfCusineHasQuantityWiseShippingPrice] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $output;
        }
    }
    public function getVendorIdOfCusine($cusine_id) {
        $DBH = new DatabaseHandler();
        $vendor_id = 0;
        try {
            // $sql = "SELECT * FROM `tblcusines` WHERE cusine_id = '".$cusine_id."' AND cusine_deleted = '0' ";
            $sql = "SELECT * FROM `tblcusines` WHERE cusine_id = '" . $cusine_id . "'";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $vendor_id = $r['vendor_id'];
                }
            }
        }
        catch(Exception $e) {
            $stringData = '[getVendorIdOfCusine] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $vendor_id;
        }
        return $vendor_id;
    }
    public function getShippingPriceSPTypewise($city_id, $area_id = '', $sp_type = '', $vendor_id = '0') {
        $DBH = new DatabaseHandler();
        $output = array();
        $sql_vendor_id_str = "";
        if ($vendor_id == '' || $vendor_id == '0') {
            $sql_vendor_id_str = " AND vendor_id = '0' ";
        } elseif ($vendor_id > 0) {
            $sql_vendor_id_str = " AND vendor_id = '" . $vendor_id . "' ";
        }
        $state_id = $this->getStateIdOfCityId($city_id);
        $country_id = $this->getCountryIdOfCityId($city_id);
        $today = date('Y-m-d');
        if ($sp_type == '') {
            $sp_type = '0';
        }
        $sql_sp_type_str = " AND sp_type = '" . $sp_type . "' ";
        $sql_common_str = "";
        try {
            if ($area_id == '' || $area_id == '-1' || $area_id == '0') {
                $sql = "SELECT * FROM `tblshippingprices` 

					WHERE ( 

						(sp_area_id = '-1' AND sp_city_id = '" . $city_id . "' ) OR 

						(sp_area_id = '-1' AND FIND_IN_SET(" . $city_id . ", sp_city_id) > 0 ) 

					) AND shipping_price != '' AND shipping_price > 0 " . $sql_sp_type_str . " " . $sql_vendor_id_str . "  AND sp_deleted = '0' AND sp_status = '1' AND sp_effective_date <= '" . $today . "' ORDER BY sp_add_date DESC ";
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                        $output[] = $r;
                    }
                } else {
                    $sql = "SELECT * FROM `tblshippingprices` 

					WHERE ( 

						( sp_area_id = '-1' AND sp_city_id = '-1' AND sp_state_id = '" . $state_id . "' ) OR 

						( sp_area_id = '-1' AND sp_city_id = '-1' AND FIND_IN_SET(" . $state_id . ", sp_state_id) > 0 )  

					) AND shipping_price != '' AND shipping_price > 0 " . $sql_sp_type_str . " AND sp_deleted = '0' AND sp_status = '1' AND sp_effective_date <= '" . $today . "' ORDER BY sp_add_date DESC ";
                    $STH2 = $DBH->query($sql);
                    if ($STH2->rowCount() > 0) {
                        while ($r2 = $STH2->fetch(PDO::FETCH_ASSOC)) {
                            $output[] = $r2;
                        }
                    } else {
                        $sql = "SELECT * FROM `tblshippingprices` 

						WHERE ( 

							( sp_area_id = '-1' AND sp_city_id = '-1' AND sp_state_id = '-1' AND sp_country_id = '" . $country_id . "' ) OR 

							( sp_area_id = '-1' AND sp_city_id = '-1' AND sp_state_id = '-1' AND FIND_IN_SET(" . $country_id . ", sp_country_id) > 0  ) 

						) AND shipping_price != '' AND shipping_price > 0 " . $sql_sp_type_str . " AND sp_deleted = '0' AND sp_status = '1' AND sp_effective_date <= '" . $today . "' ORDER BY sp_add_date DESC ";
                        $STH3 = $DBH->query($sql);
                        if ($STH3->rowCount() > 0) {
                            while ($r3 = $STH3->fetch(PDO::FETCH_ASSOC)) {
                                $output[] = $r3;
                            }
                        } else {
                            $sql = "SELECT * FROM `tblshippingprices` 

							WHERE ( 

								( sp_area_id = '-1' AND sp_city_id = '-1' AND sp_state_id = '-1' AND sp_country_id = '-1' ) 

							) AND shipping_price != '' AND shipping_price > 0 " . $sql_sp_type_str . " AND sp_deleted = '0' AND sp_status = '1' AND sp_effective_date <= '" . $today . "' ORDER BY sp_add_date DESC ";
                            $STH4 = $DBH->query($sql);
                            if ($STH4->rowCount() > 0) {
                                while ($r4 = $STH4->fetch(PDO::FETCH_ASSOC)) {
                                    $output[] = $r4;
                                }
                            }
                        }
                    }
                }
            } else {
                $sql = "SELECT * FROM `tblshippingprices` 

					WHERE ( 

						( sp_city_id = '" . $city_id . "' AND sp_area_id = '" . $area_id . "' ) OR 

						( FIND_IN_SET(" . $city_id . ", sp_city_id) > 0 AND sp_area_id = '" . $area_id . "' ) OR 

						( sp_city_id = '-1' AND sp_area_id = '" . $area_id . "' ) OR 

						( sp_city_id = '" . $city_id . "' AND FIND_IN_SET(" . $area_id . ", sp_area_id) > 0  ) OR 

						( FIND_IN_SET(" . $city_id . ", sp_city_id) > 0 AND FIND_IN_SET(" . $area_id . ", sp_area_id) > 0  ) OR 

						( sp_city_id = '-1' AND FIND_IN_SET(" . $area_id . ", sp_area_id) > 0  ) 

					) AND shipping_price != '' AND shipping_price > 0  " . $sql_sp_type_str . " AND sp_deleted = '0' AND sp_status = '1' AND sp_effective_date <= '" . $today . "' ORDER BY sp_add_date DESC ";
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                        $output[] = $r;
                    }
                } else {
                    $sql = "SELECT * FROM `tblshippingprices` 

						WHERE ( 

							( sp_city_id = '" . $city_id . "' AND sp_area_id = '-1' ) OR 

							( FIND_IN_SET(" . $city_id . ", sp_city_id) > 0 AND sp_area_id = '-1'  ) 

						) AND shipping_price != '' AND shipping_price > 0 " . $sql_sp_type_str . " AND sp_deleted = '0' AND sp_status = '1' AND sp_effective_date <= '" . $today . "' ORDER BY sp_add_date DESC ";
                    $STH2 = $DBH->query($sql);
                    if ($STH2->rowCount() > 0) {
                        while ($r2 = $STH2->fetch(PDO::FETCH_ASSOC)) {
                            $output[] = $r2;
                        }
                    } else {
                        $sql = "SELECT * FROM `tblshippingprices` 

							WHERE ( 

								( sp_city_id = '-1' AND sp_area_id = '-1' AND sp_state_id = '" . $state_id . "' ) OR 

								( sp_city_id = '-1' AND sp_area_id = '-1' AND FIND_IN_SET(" . $state_id . ", sp_state_id) > 0 )  

							) AND shipping_price != '' AND shipping_price > 0  " . $sql_sp_type_str . " AND sp_deleted = '0' AND sp_status = '1' AND sp_effective_date <= '" . $today . "' ORDER BY sp_add_date DESC ";
                        $STH3 = $DBH->query($sql);
                        if ($STH3->rowCount() > 0) {
                            while ($r3 = $STH3->fetch(PDO::FETCH_ASSOC)) {
                                $output[] = $r3;
                            }
                        } else {
                            $sql = "SELECT * FROM `tblshippingprices` 

								WHERE ( 

									( sp_city_id = '-1' AND sp_area_id = '-1' AND sp_state_id = '-1' AND sp_country_id = '" . $country_id . "' ) OR 

									( sp_city_id = '-1' AND sp_area_id = '-1' AND sp_state_id = '-1' AND FIND_IN_SET(" . $country_id . ", sp_country_id) > 0  )  

								) AND shipping_price != '' AND shipping_price > 0  " . $sql_sp_type_str . " AND sp_deleted = '0' AND sp_status = '1' AND sp_effective_date <= '" . $today . "' ORDER BY sp_add_date DESC ";
                            $STH4 = $DBH->query($sql);
                            if ($STH4->rowCount() > 0) {
                                while ($r4 = $STH4->fetch(PDO::FETCH_ASSOC)) {
                                    $output[] = $r4;
                                }
                            } else {
                                $sql = "SELECT * FROM `tblshippingprices` 

									WHERE ( 

										( sp_city_id = '-1' AND sp_area_id = '-1' AND sp_state_id = '-1' AND sp_country_id = '-1' )

									) AND shipping_price != '' AND shipping_price > 0  " . $sql_sp_type_str . " AND sp_deleted = '0' AND sp_status = '1' AND sp_effective_date <= '" . $today . "' ORDER BY sp_add_date DESC ";
                                $STH5 = $DBH->query($sql);
                                if ($STH5->rowCount() > 0) {
                                    while ($r5 = $STH5->fetch(PDO::FETCH_ASSOC)) {
                                        $output[] = $r5;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        catch(Exception $e) {
            $stringData = '[getShippingPriceSPTypewise] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $output;
        }
        return $output;
    }
    // 27/2/2018 krishna
    public function getDigitalPersonalWellnessDiary($user_id, $start_date, $end_date, $permission_type = '0', $pro_user_id = '0', $scale_range = '', $start_scale_value = '', $end_scale_value = '', $report_module = '', $module_keyword = '', $module_criteria = '', $criteria_scale_range = '', $start_criteria_scale_value = '', $end_criteria_scale_value = '', $trigger_criteria = '') {
        $DBH = new DatabaseHandler();
        // $DBH = new DatabaseHandler();
        // global $link;
        $food_return = false;
        $arr_meal_date = array();
        $arr_food_records = array();
        $activity_return = false;
        $arr_activity_date = array();
        $arr_activity_records = array();
        $wae_return = false;
        $arr_wae_date = array();
        $arr_wae_records = array();
        $gs_return = false;
        $arr_gs_date = array();
        $arr_gs_records = array();
        $sleep_return = false;
        $arr_sleep_date = array();
        $arr_sleep_records = array();
        $mc_return = false;
        $arr_mc_date = array();
        $arr_mc_records = array();
        $mr_return = false;
        $arr_mr_date = array();
        $arr_mr_records = array();
        $mle_return = false;
        $arr_mle_date = array();
        $arr_mle_records = array();
        $adct_return = false;
        $arr_adct_date = array();
        $arr_adct_records = array();
        $bps_return = false;
        $arr_bps_date = array();
        $arr_bps_records = array();
        $bes_return = false;
        $arr_bes_date = array();
        $arr_bes_records = array();
        $aa_return = false;
        $arr_aa_records = array();
        $mt_return = false;
        $arr_mt_records = array();
        $mdt_return = false;
        $arr_mdt_date = array();
        $arr_mdt_records = array();
        if ($report_module == '' || $report_module == 'food_report' || $report_module == '1') {
            if ($report_module == 'food_report') {
                if ($module_keyword != '') {
                    $sql_str_report_module = " AND `meal_id` = '" . $module_keyword . "' ";
                } else {
                    $sql_str_report_module = '';
                }
            } else {
                $sql_str_report_module = '';
            }
            if ($module_criteria == '4') {
                if ($criteria_scale_range == '1') {
                    $sql_str_report_module_criteria = " AND `meal_time` < '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '2') {
                    $sql_str_report_module_criteria = " AND `meal_time` > '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '3') {
                    $sql_str_report_module_criteria = " AND `meal_time` <= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '4') {
                    $sql_str_report_module_criteria = " AND `meal_time` >= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND `meal_time` = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND `meal_time` >= '" . $start_criteria_scale_value . "' AND `meal_time` <= '" . $end_criteria_scale_value . "'";
                } else {
                    $sql_str_report_module_criteria = "";
                }
            } elseif ($module_criteria == '5') {
                if ($criteria_scale_range == '1') {
                    $sql_str_report_module_criteria = " AND `meal_quantity` < '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '2') {
                    $sql_str_report_module_criteria = " AND `meal_quantity` > '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '3') {
                    $sql_str_report_module_criteria = " AND `meal_quantity` <= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '4') {
                    $sql_str_report_module_criteria = " AND `meal_quantity` >= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND `meal_quantity` = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND `meal_quantity` >= '" . $start_criteria_scale_value . "' AND `meal_quantity` <= '" . $end_criteria_scale_value . "'";
                } else {
                    $sql_str_report_module_criteria = "";
                }
            } elseif ($module_criteria == '6') {
                if ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND `meal_like` = '" . $start_criteria_scale_value . "' ";
                } else {
                    $sql_str_report_module_criteria = "";
                }
            } elseif ($module_criteria == '7') {
                if ($criteria_scale_range == '5') {
                    //echo '<br>module_criteria = '.$module_criteria;
                    //echo '<br>criteria_scale_range = '.$criteria_scale_range;
                    $sql_str_report_module_criteria = " AND DAYOFWEEK(meal_date) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND DAYOFWEEK(meal_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(meal_date) <= '" . $end_criteria_scale_value . "' ";
                } else {
                    $sql_str_report_module_criteria = "";
                }
            } else {
                $sql_str_report_module_criteria = "";
            }
            $sql = "SELECT DISTINCT `meal_date` FROM `tblusersmeals` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`meal_date` >= '" . $start_date . "' AND " . "`meal_date` <= '" . $end_date . "' " . $sql_str_report_module . " " . $sql_str_report_module_criteria . " ORDER BY `meal_date` DESC ";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    array_push($arr_meal_date, $row['meal_date']);
                }
            }
            // $result = mysql_query($sql,$link);
            // if( ($result) && (mysql_num_rows($result) > 0) )
            // {
            //   while($row = mysql_fetch_array($result))
            //   {
            //     }
            // }
            if (count($arr_meal_date) > 0) {
                for ($i = 0;$i < count($arr_meal_date);$i++) {
                    $sql2 = "SELECT * FROM `tblusersmeals` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`meal_date` = '" . $arr_meal_date[$i] . "' " . $sql_str_report_module . " " . $sql_str_report_module_criteria . " ORDER BY `user_meal_id` ASC ";
                    //echo "<br>".$sql2;
                    $STH = $DBH->query($sql2);
                    if ($STH->rowCount() > 0) {
                        $j = 0;
                        while ($row2 = $STH->fetch(PDO::FETCH_ASSOC)) {
                            $food_return = true;
                            $arr_food_records[$arr_meal_date[$i]]['meal_time'][$j] = $row2['meal_time'];
                            $arr_food_records[$arr_meal_date[$i]]['meal_id'][$j] = $row2['meal_id'];
                            $arr_food_records[$arr_meal_date[$i]]['meal_others'][$j] = $row2['meal_others'];
                            $arr_food_records[$arr_meal_date[$i]]['meal_quantity'][$j] = $row2['meal_quantity'];
                            $arr_food_records[$arr_meal_date[$i]]['meal_measure'][$j] = $row2['meal_measure'];
                            $arr_food_records[$arr_meal_date[$i]]['meal_type'][$j] = $row2['meal_type'];
                            $arr_food_records[$arr_meal_date[$i]]['meal_like'][$j] = $row2['meal_like'];
                            $arr_food_records[$arr_meal_date[$i]]['meal_consultant_remark'][$j] = stripslashes($row2['meal_consultant_remark']);
                            $j++;
                        }
                    }
                    // $result2 = mysql_query($sql2,$link);
                    /* if( ($result2) && (mysql_num_rows($result2) > 0) )
                    
                    
                    
                    {
                    
                    
                    
                        $j=0;
                    
                    
                    
                        while($row2 = mysql_fetch_array($result2))
                    
                    
                    
                        {
                    
                    
                    
                            $food_return = true;
                    
                    
                    
                            $arr_food_records[$arr_meal_date[$i]]['meal_time'][$j] = $row2['meal_time'];
                    
                    
                    
                            $arr_food_records[$arr_meal_date[$i]]['meal_id'][$j] = $row2['meal_id'];
                    
                    
                    
                            $arr_food_records[$arr_meal_date[$i]]['meal_others'][$j] = $row2['meal_others'];
                    
                    
                    
                            $arr_food_records[$arr_meal_date[$i]]['meal_quantity'][$j] = $row2['meal_quantity'];
                    
                    
                    
                            $arr_food_records[$arr_meal_date[$i]]['meal_measure'][$j] = $row2['meal_measure'];
                    
                    
                    
                            $arr_food_records[$arr_meal_date[$i]]['meal_type'][$j] = $row2['meal_type'];
                    
                    
                    
                            $arr_food_records[$arr_meal_date[$i]]['meal_like'][$j] = $row2['meal_like'];
                    
                    
                    
                            $arr_food_records[$arr_meal_date[$i]]['meal_consultant_remark'][$j] = stripslashes($row2['meal_consultant_remark']);
                    
                    
                    
                            $j++;
                    
                    
                    
                        }
                    
                    
                    
                    }*/
                }
            }
        }
        if ($report_module == '' || $report_module == 'activity_report' || $report_module == '14') {
            if ($report_module == 'activity_report') {
                if ($module_keyword != '') {
                    $sql_str_report_module = " AND `activity_id` = '" . $module_keyword . "' ";
                    $sql_str_report_module2 = " AND tuda.activity_id = '" . $module_keyword . "' ";
                } else {
                    $sql_str_report_module = '';
                    $sql_str_report_module2 = '';
                }
            } else {
                $sql_str_report_module = '';
                $sql_str_report_module2 = '';
            }
            if ($module_criteria == '4') {
                if ($criteria_scale_range == '1') {
                    $sql_str_report_module_criteria = " AND `activity_time` < '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND tuda.activity_time < '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '2') {
                    $sql_str_report_module_criteria = " AND `activity_time` > '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND tuda.activity_time > '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '3') {
                    $sql_str_report_module_criteria = " AND `activity_time` <= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND tuda.activity_time <= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '4') {
                    $sql_str_report_module_criteria = " AND `activity_time` >= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND tuda.activity_time >= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND `activity_time` = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND tuda.activity_time = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND `activity_time` >= '" . $start_criteria_scale_value . "' AND `activity_time` <= '" . $end_criteria_scale_value . "'";
                    $sql_str_report_module_criteria2 = " AND tuda.activity_time >= '" . $start_criteria_scale_value . "' AND tuda.activity_time <= '" . $end_criteria_scale_value . "'";
                } else {
                    $sql_str_report_module_criteria = "";
                    $sql_str_report_module_criteria2 = "";
                }
            } elseif ($module_criteria == '3') {
                if ($criteria_scale_range == '1') {
                    $sql_str_report_module_criteria = " AND CAST(`mins` AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tuda.mins AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '2') {
                    $sql_str_report_module_criteria = " AND CAST(`mins` AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tuda.mins AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '3') {
                    $sql_str_report_module_criteria = " AND CAST(`mins` AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tuda.mins AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '4') {
                    $sql_str_report_module_criteria = " AND CAST(`mins` AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tuda.mins AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND CAST(`mins` AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tuda.mins AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND CAST(`mins` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(`mins` AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                    $sql_str_report_module_criteria2 = " AND CAST(tuda.mins AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(tuda.mins AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                } else {
                    $sql_str_report_module_criteria = "";
                    $sql_str_report_module_criteria2 = "";
                }
            } elseif ($module_criteria == '7') {
                if ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND DAYOFWEEK(activity_date) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND DAYOFWEEK(tuda.activity_date) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND DAYOFWEEK(activity_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(activity_date) <= '" . $end_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND DAYOFWEEK(tuda.activity_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(tuda.activity_date) <= '" . $end_criteria_scale_value . "' ";
                } else {
                    $sql_str_report_module_criteria = "";
                    $sql_str_report_module_criteria2 = "";
                }
            } else {
                $sql_str_report_module_criteria = "";
                $sql_str_report_module_criteria2 = "";
            }
            $sql = "SELECT DISTINCT `activity_date` FROM `tblusersdailyactivity` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`activity_date` >= '" . $start_date . "' AND " . "`activity_date` <= '" . $end_date . "' AND " . "`activity_id` != '0' AND `activity_id` != '9999999999' " . $sql_str_report_module . " " . $sql_str_report_module_criteria . " ORDER BY activity_date DESC ";
            //echo "<br>Testkk sql = ".$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    array_push($arr_activity_date, $row['activity_date']);
                }
            }
            // $result = mysql_query($sql,$link);
            // if( ($result) && (mysql_num_rows($result) > 0) )
            // {
            //         while($row = mysql_fetch_array($result))
            //         {
            //                 array_push($arr_activity_date , $row['activity_date']);
            //         }
            // }
            /* echo "<pre>";print_r($arr_activity_date);echo "</pre>";
            
                 exit;*/
            if (count($arr_activity_date) > 0) {
                for ($i = 0;$i < count($arr_activity_date);$i++) {
                    $sql2 = "SELECT * FROM `tblusersdailyactivity` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`activity_date` = '" . $arr_activity_date[$i] . "' " . $sql_str_report_module . " " . $sql_str_report_module_criteria . " ORDER BY `user_activity_id` ASC ";
                    $sql2 = "SELECT * FROM `tblusersdailyactivity` As tuda " . "LEFT JOIN `tbldailyactivity` As tda ON tuda.activity_id = tda.activity_id " . "WHERE tuda.user_id = '" . $user_id . "' AND " . "tuda.activity_date = '" . $arr_activity_date[$i] . "' AND " . "tda.activity_id > '0' " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . " ORDER BY tuda.activity_time ASC ";
                    //echo "<br>".$sql2;
                    $STH = $DBH->query($sql2);
                    if ($STH->rowCount() > 0) {
                        $j = 0;
                        while ($row2 = $STH->fetch(PDO::FETCH_ASSOC)) {
                            $activity_return = true;
                            $arr_activity_records[$arr_activity_date[$i]]['activity_time'][$j] = $row2['activity_time'];
                            $arr_activity_records[$arr_activity_date[$i]]['activity_id'][$j] = $row2['activity_id'];
                            $arr_activity_records[$arr_activity_date[$i]]['other_activity'][$j] = $row2['other_activity'];
                            $arr_activity_records[$arr_activity_date[$i]]['mins'][$j] = $row2['mins'];
                            $arr_activity_records[$arr_activity_date[$i]]['yesterday_sleep_time'][$j] = $row2['yesterday_sleep_time'];
                            $arr_activity_records[$arr_activity_date[$i]]['today_wakeup_time'][$j] = $row2['today_wakeup_time'];
                            $arr_activity_records[$arr_activity_date[$i]]['proper_guidance'][$j] = ($row2['proper_guidance'] == 1) ? 'Yes' : 'No';
                            $arr_activity_records[$arr_activity_date[$i]]['precaution'][$j] = stripslashes($row2['precaution']);
                            $j++;
                        }
                    }
                    // $result2 = mysql_query($sql2,$link);
                    // if( ($result2) && (mysql_num_rows($result2) > 0) )
                    // {
                    //         $j=0;
                    //         while($row2 = mysql_fetch_array($result2))
                    //         {
                    //                 $activity_return = true;
                    //                 $arr_activity_records[$arr_activity_date[$i]]['activity_time'][$j] = $row2['activity_time'];
                    //                 $arr_activity_records[$arr_activity_date[$i]]['activity_id'][$j] = $row2['activity_id'];
                    //                 $arr_activity_records[$arr_activity_date[$i]]['other_activity'][$j] = $row2['other_activity'];
                    //                 $arr_activity_records[$arr_activity_date[$i]]['mins'][$j] = $row2['mins'];
                    //                 $arr_activity_records[$arr_activity_date[$i]]['yesterday_sleep_time'][$j] = $row2['yesterday_sleep_time'];
                    //                 $arr_activity_records[$arr_activity_date[$i]]['today_wakeup_time'][$j] = $row2['today_wakeup_time'];
                    //                 $arr_activity_records[$arr_activity_date[$i]]['proper_guidance'][$j] = ($row2['proper_guidance'] == 1) ? 'Yes' : 'No';
                    //                 $arr_activity_records[$arr_activity_date[$i]]['precaution'][$j] = stripslashes($row2['precaution']);
                    //                 $j++;
                    //         }
                    // }
                    
                }
            }
        }
        if ($report_module == '' || $report_module == 'activity_analysis_report' || $report_module == '4') {
            // $vaer=$obj->getActivityChart($user_id,$start_date,$end_date,$permission_type,$pro_user_id,$scale_range,$start_scale_value,$end_scale_value,$report_module,$module_keyword,$module_criteria,$criteria_scale_range,$start_criteria_scale_value,$end_criteria_scale_value);
            list($aa_return, $arr_aa_records) = $obj->getActivityChart($user_id, $start_date, $end_date, $permission_type, $pro_user_id, $scale_range, $start_scale_value, $end_scale_value, $report_module, $module_keyword, $module_criteria, $criteria_scale_range, $start_criteria_scale_value, $end_criteria_scale_value);
        }
        if ($report_module == '' || $report_module == 'meal_time_report' || $report_module == '5') {
            list($mt_return, $arr_mt_records) = $obj->getMealTimeChart($user_id, $start_date, $end_date, $permission_type, $pro_user_id, $scale_range, $start_scale_value, $end_scale_value, $report_module, $module_keyword, $module_criteria, $criteria_scale_range, $start_criteria_scale_value, $end_criteria_scale_value);
        }
        if ($scale_range == '1') {
            $sql_str_scale = " AND CAST(`scale` AS SIGNED) < '" . $start_scale_value . "' ";
        } elseif ($scale_range == '2') {
            $sql_str_scale = " AND CAST(`scale` AS SIGNED) > '" . $start_scale_value . "' ";
        } elseif ($scale_range == '3') {
            $sql_str_scale = " AND CAST(`scale` AS SIGNED) <= '" . $start_scale_value . "' ";
        } elseif ($scale_range == '4') {
            $sql_str_scale = " AND CAST(`scale` AS SIGNED) >= '" . $start_scale_value . "' ";
        } elseif ($scale_range == '5') {
            $sql_str_scale = " AND CAST(`scale` AS SIGNED) = '" . $start_scale_value . "' ";
        } elseif ($scale_range == '6') {
            $min_value = min($start_scale_value, $end_scale_value);
            $max_value = max($start_scale_value, $end_scale_value);
            $sql_str_scale = " AND CAST(`scale` AS SIGNED) BETWEEN '" . $min_value . "' AND '" . $max_value . "' ";
        } else {
            $sql_str_scale = "";
        }
        if ($report_module == '' || $report_module == 'wae_report' || $report_module == '15') {
            if ($report_module == 'wae_report') {
                if ($module_keyword != '') {
                    $sql_str_report_module = " AND `selected_wae_id` = '" . $module_keyword . "' ";
                    $sql_str_report_module2 = " AND tuwae.selected_wae_id = '" . $module_keyword . "' ";
                    $sql_str_report_module3 = " AND `bms_id` = '" . $module_keyword . "' ";
                } else {
                    $sql_str_report_module = '';
                    $sql_str_report_module2 = '';
                    $sql_str_report_module3 = '';
                }
            } else {
                $sql_str_report_module = '';
                $sql_str_report_module2 = '';
                $sql_str_report_module3 = '';
            }
            if ($module_criteria == '1') {
                $sql_str_report_module_criteria3 = '';
                if ($criteria_scale_range == '1') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tuwae.my_target AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '2') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tuwae.my_target AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '3') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tuwae.my_target AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '4') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tuwae.my_target AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tuwae.my_target AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(`my_target` AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                    $sql_str_report_module_criteria2 = " AND CAST(tuwae.my_target AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(tuwae.my_target AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                } else {
                    $sql_str_report_module_criteria = "";
                    $sql_str_report_module_criteria2 = "";
                }
            } elseif ($module_criteria == '2') {
                $sql_str_report_module_criteria3 = '';
                if ($criteria_scale_range == '1') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tuwae.adviser_target AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '2') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tuwae.adviser_target AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '3') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tuwae.adviser_target AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '4') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tuwae.adviser_target AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tuwae.adviser_target AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(`adviser_target` AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                    $sql_str_report_module_criteria2 = " AND CAST(tuwae.adviser_target AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(tuwae.adviser_target AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                } else {
                    $sql_str_report_module_criteria = "";
                    $sql_str_report_module_criteria2 = "";
                }
            } elseif ($module_criteria == '7') {
                if ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND DAYOFWEEK(wae_date) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND DAYOFWEEK(tuwae.wae_date) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria3 = " AND DAYOFWEEK(mdt_date) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND DAYOFWEEK(wae_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(wae_date) <= '" . $end_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND DAYOFWEEK(tuwae.wae_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(tuwae.wae_date) <= '" . $end_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria3 = " AND DAYOFWEEK(mdt_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(mdt_date) <= '" . $end_criteria_scale_value . "' ";
                } else {
                    $sql_str_report_module_criteria = "";
                    $sql_str_report_module_criteria2 = "";
                    $sql_str_report_module_criteria3 = "";
                }
            } else {
                $sql_str_report_module_criteria = "";
                $sql_str_report_module_criteria2 = "";
                $sql_str_report_module_criteria3 = "";
            }
            if ($permission_type == '1') {
                /*
                
                
                
                $sql = "SELECT DISTINCT tuwae.wae_date FROM `tbluserswae` AS tuwae "
                
                
                
                        . "LEFT JOIN `tblworkandenvironments` AS twae ON tuwae.selected_wae_id = twae.wae_id "
                
                
                
                        . "WHERE tuwae.user_id = '".$user_id."' AND "
                
                
                
                        . "tuwae.wae_date >= '".$start_date."' AND "
                
                
                
                        . "tuwae.wae_date <= '".$end_date."' AND "
                
                
                
                        . "twae.practitioner_id = '".$pro_user_id."' AND "
                
                
                
                        . "tuwae.wae_old_data = '0' ".$sql_str_scale." ".$sql_str_report_module2." ".$sql_str_report_module_criteria2." ORDER BY tuwae.wae_date ASC ";
                
                
                
                 * 
                
                
                
                */
                $sql = "SELECT DISTINCT tuwae.wae_date AS wae_date FROM `tbluserswae` AS tuwae " . "LEFT JOIN `tblworkandenvironments` AS twae ON tuwae.selected_wae_id = twae.wae_id " . "WHERE tuwae.user_id = '" . $user_id . "' AND " . "tuwae.wae_date >= '" . $start_date . "' AND " . "tuwae.wae_date <= '" . $end_date . "' AND " . "tuwae.wae_old_data = '0' AND " . "twae.practitioner_id = '" . $pro_user_id . "'  " . $sql_str_scale . " " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . "  ";
                $sql.= " UNION SELECT DISTINCT tumdt.mdt_date AS wae_date FROM `tblusersmdt` AS tumdt " . "LEFT JOIN `tblworkandenvironments` AS twae ON tumdt.bms_id = twae.wae_id " . "WHERE tumdt.user_id = '" . $user_id . "' AND " . "tumdt.bms_entry_type = 'trigger' AND " . "tumdt.bms_type = 'wae' AND " . "tumdt.mdt_date >= '" . $start_date . "' AND " . "tumdt.mdt_date <= '" . $end_date . "' AND " . "tumdt.mdt_old_data = '0' AND " . "twae.practitioner_id = '" . $pro_user_id . "'  " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY wae_date DESC ";
            } elseif ($permission_type == '0') {
                /*
                
                
                
                $sql = "SELECT DISTINCT tuwae.wae_date FROM `tbluserswae` AS tuwae "
                
                
                
                        . "LEFT JOIN `tblworkandenvironments` AS twae ON tuwae.selected_wae_id = twae.wae_id "
                
                
                
                        . "WHERE tuwae.user_id = '".$user_id."' AND "
                
                
                
                        . "tuwae.wae_date >= '".$start_date."' AND "
                
                
                
                        . "tuwae.wae_date <= '".$end_date."' AND "
                
                
                
                        . "twae.practitioner_id = '0' AND "
                
                
                
                        . "tuwae.wae_old_data = '0' ".$sql_str_scale." ".$sql_str_report_module2." ".$sql_str_report_module_criteria2." ORDER BY tuwae.wae_date ASC ";
                
                
                
                 * 
                
                
                
                */
                $sql = "SELECT DISTINCT tuwae.wae_date AS wae_date FROM `tbluserswae` AS tuwae " . "LEFT JOIN `tblworkandenvironments` AS twae ON tuwae.selected_wae_id = twae.wae_id " . "WHERE tuwae.user_id = '" . $user_id . "' AND " . "tuwae.wae_date >= '" . $start_date . "' AND " . "tuwae.wae_date <= '" . $end_date . "' AND " . "tuwae.wae_old_data = '0' AND " . "twae.practitioner_id = '0'  " . $sql_str_scale . " " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . "  ";
                $sql.= " UNION SELECT DISTINCT tumdt.mdt_date AS wae_date FROM `tblusersmdt` AS tumdt " . "LEFT JOIN `tblworkandenvironments` AS twae ON tumdt.bms_id = twae.wae_id " . "WHERE tumdt.user_id = '" . $user_id . "' AND " . "tumdt.bms_entry_type = 'trigger' AND " . "tumdt.bms_type = 'wae' AND " . "tumdt.mdt_date >= '" . $start_date . "' AND " . "tumdt.mdt_date <= '" . $end_date . "' AND " . "tumdt.mdt_old_data = '0' AND " . "twae.practitioner_id = '0'  " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY wae_date DESC ";
            } else {
                $sql = "SELECT DISTINCT `wae_date` FROM `tbluserswae` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`wae_date` >= '" . $start_date . "' AND " . "`wae_date` <= '" . $end_date . "' AND " . "`wae_old_data` = '0' " . $sql_str_scale . " " . $sql_str_report_module . " " . $sql_str_report_module_criteria . " ";
                $sql.= " UNION SELECT DISTINCT mdt_date AS wae_date FROM `tblusersmdt` " . "WHERE `user_id` = '" . $user_id . "' AND " . "`bms_entry_type` = 'trigger' AND " . "`bms_type` = 'wae' AND " . "`mdt_date` >= '" . $start_date . "' AND " . "`mdt_date` <= '" . $end_date . "' AND " . "`mdt_old_data` = '0' " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY wae_date DESC ";
            }
            //echo "<br>Testkk sql = ".$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    array_push($arr_wae_date, $row['wae_date']);
                }
            }
            // $result = mysql_query($sql,$link);
            // if( ($result) && (mysql_num_rows($result) > 0) )
            // {
            //     while($row = mysql_fetch_array($result))
            //     {
            //         array_push($arr_wae_date , $row['wae_date']);
            //     }
            // }
            if (count($arr_wae_date) > 0) {
                for ($i = 0;$i < count($arr_wae_date);$i++) {
                    if ($permission_type == '1') {
                        /*
                        
                        
                        
                        $sql2 = "SELECT tuwae.* FROM `tbluserswae` AS tuwae "
                        
                        
                        
                                . "LEFT JOIN `tblworkandenvironments` AS twae ON tuwae.selected_wae_id = twae.wae_id "
                        
                        
                        
                                . "WHERE tuwae.user_id = '".$user_id."' AND "
                        
                        
                        
                                . "tuwae.wae_date = '".$arr_wae_date[$i]."' AND "
                        
                        
                        
                                . "twae.practitioner_id = '".$pro_user_id."' AND "
                        
                        
                        
                                . "tuwae.wae_old_data = '0' ".$sql_str_scale." ".$sql_str_report_module2." ".$sql_str_report_module_criteria2." ORDER BY tuwae.user_wae_id ASC ";
                        
                        
                        
                         * 
                        
                        
                        
                        */
                        $sql2 = "SELECT tuwae.user_wae_id AS user_wae_id , tuwae.wae_date AS wae_date , tuwae.selected_wae_id AS selected_wae_id , " . "tuwae.scale AS scale , tuwae.remarks AS remarks , tuwae.my_target AS my_target , tuwae.adviser_target AS adviser_target , 'emo' AS 'data_source'  FROM `tbluserswae` AS tuwae " . "LEFT JOIN `tblworkandenvironments` AS twae ON tuwae.selected_wae_id = twae.wae_id " . "WHERE tuwae.user_id = '" . $user_id . "' AND " . "tuwae.wae_date = '" . $arr_wae_date[$i] . "' AND " . "tuwae.wae_old_data = '0' AND " . "twae.practitioner_id = '" . $pro_user_id . "'  " . $sql_str_scale . " " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . "  ";
                        $sql2.= " UNION SELECT tumdt.user_mdt_id AS user_wae_id ,  tumdt.mdt_date AS wae_date , tumdt.bms_id AS selected_wae_id , " . "tumdt.scale AS scale , tumdt.remarks AS remarks , tumdt.my_target AS my_target , tumdt.adviser_target AS adviser_target , 'mdt' AS 'data_source' FROM `tblusersmdt` AS tumdt " . "LEFT JOIN `tblworkandenvironments` AS twae ON tumdt.bms_id = twae.wae_id " . "WHERE tumdt.user_id = '" . $user_id . "' AND " . "tumdt.bms_entry_type = 'trigger' AND " . "tumdt.bms_type = 'wae' AND " . "tumdt.mdt_date = '" . $arr_wae_date[$i] . "' AND " . "tumdt.mdt_old_data = '0' AND " . "twae.practitioner_id = '" . $pro_user_id . "'  " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY user_wae_id ASC ";
                    } elseif ($permission_type == '0') {
                        /*
                        
                        
                        
                        $sql2 = "SELECT tuwae.* FROM `tbluserswae` AS tuwae "
                        
                        
                        
                                . "LEFT JOIN `tblworkandenvironments` AS twae ON tuwae.selected_wae_id = twae.wae_id "
                        
                        
                        
                                . "WHERE tuwae.user_id = '".$user_id."' AND "
                        
                        
                        
                                . "tuwae.wae_date = '".$arr_wae_date[$i]."' AND "
                        
                        
                        
                                . "twae.practitioner_id = '0' AND " 
                        
                        
                        
                                . "tuwae.wae_old_data = '0' ".$sql_str_scale." ".$sql_str_report_module2." ".$sql_str_report_module_criteria2." ORDER BY tuwae.user_wae_id ASC ";
                        
                        
                        
                         * 
                        
                        
                        
                        */
                        $sql2 = "SELECT tuwae.user_wae_id AS user_wae_id , tuwae.wae_date AS wae_date , tuwae.selected_wae_id AS selected_wae_id , " . "tuwae.scale AS scale , tuwae.remarks AS remarks , tuwae.my_target AS my_target , tuwae.adviser_target AS adviser_target , 'emo' AS 'data_source'  FROM `tbluserswae` AS tuwae " . "LEFT JOIN `tblworkandenvironments` AS twae ON tuwae.selected_wae_id = twae.wae_id " . "WHERE tuwae.user_id = '" . $user_id . "' AND " . "tuwae.wae_date = '" . $arr_wae_date[$i] . "' AND " . "tuwae.wae_old_data = '0' AND " . "twae.practitioner_id = '0'  " . $sql_str_scale . " " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . "  ";
                        $sql2.= " UNION SELECT tumdt.user_mdt_id AS user_wae_id ,  tumdt.mdt_date AS wae_date , tumdt.bms_id AS selected_wae_id , " . "tumdt.scale AS scale , tumdt.remarks AS remarks , tumdt.my_target AS my_target , tumdt.adviser_target AS adviser_target , 'mdt' AS 'data_source' FROM `tblusersmdt` AS tumdt " . "LEFT JOIN `tblworkandenvironments` AS twae ON tumdt.bms_id = twae.wae_id " . "WHERE tumdt.user_id = '" . $user_id . "' AND " . "tumdt.bms_entry_type = 'trigger' AND " . "tumdt.bms_type = 'wae' AND " . "tumdt.mdt_date = '" . $arr_wae_date[$i] . "' AND " . "tumdt.mdt_old_data = '0' AND " . "twae.practitioner_id = '0'  " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY user_wae_id ASC ";
                    } else {
                        /*
                        
                        
                        
                        $sql2 = "SELECT * FROM `tbluserswae` WHERE "
                        
                        
                        
                                . "`user_id` = '".$user_id."' AND "
                        
                        
                        
                                . "`wae_date` = '".$arr_wae_date[$i]."' AND "
                        
                        
                        
                                . "`wae_old_data` = '0' ".$sql_str_scale." ".$sql_str_report_module." ".$sql_str_report_module_criteria." ORDER BY `user_wae_id` ASC ";
                        
                        
                        
                         * 
                        
                        
                        
                        */
                        $sql2 = "SELECT user_wae_id,wae_date,selected_wae_id,scale,remarks,my_target,adviser_target , 'emo' AS 'data_source' FROM `tbluserswae` " . "WHERE `user_id` = '" . $user_id . "' AND " . "wae_date = '" . $arr_wae_date[$i] . "' AND " . "wae_old_data = '0' " . $sql_str_scale . " " . $sql_str_report_module . " " . $sql_str_report_module_criteria . "  ";
                        $sql2.= " UNION SELECT user_mdt_id AS user_wae_id , mdt_date AS wae_date , bms_id AS selected_wae_id , " . "scale AS scale , remarks AS remarks , my_target AS my_target , adviser_target AS adviser_target , 'mdt' AS 'data_source' FROM `tblusersmdt` " . "WHERE `user_id` = '" . $user_id . "' AND " . "`bms_entry_type` = 'trigger' AND " . "`bms_type` = 'wae' AND " . "`mdt_date` = '" . $arr_wae_date[$i] . "' AND " . "`mdt_old_data` = '0' " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY user_wae_id ASC ";
                    }
                    //echo "<br>".$sql2;
                    $STH = $DBH->query($sql2);
                    if ($STH->rowCount() > 0) {
                        $j = 0;
                        while ($row2 = $STH->fetch(PDO::FETCH_ASSOC)) {
                            if ($row2['selected_wae_id'] != '0') {
                                $wae_return = true;
                                $arr_wae_records[$arr_wae_date[$i]]['selected_wae_id'][$j] = $row2['selected_wae_id'];
                                $arr_wae_records[$arr_wae_date[$i]]['scale'][$j] = $row2['scale'];
                                $arr_wae_records[$arr_wae_date[$i]]['scale_image'][$j] = $obj->getScaleImage($row2['scale']);
                                $arr_wae_records[$arr_wae_date[$i]]['responce'][$j] = stripslashes($row2['remarks']);
                                $arr_wae_records[$arr_wae_date[$i]]['my_target'][$j] = stripslashes($row2['my_target']);
                                $arr_wae_records[$arr_wae_date[$i]]['adviser_target'][$j] = stripslashes($row2['adviser_target']);
                                $arr_wae_records[$arr_wae_date[$i]]['data_source'][$j] = stripslashes($row2['data_source']);
                                $j++;
                            }
                        }
                    }
                    // $result2 = mysql_query($sql2,$link);
                    // if( ($result2) && (mysql_num_rows($result2) > 0) )
                    // {
                    //     $j=0;
                    //     while($row2 = mysql_fetch_array($result2))
                    //     {
                    //         if($row2['selected_wae_id'] != '0')
                    //         {
                    //             $wae_return = true;
                    //             $arr_wae_records[$arr_wae_date[$i]]['selected_wae_id'][$j] = $row2['selected_wae_id'];
                    //             $arr_wae_records[$arr_wae_date[$i]]['scale'][$j] = $row2['scale'];
                    //             $arr_wae_records[$arr_wae_date[$i]]['scale_image'][$j] = getScaleImage($row2['scale']);
                    //             $arr_wae_records[$arr_wae_date[$i]]['responce'][$j] = stripslashes($row2['remarks']);
                    //             $arr_wae_records[$arr_wae_date[$i]]['my_target'][$j] = stripslashes($row2['my_target']);
                    //             $arr_wae_records[$arr_wae_date[$i]]['adviser_target'][$j] = stripslashes($row2['adviser_target']);
                    //             $arr_wae_records[$arr_wae_date[$i]]['data_source'][$j] = stripslashes($row2['data_source']);
                    //             $j++;
                    //         }
                    //     }
                    // }
                    
                }
            }
        }
        if ($report_module == '' || $report_module == 'gs_report' || $report_module == '16') {
            if ($report_module == 'gs_report') {
                if ($module_keyword != '') {
                    $sql_str_report_module = " AND `selected_gs_id` = '" . $module_keyword . "' ";
                    $sql_str_report_module2 = " AND tugs.selected_gs_id = '" . $module_keyword . "' ";
                    $sql_str_report_module3 = " AND `bms_id` = '" . $module_keyword . "' ";
                } else {
                    $sql_str_report_module = '';
                    $sql_str_report_module2 = '';
                    $sql_str_report_module3 = '';
                }
            } else {
                $sql_str_report_module = '';
                $sql_str_report_module2 = '';
                $sql_str_report_module3 = '';
            }
            if ($module_criteria == '1') {
                $sql_str_report_module_criteria3 = '';
                if ($criteria_scale_range == '1') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tugs.my_target AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '2') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tugs.my_target AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '3') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tugs.my_target AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '4') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tugs.my_target AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tugs.my_target AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(`my_target` AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                    $sql_str_report_module_criteria2 = " AND CAST(tugs.my_target AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(tugs.my_target AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                } else {
                    $sql_str_report_module_criteria = "";
                    $sql_str_report_module_criteria2 = "";
                }
            } elseif ($module_criteria == '2') {
                $sql_str_report_module_criteria3 = '';
                if ($criteria_scale_range == '1') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tugs.adviser_target AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '2') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tugs.adviser_target AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '3') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tugs.adviser_target AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '4') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tugs.adviser_target AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tugs.adviser_target AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(`adviser_target` AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                    $sql_str_report_module_criteria2 = " AND CAST(tugs.adviser_target AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(tugs.adviser_target AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                } else {
                    $sql_str_report_module_criteria = "";
                    $sql_str_report_module_criteria2 = "";
                }
            } elseif ($module_criteria == '7') {
                if ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND DAYOFWEEK(gs_date) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND DAYOFWEEK(tugs.gs_date) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria3 = " AND DAYOFWEEK(mdt_date) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND DAYOFWEEK(gs_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(gs_date) <= '" . $end_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND DAYOFWEEK(tugs.gs_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(tugs.gs_date) <= '" . $end_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria3 = " AND DAYOFWEEK(mdt_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(mdt_date) <= '" . $end_criteria_scale_value . "' ";
                } else {
                    $sql_str_report_module_criteria = "";
                    $sql_str_report_module_criteria2 = "";
                    $sql_str_report_module_criteria3 = "";
                }
            } else {
                $sql_str_report_module_criteria = "";
                $sql_str_report_module_criteria2 = "";
                $sql_str_report_module_criteria3 = "";
            }
            if ($permission_type == '1') {
                /*
                
                
                
                $sql = "SELECT DISTINCT tugs.gs_date FROM `tblusersgs` AS tugs "
                
                
                
                        . "LEFT JOIN `tblgeneralstressors` AS tgs ON tugs.selected_gs_id = tgs.gs_id "
                
                
                
                        . "WHERE tugs.user_id = '".$user_id."' AND "
                
                
                
                        . "tugs.gs_date >= '".$start_date."' AND "
                
                
                
                        . "tugs.gs_date <= '".$end_date."' AND "
                
                
                
                        . "tugs.gs_old_data = '0' AND "
                
                
                
                        . "tgs.practitioner_id = '".$pro_user_id."'  ".$sql_str_scale." ".$sql_str_report_module2." ".$sql_str_report_module_criteria2." ORDER BY tugs.gs_date ASC ";
                
                
                
                 * 
                
                
                
                */
                $sql = "SELECT DISTINCT tugs.gs_date AS gs_date FROM `tblusersgs` AS tugs " . "LEFT JOIN `tblgeneralstressors` AS tgs ON tugs.selected_gs_id = tgs.gs_id " . "WHERE tugs.user_id = '" . $user_id . "' AND " . "tugs.gs_date >= '" . $start_date . "' AND " . "tugs.gs_date <= '" . $end_date . "' AND " . "tugs.gs_old_data = '0' AND " . "tgs.practitioner_id = '" . $pro_user_id . "'  " . $sql_str_scale . " " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . "  ";
                $sql.= " UNION SELECT DISTINCT tumdt.mdt_date AS gs_date FROM `tblusersmdt` AS tumdt " . "LEFT JOIN `tblgeneralstressors` AS tgs ON tumdt.bms_id = tgs.gs_id " . "WHERE tumdt.user_id = '" . $user_id . "' AND " . "tumdt.bms_entry_type = 'trigger' AND " . "tumdt.bms_type = 'gs' AND " . "tumdt.mdt_date >= '" . $start_date . "' AND " . "tumdt.mdt_date <= '" . $end_date . "' AND " . "tumdt.mdt_old_data = '0' AND " . "tgs.practitioner_id = '" . $pro_user_id . "'  " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY gs_date DESC ";
            } elseif ($permission_type == '0') {
                /*
                
                
                
                $sql = "SELECT DISTINCT tugs.gs_date FROM `tblusersgs` AS tugs "
                
                
                
                        . "LEFT JOIN `tblgeneralstressors` AS tgs ON tugs.selected_gs_id = tgs.gs_id "
                
                
                
                        . "WHERE tugs.user_id = '".$user_id."' AND "
                
                
                
                        . "tugs.gs_date >= '".$start_date."' AND "
                
                
                
                        . "tugs.gs_date <= '".$end_date."' AND "
                
                
                
                        . "tugs.gs_old_data = '0' AND "
                
                
                
                        . "tgs.practitioner_id = '0'  ".$sql_str_scale." ".$sql_str_report_module2." ".$sql_str_report_module_criteria2."  ORDER BY tugs.gs_date ASC ";
                
                
                
                 * 
                
                
                
                */
                $sql = "SELECT DISTINCT tugs.gs_date AS gs_date FROM `tblusersgs` AS tugs " . "LEFT JOIN `tblgeneralstressors` AS tgs ON tugs.selected_gs_id = tgs.gs_id " . "WHERE tugs.user_id = '" . $user_id . "' AND " . "tugs.gs_date >= '" . $start_date . "' AND " . "tugs.gs_date <= '" . $end_date . "' AND " . "tugs.gs_old_data = '0' AND " . "tgs.practitioner_id = '0'  " . $sql_str_scale . " " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . "  ";
                $sql.= " UNION SELECT DISTINCT tumdt.mdt_date AS gs_date FROM `tblusersmdt` AS tumdt " . "LEFT JOIN `tblgeneralstressors` AS tgs ON tumdt.bms_id = tgs.gs_id " . "WHERE tumdt.user_id = '" . $user_id . "' AND " . "tumdt.bms_entry_type = 'trigger' AND " . "tumdt.bms_type = 'gs' AND " . "tumdt.mdt_date >= '" . $start_date . "' AND " . "tumdt.mdt_date <= '" . $end_date . "' AND " . "tumdt.mdt_old_data = '0' AND " . "tgs.practitioner_id = '0'  " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY gs_date DESC ";
            } else {
                $sql = "SELECT DISTINCT `gs_date` FROM `tblusersgs` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`gs_date` >= '" . $start_date . "' AND " . "`gs_date` <= '" . $end_date . "' AND " . "`gs_old_data` = '0'  " . $sql_str_scale . " " . $sql_str_report_module . " " . $sql_str_report_module_criteria . " ";
                $sql.= " UNION SELECT DISTINCT mdt_date AS gs_date FROM `tblusersmdt` " . "WHERE `user_id` = '" . $user_id . "' AND " . "`bms_entry_type` = 'trigger' AND " . "`bms_type` = 'gs' AND " . "`mdt_date` >= '" . $start_date . "' AND " . "`mdt_date` <= '" . $end_date . "' AND " . "`mdt_old_data` = '0' " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY gs_date DESC ";
            }
            //echo "<br>Testkk sql = ".$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    array_push($arr_gs_date, $row['gs_date']);
                }
            }
            // $result = mysql_query($sql,$link);
            // if( ($result) && (mysql_num_rows($result) > 0) )
            // {
            //     while($row = mysql_fetch_array($result))
            //     {
            //         array_push($arr_gs_date , $row['gs_date']);
            //     }
            // }
            if (count($arr_gs_date) > 0) {
                for ($i = 0;$i < count($arr_gs_date);$i++) {
                    if ($permission_type == '1') {
                        /*
                        
                        $sql2 = "SELECT tugs.* FROM `tblusersgs` AS tugs "
                        
                        
                        
                                . "LEFT JOIN `tblgeneralstressors` AS tgs ON tugs.selected_gs_id = tgs.gs_id "
                        
                        
                        
                                . "WHERE tugs.user_id = '".$user_id."' AND "
                        
                        
                        
                                . "tugs.gs_date = '".$arr_gs_date[$i]."' AND "
                        
                        
                        
                                . "tugs.gs_old_data = '0' AND "
                        
                        
                        
                                . "tgs.practitioner_id = '".$pro_user_id."'  ".$sql_str_scale." ".$sql_str_report_module2." ".$sql_str_report_module_criteria2." ORDER BY tugs.user_gs_id ASC ";
                        
                        
                        
                         * 
                        
                        */
                        $sql2 = "SELECT tugs.user_gs_id AS user_gs_id , tugs.gs_date AS gs_date , tugs.selected_gs_id AS selected_gs_id , " . "tugs.scale AS scale , tugs.remarks AS remarks , tugs.my_target AS my_target , tugs.adviser_target AS adviser_target , 'emo' AS 'data_source'  FROM `tblusersgs` AS tugs " . "LEFT JOIN `tblgeneralstressors` AS tgs ON tugs.selected_gs_id = tgs.gs_id " . "WHERE tugs.user_id = '" . $user_id . "' AND " . "tugs.gs_date = '" . $arr_gs_date[$i] . "' AND " . "tugs.gs_old_data = '0' AND " . "tgs.practitioner_id = '" . $pro_user_id . "'  " . $sql_str_scale . " " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . "  ";
                        $sql2.= " UNION SELECT tumdt.user_mdt_id AS user_gs_id ,  tumdt.mdt_date AS gs_date , tumdt.bms_id AS selected_gs_id , " . "tumdt.scale AS scale , tumdt.remarks AS remarks , tumdt.my_target AS my_target , tumdt.adviser_target AS adviser_target , 'mdt' AS 'data_source' FROM `tblusersmdt` AS tumdt " . "LEFT JOIN `tblgeneralstressors` AS tgs ON tumdt.bms_id = tgs.gs_id " . "WHERE tumdt.user_id = '" . $user_id . "' AND " . "tumdt.bms_entry_type = 'trigger' AND " . "tumdt.bms_type = 'gs' AND " . "tumdt.mdt_date = '" . $arr_gs_date[$i] . "' AND " . "tumdt.mdt_old_data = '0' AND " . "tgs.practitioner_id = '" . $pro_user_id . "'  " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY user_gs_id ASC ";
                    } elseif ($permission_type == '0') {
                        /*
                        
                        
                        
                        $sql2 = "SELECT tugs.* FROM `tblusersgs` AS tugs "
                        
                        
                        
                                . "LEFT JOIN `tblgeneralstressors` AS tgs ON tugs.selected_gs_id = tgs.gs_id "
                        
                        
                        
                                . "WHERE tugs.user_id = '".$user_id."' AND "
                        
                        
                        
                                . "tugs.gs_date = '".$arr_gs_date[$i]."' AND "
                        
                        
                        
                                . "tugs.gs_old_data = '0' AND "
                        
                        
                        
                                . "tgs.practitioner_id = '0'  ".$sql_str_scale." ".$sql_str_report_module2." ".$sql_str_report_module_criteria2." ORDER BY tugs.user_gs_id ASC ";
                        
                        
                        
                         * 
                        
                        
                        
                        */
                        $sql2 = "SELECT tugs.user_gs_id AS user_gs_id , tugs.gs_date AS gs_date , tugs.selected_gs_id AS selected_gs_id , " . "tugs.scale AS scale , tugs.remarks AS remarks , tugs.my_target AS my_target , tugs.adviser_target AS adviser_target , 'emo' AS 'data_source'  FROM `tblusersgs` AS tugs " . "LEFT JOIN `tblgeneralstressors` AS tgs ON tugs.selected_gs_id = tgs.gs_id " . "WHERE tugs.user_id = '" . $user_id . "' AND " . "tugs.gs_date = '" . $arr_gs_date[$i] . "' AND " . "tugs.gs_old_data = '0' AND " . "tgs.practitioner_id = '0'  " . $sql_str_scale . " " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . "  ";
                        $sql2.= " UNION SELECT tumdt.user_mdt_id AS user_gs_id ,  tumdt.mdt_date AS gs_date , tumdt.bms_id AS selected_gs_id , " . "tumdt.scale AS scale , tumdt.remarks AS remarks , tumdt.my_target AS my_target , tumdt.adviser_target AS adviser_target , 'mdt' AS 'data_source' FROM `tblusersmdt` AS tumdt " . "LEFT JOIN `tblgeneralstressors` AS tgs ON tumdt.bms_id = tgs.gs_id " . "WHERE tumdt.user_id = '" . $user_id . "' AND " . "tumdt.bms_entry_type = 'trigger' AND " . "tumdt.bms_type = 'gs' AND " . "tumdt.mdt_date = '" . $arr_gs_date[$i] . "' AND " . "tumdt.mdt_old_data = '0' AND " . "tgs.practitioner_id = '0'  " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY user_gs_id ASC ";
                    } else {
                        /*
                        
                        
                        
                        $sql2 = "SELECT * FROM `tblusersgs` WHERE "
                        
                        
                        
                                . "`user_id` = '".$user_id."' AND "
                        
                        
                        
                                . "`gs_date` = '".$arr_gs_date[$i]."' AND "
                        
                        
                        
                                . "`gs_old_data` = '0'  ".$sql_str_scale." ".$sql_str_report_module." ".$sql_str_report_module_criteria." ORDER BY `user_gs_id` ASC ";
                        
                        
                        
                         * 
                        
                        
                        
                        */
                        $sql2 = "SELECT user_gs_id,gs_date,selected_gs_id,scale,remarks,my_target,adviser_target , 'emo' AS 'data_source' FROM `tblusersgs` " . "WHERE `user_id` = '" . $user_id . "' AND " . "gs_date = '" . $arr_gs_date[$i] . "' AND " . "gs_old_data = '0' " . $sql_str_scale . " " . $sql_str_report_module . " " . $sql_str_report_module_criteria . "  ";
                        $sql2.= " UNION SELECT user_mdt_id AS user_gs_id , mdt_date AS gs_date , bms_id AS selected_gs_id , " . "scale AS scale , remarks AS remarks , my_target AS my_target , adviser_target AS adviser_target , 'mdt' AS 'data_source' FROM `tblusersmdt` " . "WHERE `user_id` = '" . $user_id . "' AND " . "`bms_entry_type` = 'trigger' AND " . "`bms_type` = 'gs' AND " . "`mdt_date` = '" . $arr_gs_date[$i] . "' AND " . "`mdt_old_data` = '0' " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY user_gs_id ASC ";
                    }
                    //echo "<br>".$sql2;
                    $STH = $DBH->query($sql2);
                    if ($STH->rowCount() > 0) {
                        $j = 0;
                        while ($row2 = $STH->fetch(PDO::FETCH_ASSOC)) {
                            if ($row2['selected_gs_id'] != '0') {
                                $gs_return = true;
                                $arr_gs_records[$arr_gs_date[$i]]['selected_gs_id'][$j] = $row2['selected_gs_id'];
                                $arr_gs_records[$arr_gs_date[$i]]['scale'][$j] = $row2['scale'];
                                $arr_gs_records[$arr_gs_date[$i]]['scale_image'][$j] = $obj->getScaleImage($row2['scale']);
                                $arr_gs_records[$arr_gs_date[$i]]['responce'][$j] = stripslashes($row2['remarks']);
                                $arr_gs_records[$arr_gs_date[$i]]['my_target'][$j] = stripslashes($row2['my_target']);
                                $arr_gs_records[$arr_gs_date[$i]]['adviser_target'][$j] = stripslashes($row2['adviser_target']);
                                $arr_gs_records[$arr_gs_date[$i]]['data_source'][$j] = stripslashes($row2['data_source']);
                                $j++;
                            }
                        }
                    }
                    // $result2 = mysql_query($sql2,$link);
                    // if( ($result2) && (mysql_num_rows($result2) > 0) )
                    // {
                    //     $j=0;
                    //     while($row2 = mysql_fetch_array($result2))
                    //     {
                    //         if($row2['selected_gs_id'] != '0')
                    //         {
                    //             $gs_return = true;
                    //             $arr_gs_records[$arr_gs_date[$i]]['selected_gs_id'][$j] = $row2['selected_gs_id'];
                    //             $arr_gs_records[$arr_gs_date[$i]]['scale'][$j] = $row2['scale'];
                    //             $arr_gs_records[$arr_gs_date[$i]]['scale_image'][$j] = getScaleImage($row2['scale']);
                    //             $arr_gs_records[$arr_gs_date[$i]]['responce'][$j] = stripslashes($row2['remarks']);
                    //             $arr_gs_records[$arr_gs_date[$i]]['my_target'][$j] = stripslashes($row2['my_target']);
                    //             $arr_gs_records[$arr_gs_date[$i]]['adviser_target'][$j] = stripslashes($row2['adviser_target']);
                    //             $arr_gs_records[$arr_gs_date[$i]]['data_source'][$j] = stripslashes($row2['data_source']);
                    //             $j++;
                    //         }
                    //     }
                    // }
                    
                }
            }
        }
        if ($report_module == '' || $report_module == 'sleep_report' || $report_module == '17') {
            if ($report_module == 'sleep_report') {
                if ($module_keyword != '') {
                    $sql_str_report_module = " AND `selected_sleep_id` = '" . $module_keyword . "' ";
                    $sql_str_report_module2 = " AND tusl.selected_sleep_id = '" . $module_keyword . "' ";
                    $sql_str_report_module3 = " AND `bms_id` = '" . $module_keyword . "' ";
                } else {
                    $sql_str_report_module = '';
                    $sql_str_report_module2 = '';
                    $sql_str_report_module3 = '';
                }
            } else {
                $sql_str_report_module = '';
                $sql_str_report_module2 = '';
                $sql_str_report_module3 = '';
            }
            if ($module_criteria == '1') {
                $sql_str_report_module_criteria3 = '';
                if ($criteria_scale_range == '1') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tusl.my_target AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '2') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tusl.my_target AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '3') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tusl.my_target AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '4') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tusl.my_target AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tusl.my_target AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(`my_target` AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                    $sql_str_report_module_criteria2 = " AND CAST(tusl.my_target AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(tusl.my_target AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                } else {
                    $sql_str_report_module_criteria = "";
                    $sql_str_report_module_criteria2 = "";
                }
            } elseif ($module_criteria == '2') {
                $sql_str_report_module_criteria3 = '';
                if ($criteria_scale_range == '1') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tusl.adviser_target AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '2') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tusl.adviser_target AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '3') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tusl.adviser_target AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '4') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tusl.adviser_target AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tusl.adviser_target AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(`adviser_target` AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                    $sql_str_report_module_criteria2 = " AND CAST(tusl.adviser_target AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(tusl.adviser_target AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                } else {
                    $sql_str_report_module_criteria = "";
                    $sql_str_report_module_criteria2 = "";
                }
            } elseif ($module_criteria == '7') {
                if ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND DAYOFWEEK(sleep_date) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND DAYOFWEEK(tusl.sleep_date) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria3 = " AND DAYOFWEEK(mdt_date) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND DAYOFWEEK(sleep_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(sleep_date) <= '" . $end_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND DAYOFWEEK(tusl.sleep_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(tusl.sleep_date) <= '" . $end_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria3 = " AND DAYOFWEEK(mdt_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(mdt_date) <= '" . $end_criteria_scale_value . "' ";
                } else {
                    $sql_str_report_module_criteria = "";
                    $sql_str_report_module_criteria2 = "";
                    $sql_str_report_module_criteria3 = "";
                }
            } else {
                $sql_str_report_module_criteria = "";
                $sql_str_report_module_criteria2 = "";
                $sql_str_report_module_criteria3 = "";
            }
            if ($permission_type == '1') {
                $sql = "SELECT DISTINCT tusl.sleep_date AS sleep_date FROM `tbluserssleep` AS tusl " . "LEFT JOIN `tblsleeps` AS tsl ON tusl.selected_sleep_id = tsl.sleep_id " . "WHERE tusl.user_id = '" . $user_id . "' AND " . "tusl.sleep_date >= '" . $start_date . "' AND " . "tusl.sleep_date <= '" . $end_date . "' AND " . "tusl.sleep_old_data = '0' AND " . "tsl.practitioner_id = '" . $pro_user_id . "'  " . $sql_str_scale . " " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . "  ";
                $sql.= " UNION SELECT DISTINCT tumdt.mdt_date AS sleep_date FROM `tblusersmdt` AS tumdt " . "LEFT JOIN `tblsleeps` AS tsl ON tumdt.bms_id = tsl.sleep_id " . "WHERE tumdt.user_id = '" . $user_id . "' AND " . "tumdt.bms_entry_type = 'trigger' AND " . "tumdt.bms_type = 'sleep' AND " . "tumdt.mdt_date >= '" . $start_date . "' AND " . "tumdt.mdt_date <= '" . $end_date . "' AND " . "tumdt.mdt_old_data = '0' AND " . "tsl.practitioner_id = '" . $pro_user_id . "'  " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY sleep_date DESC ";
            } elseif ($permission_type == '0') {
                $sql = "SELECT DISTINCT tusl.sleep_date AS sleep_date FROM `tbluserssleep` AS tusl " . "LEFT JOIN `tblsleeps` AS tsl ON tusl.selected_sleep_id = tsl.sleep_id " . "WHERE tusl.user_id = '" . $user_id . "' AND " . "tusl.sleep_date >= '" . $start_date . "' AND " . "tusl.sleep_date <= '" . $end_date . "' AND " . "tusl.sleep_old_data = '0' AND " . "tsl.practitioner_id = '0'  " . $sql_str_scale . " " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . " ";
                $sql.= " UNION SELECT DISTINCT tumdt.mdt_date AS sleep_date FROM `tblusersmdt` AS tumdt " . "LEFT JOIN `tblsleeps` AS tsl ON tumdt.bms_id = tsl.sleep_id " . "WHERE tumdt.user_id = '" . $user_id . "' AND " . "tumdt.bms_entry_type = 'trigger' AND " . "tumdt.bms_type = 'sleep' AND " . "tumdt.mdt_date >= '" . $start_date . "' AND " . "tumdt.mdt_date <= '" . $end_date . "' AND " . "tumdt.mdt_old_data = '0' AND " . "tsl.practitioner_id = '0'  " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY sleep_date DESC ";
            } else {
                $sql = "SELECT DISTINCT `sleep_date` FROM `tbluserssleep` " . "WHERE `user_id` = '" . $user_id . "' AND " . "`sleep_date` >= '" . $start_date . "' AND " . "`sleep_date` <= '" . $end_date . "' AND " . "`sleep_old_data` = '0'  " . $sql_str_scale . " " . $sql_str_report_module . " " . $sql_str_report_module_criteria . " ";
                $sql.= " UNION SELECT DISTINCT mdt_date AS sleep_date FROM `tblusersmdt` " . "WHERE `user_id` = '" . $user_id . "' AND " . "`bms_entry_type` = 'trigger' AND " . "`bms_type` = 'sleep' AND " . "`mdt_date` >= '" . $start_date . "' AND " . "`mdt_date` <= '" . $end_date . "' AND " . "`mdt_old_data` = '0' " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY sleep_date DESC ";
            }
            //echo "<br>Testkk sql = ".$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    array_push($arr_sleep_date, $row['sleep_date']);
                }
            }
            // $result = mysql_query($sql,$link);
            // if( ($result) && (mysql_num_rows($result) > 0) )
            // {
            //     while($row = mysql_fetch_array($result))
            //     {
            //         array_push($arr_sleep_date , $row['sleep_date']);
            //     }
            // }
            if (count($arr_sleep_date) > 0) {
                for ($i = 0;$i < count($arr_sleep_date);$i++) {
                    if ($permission_type == '1') {
                        /*
                        
                        
                        
                        $sql2 = "SELECT tusl.* FROM `tbluserssleep` AS tusl "
                        
                        
                        
                                . "LEFT JOIN `tblsleeps` AS tsl ON tusl.selected_sleep_id = tsl.sleep_id "
                        
                        
                        
                                . "WHERE tusl.user_id = '".$user_id."' AND "
                        
                        
                        
                                . "tusl.sleep_date = '".$arr_sleep_date[$i]."' AND "
                        
                        
                        
                                . "tusl.sleep_old_data = '0' AND "
                        
                        
                        
                                . "tsl.practitioner_id = '".$pro_user_id."'  ".$sql_str_scale." ".$sql_str_report_module2." ".$sql_str_report_module_criteria2." ORDER BY tusl.user_sleep_id ASC ";
                        
                        
                        
                         * 
                        
                        
                        
                        */
                        $sql2 = "SELECT tusl.user_sleep_id AS user_sleep_id , tusl.sleep_date AS sleep_date , tusl.selected_sleep_id AS selected_sleep_id , " . "tusl.scale AS scale , tusl.remarks AS remarks , tusl.my_target AS my_target , tusl.adviser_target AS adviser_target , 'emo' AS 'data_source'  FROM `tbluserssleep` AS tusl " . "LEFT JOIN `tblsleeps` AS tsl ON tusl.selected_sleep_id = tsl.sleep_id " . "WHERE tusl.user_id = '" . $user_id . "' AND " . "tusl.sleep_date = '" . $arr_sleep_date[$i] . "' AND " . "tusl.sleep_old_data = '0' AND " . "tsl.practitioner_id = '" . $pro_user_id . "'  " . $sql_str_scale . " " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . "  ";
                        $sql2.= " UNION SELECT tumdt.user_mdt_id AS user_sleep_id ,  tumdt.mdt_date AS sleep_date , tumdt.bms_id AS selected_sleep_id , " . "tumdt.scale AS scale , tumdt.remarks AS remarks , tumdt.my_target AS my_target , tumdt.adviser_target AS adviser_target , 'mdt' AS 'data_source' FROM `tblusersmdt` AS tumdt " . "LEFT JOIN `tblsleeps` AS tsl ON tumdt.bms_id = tsl.sleep_id " . "WHERE tumdt.user_id = '" . $user_id . "' AND " . "tumdt.bms_entry_type = 'trigger' AND " . "tumdt.bms_type = 'sleep' AND " . "tumdt.mdt_date = '" . $arr_sleep_date[$i] . "' AND " . "tumdt.mdt_old_data = '0' AND " . "tsl.practitioner_id = '" . $pro_user_id . "'  " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY user_sleep_id ASC ";
                    } elseif ($permission_type == '0') {
                        /*
                        
                        
                        
                        $sql2 = "SELECT tusl.* FROM `tbluserssleep` AS tusl "
                        
                        
                        
                                . "LEFT JOIN `tblsleeps` AS tsl ON tusl.selected_sleep_id = tsl.sleep_id "
                        
                        
                        
                                . "WHERE tusl.user_id = '".$user_id."' AND "
                        
                        
                        
                                . "tusl.sleep_date = '".$arr_sleep_date[$i]."' AND "
                        
                        
                        
                                . "tusl.sleep_old_data = '0' AND "
                        
                        
                        
                                . "tsl.practitioner_id = '0'  ".$sql_str_scale." ".$sql_str_report_module2." ".$sql_str_report_module_criteria2." ORDER BY tusl.user_sleep_id ASC ";
                        
                        
                        
                         * 
                        
                        
                        
                        */
                        $sql2 = "SELECT tusl.user_sleep_id AS user_sleep_id , tusl.sleep_date AS sleep_date , tusl.selected_sleep_id AS selected_sleep_id , " . "tusl.scale AS scale , tusl.remarks AS remarks , tusl.my_target AS my_target , tusl.adviser_target AS adviser_target , 'emo' AS 'data_source' FROM `tbluserssleep` AS tusl " . "LEFT JOIN `tblsleeps` AS tsl ON tusl.selected_sleep_id = tsl.sleep_id " . "WHERE tusl.user_id = '" . $user_id . "' AND " . "tusl.sleep_date = '" . $arr_sleep_date[$i] . "' AND " . "tusl.sleep_old_data = '0' AND " . "tsl.practitioner_id = '0'  " . $sql_str_scale . " " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . "  ";
                        $sql2.= " UNION SELECT tumdt.user_mdt_id AS user_sleep_id ,  tumdt.mdt_date AS sleep_date , tumdt.bms_id AS selected_sleep_id , " . "tumdt.scale AS scale , tumdt.remarks AS remarks , tumdt.my_target AS my_target , tumdt.adviser_target AS adviser_target , 'mdt' AS 'data_source' FROM `tblusersmdt` AS tumdt " . "LEFT JOIN `tblsleeps` AS tsl ON tumdt.bms_id = tsl.sleep_id " . "WHERE tumdt.user_id = '" . $user_id . "' AND " . "tumdt.bms_entry_type = 'trigger' AND " . "tumdt.bms_type = 'sleep' AND " . "tumdt.mdt_date = '" . $arr_sleep_date[$i] . "' AND " . "tumdt.mdt_old_data = '0' AND " . "tsl.practitioner_id = '0'  " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY user_sleep_id ASC ";
                    } else {
                        /*
                        
                        
                        
                        $sql2 = "SELECT * FROM `tbluserssleep` WHERE "
                        
                        
                        
                                . "`user_id` = '".$user_id."' AND "
                        
                        
                        
                                . "`sleep_date` = '".$arr_sleep_date[$i]."' AND "
                        
                        
                        
                                . "`sleep_old_data` = '0'  ".$sql_str_scale." ".$sql_str_report_module." ".$sql_str_report_module_criteria."  ORDER BY `user_sleep_id` ASC ";
                        
                        
                        
                         * 
                        
                        
                        
                        */
                        $sql2 = "SELECT user_sleep_id,sleep_date,selected_sleep_id,scale,remarks,my_target,adviser_target , 'emo' AS 'data_source' FROM `tbluserssleep` " . "WHERE `user_id` = '" . $user_id . "' AND " . "sleep_date = '" . $arr_sleep_date[$i] . "' AND " . "sleep_old_data = '0' " . $sql_str_scale . " " . $sql_str_report_module . " " . $sql_str_report_module_criteria . "  ";
                        $sql2.= " UNION SELECT user_mdt_id AS user_sleep_id , mdt_date AS sleep_date , bms_id AS selected_sleep_id , " . "scale AS scale , remarks AS remarks , my_target AS my_target , adviser_target AS adviser_target , 'mdt' AS 'data_source' FROM `tblusersmdt` " . "WHERE `user_id` = '" . $user_id . "' AND " . "`bms_entry_type` = 'trigger' AND " . "`bms_type` = 'sleep' AND " . "`mdt_date` = '" . $arr_sleep_date[$i] . "' AND " . "`mdt_old_data` = '0' " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY user_sleep_id ASC ";
                    }
                    //echo "<br>".$sql2;
                    $STH = $DBH->query($sql2);
                    if ($STH->rowCount() > 0) {
                        $j = 0;
                        while ($row2 = $STH->fetch(PDO::FETCH_ASSOC)) {
                            if ($row2['selected_sleep_id'] != '0') {
                                $sleep_return = true;
                                $arr_sleep_records[$arr_sleep_date[$i]]['sleep_time'][$j] = $obj->getUserSleepTime($user_id, $row2['sleep_date']);
                                $arr_sleep_records[$arr_sleep_date[$i]]['wakeup_time'][$j] = $obj->getUserWakeUpTime($user_id, $row2['sleep_date']);
                                $arr_sleep_records[$arr_sleep_date[$i]]['selected_sleep_id'][$j] = $row2['selected_sleep_id'];
                                $arr_sleep_records[$arr_sleep_date[$i]]['scale'][$j] = $row2['scale'];
                                $arr_sleep_records[$arr_sleep_date[$i]]['scale_image'][$j] = $obj->getScaleImage($row2['scale']);
                                $arr_sleep_records[$arr_sleep_date[$i]]['responce'][$j] = stripslashes($row2['remarks']);
                                $arr_sleep_records[$arr_sleep_date[$i]]['my_target'][$j] = stripslashes($row2['my_target']);
                                $arr_sleep_records[$arr_sleep_date[$i]]['adviser_target'][$j] = stripslashes($row2['adviser_target']);
                                $arr_sleep_records[$arr_sleep_date[$i]]['data_source'][$j] = stripslashes($row2['data_source']);
                                $j++;
                            }
                        }
                    }
                    // $result2 = mysql_query($sql2,$link);
                    // if( ($result2) && (mysql_num_rows($result2) > 0) )
                    // {
                    //     $j=0;
                    //     while($row2 = mysql_fetch_array($result2))
                    //     {
                    //         if($row2['selected_sleep_id'] != '0')
                    //         {
                    //             $sleep_return = true;
                    //             $arr_sleep_records[$arr_sleep_date[$i]]['sleep_time'][$j] = getUserSleepTime($user_id,$row2['sleep_date']);
                    //             $arr_sleep_records[$arr_sleep_date[$i]]['wakeup_time'][$j] = getUserWakeUpTime($user_id,$row2['sleep_date']);
                    //             $arr_sleep_records[$arr_sleep_date[$i]]['selected_sleep_id'][$j] = $row2['selected_sleep_id'];
                    //             $arr_sleep_records[$arr_sleep_date[$i]]['scale'][$j] = $row2['scale'];
                    //             $arr_sleep_records[$arr_sleep_date[$i]]['scale_image'][$j] = getScaleImage($row2['scale']);
                    //             $arr_sleep_records[$arr_sleep_date[$i]]['responce'][$j] = stripslashes($row2['remarks']);
                    //             $arr_sleep_records[$arr_sleep_date[$i]]['my_target'][$j] = stripslashes($row2['my_target']);
                    //             $arr_sleep_records[$arr_sleep_date[$i]]['adviser_target'][$j] = stripslashes($row2['adviser_target']);
                    //             $arr_sleep_records[$arr_sleep_date[$i]]['data_source'][$j] = stripslashes($row2['data_source']);
                    //             $j++;
                    //         }
                    //     }
                    // }
                    
                }
            }
        }
        if ($report_module == '' || $report_module == 'mc_report' || $report_module == '18') {
            if ($report_module == 'mc_report') {
                if ($module_keyword != '') {
                    $sql_str_report_module = " AND `selected_mc_id` = '" . $module_keyword . "' ";
                    $sql_str_report_module2 = " AND tumc.selected_mc_id = '" . $module_keyword . "' ";
                    $sql_str_report_module3 = " AND `bms_id` = '" . $module_keyword . "' ";
                } else {
                    $sql_str_report_module = '';
                    $sql_str_report_module2 = '';
                    $sql_str_report_module3 = '';
                }
            } else {
                $sql_str_report_module = '';
                $sql_str_report_module2 = '';
                $sql_str_report_module3 = '';
            }
            if ($module_criteria == '1') {
                $sql_str_report_module_criteria3 = '';
                if ($criteria_scale_range == '1') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumc.my_target AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '2') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumc.my_target AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '3') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumc.my_target AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '4') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumc.my_target AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumc.my_target AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(`my_target` AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                    $sql_str_report_module_criteria2 = " AND CAST(tumc.my_target AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(tumc.my_target AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                } else {
                    $sql_str_report_module_criteria = "";
                    $sql_str_report_module_criteria2 = "";
                }
            } elseif ($module_criteria == '2') {
                $sql_str_report_module_criteria3 = '';
                if ($criteria_scale_range == '1') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumc.adviser_target AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '2') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumc.adviser_target AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '3') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumc.adviser_target AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '4') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumc.adviser_target AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumc.adviser_target AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(`adviser_target` AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                    $sql_str_report_module_criteria2 = " AND CAST(tumc.adviser_target AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(tumc.adviser_target AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                } else {
                    $sql_str_report_module_criteria = "";
                    $sql_str_report_module_criteria2 = "";
                }
            } elseif ($module_criteria == '7') {
                if ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND DAYOFWEEK(mc_date) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND DAYOFWEEK(tumc.mc_date) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria3 = " AND DAYOFWEEK(mdt_date) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND DAYOFWEEK(mc_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(mc_date) <= '" . $end_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND DAYOFWEEK(tumc.mc_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(tumc.mc_date) <= '" . $end_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria3 = " AND DAYOFWEEK(mdt_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(mdt_date) <= '" . $end_criteria_scale_value . "' ";
                } else {
                    $sql_str_report_module_criteria = "";
                    $sql_str_report_module_criteria2 = "";
                    $sql_str_report_module_criteria3 = "";
                }
            } else {
                $sql_str_report_module_criteria = "";
                $sql_str_report_module_criteria2 = "";
                $sql_str_report_module_criteria3 = "";
            }
            if ($permission_type == '1') {
                /*
                
                
                
                $sql = "SELECT DISTINCT tumc.mc_date FROM `tblusersmc` AS tumc "
                
                
                
                        . "LEFT JOIN `tblmycommunications` AS tmc ON tumc.selected_mc_id = tmc.mc_id "
                
                
                
                        . "WHERE tumc.user_id = '".$user_id."' AND "
                
                
                
                        . "tumc.mc_date >= '".$start_date."' AND "
                
                
                
                        . "tumc.mc_date <= '".$end_date."' AND "
                
                
                
                        . "tumc.mc_old_data = '0'  AND "
                
                
                
                        . "tmc.practitioner_id = '".$pro_user_id."'  ".$sql_str_scale." ".$sql_str_report_module2." ".$sql_str_report_module_criteria2." ORDER BY tumc.mc_date ASC ";
                
                
                
                 * 
                
                
                
                */
                $sql = "SELECT DISTINCT tumc.mc_date AS mc_date FROM `tblusersmc` AS tumc " . "LEFT JOIN `tblmycommunications` AS tmc ON tumc.selected_mc_id = tmc.mc_id " . "WHERE tumc.user_id = '" . $user_id . "' AND " . "tumc.mc_date >= '" . $start_date . "' AND " . "tumc.mc_date <= '" . $end_date . "' AND " . "tumc.mc_old_data = '0' AND " . "tmc.practitioner_id = '" . $pro_user_id . "'  " . $sql_str_scale . " " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . "  ";
                $sql.= " UNION SELECT DISTINCT tumdt.mdt_date AS mc_date FROM `tblusersmdt` AS tumdt " . "LEFT JOIN `tblmycommunications` AS tmc ON tumdt.bms_id = tmc.mc_id " . "WHERE tumdt.user_id = '" . $user_id . "' AND " . "tumdt.bms_entry_type = 'trigger' AND " . "tumdt.bms_type = 'mc' AND " . "tumdt.mdt_date >= '" . $start_date . "' AND " . "tumdt.mdt_date <= '" . $end_date . "' AND " . "tumdt.mdt_old_data = '0' AND " . "tmc.practitioner_id = '" . $pro_user_id . "'  " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY mc_date DESC ";
            } elseif ($permission_type == '0') {
                /*
                
                
                
                $sql = "SELECT DISTINCT tumc.mc_date FROM `tblusersmc` AS tumc "
                
                
                
                        . "LEFT JOIN `tblmycommunications` AS tmc ON tumc.selected_mc_id = tmc.mc_id "
                
                
                
                        . "WHERE tumc.user_id = '".$user_id."' AND "
                
                
                
                        . "tumc.mc_date >= '".$start_date."' AND "
                
                
                
                        . "tumc.mc_date <= '".$end_date."' AND "
                
                
                
                        . "tumc.mc_old_data = '0'  AND "
                
                
                
                        . "tmc.practitioner_id = '0'  ".$sql_str_scale." ".$sql_str_report_module2." ".$sql_str_report_module_criteria2." ORDER BY tumc.mc_date ASC ";
                
                
                
                 * 
                
                
                
                */
                $sql = "SELECT DISTINCT tumc.mc_date AS mc_date FROM `tblusersmc` AS tumc " . "LEFT JOIN `tblmycommunications` AS tmc ON tumc.selected_mc_id = tmc.mc_id " . "WHERE tumc.user_id = '" . $user_id . "' AND " . "tumc.mc_date >= '" . $start_date . "' AND " . "tumc.mc_date <= '" . $end_date . "' AND " . "tumc.mc_old_data = '0' AND " . "tmc.practitioner_id = '0'  " . $sql_str_scale . " " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . "  ";
                $sql.= " UNION SELECT DISTINCT tumdt.mdt_date AS mc_date FROM `tblusersmdt` AS tumdt " . "LEFT JOIN `tblmycommunications` AS tmc ON tumdt.bms_id = tmc.mc_id " . "WHERE tumdt.user_id = '" . $user_id . "' AND " . "tumdt.bms_entry_type = 'trigger' AND " . "tumdt.bms_type = 'mc' AND " . "tumdt.mdt_date >= '" . $start_date . "' AND " . "tumdt.mdt_date <= '" . $end_date . "' AND " . "tumdt.mdt_old_data = '0' AND " . "tmc.practitioner_id = '0'  " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY mc_date DESC ";
            } else {
                $sql = "SELECT DISTINCT `mc_date` FROM `tblusersmc` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`mc_date` >= '" . $start_date . "' AND " . "`mc_date` <= '" . $end_date . "' AND " . "`mc_old_data` = '0'  " . $sql_str_scale . " " . $sql_str_report_module . " " . $sql_str_report_module_criteria . "  ";
                $sql.= " UNION SELECT DISTINCT mdt_date AS mc_date FROM `tblusersmdt` " . "WHERE `user_id` = '" . $user_id . "' AND " . "`bms_entry_type` = 'trigger' AND " . "`bms_type` = 'mc' AND " . "`mdt_date` >= '" . $start_date . "' AND " . "`mdt_date` <= '" . $end_date . "' AND " . "`mdt_old_data` = '0' " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY mc_date DESC ";
            }
            //echo "<br>Testkk sql = ".$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    array_push($arr_mc_date, $row['mc_date']);
                }
            }
            // $result = mysql_query($sql,$link);
            // if( ($result) && (mysql_num_rows($result) > 0) )
            // {
            //     while($row = mysql_fetch_array($result))
            //     {
            //         array_push($arr_mc_date , $row['mc_date']);
            //     }
            // }
            if (count($arr_mc_date) > 0) {
                for ($i = 0;$i < count($arr_mc_date);$i++) {
                    if ($permission_type == '1') {
                        /*
                        
                        
                        
                        $sql2 = "SELECT tumc.* FROM `tblusersmc` AS tumc "
                        
                        
                        
                                . "LEFT JOIN `tblmycommunications` AS tmc ON tumc.selected_mc_id = tmc.mc_id "
                        
                        
                        
                                . "WHERE tumc.user_id = '".$user_id."' AND "
                        
                        
                        
                                . "tumc.mc_date = '".$arr_mc_date[$i]."' AND "
                        
                        
                        
                                . "tumc.mc_old_data = '0'  AND "
                        
                        
                        
                                . "tmc.practitioner_id = '".$pro_user_id."' ".$sql_str_scale." ".$sql_str_report_module2." ".$sql_str_report_module_criteria2." ORDER BY tumc.user_mc_id ASC ";
                        
                        
                        
                         * 
                        
                        
                        
                        */
                        $sql2 = "SELECT tumc.user_mc_id AS user_mc_id , tumc.mc_date AS mc_date , tumc.selected_mc_id AS selected_mc_id , " . "tumc.scale AS scale , tumc.remarks AS remarks , tumc.my_target AS my_target , tumc.adviser_target AS adviser_target , 'emo' AS 'data_source'  FROM `tblusersmc` AS tumc " . "LEFT JOIN `tblmycommunications` AS tmc ON tumc.selected_mc_id = tmc.mc_id " . "WHERE tumc.user_id = '" . $user_id . "' AND " . "tumc.mc_date = '" . $arr_mc_date[$i] . "' AND " . "tumc.mc_old_data = '0' AND " . "tmc.practitioner_id = '" . $pro_user_id . "'  " . $sql_str_scale . " " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . "  ";
                        $sql2.= " UNION SELECT tumdt.user_mdt_id AS user_mc_id ,  tumdt.mdt_date AS mc_date , tumdt.bms_id AS selected_mc_id , " . "tumdt.scale AS scale , tumdt.remarks AS remarks , tumdt.my_target AS my_target , tumdt.adviser_target AS adviser_target , 'mdt' AS 'data_source' FROM `tblusersmdt` AS tumdt " . "LEFT JOIN `tblmycommunications` AS tmc ON tumdt.bms_id = tmc.mc_id " . "WHERE tumdt.user_id = '" . $user_id . "' AND " . "tumdt.bms_entry_type = 'trigger' AND " . "tumdt.bms_type = 'mc' AND " . "tumdt.mdt_date = '" . $arr_mc_date[$i] . "' AND " . "tumdt.mdt_old_data = '0' AND " . "tmc.practitioner_id = '" . $pro_user_id . "'  " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY user_mc_id ASC ";
                    } elseif ($permission_type == '0') {
                        /*
                        
                        
                        
                        $sql2 = "SELECT tumc.* FROM `tblusersmc` AS tumc "
                        
                        
                        
                                . "LEFT JOIN `tblmycommunications` AS tmc ON tumc.selected_mc_id = tmc.mc_id "
                        
                        
                        
                                . "WHERE tumc.user_id = '".$user_id."' AND "
                        
                        
                        
                                . "tumc.mc_date = '".$arr_mc_date[$i]."' AND "
                        
                        
                        
                                . "tumc.mc_old_data = '0'  AND "
                        
                        
                        
                                . "tmc.practitioner_id = '0' ".$sql_str_scale." ".$sql_str_report_module2." ".$sql_str_report_module_criteria2." ORDER BY tumc.user_mc_id ASC ";
                        
                        
                        
                         * 
                        
                        
                        
                        */
                        $sql2 = "SELECT tumc.user_mc_id AS user_mc_id , tumc.mc_date AS mc_date , tumc.selected_mc_id AS selected_mc_id , " . "tumc.scale AS scale , tumc.remarks AS remarks , tumc.my_target AS my_target , tumc.adviser_target AS adviser_target , 'emo' AS 'data_source'  FROM `tblusersmc` AS tumc " . "LEFT JOIN `tblmycommunications` AS tmc ON tumc.selected_mc_id = tmc.mc_id " . "WHERE tumc.user_id = '" . $user_id . "' AND " . "tumc.mc_date = '" . $arr_mc_date[$i] . "' AND " . "tumc.mc_old_data = '0' AND " . "tmc.practitioner_id = '0'  " . $sql_str_scale . " " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . "  ";
                        $sql2.= " UNION SELECT tumdt.user_mdt_id AS user_mc_id ,  tumdt.mdt_date AS mc_date , tumdt.bms_id AS selected_mc_id , " . "tumdt.scale AS scale , tumdt.remarks AS remarks , tumdt.my_target AS my_target , tumdt.adviser_target AS adviser_target , 'mdt' AS 'data_source' FROM `tblusersmdt` AS tumdt " . "LEFT JOIN `tblmycommunications` AS tmc ON tumdt.bms_id = tmc.mc_id " . "WHERE tumdt.user_id = '" . $user_id . "' AND " . "tumdt.bms_entry_type = 'trigger' AND " . "tumdt.bms_type = 'mc' AND " . "tumdt.mdt_date = '" . $arr_mc_date[$i] . "' AND " . "tumdt.mdt_old_data = '0' AND " . "tmc.practitioner_id = '0'  " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY user_mc_id ASC ";
                    } else {
                        /*
                        
                        
                        
                        $sql2 = "SELECT * FROM `tblusersmc` WHERE "
                        
                        
                        
                                . "`user_id` = '".$user_id."' AND "
                        
                        
                        
                                . "`mc_date` = '".$arr_mc_date[$i]."' AND "
                        
                        
                        
                                . "`mc_old_data` = '0'  ".$sql_str_scale." ".$sql_str_report_module." ".$sql_str_report_module_criteria."  ORDER BY `user_mc_id` ASC ";
                        
                        
                        
                         * 
                        
                        
                        
                        */
                        $sql2 = "SELECT user_mc_id,mc_date,selected_mc_id,scale,remarks,my_target,adviser_target , 'emo' AS 'data_source' FROM `tblusersmc` " . "WHERE `user_id` = '" . $user_id . "' AND " . "mc_date = '" . $arr_mc_date[$i] . "' AND " . "mc_old_data = '0' " . $sql_str_scale . " " . $sql_str_report_module . " " . $sql_str_report_module_criteria . "  ";
                        $sql2.= " UNION SELECT user_mdt_id AS user_mc_id , mdt_date AS mc_date , bms_id AS selected_mc_id , " . "scale AS scale , remarks AS remarks , my_target AS my_target , adviser_target AS adviser_target , 'mdt' AS 'data_source' FROM `tblusersmdt` " . "WHERE `user_id` = '" . $user_id . "' AND " . "`bms_entry_type` = 'trigger' AND " . "`bms_type` = 'mc' AND " . "`mdt_date` = '" . $arr_mc_date[$i] . "' AND " . "`mdt_old_data` = '0' " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY user_mc_id ASC ";
                    }
                    //echo "<br>".$sql2;
                    $STH = $DBH->query($sql2);
                    if ($STH->rowCount() > 0) {
                        while ($row2 = $STH->fetch(PDO::FETCH_ASSOC)) {
                            $j = 0;
                            if ($row2['selected_mc_id'] != '0') {
                                $mc_return = true;
                                $arr_mc_records[$arr_mc_date[$i]]['selected_mc_id'][$j] = $row2['selected_mc_id'];
                                $arr_mc_records[$arr_mc_date[$i]]['scale'][$j] = $row2['scale'];
                                $arr_mc_records[$arr_mc_date[$i]]['scale_image'][$j] = $obj->getScaleImage($row2['scale']);
                                $arr_mc_records[$arr_mc_date[$i]]['responce'][$j] = stripslashes($row2['remarks']);
                                $arr_mc_records[$arr_mc_date[$i]]['my_target'][$j] = stripslashes($row2['my_target']);
                                $arr_mc_records[$arr_mc_date[$i]]['adviser_target'][$j] = stripslashes($row2['adviser_target']);
                                $arr_mc_records[$arr_mc_date[$i]]['data_source'][$j] = stripslashes($row2['data_source']);
                                $j++;
                            }
                        }
                    }
                    // $result2 = mysql_query($sql2,$link);
                    // if( ($result2) && (mysql_num_rows($result2) > 0) )
                    // {
                    //     $j=0;
                    //     while($row2 = mysql_fetch_array($result2))
                    //     {
                    //         if($row2['selected_mc_id'] != '0')
                    //         {
                    //             $mc_return = true;
                    //             $arr_mc_records[$arr_mc_date[$i]]['selected_mc_id'][$j] = $row2['selected_mc_id'];
                    //             $arr_mc_records[$arr_mc_date[$i]]['scale'][$j] = $row2['scale'];
                    //             $arr_mc_records[$arr_mc_date[$i]]['scale_image'][$j] = getScaleImage($row2['scale']);
                    //             $arr_mc_records[$arr_mc_date[$i]]['responce'][$j] = stripslashes($row2['remarks']);
                    //             $arr_mc_records[$arr_mc_date[$i]]['my_target'][$j] = stripslashes($row2['my_target']);
                    //             $arr_mc_records[$arr_mc_date[$i]]['adviser_target'][$j] = stripslashes($row2['adviser_target']);
                    //             $arr_mc_records[$arr_mc_date[$i]]['data_source'][$j] = stripslashes($row2['data_source']);
                    //             $j++;
                    //         }
                    //     }
                    // }
                    
                }
            }
        }
        if ($report_module == '' || $report_module == 'mr_report' || $report_module == '19') {
            if ($report_module == 'mr_report') {
                if ($module_keyword != '') {
                    $sql_str_report_module = " AND `selected_mr_id` = '" . $module_keyword . "' ";
                    $sql_str_report_module2 = " AND tumr.selected_mr_id = '" . $module_keyword . "' ";
                    $sql_str_report_module3 = " AND `bms_id` = '" . $module_keyword . "' ";
                } else {
                    $sql_str_report_module = '';
                    $sql_str_report_module2 = '';
                    $sql_str_report_module3 = '';
                }
            } else {
                $sql_str_report_module = '';
                $sql_str_report_module2 = '';
                $sql_str_report_module3 = '';
            }
            if ($module_criteria == '1') {
                $sql_str_report_module_criteria3 = '';
                if ($criteria_scale_range == '1') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumr.my_target AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '2') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumr.my_target AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '3') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumr.my_target AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '4') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumr.my_target AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumr.my_target AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(`my_target` AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                    $sql_str_report_module_criteria2 = " AND CAST(tumr.my_target AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(tumr.my_target AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                } else {
                    $sql_str_report_module_criteria = "";
                    $sql_str_report_module_criteria2 = "";
                }
            } elseif ($module_criteria == '2') {
                $sql_str_report_module_criteria3 = '';
                if ($criteria_scale_range == '1') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumr.adviser_target AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '2') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumr.adviser_target AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '3') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumr.adviser_target AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '4') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumr.adviser_target AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumr.adviser_target AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(`adviser_target` AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                    $sql_str_report_module_criteria2 = " AND CAST(tumr.adviser_target AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(tumr.adviser_target AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                } else {
                    $sql_str_report_module_criteria = "";
                    $sql_str_report_module_criteria2 = "";
                }
            } elseif ($module_criteria == '7') {
                if ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND DAYOFWEEK(mr_date) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND DAYOFWEEK(tumr.mr_date) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria3 = " AND DAYOFWEEK(mdt_date) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND DAYOFWEEK(mr_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(mr_date) <= '" . $end_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND DAYOFWEEK(tumr.mr_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(tumr.mr_date) <= '" . $end_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria3 = " AND DAYOFWEEK(mdt_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(mdt_date) <= '" . $end_criteria_scale_value . "' ";
                } else {
                    $sql_str_report_module_criteria = "";
                    $sql_str_report_module_criteria2 = "";
                    $sql_str_report_module_criteria3 = "";
                }
            } else {
                $sql_str_report_module_criteria = "";
                $sql_str_report_module_criteria2 = "";
                $sql_str_report_module_criteria3 = "";
            }
            if ($permission_type == '1') {
                $sql = "SELECT DISTINCT tumr.mr_date AS mr_date FROM `tblusersmr` AS tumr " . "LEFT JOIN `tblmyrelations` AS tmr ON tumr.selected_mr_id = tmr.mr_id " . "WHERE tumr.user_id = '" . $user_id . "' AND " . "tumr.mr_date >= '" . $start_date . "' AND " . "tumr.mr_date <= '" . $end_date . "' AND " . "tumr.mr_old_data = '0'  AND " . "tmr.practitioner_id = '" . $pro_user_id . "'  " . $sql_str_scale . " " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . "  ";
                $sql.= " UNION SELECT DISTINCT tumdt.mdt_date AS mr_date FROM `tblusersmdt` AS tumdt " . "LEFT JOIN `tblmyrelations` AS tmr ON tumdt.bms_id = tmr.mr_id " . "WHERE tumdt.user_id = '" . $user_id . "' AND " . "tumdt.bms_entry_type = 'trigger' AND " . "tumdt.bms_type = 'mr' AND " . "tumdt.mdt_date >= '" . $start_date . "' AND " . "tumdt.mdt_date <= '" . $end_date . "' AND " . "tumdt.mdt_old_data = '0' AND " . "tmr.practitioner_id = '" . $pro_user_id . "'  " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY mr_date DESC ";
            } elseif ($permission_type == '0') {
                $sql = "SELECT DISTINCT tumr.mr_date AS mr_date FROM `tblusersmr` AS tumr " . "LEFT JOIN `tblmyrelations` AS tmr ON tumr.selected_mr_id = tmr.mr_id " . "WHERE tumr.user_id = '" . $user_id . "' AND " . "tumr.mr_date >= '" . $start_date . "' AND " . "tumr.mr_date <= '" . $end_date . "' AND " . "tumr.mr_old_data = '0'  AND " . "tmr.practitioner_id = '0'  " . $sql_str_scale . " " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . "  ";
                $sql.= " UNION SELECT DISTINCT tumdt.mdt_date AS mr_date FROM `tblusersmdt` AS tumdt " . "LEFT JOIN `tblmyrelations` AS tmr ON tumdt.bms_id = tmr.mr_id " . "WHERE tumdt.user_id = '" . $user_id . "' AND " . "tumdt.bms_entry_type = 'trigger' AND " . "tumdt.bms_type = 'mr' AND " . "tumdt.mdt_date >= '" . $start_date . "' AND " . "tumdt.mdt_date <= '" . $end_date . "' AND " . "tumdt.mdt_old_data = '0' AND " . "tmr.practitioner_id = '0'  " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY mr_date DESC ";
            } else {
                $sql = "SELECT DISTINCT `mr_date` FROM `tblusersmr` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`mr_date` >= '" . $start_date . "' AND " . "`mr_date` <= '" . $end_date . "' AND " . "`mr_old_data` = '0'  " . $sql_str_scale . " " . $sql_str_report_module . " " . $sql_str_report_module_criteria . " ";
                $sql.= " UNION SELECT DISTINCT mdt_date AS mr_date FROM `tblusersmdt` " . "WHERE `user_id` = '" . $user_id . "' AND " . "`bms_entry_type` = 'trigger' AND " . "`bms_type` = 'mr' AND " . "`mdt_date` >= '" . $start_date . "' AND " . "`mdt_date` <= '" . $end_date . "' AND " . "`mdt_old_data` = '0' " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY mr_date DESC ";
            }
            //echo "<br>Testkk sql = ".$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    array_push($arr_mr_date, $row['mr_date']);
                }
            }
            // $result = mysql_query($sql,$link);
            // if( ($result) && (mysql_num_rows($result) > 0) )
            // {
            //     while($row = mysql_fetch_array($result))
            //     {
            //         array_push($arr_mr_date , $row['mr_date']);
            //     }
            // }
            if (count($arr_mr_date) > 0) {
                for ($i = 0;$i < count($arr_mr_date);$i++) {
                    if ($permission_type == '1') {
                        /*
                        
                        
                        
                        $sql2 = "SELECT tumr.* FROM `tblusersmr` AS tumr "
                        
                        
                        
                                . "LEFT JOIN `tblmyrelations` AS tmr ON tumr.selected_mr_id = tmr.mr_id "
                        
                        
                        
                                . "WHERE tumr.user_id = '".$user_id."' AND "
                        
                        
                        
                                . "tumr.mr_date = '".$arr_mr_date[$i]."' AND "
                        
                        
                        
                                . "tumr.mr_old_data = '0'  AND "
                        
                        
                        
                                . "tmr.practitioner_id = '".$pro_user_id."'  ".$sql_str_scale." ".$sql_str_report_module2." ".$sql_str_report_module_criteria2." ORDER BY tumr.user_mr_id ASC ";
                        
                        
                        
                         * 
                        
                        
                        
                        */
                        $sql2 = "SELECT tumr.user_mr_id AS user_mr_id , tumr.mr_date AS mr_date , tumr.selected_mr_id AS selected_mr_id , " . "tumr.scale AS scale , tumr.remarks AS remarks , tumr.my_target AS my_target , tumr.adviser_target AS adviser_target , 'emo' AS 'data_source'  FROM `tblusersmr` AS tumr " . "LEFT JOIN `tblmyrelations` AS tmr ON tumr.selected_mr_id = tmr.mr_id " . "WHERE tumr.user_id = '" . $user_id . "' AND " . "tumr.mr_date = '" . $arr_mr_date[$i] . "' AND " . "tumr.mr_old_data = '0' AND " . "tmr.practitioner_id = '" . $pro_user_id . "'  " . $sql_str_scale . " " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . "  ";
                        $sql2.= " UNION SELECT tumdt.user_mdt_id AS user_mr_id ,  tumdt.mdt_date AS mr_date , tumdt.bms_id AS selected_mr_id , " . "tumdt.scale AS scale , tumdt.remarks AS remarks , tumdt.my_target AS my_target , tumdt.adviser_target AS adviser_target , 'mdt' AS 'data_source' FROM `tblusersmdt` AS tumdt " . "LEFT JOIN `tblmyrelations` AS tmr ON tumdt.bms_id = tmr.mr_id " . "WHERE tumdt.user_id = '" . $user_id . "' AND " . "tumdt.bms_entry_type = 'trigger' AND " . "tumdt.bms_type = 'mr' AND " . "tumdt.mdt_date = '" . $arr_mr_date[$i] . "' AND " . "tumdt.mdt_old_data = '0' AND " . "tmr.practitioner_id = '" . $pro_user_id . "'  " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY user_mr_id ASC ";
                    } elseif ($permission_type == '0') {
                        /*
                        
                        
                        
                        $sql2 = "SELECT tumr.* FROM `tblusersmr` AS tumr "
                        
                        
                        
                                . "LEFT JOIN `tblmyrelations` AS tmr ON tumr.selected_mr_id = tmr.mr_id "
                        
                        
                        
                                . "WHERE tumr.user_id = '".$user_id."' AND "
                        
                        
                        
                                . "tumr.mr_date = '".$arr_mr_date[$i]."' AND "
                        
                        
                        
                                . "tumr.mr_old_data = '0'  AND "
                        
                        
                        
                                . "tmr.practitioner_id = '0'  ".$sql_str_scale." ".$sql_str_report_module2." ".$sql_str_report_module_criteria2." ORDER BY tumr.user_mr_id ASC ";
                        
                        
                        
                         * 
                        
                        
                        
                         * 
                        
                        
                        
                        */
                        $sql2 = "SELECT tumr.user_mr_id AS user_mr_id , tumr.mr_date AS mr_date , tumr.selected_mr_id AS selected_mr_id , " . "tumr.scale AS scale , tumr.remarks AS remarks , tumr.my_target AS my_target , tumr.adviser_target AS adviser_target , 'emo' AS 'data_source'  FROM `tblusersmr` AS tumr " . "LEFT JOIN `tblmyrelations` AS tmr ON tumr.selected_mr_id = tmr.mr_id " . "WHERE tumr.user_id = '" . $user_id . "' AND " . "tumr.mr_date = '" . $arr_mr_date[$i] . "' AND " . "tumr.mr_old_data = '0' AND " . "tmr.practitioner_id = '0'  " . $sql_str_scale . " " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . "  ";
                        $sql2.= " UNION SELECT tumdt.user_mdt_id AS user_mr_id ,  tumdt.mdt_date AS mr_date , tumdt.bms_id AS selected_mr_id , " . "tumdt.scale AS scale , tumdt.remarks AS remarks , tumdt.my_target AS my_target , tumdt.adviser_target AS adviser_target , 'mdt' AS 'data_source' FROM `tblusersmdt` AS tumdt " . "LEFT JOIN `tblmyrelations` AS tmr ON tumdt.bms_id = tmr.mr_id " . "WHERE tumdt.user_id = '" . $user_id . "' AND " . "tumdt.bms_entry_type = 'trigger' AND " . "tumdt.bms_type = 'mr' AND " . "tumdt.mdt_date = '" . $arr_mr_date[$i] . "' AND " . "tumdt.mdt_old_data = '0' AND " . "tmr.practitioner_id = '0'  " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY user_mr_id ASC ";
                    } else {
                        /*
                        
                        
                        
                        $sql2 = "SELECT * FROM `tblusersmr` WHERE "
                        
                        
                        
                                . "`user_id` = '".$user_id."' AND "
                        
                        
                        
                                . "`mr_date` = '".$arr_mr_date[$i]."' AND "
                        
                        
                        
                                . "`mr_old_data` = '0'  ".$sql_str_scale." ".$sql_str_report_module." ".$sql_str_report_module_criteria." ORDER BY `user_mr_id` ASC ";
                        
                        
                        
                         * 
                        
                        
                        
                        */
                        $sql2 = "SELECT user_mr_id,mr_date,selected_mr_id,scale,remarks,my_target,adviser_target , 'emo' AS 'data_source' FROM `tblusersmr` " . "WHERE `user_id` = '" . $user_id . "' AND " . "mr_date = '" . $arr_mr_date[$i] . "' AND " . "mr_old_data = '0' " . $sql_str_scale . " " . $sql_str_report_module . " " . $sql_str_report_module_criteria . "  ";
                        $sql2.= " UNION SELECT user_mdt_id AS user_mr_id , mdt_date AS mr_date , bms_id AS selected_mr_id , " . "scale AS scale , remarks AS remarks , my_target AS my_target , adviser_target AS adviser_target , 'mdt' AS 'data_source' FROM `tblusersmdt` " . "WHERE `user_id` = '" . $user_id . "' AND " . "`bms_entry_type` = 'trigger' AND " . "`bms_type` = 'mr' AND " . "`mdt_date` = '" . $arr_mr_date[$i] . "' AND " . "`mdt_old_data` = '0' " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY user_mr_id ASC ";
                    }
                    //echo "<br>".$sql2;
                    $STH = $DBH->query($sql2);
                    if ($STH->rowCount() > 0) {
                        $j = 0;
                        while ($row2 = $STH->fetch(PDO::FETCH_ASSOC)) {
                            if ($row2['selected_mr_id'] != '0') {
                                $mr_return = true;
                                $arr_mr_records[$arr_mr_date[$i]]['selected_mr_id'][$j] = $row2['selected_mr_id'];
                                $arr_mr_records[$arr_mr_date[$i]]['scale'][$j] = $row2['scale'];
                                $arr_mr_records[$arr_mr_date[$i]]['scale_image'][$j] = $obj->getScaleImage($row2['scale']);
                                $arr_mr_records[$arr_mr_date[$i]]['responce'][$j] = stripslashes($row2['remarks']);
                                $arr_mr_records[$arr_mr_date[$i]]['my_target'][$j] = stripslashes($row2['my_target']);
                                $arr_mr_records[$arr_mr_date[$i]]['adviser_target'][$j] = stripslashes($row2['adviser_target']);
                                $arr_mr_records[$arr_mr_date[$i]]['data_source'][$j] = stripslashes($row2['data_source']);
                                $j++;
                            }
                        }
                    }
                    // $result2 = mysql_query($sql2,$link);
                    // if( ($result2) && (mysql_num_rows($result2) > 0) )
                    // {
                    //     $j=0;
                    //     while($row2 = mysql_fetch_array($result2))
                    //     {
                    //         if($row2['selected_mr_id'] != '0')
                    //         {
                    //             $mr_return = true;
                    //             $arr_mr_records[$arr_mr_date[$i]]['selected_mr_id'][$j] = $row2['selected_mr_id'];
                    //             $arr_mr_records[$arr_mr_date[$i]]['scale'][$j] = $row2['scale'];
                    //             $arr_mr_records[$arr_mr_date[$i]]['scale_image'][$j] = getScaleImage($row2['scale']);
                    //             $arr_mr_records[$arr_mr_date[$i]]['responce'][$j] = stripslashes($row2['remarks']);
                    //             $arr_mr_records[$arr_mr_date[$i]]['my_target'][$j] = stripslashes($row2['my_target']);
                    //             $arr_mr_records[$arr_mr_date[$i]]['adviser_target'][$j] = stripslashes($row2['adviser_target']);
                    //             $arr_mr_records[$arr_mr_date[$i]]['data_source'][$j] = stripslashes($row2['data_source']);
                    //             $j++;
                    //         }
                    //     }
                    // }
                    
                }
            }
        }
        if ($report_module == '' || $report_module == 'mle_report' || $report_module == '20') {
            if ($report_module == 'mle_report') {
                if ($module_keyword != '') {
                    $sql_str_report_module = " AND `selected_mle_id` = '" . $module_keyword . "' ";
                    $sql_str_report_module2 = " AND tumle.selected_mle_id = '" . $module_keyword . "' ";
                    $sql_str_report_module3 = " AND `bms_id` = '" . $module_keyword . "' ";
                } else {
                    $sql_str_report_module = '';
                    $sql_str_report_module2 = '';
                    $sql_str_report_module3 = '';
                }
            } else {
                $sql_str_report_module = '';
                $sql_str_report_module2 = '';
                $sql_str_report_module3 = '';
            }
            if ($module_criteria == '1') {
                $sql_str_report_module_criteria3 = '';
                if ($criteria_scale_range == '1') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumle.my_target AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '2') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumle.my_target AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '3') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumle.my_target AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '4') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumle.my_target AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumle.my_target AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(`my_target` AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                    $sql_str_report_module_criteria2 = " AND CAST(tumle.my_target AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(tumle.my_target AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                } else {
                    $sql_str_report_module_criteria = "";
                    $sql_str_report_module_criteria2 = "";
                }
            } elseif ($module_criteria == '2') {
                $sql_str_report_module_criteria3 = '';
                if ($criteria_scale_range == '1') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumle.adviser_target AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '2') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumle.adviser_target AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '3') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumle.adviser_target AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '4') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumle.adviser_target AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tumle.adviser_target AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(`adviser_target` AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                    $sql_str_report_module_criteria2 = " AND CAST(tumle.adviser_target AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(tumle.adviser_target AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                } else {
                    $sql_str_report_module_criteria = "";
                    $sql_str_report_module_criteria2 = "";
                }
            } elseif ($module_criteria == '7') {
                if ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND DAYOFWEEK(mle_date) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND DAYOFWEEK(tumle.mle_date) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria3 = " AND DAYOFWEEK(mdt_date) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND DAYOFWEEK(mle_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(mle_date) <= '" . $end_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND DAYOFWEEK(tumle.mle_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(tumle.mle_date) <= '" . $end_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria3 = " AND DAYOFWEEK(mdt_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(mdt_date) <= '" . $end_criteria_scale_value . "' ";
                } else {
                    $sql_str_report_module_criteria = "";
                    $sql_str_report_module_criteria2 = "";
                    $sql_str_report_module_criteria3 = "";
                }
            } else {
                $sql_str_report_module_criteria = "";
                $sql_str_report_module_criteria2 = "";
                $sql_str_report_module_criteria3 = "";
            }
            if ($permission_type == '1') {
                $sql = "SELECT DISTINCT tumle.mle_date AS mle_date FROM `tblusersmle` AS tumle " . "LEFT JOIN `tblmajorlifeevents` AS tmle ON tumle.selected_mle_id = tmle.mle_id " . "WHERE tumle.user_id = '" . $user_id . "' AND " . "tumle.mle_date >= '" . $start_date . "' AND " . "tumle.mle_date <= '" . $end_date . "' AND " . "tumle.mle_old_data = '0'  AND " . "tmle.practitioner_id = '" . $pro_user_id . "'  " . $sql_str_scale . " " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . " ";
                $sql.= " UNION SELECT DISTINCT tumdt.mdt_date AS mle_date FROM `tblusersmdt` AS tumdt " . "LEFT JOIN `tblmajorlifeevents` AS tmle ON tumdt.bms_id = tmle.sleep_id " . "WHERE tumdt.user_id = '" . $user_id . "' AND " . "tumdt.bms_entry_type = 'trigger' AND " . "tumdt.bms_type = 'mle' AND " . "tumdt.mdt_date >= '" . $start_date . "' AND " . "tumdt.mdt_date <= '" . $end_date . "' AND " . "tumdt.mdt_old_data = '0' AND " . "tmle.practitioner_id = '" . $pro_user_id . "'  " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY mle_date DESC ";
            } elseif ($permission_type == '0') {
                $sql = "SELECT DISTINCT tumle.mle_date AS mle_date FROM `tblusersmle` AS tumle " . "LEFT JOIN `tblmajorlifeevents` AS tmle ON tumle.selected_mle_id = tmle.mle_id " . "WHERE tumle.user_id = '" . $user_id . "' AND " . "tumle.mle_date >= '" . $start_date . "' AND " . "tumle.mle_date <= '" . $end_date . "' AND " . "tumle.mle_old_data = '0'  AND " . "tmle.practitioner_id = '0'  " . $sql_str_scale . " " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . " ";
                $sql.= " UNION SELECT DISTINCT tumdt.mdt_date AS mle_date FROM `tblusersmdt` AS tumdt " . "LEFT JOIN `tblmajorlifeevents` AS tmle ON tumdt.bms_id = tmle.sleep_id " . "WHERE tumdt.user_id = '" . $user_id . "' AND " . "tumdt.bms_entry_type = 'trigger' AND " . "tumdt.bms_type = 'mle' AND " . "tumdt.mdt_date >= '" . $start_date . "' AND " . "tumdt.mdt_date <= '" . $end_date . "' AND " . "tumdt.mdt_old_data = '0' AND " . "tmle.practitioner_id = '0'  " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY mle_date DESC ";
            } else {
                $sql = "SELECT DISTINCT `mle_date` FROM `tblusersmle` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`mle_date` >= '" . $start_date . "' AND " . "`mle_date` <= '" . $end_date . "' AND " . "`mle_old_data` = '0'  " . $sql_str_scale . " " . $sql_str_report_module . " " . $sql_str_report_module_criteria . " ";
                $sql.= " UNION SELECT DISTINCT mdt_date AS mle_date FROM `tblusersmdt` " . "WHERE `user_id` = '" . $user_id . "' AND " . "`bms_entry_type` = 'trigger' AND " . "`bms_type` = 'mle' AND " . "`mdt_date` >= '" . $start_date . "' AND " . "`mdt_date` <= '" . $end_date . "' AND " . "`mdt_old_data` = '0' " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY mle_date DESC ";
            }
            //echo "<br>Testkk sql = ".$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    array_push($arr_mle_date, $row['mle_date']);
                }
            }
            // $result = mysql_query($sql,$link);
            // if( ($result) && (mysql_num_rows($result) > 0) )
            // {
            //     while($row = mysql_fetch_array($result))
            //     {
            //         array_push($arr_mle_date , $row['mle_date']);
            //     }
            // }
            if (count($arr_mle_date) > 0) {
                for ($i = 0;$i < count($arr_mle_date);$i++) {
                    if ($permission_type == '1') {
                        /*
                        
                        
                        
                        $sql2 = "SELECT tumle.* FROM `tblusersmle` AS tumle "
                        
                        
                        
                                . "LEFT JOIN `tblmajorlifeevents` AS tmle ON tumle.selected_mle_id = tmle.mle_id "
                        
                        
                        
                                . "WHERE tumle.user_id = '".$user_id."' AND "
                        
                        
                        
                                . "tumle.mle_date = '".$arr_mle_date[$i]."' AND "
                        
                        
                        
                                . "tumle.mle_old_data = '0'  AND "
                        
                        
                        
                                . "tmle.practitioner_id = '".$pro_user_id."'  ".$sql_str_scale." ".$sql_str_report_module2." ".$sql_str_report_module_criteria2." ORDER BY tumle.user_mle_id ASC ";
                        
                        
                        
                         * 
                        
                        
                        
                        */
                        $sql2 = "SELECT tumle.user_mle_id AS user_mle_id , tumle.mle_date AS mle_date , tumle.selected_mle_id AS selected_mle_id , " . "tumle.scale AS scale , tumle.remarks AS remarks , tumle.my_target AS my_target , tumle.adviser_target AS adviser_target , 'emo' AS 'data_source'  FROM `tblusersmle` AS tumle " . "LEFT JOIN `tblmajorlifeevents` AS tmle ON tumle.selected_mle_id = tmle.mle_id " . "WHERE tumle.user_id = '" . $user_id . "' AND " . "tumle.mle_date = '" . $arr_mle_date[$i] . "' AND " . "tumle.mle_old_data = '0' AND " . "tmle.practitioner_id = '" . $pro_user_id . "'  " . $sql_str_scale . " " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . "  ";
                        $sql2.= " UNION SELECT tumdt.user_mdt_id AS user_mle_id ,  tumdt.mdt_date AS mle_date , tumdt.bms_id AS selected_mle_id , " . "tumdt.scale AS scale , tumdt.remarks AS remarks , tumdt.my_target AS my_target , tumdt.adviser_target AS adviser_target , 'mdt' AS 'data_source' FROM `tblusersmdt` AS tumdt " . "LEFT JOIN `tblmajorlifeevents` AS tmle ON tumdt.bms_id = tmle.mle_id " . "WHERE tumdt.user_id = '" . $user_id . "' AND " . "tumdt.bms_entry_type = 'trigger' AND " . "tumdt.bms_type = 'mle' AND " . "tumdt.mdt_date = '" . $arr_mle_date[$i] . "' AND " . "tumdt.mdt_old_data = '0' AND " . "tmle.practitioner_id = '" . $pro_user_id . "'  " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY user_mle_id ASC ";
                    } elseif ($permission_type == '0') {
                        /*
                        
                        
                        
                        $sql2 = "SELECT tumle.* FROM `tblusersmle` AS tumle "
                        
                        
                        
                                . "LEFT JOIN `tblmajorlifeevents` AS tmle ON tumle.selected_mle_id = tmle.mle_id "
                        
                        
                        
                                . "WHERE tumle.user_id = '".$user_id."' AND "
                        
                        
                        
                                . "tumle.mle_date = '".$arr_mle_date[$i]."' AND "
                        
                        
                        
                                . "tumle.mle_old_data = '0'  AND "
                        
                        
                        
                                . "tmle.practitioner_id = '0'  ".$sql_str_scale." ".$sql_str_report_module2." ".$sql_str_report_module_criteria2." ORDER BY tumle.user_mle_id ASC ";
                        
                        
                        
                         * 
                        
                        
                        
                        */
                        $sql2 = "SELECT tumle.user_mle_id AS user_mle_id , tumle.mle_date AS mle_date , tumle.selected_mle_id AS selected_mle_id , " . "tumle.scale AS scale , tumle.remarks AS remarks , tumle.my_target AS my_target , tumle.adviser_target AS adviser_target , 'emo' AS 'data_source'  FROM `tblusersmle` AS tumle " . "LEFT JOIN `tblmajorlifeevents` AS tmle ON tumle.selected_mle_id = tmle.mle_id " . "WHERE tumle.user_id = '" . $user_id . "' AND " . "tumle.mle_date = '" . $arr_mle_date[$i] . "' AND " . "tumle.mle_old_data = '0' AND " . "tmle.practitioner_id = '0'  " . $sql_str_scale . " " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . "  ";
                        $sql2.= " UNION SELECT tumdt.user_mdt_id AS user_mle_id ,  tumdt.mdt_date AS mle_date , tumdt.bms_id AS selected_mle_id , " . "tumdt.scale AS scale , tumdt.remarks AS remarks , tumdt.my_target AS my_target , tumdt.adviser_target AS adviser_target , 'mdt' AS 'data_source' FROM `tblusersmdt` AS tumdt " . "LEFT JOIN `tblmajorlifeevents` AS tmle ON tumdt.bms_id = tmle.mle_id " . "WHERE tumdt.user_id = '" . $user_id . "' AND " . "tumdt.bms_entry_type = 'trigger' AND " . "tumdt.bms_type = 'mle' AND " . "tumdt.mdt_date = '" . $arr_mle_date[$i] . "' AND " . "tumdt.mdt_old_data = '0' AND " . "tmle.practitioner_id = '0'  " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY user_mle_id ASC ";
                    } else {
                        /*
                        
                        
                        
                        $sql2 = "SELECT * FROM `tblusersmle` WHERE "
                        
                        
                        
                                . "`user_id` = '".$user_id."' AND "
                        
                        
                        
                                . "`mle_date` = '".$arr_mle_date[$i]."' AND "
                        
                        
                        
                                . "`mle_old_data` = '0'  ".$sql_str_scale." ".$sql_str_report_module." ".$sql_str_report_module_criteria." ORDER BY `user_mle_id` ASC ";
                        
                        
                        
                         * 
                        
                        
                        
                         * 
                        
                        
                        
                        */
                        $sql2 = "SELECT user_mle_id,mle_date,selected_mle_id,scale,remarks,my_target,adviser_target , 'emo' AS 'data_source' FROM `tblusersmle` " . "WHERE `user_id` = '" . $user_id . "' AND " . "mle_date = '" . $arr_mle_date[$i] . "' AND " . "mle_old_data = '0' " . $sql_str_scale . " " . $sql_str_report_module . " " . $sql_str_report_module_criteria . "  ";
                        $sql2.= " UNION SELECT user_mdt_id AS user_mle_id , mdt_date AS mle_date , bms_id AS selected_mle_id , " . "scale AS scale , remarks AS remarks , my_target AS my_target , adviser_target AS adviser_target , 'mdt' AS 'data_source' FROM `tblusersmdt` " . "WHERE `user_id` = '" . $user_id . "' AND " . "`bms_entry_type` = 'trigger' AND " . "`bms_type` = 'mle' AND " . "`mdt_date` = '" . $arr_mle_date[$i] . "' AND " . "`mdt_old_data` = '0' " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY user_mle_id ASC ";
                    }
                    //echo "<br>".$sql2;
                    $STH = $DBH->query($sql2);
                    if ($STH->rowCount() > 0) {
                        $j = 0;
                        while ($row2 = $STH->fetch(PDO::FETCH_ASSOC)) {
                            if ($row2['selected_mle_id'] != '0') {
                                $mle_return = true;
                                $arr_mle_records[$arr_mle_date[$i]]['selected_mle_id'][$j] = $row2['selected_mle_id'];
                                $arr_mle_records[$arr_mle_date[$i]]['scale'][$j] = $row2['scale'];
                                $arr_mle_records[$arr_mle_date[$i]]['scale_image'][$j] = $obj->getScaleImage($row2['scale']);
                                $arr_mle_records[$arr_mle_date[$i]]['responce'][$j] = stripslashes($row2['remarks']);
                                $arr_mle_records[$arr_mle_date[$i]]['my_target'][$j] = stripslashes($row2['my_target']);
                                $arr_mle_records[$arr_mle_date[$i]]['adviser_target'][$j] = stripslashes($row2['adviser_target']);
                                $arr_mle_records[$arr_mle_date[$i]]['data_source'][$j] = stripslashes($row2['data_source']);
                                $j++;
                            }
                        }
                    }
                    // $result2 = mysql_query($sql2,$link);
                    // if( ($result2) && (mysql_num_rows($result2) > 0) )
                    // {
                    //     $j=0;
                    //     while($row2 = mysql_fetch_array($result2))
                    //     {
                    //         if($row2['selected_mle_id'] != '0')
                    //         {
                    //             $mle_return = true;
                    //             $arr_mle_records[$arr_mle_date[$i]]['selected_mle_id'][$j] = $row2['selected_mle_id'];
                    //             $arr_mle_records[$arr_mle_date[$i]]['scale'][$j] = $row2['scale'];
                    //             $arr_mle_records[$arr_mle_date[$i]]['scale_image'][$j] = getScaleImage($row2['scale']);
                    //             $arr_mle_records[$arr_mle_date[$i]]['responce'][$j] = stripslashes($row2['remarks']);
                    //             $arr_mle_records[$arr_mle_date[$i]]['my_target'][$j] = stripslashes($row2['my_target']);
                    //             $arr_mle_records[$arr_mle_date[$i]]['adviser_target'][$j] = stripslashes($row2['adviser_target']);
                    //             $arr_mle_records[$arr_mle_date[$i]]['data_source'][$j] = stripslashes($row2['data_source']);
                    //             $j++;
                    //         }
                    //     }
                    // }
                    
                }
            }
        }
        if ($report_module == '' || $report_module == 'adct_report' || $report_module == '21') {
            if ($report_module == 'adct_report') {
                if ($module_keyword != '') {
                    $sql_str_report_module = " AND `selected_adct_id` = '" . $module_keyword . "' ";
                    $sql_str_report_module2 = " AND tuadc.selected_adct_id = '" . $module_keyword . "' ";
                    $sql_str_report_module3 = " AND `bms_id` = '" . $module_keyword . "' ";
                } else {
                    $sql_str_report_module = '';
                    $sql_str_report_module2 = '';
                    $sql_str_report_module3 = '';
                }
            } else {
                $sql_str_report_module = '';
                $sql_str_report_module2 = '';
                $sql_str_report_module3 = '';
            }
            if ($module_criteria == '1') {
                $sql_str_report_module_criteria3 = '';
                if ($criteria_scale_range == '1') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tuadc.my_target AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '2') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tuadc.my_target AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '3') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tuadc.my_target AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '4') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tuadc.my_target AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tuadc.my_target AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(`my_target` AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                    $sql_str_report_module_criteria2 = " AND CAST(tuadc.my_target AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(tuadc.my_target AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                } else {
                    $sql_str_report_module_criteria = "";
                    $sql_str_report_module_criteria2 = "";
                }
            } elseif ($module_criteria == '2') {
                $sql_str_report_module_criteria3 = '';
                if ($criteria_scale_range == '1') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tuadc.adviser_target AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '2') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tuadc.adviser_target AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '3') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tuadc.adviser_target AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '4') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tuadc.adviser_target AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND CAST(tuadc.adviser_target AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(`adviser_target` AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                    $sql_str_report_module_criteria2 = " AND CAST(tuadc.adviser_target AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(tuadc.adviser_target AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                } else {
                    $sql_str_report_module_criteria = "";
                    $sql_str_report_module_criteria2 = "";
                }
            } elseif ($module_criteria == '7') {
                if ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND DAYOFWEEK(adct_date) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND DAYOFWEEK(tuadc.adct_date) = '" . $start_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria3 = " AND DAYOFWEEK(mdt_date) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND DAYOFWEEK(adct_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(adct_date) <= '" . $end_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria2 = " AND DAYOFWEEK(tuadc.adct_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(tuadc.adct_date) <= '" . $end_criteria_scale_value . "' ";
                    $sql_str_report_module_criteria3 = " AND DAYOFWEEK(mdt_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(mdt_date) <= '" . $end_criteria_scale_value . "' ";
                } else {
                    $sql_str_report_module_criteria = "";
                    $sql_str_report_module_criteria2 = "";
                    $sql_str_report_module_criteria3 = "";
                }
            } else {
                $sql_str_report_module_criteria = "";
                $sql_str_report_module_criteria2 = "";
                $sql_str_report_module_criteria3 = "";
            }
            if ($permission_type == '1') {
                $sql = "SELECT DISTINCT tuadc.adct_date AS adct_date FROM `tblusersadct` AS tuadc " . "LEFT JOIN `tbladdictions` AS tadc ON tuadc.selected_adct_id = tadc.adct_id " . "WHERE tuadc.user_id = '" . $user_id . "' AND " . "tuadc.adct_date >= '" . $start_date . "' AND " . "tuadc.adct_date <= '" . $end_date . "' AND " . "tuadc.adct_old_data = '0'  AND " . "tadc.practitioner_id = '" . $pro_user_id . "'  " . $sql_str_scale . " " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . "  ";
                $sql.= " UNION SELECT DISTINCT tumdt.mdt_date AS adct_date FROM `tblusersmdt` AS tumdt " . "LEFT JOIN `tbladdictions` AS tadc ON tumdt.bms_id = tadc.adct_id " . "WHERE tumdt.user_id = '" . $user_id . "' AND " . "tumdt.bms_entry_type = 'trigger' AND " . "tumdt.bms_type = 'adct' AND " . "tumdt.mdt_date >= '" . $start_date . "' AND " . "tumdt.mdt_date <= '" . $end_date . "' AND " . "tumdt.mdt_old_data = '0' AND " . "tadc.practitioner_id = '" . $pro_user_id . "'  " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY adct_date DESC ";
            } elseif ($permission_type == '0') {
                $sql = "SELECT DISTINCT tuadc.adct_date AS adct_date FROM `tblusersadct` AS tuadc " . "LEFT JOIN `tbladdictions` AS tadc ON tuadc.selected_adct_id = tadc.adct_id " . "WHERE tuadc.user_id = '" . $user_id . "' AND " . "tuadc.adct_date >= '" . $start_date . "' AND " . "tuadc.adct_date <= '" . $end_date . "' AND " . "tuadc.adct_old_data = '0'  AND " . "tadc.practitioner_id = '0'  " . $sql_str_scale . " " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . "  ";
                $sql.= " UNION SELECT DISTINCT tumdt.mdt_date AS adct_date FROM `tblusersmdt` AS tumdt " . "LEFT JOIN `tbladdictions` AS tadc ON tumdt.bms_id = tadc.adct_id " . "WHERE tumdt.user_id = '" . $user_id . "' AND " . "tumdt.bms_entry_type = 'trigger' AND " . "tumdt.bms_type = 'adct' AND " . "tumdt.mdt_date >= '" . $start_date . "' AND " . "tumdt.mdt_date <= '" . $end_date . "' AND " . "tumdt.mdt_old_data = '0' AND " . "tadc.practitioner_id = '0'  " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY adct_date DESC ";
            } else {
                $sql = "SELECT DISTINCT `adct_date` FROM `tblusersadct` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`adct_date` >= '" . $start_date . "' AND " . "`adct_date` <= '" . $end_date . "' AND " . "`adct_old_data` = '0'  " . $sql_str_scale . " " . $sql_str_report_module . " " . $sql_str_report_module_criteria . "  ";
                $sql.= " UNION SELECT DISTINCT mdt_date AS adct_date FROM `tblusersmdt` " . "WHERE `user_id` = '" . $user_id . "' AND " . "`bms_entry_type` = 'trigger' AND " . "`bms_type` = 'adct' AND " . "`mdt_date` >= '" . $start_date . "' AND " . "`mdt_date` <= '" . $end_date . "' AND " . "`mdt_old_data` = '0' " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY adct_date DESC ";
            }
            //echo "<br>Testkk sql = ".$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    array_push($arr_adct_date, $row['adct_date']);
                }
            }
            // $result = mysql_query($sql,$link);
            // if( ($result) && (mysql_num_rows($result) > 0) )
            // {
            //     while($row = mysql_fetch_array($result))
            //     {
            //         array_push($arr_adct_date , $row['adct_date']);
            //     }
            // }
            if (count($arr_adct_date) > 0) {
                for ($i = 0;$i < count($arr_adct_date);$i++) {
                    if ($permission_type == '1') {
                        /*
                        
                        
                        
                        $sql2 = "SELECT tuadc.* FROM `tblusersadct` AS tuadc "
                        
                        
                        
                                . "LEFT JOIN `tbladdictions` AS tadc ON tuadc.selected_adct_id = tadc.adct_id "
                        
                        
                        
                                . "WHERE tuadc.user_id = '".$user_id."' AND "
                        
                        
                        
                                . "tuadc.adct_date = '".$arr_adct_date[$i]."' AND "
                        
                        
                        
                                . "tadc.practitioner_id = '".$pro_user_id."' AND "
                        
                        
                        
                                . "tuadc.adct_old_data = '0' ".$sql_str_scale." ".$sql_str_report_module2." ".$sql_str_report_module_criteria2."  ORDER BY tuadc.user_adct_id ASC ";
                        
                        
                        
                         * 
                        
                        
                        
                         * 
                        
                        
                        
                        */
                        $sql2 = "SELECT tuadc.user_adct_id AS user_adct_id , tuadc.adct_date AS adct_date , tuadc.selected_adct_id AS selected_adct_id , " . "tuadc.scale AS scale , tuadc.remarks AS remarks , tuadc.my_target AS my_target , tuadc.adviser_target AS adviser_target , 'emo' AS 'data_source'  FROM `tblusersadct` AS tuadc " . "LEFT JOIN `tbladdictions` AS tadc ON tuadc.selected_adct_id = tadc.adct_id " . "WHERE tuadc.user_id = '" . $user_id . "' AND " . "tuadc.adct_date = '" . $arr_adct_date[$i] . "' AND " . "tuadc.adct_old_data = '0' AND " . "tadc.practitioner_id = '" . $pro_user_id . "'  " . $sql_str_scale . " " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . "  ";
                        $sql2.= " UNION SELECT tumdt.user_mdt_id AS user_adct_id ,  tumdt.mdt_date AS adct_date , tumdt.bms_id AS selected_adct_id , " . "tumdt.scale AS scale , tumdt.remarks AS remarks , tumdt.my_target AS my_target , tumdt.adviser_target AS adviser_target , 'mdt' AS 'data_source' FROM `tblusersmdt` AS tumdt " . "LEFT JOIN `tbladdictions` AS tadc ON tumdt.bms_id = tadc.adct_id " . "WHERE tumdt.user_id = '" . $user_id . "' AND " . "tumdt.bms_entry_type = 'trigger' AND " . "tumdt.bms_type = 'adct' AND " . "tumdt.mdt_date = '" . $arr_adct_date[$i] . "' AND " . "tumdt.mdt_old_data = '0' AND " . "tadc.practitioner_id = '" . $pro_user_id . "'  " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY user_adct_id ASC ";
                    } elseif ($permission_type == '0') {
                        /*
                        
                        
                        
                        $sql2 = "SELECT tuadc.* FROM `tblusersadct` AS tuadc "
                        
                        
                        
                                . "LEFT JOIN `tbladdictions` AS tadc ON tuadc.selected_adct_id = tadc.adct_id "
                        
                        
                        
                                . "WHERE tuadc.user_id = '".$user_id."' AND "
                        
                        
                        
                                . "tuadc.adct_date = '".$arr_adct_date[$i]."' AND "
                        
                        
                        
                                . "tadc.practitioner_id = '0' AND "
                        
                        
                        
                                . "tuadc.adct_old_data = '0' ".$sql_str_scale." ".$sql_str_report_module2." ".$sql_str_report_module_criteria2." ORDER BY tuadc.user_adct_id ASC ";
                        
                        
                        
                         * 
                        
                        
                        
                        */
                        $sql2 = "SELECT tuadc.user_adct_id AS user_adct_id , tuadc.adct_date AS adct_date , tuadc.selected_adct_id AS selected_adct_id , " . "tuadc.scale AS scale , tuadc.remarks AS remarks , tuadc.my_target AS my_target , tuadc.adviser_target AS adviser_target , 'emo' AS 'data_source'  FROM `tblusersadct` AS tuadc " . "LEFT JOIN `tbladdictions` AS tadc ON tuadc.selected_adct_id = tadc.adct_id " . "WHERE tuadc.user_id = '" . $user_id . "' AND " . "tuadc.adct_date = '" . $arr_adct_date[$i] . "' AND " . "tuadc.adct_old_data = '0' AND " . "tadc.practitioner_id = '0'  " . $sql_str_scale . " " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . "  ";
                        $sql2.= " UNION SELECT tumdt.user_mdt_id AS user_adct_id ,  tumdt.mdt_date AS adct_date , tumdt.bms_id AS selected_adct_id , " . "tumdt.scale AS scale , tumdt.remarks AS remarks , tumdt.my_target AS my_target , tumdt.adviser_target AS adviser_target , 'mdt' AS 'data_source' FROM `tblusersmdt` AS tumdt " . "LEFT JOIN `tbladdictions` AS tadc ON tumdt.bms_id = tadc.adct_id " . "WHERE tumdt.user_id = '" . $user_id . "' AND " . "tumdt.bms_entry_type = 'trigger' AND " . "tumdt.bms_type = 'adct' AND " . "tumdt.mdt_date = '" . $arr_adct_date[$i] . "' AND " . "tumdt.mdt_old_data = '0' AND " . "tadc.practitioner_id = '0'  " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY user_adct_id ASC ";
                    } else {
                        /*
                        
                        
                        
                        $sql2 = "SELECT * FROM `tblusersadct` WHERE "
                        
                        
                        
                                . "`user_id` = '".$user_id."' AND "
                        
                        
                        
                                . "`adct_date` = '".$arr_adct_date[$i]."' AND "
                        
                        
                        
                                . "`adct_old_data` = '0'  ".$sql_str_scale." ".$sql_str_report_module." ".$sql_str_report_module_criteria." ORDER BY `user_adct_id` ASC ";
                        
                        
                        
                         * 
                        
                        
                        
                        */
                        $sql2 = "SELECT user_adct_id,adct_date,selected_adct_id,scale,remarks,my_target,adviser_target , 'emo' AS 'data_source' FROM `tblusersadct` " . "WHERE `user_id` = '" . $user_id . "' AND " . "adct_date = '" . $arr_adct_date[$i] . "' AND " . "adct_old_data = '0' " . $sql_str_scale . " " . $sql_str_report_module . " " . $sql_str_report_module_criteria . "  ";
                        $sql2.= " UNION SELECT user_mdt_id AS user_adct_id , mdt_date AS adct_date , bms_id AS selected_adct_id , " . "scale AS scale , remarks AS remarks , my_target AS my_target , adviser_target AS adviser_target , 'mdt' AS 'data_source' FROM `tblusersmdt` " . "WHERE `user_id` = '" . $user_id . "' AND " . "`bms_entry_type` = 'trigger' AND " . "`bms_type` = 'adct' AND " . "`mdt_date` = '" . $arr_adct_date[$i] . "' AND " . "`mdt_old_data` = '0' " . $sql_str_scale . " " . $sql_str_report_module3 . " " . $sql_str_report_module_criteria3 . " ORDER BY user_adct_id ASC ";
                    }
                    //echo "<br>".$sql2;
                    $STH = $DBH->query($sql2);
                    if ($STH->rowCount() > 0) {
                        while ($row2 = $STH->fetch(PDO::FETCH_ASSOC)) {
                            if ($row2['selected_adct_id'] != '0') {
                                $adct_return = true;
                                $arr_adct_records[$arr_adct_date[$i]]['selected_adct_id'][$j] = $row2['selected_adct_id'];
                                $arr_adct_records[$arr_adct_date[$i]]['scale'][$j] = $row2['scale'];
                                $arr_adct_records[$arr_adct_date[$i]]['scale_image'][$j] = $obj->getScaleImage($row2['scale']);
                                $arr_adct_records[$arr_adct_date[$i]]['responce'][$j] = stripslashes($row2['remarks']);
                                $arr_adct_records[$arr_adct_date[$i]]['my_target'][$j] = stripslashes($row2['my_target']);
                                $arr_adct_records[$arr_adct_date[$i]]['adviser_target'][$j] = stripslashes($row2['adviser_target']);
                                $arr_adct_records[$arr_adct_date[$i]]['data_source'][$j] = stripslashes($row2['data_source']);
                                $j++;
                            }
                        }
                    }
                    // $result2 = mysql_query($sql2,$link);
                    // if( ($result2) && (mysql_num_rows($result2) > 0) )
                    // {
                    //     $j=0;
                    //     while($row2 = mysql_fetch_array($result2))
                    //     {
                    //         if($row2['selected_adct_id'] != '0')
                    //         {
                    //             $adct_return = true;
                    //             $arr_adct_records[$arr_adct_date[$i]]['selected_adct_id'][$j] = $row2['selected_adct_id'];
                    //             $arr_adct_records[$arr_adct_date[$i]]['scale'][$j] = $row2['scale'];
                    //             $arr_adct_records[$arr_adct_date[$i]]['scale_image'][$j] = getScaleImage($row2['scale']);
                    //             $arr_adct_records[$arr_adct_date[$i]]['responce'][$j] = stripslashes($row2['remarks']);
                    //             $arr_adct_records[$arr_adct_date[$i]]['my_target'][$j] = stripslashes($row2['my_target']);
                    //             $arr_adct_records[$arr_adct_date[$i]]['adviser_target'][$j] = stripslashes($row2['adviser_target']);
                    //             $arr_adct_records[$arr_adct_date[$i]]['data_source'][$j] = stripslashes($row2['data_source']);
                    //             $j++;
                    //         }
                    //     }
                    // }
                    
                }
            }
        }
        if ($report_module == '' || $report_module == 'bps_report' || $report_module == '22') {
            if ($report_module == 'bps_report') {
                if ($module_keyword != '') {
                    $sql_str_report_module = " AND FIND_IN_SET('" . $module_keyword . "', bms_id) > 0 ";
                } else {
                    $sql_str_report_module = '';
                }
            } else {
                $sql_str_report_module = '';
            }
            if ($module_criteria == '7') {
                if ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND DAYOFWEEK(bps_date) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND DAYOFWEEK(bps_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(bps_date) <= '" . $end_criteria_scale_value . "' ";
                } else {
                    $sql_str_report_module_criteria = "";
                }
            }
            $sql = "SELECT DISTINCT `bps_date` FROM `tblusersbps` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`bps_date` >= '" . $start_date . "' AND " . "`bps_date` <= '" . $end_date . "' AND " . "`bps_old_data` = '0'  " . $sql_str_scale . " " . $sql_str_report_module . " " . $sql_str_report_module_criteria . "  ORDER BY `bps_date` DESC ";
            //echo "<br>Testkk sql = ".$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    array_push($arr_bps_date, $row['bps_date']);
                }
            }
            // $result = mysql_query($sql,$link);
            // if( ($result) && (mysql_num_rows($result) > 0) )
            // {
            //     while($row = mysql_fetch_array($result))
            //     {
            //         array_push($arr_bps_date , $row['bps_date']);
            //     }
            // }
            if (count($arr_bps_date) > 0) {
                for ($i = 0;$i < count($arr_bps_date);$i++) {
                    $sql2 = "SELECT * FROM `tblusersbps` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`bps_date` = '" . $arr_bps_date[$i] . "' AND " . "`bps_old_data` = '0'  " . $sql_str_scale . " " . $sql_str_report_module . " ORDER BY `user_bps_id` ASC ";
                    //echo "<br>".$sql2;
                    $STH = $DBH->query($sql2);
                    if ($STH->rowCount() > 0) {
                        $j = 0;
                        while ($row2 = $STH->fetch(PDO::FETCH_ASSOC)) {
                            if ($row2['bms_id'] != '') {
                                $bps_return = true;
                                $arr_bps_records[$arr_bps_date[$i]]['bp_id'][$j] = $row2['bp_id'];
                                $arr_bps_records[$arr_bps_date[$i]]['bms_id'][$j] = $row2['bms_id'];
                                $arr_bps_records[$arr_bps_date[$i]]['scale'][$j] = $row2['scale'];
                                $arr_bps_records[$arr_bps_date[$i]]['spotx'][$j] = $row2['spotx'];
                                $arr_bps_records[$arr_bps_date[$i]]['spoty'][$j] = $row2['spoty'];
                                $arr_bps_records[$arr_bps_date[$i]]['bps_image'][$j] = $row2['bps_image'];
                                $j++;
                            }
                        }
                    }
                    // $result2 = mysql_query($sql2,$link);
                    // if( ($result2) && (mysql_num_rows($result2) > 0) )
                    // {
                    //         $j=0;
                    //         while($row2 = mysql_fetch_array($result2))
                    //         {
                    //                 if($row2['bms_id'] != '')
                    //                 {
                    //                         $bps_return = true;
                    //                         $arr_bps_records[$arr_bps_date[$i]]['bp_id'][$j] = $row2['bp_id'];
                    //                         $arr_bps_records[$arr_bps_date[$i]]['bms_id'][$j] = $row2['bms_id'];
                    //                         $arr_bps_records[$arr_bps_date[$i]]['scale'][$j] = $row2['scale'];
                    //                         $arr_bps_records[$arr_bps_date[$i]]['spotx'][$j] = $row2['spotx'];
                    //                         $arr_bps_records[$arr_bps_date[$i]]['spoty'][$j] = $row2['spoty'];
                    //                         $arr_bps_records[$arr_bps_date[$i]]['bps_image'][$j] = $row2['bps_image'];
                    //                         $j++;
                    //                 }
                    //         }
                    // }
                    
                }
            }
        }
        if ($report_module == '' || $report_module == 'bes_report' || $report_module == '23') {
            if ($report_module == 'bes_report') {
                if ($module_keyword != '') {
                    $sql_str_report_module = " AND FIND_IN_SET('" . $module_keyword . "', bms_id) > 0 ";
                } else {
                    $sql_str_report_module = '';
                }
            } else {
                $sql_str_report_module = '';
            }
            if ($module_criteria == '1') {
                if ($criteria_scale_range == '1') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '2') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '3') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '4') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND CAST(`my_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(`my_target` AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                } else {
                    $sql_str_report_module_criteria = "";
                    $sql_str_report_module_criteria2 = "";
                }
            } elseif ($module_criteria == '2') {
                if ($criteria_scale_range == '1') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '2') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '3') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '4') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND CAST(`adviser_target` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(`adviser_target` AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                } else {
                    $sql_str_report_module_criteria = "";
                }
            } elseif ($module_criteria == '7') {
                if ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND DAYOFWEEK(bes_date) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND DAYOFWEEK(bes_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(bes_date) <= '" . $end_criteria_scale_value . "' ";
                } else {
                    $sql_str_report_module_criteria = "";
                }
            } else {
                $sql_str_report_module_criteria = "";
            }
            $sql = "SELECT DISTINCT `bes_date` FROM `tblusersbes` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`bes_date` >= '" . $start_date . "' AND " . "`bes_date` <= '" . $end_date . "' AND " . "`bes_old_data` = '0'  " . $sql_str_scale . " " . $sql_str_report_module . " " . $sql_str_report_module_criteria . "  ORDER BY `bes_date` DESC ";
            //echo "<br>Testkk sql = ".$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    array_push($arr_bes_date, $row['bes_date']);
                }
            }
            // $result = mysql_query($sql,$link);
            // if( ($result) && (mysql_num_rows($result) > 0) )
            // {
            //     while($row = mysql_fetch_array($result))
            //     {
            //         array_push($arr_bes_date , $row['bes_date']);
            //     }
            // }
            if (count($arr_bes_date) > 0) {
                for ($i = 0;$i < count($arr_bes_date);$i++) {
                    $sql2 = "SELECT * FROM `tblusersbes` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`bes_date` = '" . $arr_bes_date[$i] . "' AND " . "`bes_old_data` = '0'  " . $sql_str_scale . " " . $sql_str_report_module . " " . $sql_str_report_module_criteria . " ORDER BY `user_bes_id` ASC ";
                    //echo "<br>".$sql2;
                    $STH = $DBH->query($sql2);
                    if ($STH->rowCount() > 0) {
                        $j = 0;
                        while ($row2 = $STH->fetch(PDO::FETCH_ASSOC)) {
                            if ($row2['bms_id'] != '0') {
                                $bes_return = true;
                                $arr_bes_records[$arr_bes_date[$i]]['bms_id'][$j] = $row2['bms_id'];
                                $arr_bes_records[$arr_bes_date[$i]]['scale'][$j] = $row2['scale'];
                                $arr_bes_records[$arr_bes_date[$i]]['scale_image'][$j] = $obj->getScaleImage($row2['scale']);
                                $arr_bes_records[$arr_bes_date[$i]]['responce'][$j] = stripslashes($row2['remarks']);
                                $arr_bes_records[$arr_bes_date[$i]]['my_target'][$j] = stripslashes($row2['my_target']);
                                $arr_bes_records[$arr_bes_date[$i]]['adviser_target'][$j] = stripslashes($row2['adviser_target']);
                                $arr_bes_records[$arr_bes_date[$i]]['bes_time'][$j] = stripslashes($row2['bes_time']);
                                $arr_bes_records[$arr_bes_date[$i]]['bes_duration'][$j] = stripslashes($row2['bes_duration']);
                                $j++;
                            }
                        }
                    }
                    // $result2 = mysql_query($sql2,$link);
                    // if( ($result2) && (mysql_num_rows($result2) > 0) )
                    // {
                    //     $j=0;
                    //     while($row2 = mysql_fetch_array($result2))
                    //     {
                    //         if($row2['bms_id'] != '0')
                    //         {
                    //             $bes_return = true;
                    //             $arr_bes_records[$arr_bes_date[$i]]['bms_id'][$j] = $row2['bms_id'];
                    //             $arr_bes_records[$arr_bes_date[$i]]['scale'][$j] = $row2['scale'];
                    //             $arr_bes_records[$arr_bes_date[$i]]['scale_image'][$j] = getScaleImage($row2['scale']);
                    //             $arr_bes_records[$arr_bes_date[$i]]['responce'][$j] = stripslashes($row2['remarks']);
                    //             $arr_bes_records[$arr_bes_date[$i]]['my_target'][$j] = stripslashes($row2['my_target']);
                    //             $arr_bes_records[$arr_bes_date[$i]]['adviser_target'][$j] = stripslashes($row2['adviser_target']);
                    //             $arr_bes_records[$arr_bes_date[$i]]['bes_time'][$j] = stripslashes($row2['bes_time']);
                    //             $arr_bes_records[$arr_bes_date[$i]]['bes_duration'][$j] = stripslashes($row2['bes_duration']);
                    //             $j++;
                    //         }
                    //     }
                    // }
                    
                }
            }
        }
        if ($report_module == '' || $report_module == 'mdt_report' || $report_module == '24') {
            if ($module_keyword != '') {
                $tmp_md_ct = explode('_', $module_keyword);
                $module_keyword = $tmp_md_ct[1];
            }
            if ($module_criteria == '9') {
                if ($trigger_criteria != '') {
                    $tmp_tg_ct = explode('_', $trigger_criteria);
                    $trigger_criteria = $tmp_tg_ct[1];
                }
            } else {
                $trigger_criteria = '';
            }
            if ($module_criteria == '7') {
                if ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND DAYOFWEEK(mdt_date) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND DAYOFWEEK(mdt_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(mdt_date) <= '" . $end_criteria_scale_value . "' ";
                } else {
                    $sql_str_report_module_criteria = "";
                }
            } elseif ($module_criteria == '3') {
                if ($criteria_scale_range == '1') {
                    $sql_str_report_module_criteria = " AND CAST(`mdt_duration` AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '2') {
                    $sql_str_report_module_criteria = " AND CAST(`mdt_duration` AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '3') {
                    $sql_str_report_module_criteria = " AND CAST(`mdt_duration` AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '4') {
                    $sql_str_report_module_criteria = " AND CAST(`mdt_duration` AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND CAST(`mdt_duration` AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND CAST(`mdt_duration` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(`mins` AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                } else {
                    $sql_str_report_module_criteria = "";
                    $sql_str_report_module_criteria2 = "";
                }
            } elseif ($module_criteria == '4') {
                if ($criteria_scale_range == '1') {
                    $sql_str_report_module_criteria = " AND `mdt_time` < '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '2') {
                    $sql_str_report_module_criteria = " AND `mdt_time` > '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '3') {
                    $sql_str_report_module_criteria = " AND `mdt_time` <= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '4') {
                    $sql_str_report_module_criteria = " AND `mdt_time` >= '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '5') {
                    $sql_str_report_module_criteria = " AND `mdt_time` = '" . $start_criteria_scale_value . "' ";
                } elseif ($criteria_scale_range == '6') {
                    $sql_str_report_module_criteria = " AND `mdt_time` >= '" . $start_criteria_scale_value . "' AND `mdt_time` <= '" . $end_criteria_scale_value . "'";
                } else {
                    $sql_str_report_module_criteria = "";
                }
            } else {
                $sql_str_report_module_criteria = "";
            }
            if ($module_keyword == '' && $scale_range == '' && $module_criteria == '') {
                $sql_str_scale = '';
                $sql_str_report_module = '';
                $sql_str_report_module_criteria = '';
                $sql = "SELECT DISTINCT `mdt_date` FROM `tblusersmdt` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`mdt_date` >= '" . $start_date . "' AND " . "`mdt_date` <= '" . $end_date . "' AND " . "`mdt_old_data` = '0'  " . $sql_str_scale . " " . $sql_str_report_module . " " . $sql_str_report_module_criteria . "  ORDER BY `mdt_date` DESC ";
                //echo "<br>Testkk sql = ".$sql;
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                        array_push($arr_mdt_date, $row['mdt_date']);
                    }
                }
                // $result = mysql_query($sql,$link);
                // if( ($result) && (mysql_num_rows($result) > 0) )
                // {
                //     while($row = mysql_fetch_array($result))
                //     {
                //         array_push($arr_mdt_date , $row['mdt_date']);
                //     }
                // }
                
            } elseif ($module_keyword == '' && $scale_range == '' && $module_criteria != '') {
                $sql_str_scale = '';
                $sql_str_report_module = '';
                if ($module_criteria == '9') {
                    if ($criteria_scale_range == '1') {
                        $sql_str_report_module_criteria = " AND ( CAST(`scale` AS SIGNED) < '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                    } elseif ($criteria_scale_range == '2') {
                        $sql_str_report_module_criteria = " AND ( CAST(`scale` AS SIGNED) > '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                    } elseif ($criteria_scale_range == '3') {
                        $sql_str_report_module_criteria = " AND ( CAST(`scale` AS SIGNED) <= '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                    } elseif ($criteria_scale_range == '4') {
                        $sql_str_report_module_criteria = " AND ( CAST(`scale` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                    } elseif ($criteria_scale_range == '5') {
                        $sql_str_report_module_criteria = " AND ( CAST(`scale` AS SIGNED) = '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                    } elseif ($criteria_scale_range == '6') {
                        $min_value = min($start_criteria_scale_value, $end_criteria_scale_value);
                        $max_value = max($start_criteria_scale_value, $end_criteria_scale_value);
                        $sql_str_report_module_criteria = " AND ( CAST(`scale` AS SIGNED) BETWEEN '" . $min_value . "' AND '" . $max_value . "' AND `bms_entry_type` = 'trigger' ) ";
                    } else {
                        $sql_str_report_module_criteria = "";
                    }
                    if ($trigger_criteria != '') {
                        $sql_str_report_module = " AND `bms_id` = '" . $trigger_criteria . "' AND `bms_entry_type` = 'trigger' ";
                    } else {
                        $sql_str_report_module = '';
                    }
                }
                $sql = "SELECT DISTINCT `mdt_date` FROM `tblusersmdt` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`mdt_date` >= '" . $start_date . "' AND " . "`mdt_date` <= '" . $end_date . "' AND " . "`mdt_old_data` = '0'  " . $sql_str_scale . " " . $sql_str_report_module . " " . $sql_str_report_module_criteria . "  ORDER BY `mdt_date` DESC ";
                //echo "<br>Testkk sql = ".$sql;
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                        array_push($arr_mdt_date, $row['mdt_date']);
                    }
                }
                // $result = mysql_query($sql,$link);
                // if( ($result) && (mysql_num_rows($result) > 0) )
                // {
                //     while($row = mysql_fetch_array($result))
                //     {
                //         array_push($arr_mdt_date , $row['mdt_date']);
                //     }
                // }
                
            } elseif ($module_keyword == '' && $scale_range != '' && $module_criteria == '') {
                //echo'<br>3333333333333333333';
                $sql_str_report_module = '';
                $sql_str_report_module_criteria = '';
                if ($scale_range == '1') {
                    $sql_str_scale = " AND (  CAST(`scale` AS SIGNED) < '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                } elseif ($scale_range == '2') {
                    $sql_str_scale = " AND (  CAST(`scale` AS SIGNED) > '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                } elseif ($scale_range == '3') {
                    $sql_str_scale = " AND (  CAST(`scale` AS SIGNED) <= '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                } elseif ($scale_range == '4') {
                    $sql_str_scale = " AND (  CAST(`scale` AS SIGNED) >= '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                } elseif ($scale_range == '5') {
                    $sql_str_scale = " AND (  CAST(`scale` AS SIGNED) = '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                } elseif ($scale_range == '6') {
                    $min_value = min($start_scale_value, $end_scale_value);
                    $max_value = max($start_scale_value, $end_scale_value);
                    $sql_str_scale = " AND ( CAST(`scale` AS SIGNED) BETWEEN '" . $min_value . "' AND '" . $max_value . "' AND `bms_entry_type` = 'situation' ) ";
                } else {
                    $sql_str_scale = "";
                }
                $sql = "SELECT DISTINCT `mdt_date` FROM `tblusersmdt` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`mdt_date` >= '" . $start_date . "' AND " . "`mdt_date` <= '" . $end_date . "' AND " . "`mdt_old_data` = '0'  " . $sql_str_scale . " " . $sql_str_report_module . " " . $sql_str_report_module_criteria . "  ORDER BY `mdt_date` DESC ";
                //echo "<br>Testkk sql = ".$sql;
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                        array_push($arr_mdt_date, $row['mdt_date']);
                    }
                }
                // $result = mysql_query($sql,$link);
                // if( ($result) && (mysql_num_rows($result) > 0) )
                // {
                //     while($row = mysql_fetch_array($result))
                //     {
                //         array_push($arr_mdt_date , $row['mdt_date']);
                //     }
                // }
                
            } elseif ($module_keyword == '' && $scale_range != '' && $module_criteria != '') {
                //echo'<br>444444444444444';
                $sql_str_report_module = '';
                if ($module_criteria == '9') {
                    $sql_str_report_module_criteria = '';
                    if ($trigger_criteria != '') {
                        $sql_str_report_module = " AND `bms_id` = '" . $trigger_criteria . "' AND `bms_entry_type` = 'trigger' ";
                        if ($criteria_scale_range == '1') {
                            $sql_str_report_module_criteria = " ( CAST(`scale` AS SIGNED) < '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                        } elseif ($criteria_scale_range == '2') {
                            $sql_str_report_module_criteria = " ( CAST(`scale` AS SIGNED) > '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                        } elseif ($criteria_scale_range == '3') {
                            $sql_str_report_module_criteria = " ( CAST(`scale` AS SIGNED) <= '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                        } elseif ($criteria_scale_range == '4') {
                            $sql_str_report_module_criteria = " ( CAST(`scale` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                        } elseif ($criteria_scale_range == '5') {
                            $sql_str_report_module_criteria = " ( CAST(`scale` AS SIGNED) = '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                        } elseif ($criteria_scale_range == '6') {
                            $min_value = min($start_criteria_scale_value, $end_criteria_scale_value);
                            $max_value = max($start_criteria_scale_value, $end_criteria_scale_value);
                            $sql_str_report_module_criteria = " ( CAST(`scale` AS SIGNED) BETWEEN '" . $min_value . "' AND '" . $max_value . "' AND `bms_entry_type` = 'trigger' ) ";
                        } else {
                            $sql_str_report_module_criteria = "";
                        }
                        if ($sql_str_report_module_criteria == "") {
                        } else {
                            $sql_str_report_module_criteria = " AND " . $sql_str_report_module_criteria;
                        }
                        $sql_str_scale = "";
                        $sql = "SELECT DISTINCT `mdt_date` FROM `tblusersmdt` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`mdt_date` >= '" . $start_date . "' AND " . "`mdt_date` <= '" . $end_date . "' AND " . "`mdt_old_data` = '0'  " . $sql_str_scale . " " . $sql_str_report_module . " " . $sql_str_report_module_criteria . "  ORDER BY `mdt_date` DESC ";
                        //echo "<br>Testkk sql = ".$sql;
                        $STH = $DBH->query($sql);
                        if ($STH->rowCount() > 0) {
                            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                                array_push($arr_mdt_date, $row['mdt_date']);
                            }
                        }
                        // $result = mysql_query($sql,$link);
                        // if( ($result) && (mysql_num_rows($result) > 0) )
                        // {
                        //     while($row = mysql_fetch_array($result))
                        //     {
                        //         array_push($arr_mdt_date , $row['mdt_date']);
                        //     }
                        // }
                        
                    } else {
                        $sql_str_report_module = '';
                        if ($scale_range == '1') {
                            $sql_str_scale = " (  CAST(`scale` AS SIGNED) < '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                        } elseif ($scale_range == '2') {
                            $sql_str_scale = " (  CAST(`scale` AS SIGNED) > '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                        } elseif ($scale_range == '3') {
                            $sql_str_scale = " (  CAST(`scale` AS SIGNED) <= '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                        } elseif ($scale_range == '4') {
                            $sql_str_scale = " (  CAST(`scale` AS SIGNED) >= '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                        } elseif ($scale_range == '5') {
                            $sql_str_scale = " (  CAST(`scale` AS SIGNED) = '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                        } elseif ($scale_range == '6') {
                            $min_value = min($start_scale_value, $end_scale_value);
                            $max_value = max($start_scale_value, $end_scale_value);
                            $sql_str_scale = " ( CAST(`scale` AS SIGNED) BETWEEN '" . $min_value . "' AND '" . $max_value . "' AND `bms_entry_type` = 'situation' ) ";
                        } else {
                            $sql_str_scale = "";
                        }
                        if ($criteria_scale_range == '1') {
                            $sql_str_report_module_criteria = " ( CAST(`scale` AS SIGNED) < '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                        } elseif ($criteria_scale_range == '2') {
                            $sql_str_report_module_criteria = " ( CAST(`scale` AS SIGNED) > '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                        } elseif ($criteria_scale_range == '3') {
                            $sql_str_report_module_criteria = " ( CAST(`scale` AS SIGNED) <= '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                        } elseif ($criteria_scale_range == '4') {
                            $sql_str_report_module_criteria = " ( CAST(`scale` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                        } elseif ($criteria_scale_range == '5') {
                            $sql_str_report_module_criteria = " ( CAST(`scale` AS SIGNED) = '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                        } elseif ($criteria_scale_range == '6') {
                            $min_value = min($start_criteria_scale_value, $end_criteria_scale_value);
                            $max_value = max($start_criteria_scale_value, $end_criteria_scale_value);
                            $sql_str_report_module_criteria = " ( CAST(`scale` AS SIGNED) BETWEEN '" . $min_value . "' AND '" . $max_value . "' AND `bms_entry_type` = 'trigger' ) ";
                        } else {
                            $sql_str_report_module_criteria = "";
                        }
                        if ($sql_str_report_module_criteria == "") {
                        } else {
                            $sql_str_report_module_criteria = " AND " . $sql_str_report_module_criteria;
                        }
                        if ($sql_str_scale == "") {
                        } else {
                            $sql_str_scale = " AND " . $sql_str_scale;
                        }
                        //$sql_str_scale2 = " AND ( ".$sql_str_report_module_criteria2." OR ".$sql_str_scale2." )";
                        $arr_mdt_s_date = array();
                        $sql_s = "SELECT DISTINCT `mdt_date` FROM `tblusersmdt` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`mdt_date` >= '" . $start_date . "' AND " . "`mdt_date` <= '" . $end_date . "' AND " . "`mdt_old_data` = '0'  " . $sql_str_scale . " ORDER BY `mdt_date` DESC ";
                        //echo "<br>Testkk sql = ".$sql_s;
                        $STH = $DBH->query($sql_s);
                        if ($STH->rowCount() > 0) {
                            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                                array_push($arr_mdt_s_date, $row['mdt_date']);
                            }
                        }
                        // $result = mysql_query($sql_s,$link);
                        // if( ($result) && (mysql_num_rows($result) > 0) )
                        // {
                        //     while($row = mysql_fetch_array($result))
                        //     {
                        //         array_push($arr_mdt_s_date , $row['mdt_date']);
                        //     }
                        // }
                        $arr_mdt_t_date = array();
                        $sql_t = "SELECT DISTINCT `mdt_date` FROM `tblusersmdt` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`mdt_date` >= '" . $start_date . "' AND " . "`mdt_date` <= '" . $end_date . "' AND " . "`mdt_old_data` = '0'  " . $sql_str_report_module_criteria . "  ORDER BY `mdt_date` DESC ";
                        //echo "<br>Testkk sql = ".$sql_t;
                        $STH = $DBH->query($sql_t);
                        if ($STH->rowCount() > 0) {
                            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                                array_push($arr_mdt_t_date, $row['mdt_date']);
                            }
                        }
                        // $result = mysql_query($sql_t,$link);
                        // if( ($result) && (mysql_num_rows($result) > 0) )
                        // {
                        //     while($row = mysql_fetch_array($result))
                        //     {
                        //         array_push($arr_mdt_t_date , $row['mdt_date']);
                        //     }
                        // }
                        $sql_str_scale = '';
                        $sql_str_report_module_criteria = '';
                        $arr_mdt_date = array_intersect($arr_mdt_s_date, $arr_mdt_t_date);
                        //echo'<br><pre>';
                        //print_r($arr_mdt_date);
                        //echo'<br></pre>';
                        
                    }
                } else {
                    if ($scale_range == '1') {
                        $sql_str_scale = " AND (  CAST(`scale` AS SIGNED) < '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                    } elseif ($scale_range == '2') {
                        $sql_str_scale = " AND (  CAST(`scale` AS SIGNED) > '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                    } elseif ($scale_range == '3') {
                        $sql_str_scale = " AND (  CAST(`scale` AS SIGNED) <= '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                    } elseif ($scale_range == '4') {
                        $sql_str_scale = " AND (  CAST(`scale` AS SIGNED) >= '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                    } elseif ($scale_range == '5') {
                        $sql_str_scale = " AND (  CAST(`scale` AS SIGNED) = '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                    } elseif ($scale_range == '6') {
                        $min_value = min($start_scale_value, $end_scale_value);
                        $max_value = max($start_scale_value, $end_scale_value);
                        $sql_str_scale = " AND ( CAST(`scale` AS SIGNED) BETWEEN '" . $min_value . "' AND '" . $max_value . "' AND `bms_entry_type` = 'situation' ) ";
                    } else {
                        $sql_str_scale = "";
                    }
                    $sql = "SELECT DISTINCT `mdt_date` FROM `tblusersmdt` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`mdt_date` >= '" . $start_date . "' AND " . "`mdt_date` <= '" . $end_date . "' AND " . "`mdt_old_data` = '0'  " . $sql_str_scale . " " . $sql_str_report_module . " " . $sql_str_report_module_criteria . "  ORDER BY `mdt_date` DESC ";
                    //echo "<br>Testkk sql = ".$sql;
                    $STH = $DBH->query($sql);
                    if ($STH->rowCount() > 0) {
                        while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                            array_push($arr_mdt_date, $row['mdt_date']);
                        }
                    }
                    // $result = mysql_query($sql,$link);
                    // if( ($result) && (mysql_num_rows($result) > 0) )
                    // {
                    //     while($row = mysql_fetch_array($result))
                    //     {
                    //         array_push($arr_mdt_date , $row['mdt_date']);
                    //     }
                    // }
                    
                }
            } elseif ($module_keyword != '' && $scale_range == '' && $module_criteria == '') {
                $sql_str_scale = '';
                $sql_str_report_module_criteria = '';
                $sql_str_report_module = " AND `bms_id` = '" . $module_keyword . "' AND `bms_entry_type` = 'situation' ";
                $sql = "SELECT DISTINCT `mdt_date` FROM `tblusersmdt` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`mdt_date` >= '" . $start_date . "' AND " . "`mdt_date` <= '" . $end_date . "' AND " . "`mdt_old_data` = '0'  " . $sql_str_scale . " " . $sql_str_report_module . " " . $sql_str_report_module_criteria . "  ORDER BY `mdt_date` DESC ";
                //echo "<br>Testkk sql = ".$sql;
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                        array_push($arr_mdt_date, $row['mdt_date']);
                    }
                }
                // $result = mysql_query($sql,$link);
                // if( ($result) && (mysql_num_rows($result) > 0) )
                // {
                //     while($row = mysql_fetch_array($result))
                //     {
                //         array_push($arr_mdt_date , $row['mdt_date']);
                //     }
                // }
                
            } elseif ($module_keyword != '' && $scale_range == '' && $module_criteria != '') {
                $sql_str_scale = '';
                $sql_str_report_module = " AND `bms_id` = '" . $module_keyword . "' AND `bms_entry_type` = 'situation' ";
                if ($module_criteria == '9') {
                    $sql_str_report_module_criteria = '';
                }
                $sql = "SELECT DISTINCT `mdt_date` FROM `tblusersmdt` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`mdt_date` >= '" . $start_date . "' AND " . "`mdt_date` <= '" . $end_date . "' AND " . "`mdt_old_data` = '0'  " . $sql_str_scale . " " . $sql_str_report_module . " " . $sql_str_report_module_criteria . "  ORDER BY `mdt_date` DESC ";
                //echo "<br>Testkk sql = ".$sql;
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                        array_push($arr_mdt_date, $row['mdt_date']);
                    }
                }
                // $result = mysql_query($sql,$link);
                // if( ($result) && (mysql_num_rows($result) > 0) )
                // {
                //     while($row = mysql_fetch_array($result))
                //     {
                //         array_push($arr_mdt_date , $row['mdt_date']);
                //     }
                // }
                
            } elseif ($module_keyword != '' && $scale_range != '' && $module_criteria == '') {
                $sql_str_report_module_criteria = '';
                $sql_str_report_module = " AND `bms_id` = '" . $module_keyword . "' AND `bms_entry_type` = 'situation' ";
                if ($scale_range == '1') {
                    $sql_str_scale = " AND (  CAST(`scale` AS SIGNED) < '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                } elseif ($scale_range == '2') {
                    $sql_str_scale = " AND (  CAST(`scale` AS SIGNED) > '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                } elseif ($scale_range == '3') {
                    $sql_str_scale = " AND (  CAST(`scale` AS SIGNED) <= '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                } elseif ($scale_range == '4') {
                    $sql_str_scale = " AND (  CAST(`scale` AS SIGNED) >= '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                } elseif ($scale_range == '5') {
                    $sql_str_scale = " AND (  CAST(`scale` AS SIGNED) = '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                } elseif ($scale_range == '6') {
                    $min_value = min($start_scale_value, $end_scale_value);
                    $max_value = max($start_scale_value, $end_scale_value);
                    $sql_str_scale = " AND ( CAST(`scale` AS SIGNED) BETWEEN '" . $min_value . "' AND '" . $max_value . "' AND `bms_entry_type` = 'situation' ) ";
                } else {
                    $sql_str_scale = "";
                }
                $sql = "SELECT DISTINCT `mdt_date` FROM `tblusersmdt` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`mdt_date` >= '" . $start_date . "' AND " . "`mdt_date` <= '" . $end_date . "' AND " . "`mdt_old_data` = '0'  " . $sql_str_scale . " " . $sql_str_report_module . " " . $sql_str_report_module_criteria . "  ORDER BY `mdt_date` DESC ";
                //echo "<br>Testkk sql = ".$sql;
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                        array_push($arr_mdt_date, $row['mdt_date']);
                    }
                }
                // $result = mysql_query($sql,$link);
                // if( ($result) && (mysql_num_rows($result) > 0) )
                // {
                //     while($row = mysql_fetch_array($result))
                //     {
                //         array_push($arr_mdt_date , $row['mdt_date']);
                //     }
                // }
                
            } else {
                $sql_str_scale = '';
                $sql_str_report_module = " AND `bms_id` = '" . $module_keyword . "' AND `bms_entry_type` = 'situation' ";
                if ($scale_range == '1') {
                    $sql_str_scale = " AND (  CAST(`scale` AS SIGNED) < '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                } elseif ($scale_range == '2') {
                    $sql_str_scale = " AND (  CAST(`scale` AS SIGNED) > '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                } elseif ($scale_range == '3') {
                    $sql_str_scale = " AND (  CAST(`scale` AS SIGNED) <= '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                } elseif ($scale_range == '4') {
                    $sql_str_scale = " AND (  CAST(`scale` AS SIGNED) >= '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                } elseif ($scale_range == '5') {
                    $sql_str_scale = " AND (  CAST(`scale` AS SIGNED) = '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                } elseif ($scale_range == '6') {
                    $min_value = min($start_scale_value, $end_scale_value);
                    $max_value = max($start_scale_value, $end_scale_value);
                    $sql_str_scale = " AND ( CAST(`scale` AS SIGNED) BETWEEN '" . $min_value . "' AND '" . $max_value . "' AND `bms_entry_type` = 'situation' ) ";
                } else {
                    $sql_str_scale = "";
                }
                if ($module_criteria == '9') {
                    $sql_str_report_module_criteria = '';
                }
                $sql = "SELECT DISTINCT `mdt_date` FROM `tblusersmdt` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`mdt_date` >= '" . $start_date . "' AND " . "`mdt_date` <= '" . $end_date . "' AND " . "`mdt_old_data` = '0'  " . $sql_str_scale . " " . $sql_str_report_module . " " . $sql_str_report_module_criteria . "  ORDER BY `mdt_date` DESC ";
                //echo "<br>Testkk sql = ".$sql;
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                        array_push($arr_mdt_date, $row['mdt_date']);
                    }
                }
                // $result = mysql_query($sql,$link);
                // if( ($result) && (mysql_num_rows($result) > 0) )
                // {
                //     while($row = mysql_fetch_array($result))
                //     {
                //         array_push($arr_mdt_date , $row['mdt_date']);
                //     }
                // }
                
            }
            if (count($arr_mdt_date) > 0) {
                for ($i = 0;$i < count($arr_mdt_date);$i++) {
                    $sql3 = "SELECT DISTINCT `mdt_time`, `mdt_duration` FROM `tblusersmdt` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`mdt_date` = '" . $arr_mdt_date[$i] . "' AND " . "`mdt_old_data` = '0'  " . $sql_str_scale . " " . $sql_str_report_module . " " . $sql_str_report_module_criteria . " ORDER BY `mdt_add_date` DESC ";
                    //echo "<br>".$sql3;
                    $STH = $DBH->query($sql3);
                    if ($STH->rowCount() > 0) {
                        $k = 0;
                        while ($row3 = $STH->fetch(PDO::FETCH_ASSOC)) {
                            $mdt_time = stripslashes($row3['mdt_time']);
                            $mdt_duration = stripslashes($row3['mdt_duration']);
                            $mdt_time_duration = $mdt_time . '_' . $mdt_duration;
                            $go_ahead = true;
                            if ($module_keyword == '' && $scale_range == '' && $module_criteria == '') {
                                $sql_str_scale2 = '';
                                $sql_str_report_module2 = '';
                                $sql_str_report_module_criteria2 = '';
                            } elseif ($module_keyword == '' && $scale_range == '' && $module_criteria != '') {
                                $sql_str_scale2 = '';
                                $sql_str_report_module2 = '';
                                if ($module_criteria == '9') {
                                    if ($criteria_scale_range == '1') {
                                        $sql_str_report_module_criteria2 = " AND ( ( CAST(`scale` AS SIGNED) < '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) OR (`bms_entry_type` = 'situation') )";
                                    } elseif ($criteria_scale_range == '2') {
                                        $sql_str_report_module_criteria2 = " AND ( ( CAST(`scale` AS SIGNED) > '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) OR (`bms_entry_type` = 'situation') )";
                                    } elseif ($criteria_scale_range == '3') {
                                        $sql_str_report_module_criteria2 = " AND ( ( CAST(`scale` AS SIGNED) <= '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) OR (`bms_entry_type` = 'situation') )";
                                    } elseif ($criteria_scale_range == '4') {
                                        $sql_str_report_module_criteria2 = " AND ( ( CAST(`scale` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) OR (`bms_entry_type` = 'situation') )";
                                    } elseif ($criteria_scale_range == '5') {
                                        $sql_str_report_module_criteria2 = " AND ( ( CAST(`scale` AS SIGNED) = '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) OR (`bms_entry_type` = 'situation') )";
                                    } elseif ($criteria_scale_range == '6') {
                                        $min_value = min($start_criteria_scale_value, $end_criteria_scale_value);
                                        $max_value = max($start_criteria_scale_value, $end_criteria_scale_value);
                                        $sql_str_report_module_criteria2 = " AND ( ( CAST(`scale` AS SIGNED) BETWEEN '" . $min_value . "' AND '" . $max_value . "' AND `bms_entry_type` = 'trigger' ) OR (`bms_entry_type` = 'situation') )";
                                    } else {
                                        $sql_str_report_module_criteria2 = "";
                                    }
                                    if ($trigger_criteria != '') {
                                        $sql_str_report_module2 = " AND ( ( `bms_id` = '" . $trigger_criteria . "' AND `bms_entry_type` = 'trigger') OR (`bms_entry_type` = 'situation') ) ";
                                    } else {
                                        $sql_str_report_module2 = '';
                                    }
                                }
                            } elseif ($module_keyword == '' && $scale_range != '' && $module_criteria == '') {
                                $sql_str_report_module2 = '';
                                $sql_str_report_module_criteria2 = '';
                                if ($scale_range == '1') {
                                    $sql_str_scale2 = " AND ( (  CAST(`scale` AS SIGNED) < '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' ) OR (`bms_entry_type` = 'trigger') ) ";
                                } elseif ($scale_range == '2') {
                                    $sql_str_scale2 = " AND ( ( CAST(`scale` AS SIGNED) > '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' ) OR (`bms_entry_type` = 'trigger') ) ";
                                } elseif ($scale_range == '3') {
                                    $sql_str_scale2 = " AND ( ( CAST(`scale` AS SIGNED) <= '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' ) OR (`bms_entry_type` = 'trigger') ) ";
                                } elseif ($scale_range == '4') {
                                    $sql_str_scale2 = " AND ( ( CAST(`scale` AS SIGNED) >= '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' ) OR (`bms_entry_type` = 'trigger') ) ";
                                } elseif ($scale_range == '5') {
                                    $sql_str_scale2 = " AND ( ( CAST(`scale` AS SIGNED) = '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' ) OR (`bms_entry_type` = 'trigger') ) ";
                                } elseif ($scale_range == '6') {
                                    $min_value = min($start_scale_value, $end_scale_value);
                                    $max_value = max($start_scale_value, $end_scale_value);
                                    $sql_str_scale2 = " AND ( ( CAST(`scale` AS SIGNED) BETWEEN '" . $min_value . "' AND '" . $max_value . "' AND `bms_entry_type` = 'situation' ) OR (`bms_entry_type` = 'trigger') ) ";
                                } else {
                                    $sql_str_scale2 = "";
                                }
                            } elseif ($module_keyword == '' && $scale_range != '' && $module_criteria != '') {
                                $sql_str_report_module2 = '';
                                if ($module_criteria == '9') {
                                    $sql_str_report_module_criteria2 = '';
                                    if ($trigger_criteria != '') {
                                        $sql_str_report_module2 = " AND ( ( `bms_id` = '" . $trigger_criteria . "' AND `bms_entry_type` = 'trigger') OR (`bms_entry_type` = 'situation') ) ";
                                        $sql_str_report_module3 = " AND ( `bms_id` = '" . $trigger_criteria . "' AND `bms_entry_type` = 'trigger') ";
                                        if ($criteria_scale_range == '1') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) < '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '2') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) > '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '3') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) <= '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '4') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '5') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) = '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '6') {
                                            $min_value = min($start_criteria_scale_value, $end_criteria_scale_value);
                                            $max_value = max($start_criteria_scale_value, $end_criteria_scale_value);
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) BETWEEN '" . $min_value . "' AND '" . $max_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } else {
                                            $sql_str_report_module_criteria2 = "";
                                        }
                                        if ($scale_range == '1') {
                                            $sql_str_scale2 = " (  CAST(`scale` AS SIGNED) < '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                                        } elseif ($scale_range == '2') {
                                            $sql_str_scale2 = " (  CAST(`scale` AS SIGNED) > '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                                        } elseif ($scale_range == '3') {
                                            $sql_str_scale2 = " (  CAST(`scale` AS SIGNED) <= '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                                        } elseif ($scale_range == '4') {
                                            $sql_str_scale2 = " (  CAST(`scale` AS SIGNED) >= '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                                        } elseif ($scale_range == '5') {
                                            $sql_str_scale2 = " (  CAST(`scale` AS SIGNED) = '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                                        } elseif ($scale_range == '6') {
                                            $min_value = min($start_scale_value, $end_scale_value);
                                            $max_value = max($start_scale_value, $end_scale_value);
                                            $sql_str_scale2 = " ( CAST(`scale` AS SIGNED) BETWEEN '" . $min_value . "' AND '" . $max_value . "' AND `bms_entry_type` = 'situation' ) ";
                                        } else {
                                            $sql_str_scale2 = "";
                                        }
                                        if ($sql_str_report_module_criteria2 == "") {
                                            $sql_str_report_module_criteria3 = "";
                                        } else {
                                            $sql_str_report_module_criteria3 = " AND " . $sql_str_report_module_criteria2;
                                        }
                                        if ($sql_str_scale2 == "") {
                                            $sql_str_scale3 = "";
                                        } else {
                                            $sql_str_scale3 = " AND " . $sql_str_scale2;
                                        }
                                        $sql2_s = "SELECT * FROM `tblusersmdt` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`mdt_date` = '" . $arr_mdt_date[$i] . "' AND " . "`mdt_time` = '" . $mdt_time . "' AND " . "`mdt_duration` = '" . $mdt_duration . "' AND " . "`mdt_old_data` = '0'  " . $sql_str_scale3 . " ORDER BY `mdt_add_date` DESC ";
                                        //echo "<br>".$sql2_s;
                                        $STH = $DBH->query($sql2_s);
                                        if ($STH->rowCount() > 0) {
                                            $sql2_t = "SELECT * FROM `tblusersmdt` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`mdt_date` = '" . $arr_mdt_date[$i] . "' AND " . "`mdt_time` = '" . $mdt_time . "' AND " . "`mdt_duration` = '" . $mdt_duration . "' AND " . "`mdt_old_data` = '0'  " . $sql_str_report_module_criteria3 . " " . $sql_str_report_module3 . " ORDER BY `mdt_add_date` DESC ";
                                            //echo "<br>".$sql2_t;
                                            $STH = $DBH->query($sql2_t);
                                            // $result2_t = mysql_query($sql2_t,$link);
                                            if ($STH->rowCount() > 0) {
                                            } else {
                                                $go_ahead = false;
                                            }
                                        } else {
                                            $go_ahead = false;
                                        }
                                        if ($sql_str_scale2 == "") {
                                            if ($sql_str_report_module_criteria2 == "") {
                                            } else {
                                                $sql_str_report_module_criteria2 = " AND " . $sql_str_report_module_criteria2;
                                            }
                                        } else {
                                            if ($sql_str_report_module_criteria2 == "") {
                                                $sql_str_scale2 = " AND ( " . $sql_str_scale2 . " OR (`bms_entry_type` = 'trigger'))";
                                            } else {
                                                $sql_str_scale2 = " AND ( " . $sql_str_report_module_criteria2 . " OR " . $sql_str_scale2 . " )";
                                                $sql_str_report_module_criteria2 = "";
                                            }
                                        }
                                    } else {
                                        $sql_str_report_module2 = '';
                                        if ($scale_range == '1') {
                                            $sql_str_scale2 = " (  CAST(`scale` AS SIGNED) < '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                                        } elseif ($scale_range == '2') {
                                            $sql_str_scale2 = " (  CAST(`scale` AS SIGNED) > '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                                        } elseif ($scale_range == '3') {
                                            $sql_str_scale2 = " (  CAST(`scale` AS SIGNED) <= '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                                        } elseif ($scale_range == '4') {
                                            $sql_str_scale2 = " (  CAST(`scale` AS SIGNED) >= '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                                        } elseif ($scale_range == '5') {
                                            $sql_str_scale2 = " (  CAST(`scale` AS SIGNED) = '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                                        } elseif ($scale_range == '6') {
                                            $min_value = min($start_scale_value, $end_scale_value);
                                            $max_value = max($start_scale_value, $end_scale_value);
                                            $sql_str_scale2 = " ( CAST(`scale` AS SIGNED) BETWEEN '" . $min_value . "' AND '" . $max_value . "' AND `bms_entry_type` = 'situation' ) ";
                                        } else {
                                            $sql_str_scale2 = "";
                                        }
                                        if ($criteria_scale_range == '1') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) < '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '2') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) > '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '3') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) <= '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '4') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '5') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) = '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '6') {
                                            $min_value = min($start_criteria_scale_value, $end_criteria_scale_value);
                                            $max_value = max($start_criteria_scale_value, $end_criteria_scale_value);
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) BETWEEN '" . $min_value . "' AND '" . $max_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } else {
                                            $sql_str_report_module_criteria2 = "";
                                        }
                                        if ($sql_str_report_module_criteria2 == "") {
                                            $sql_str_report_module_criteria3 = "";
                                        } else {
                                            $sql_str_report_module_criteria3 = " AND " . $sql_str_report_module_criteria2;
                                        }
                                        if ($sql_str_scale2 == "") {
                                            $sql_str_scale3 = "";
                                        } else {
                                            $sql_str_scale3 = " AND " . $sql_str_scale2;
                                        }
                                        $sql2_s = "SELECT * FROM `tblusersmdt` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`mdt_date` = '" . $arr_mdt_date[$i] . "' AND " . "`mdt_time` = '" . $mdt_time . "' AND " . "`mdt_duration` = '" . $mdt_duration . "' AND " . "`mdt_old_data` = '0'  " . $sql_str_scale3 . " ORDER BY `mdt_add_date` DESC ";
                                        //echo "<br>".$sql2_s;
                                        // $result2_s = mysql_query($sql2_s,$link);
                                        $STH = $DBH->query($sql2_s);
                                        if ($STH->rowCount() > 0) {
                                            $sql2_t = "SELECT * FROM `tblusersmdt` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`mdt_date` = '" . $arr_mdt_date[$i] . "' AND " . "`mdt_time` = '" . $mdt_time . "' AND " . "`mdt_duration` = '" . $mdt_duration . "' AND " . "`mdt_old_data` = '0'  " . $sql_str_report_module_criteria3 . " ORDER BY `mdt_add_date` DESC ";
                                            //echo "<br>".$sql2_t;
                                            $STH = $DBH->query($sql2_t);
                                            $result2_t = mysql_query($sql2_t, $link);
                                            if ($STH->rowCount() > 0) {
                                            } else {
                                                $go_ahead = false;
                                            }
                                        } else {
                                            $go_ahead = false;
                                        }
                                        if ($sql_str_scale2 == "") {
                                            if ($sql_str_report_module_criteria2 == "") {
                                            } else {
                                                $sql_str_report_module_criteria2 = " AND " . $sql_str_report_module_criteria2;
                                            }
                                        } else {
                                            if ($sql_str_report_module_criteria2 == "") {
                                                $sql_str_scale2 = " AND ( " . $sql_str_scale2 . " OR (`bms_entry_type` = 'trigger'))";
                                            } else {
                                                $sql_str_scale2 = " AND ( " . $sql_str_report_module_criteria2 . " OR " . $sql_str_scale2 . " )";
                                                $sql_str_report_module_criteria2 = "";
                                            }
                                        }
                                    }
                                } else {
                                    if ($scale_range == '1') {
                                        $sql_str_scale2 = " AND (  CAST(`scale` AS SIGNED) < '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                                    } elseif ($scale_range == '2') {
                                        $sql_str_scale2 = " AND (  CAST(`scale` AS SIGNED) > '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                                    } elseif ($scale_range == '3') {
                                        $sql_str_scale2 = " AND (  CAST(`scale` AS SIGNED) <= '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                                    } elseif ($scale_range == '4') {
                                        $sql_str_scale2 = " AND (  CAST(`scale` AS SIGNED) >= '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                                    } elseif ($scale_range == '5') {
                                        $sql_str_scale2 = " AND ( ( CAST(`scale` AS SIGNED) = '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' ) OR (`bms_entry_type` = 'trigger') )  ";
                                    } elseif ($scale_range == '6') {
                                        $min_value = min($start_scale_value, $end_scale_value);
                                        $max_value = max($start_scale_value, $end_scale_value);
                                        $sql_str_scale2 = " AND ( CAST(`scale` AS SIGNED) BETWEEN '" . $min_value . "' AND '" . $max_value . "' AND `bms_entry_type` = 'situation' ) ";
                                    } else {
                                        $sql_str_scale2 = "";
                                    }
                                }
                            } elseif ($module_keyword != '' && $scale_range == '' && $module_criteria == '') {
                                $sql_str_scale2 = '';
                                $sql_str_report_module_criteria2 = '';
                                $sql_str_report_module2 = " AND ( ( `bms_id` = '" . $module_keyword . "' AND `bms_entry_type` = 'situation') OR (`bms_entry_type` = 'trigger') ) ";
                            } elseif ($module_keyword != '' && $scale_range == '' && $module_criteria != '') {
                                $sql_str_scale2 = '';
                                $sql_str_report_module2 = " AND ( ( `bms_id` = '" . $module_keyword . "' AND `bms_entry_type` = 'situation') OR (`bms_entry_type` = 'trigger') ) ";
                                if ($module_criteria == '9') {
                                    $sql_str_report_module_criteria2 = '';
                                    if ($trigger_criteria != '') {
                                        //$sql_str_report_module2 = " AND ( ( `bms_id` = '".$trigger_criteria."' AND `bms_entry_type` = 'trigger') OR (`bms_entry_type` = 'situation') ) ";
                                        $sql_str_report_module3 = " AND ( `bms_id` = '" . $trigger_criteria . "' AND `bms_entry_type` = 'trigger') ";
                                        $sql_str_report_module3_s = " AND ( `bms_id` = '" . $module_keyword . "' AND `bms_entry_type` = 'situation') ";
                                        $sql_str_report_module2 = " AND ( ( `bms_id` = '" . $module_keyword . "' AND `bms_entry_type` = 'situation') OR (`bms_id` = '" . $trigger_criteria . "' AND `bms_entry_type` = 'trigger') ) ";
                                        if ($criteria_scale_range == '1') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) < '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '2') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) > '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '3') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) <= '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '4') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '5') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) = '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '6') {
                                            $min_value = min($start_criteria_scale_value, $end_criteria_scale_value);
                                            $max_value = max($start_criteria_scale_value, $end_criteria_scale_value);
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) BETWEEN '" . $min_value . "' AND '" . $max_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } else {
                                            $sql_str_report_module_criteria2 = "";
                                        }
                                        $sql_str_scale2 = "";
                                        if ($sql_str_report_module_criteria2 == "") {
                                            $sql_str_report_module_criteria3 = "";
                                        } else {
                                            $sql_str_report_module_criteria3 = " AND " . $sql_str_report_module_criteria2;
                                        }
                                        if ($sql_str_scale2 == "") {
                                            $sql_str_scale3 = "";
                                        } else {
                                            $sql_str_scale3 = " AND " . $sql_str_scale2;
                                        }
                                        $sql2_s = "SELECT * FROM `tblusersmdt` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`mdt_date` = '" . $arr_mdt_date[$i] . "' AND " . "`mdt_time` = '" . $mdt_time . "' AND " . "`mdt_duration` = '" . $mdt_duration . "' AND " . "`mdt_old_data` = '0'  " . $sql_str_scale3 . " " . $sql_str_report_module3_s . " ORDER BY `mdt_add_date` DESC ";
                                        //echo "<br>".$sql2_s;
                                        $STH = $DBH->query($sql2_s);
                                        // $result2_s = mysql_query($sql2_s,$link);
                                        if ($STH->rowCount() > 0) {
                                            $sql2_t = "SELECT * FROM `tblusersmdt` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`mdt_date` = '" . $arr_mdt_date[$i] . "' AND " . "`mdt_time` = '" . $mdt_time . "' AND " . "`mdt_duration` = '" . $mdt_duration . "' AND " . "`mdt_old_data` = '0'  " . $sql_str_report_module_criteria3 . " " . $sql_str_report_module3 . " ORDER BY `mdt_add_date` DESC ";
                                            //echo "<br>".$sql2_t;
                                            // $result2_t = mysql_query($sql2_t,$link);
                                            $STH = $DBH->query($sql2_t);
                                            if ($STH->rowCount() > 0) {
                                            } else {
                                                $go_ahead = false;
                                            }
                                        } else {
                                            $go_ahead = false;
                                        }
                                        if ($sql_str_scale2 == "") {
                                            if ($sql_str_report_module_criteria2 == "") {
                                            } else {
                                                $sql_str_report_module_criteria2 = " AND ( " . $sql_str_report_module_criteria2 . " OR (`bms_entry_type` = 'situation'))";
                                            }
                                        } else {
                                            if ($sql_str_report_module_criteria2 == "") {
                                                $sql_str_scale2 = " AND ( " . $sql_str_scale2 . " OR (`bms_entry_type` = 'trigger'))";
                                            } else {
                                                $sql_str_scale2 = " AND ( " . $sql_str_report_module_criteria2 . " OR " . $sql_str_scale2 . " )";
                                                $sql_str_report_module_criteria2 = "";
                                            }
                                        }
                                    } else {
                                        $sql_str_report_module3 = "";
                                        $sql_str_report_module3_s = " AND ( `bms_id` = '" . $module_keyword . "' AND `bms_entry_type` = 'situation') ";
                                        $sql_str_report_module2 = " AND ( ( `bms_id` = '" . $module_keyword . "' AND `bms_entry_type` = 'situation') OR (`bms_entry_type` = 'trigger') ) ";
                                        if ($criteria_scale_range == '1') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) < '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '2') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) > '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '3') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) <= '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '4') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '5') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) = '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '6') {
                                            $min_value = min($start_criteria_scale_value, $end_criteria_scale_value);
                                            $max_value = max($start_criteria_scale_value, $end_criteria_scale_value);
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) BETWEEN '" . $min_value . "' AND '" . $max_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } else {
                                            $sql_str_report_module_criteria2 = "";
                                        }
                                        $sql_str_scale2 = "";
                                        if ($sql_str_report_module_criteria2 == "") {
                                            $sql_str_report_module_criteria3 = "";
                                        } else {
                                            $sql_str_report_module_criteria3 = " AND " . $sql_str_report_module_criteria2;
                                        }
                                        if ($sql_str_scale2 == "") {
                                            $sql_str_scale3 = "";
                                        } else {
                                            $sql_str_scale3 = " AND " . $sql_str_scale2;
                                        }
                                        $sql2_s = "SELECT * FROM `tblusersmdt` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`mdt_date` = '" . $arr_mdt_date[$i] . "' AND " . "`mdt_time` = '" . $mdt_time . "' AND " . "`mdt_duration` = '" . $mdt_duration . "' AND " . "`mdt_old_data` = '0'  " . $sql_str_scale3 . " " . $sql_str_report_module3_s . " ORDER BY `mdt_add_date` DESC ";
                                        //echo "<br>".$sql2_s;
                                        // $result2_s = mysql_query($sql2_s,$link);
                                        $STH = $DBH->query($sql2_s);
                                        if ($STH->rowCount() > 0) {
                                            $sql2_t = "SELECT * FROM `tblusersmdt` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`mdt_date` = '" . $arr_mdt_date[$i] . "' AND " . "`mdt_time` = '" . $mdt_time . "' AND " . "`mdt_duration` = '" . $mdt_duration . "' AND " . "`mdt_old_data` = '0'  " . $sql_str_report_module_criteria3 . " " . $sql_str_report_module3 . " ORDER BY `mdt_add_date` DESC ";
                                            //echo "<br>".$sql2_t;
                                            // $result2_t = mysql_query($sql2_t,$link);
                                            $STH = $DBH->query($sql2_t);
                                            if ($STH->rowCount() > 0) {
                                            } else {
                                                $go_ahead = false;
                                            }
                                        } else {
                                            $go_ahead = false;
                                        }
                                        if ($sql_str_scale2 == "") {
                                            if ($sql_str_report_module_criteria2 == "") {
                                            } else {
                                                $sql_str_report_module_criteria2 = " AND ( " . $sql_str_report_module_criteria2 . " OR (`bms_entry_type` = 'situation'))";
                                            }
                                        } else {
                                            if ($sql_str_report_module_criteria2 == "") {
                                                $sql_str_scale2 = " AND ( " . $sql_str_scale2 . " OR (`bms_entry_type` = 'trigger'))";
                                            } else {
                                                $sql_str_scale2 = " AND ( " . $sql_str_report_module_criteria2 . " OR " . $sql_str_scale2 . " )";
                                                $sql_str_report_module_criteria2 = "";
                                            }
                                        }
                                    }
                                } else {
                                    $sql_str_report_module_criteria2 = '';
                                }
                            } elseif ($module_keyword != '' && $scale_range != '' && $module_criteria == '') {
                                $sql_str_report_module_criteria2 = '';
                                $sql_str_report_module2 = " AND ( ( `bms_id` = '" . $module_keyword . "' AND `bms_entry_type` = 'situation' ) OR (`bms_entry_type` = 'trigger') ) ";
                                if ($scale_range == '1') {
                                    $sql_str_scale2 = " AND ( ( CAST(`scale` AS SIGNED) < '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' ) OR (`bms_entry_type` = 'trigger') ) ";
                                } elseif ($scale_range == '2') {
                                    $sql_str_scale2 = " AND ( ( CAST(`scale` AS SIGNED) > '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  OR (`bms_entry_type` = 'trigger') ) ";
                                } elseif ($scale_range == '3') {
                                    $sql_str_scale2 = " AND ( ( CAST(`scale` AS SIGNED) <= '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  OR (`bms_entry_type` = 'trigger') ) ";
                                } elseif ($scale_range == '4') {
                                    $sql_str_scale2 = " AND ( ( CAST(`scale` AS SIGNED) >= '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' ) OR (`bms_entry_type` = 'trigger') ) ";
                                } elseif ($scale_range == '5') {
                                    $sql_str_scale2 = " AND ( ( CAST(`scale` AS SIGNED) = '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' ) OR (`bms_entry_type` = 'trigger') ) ";
                                } elseif ($scale_range == '6') {
                                    $min_value = min($start_scale_value, $end_scale_value);
                                    $max_value = max($start_scale_value, $end_scale_value);
                                    $sql_str_scale2 = " AND ( ( CAST(`scale` AS SIGNED) BETWEEN '" . $min_value . "' AND '" . $max_value . "' AND `bms_entry_type` = 'situation' ) OR (`bms_entry_type` = 'trigger') ) ";
                                } else {
                                    $sql_str_scale2 = "";
                                }
                            } else {
                                $sql_str_scale2 = '';
                                $sql_str_report_module2 = " AND ( ( `bms_id` = '" . $module_keyword . "' AND `bms_entry_type` = 'situation') OR (`bms_entry_type` = 'trigger') ) ";
                                if ($scale_range == '1') {
                                    $sql_str_scale2 = " (  CAST(`scale` AS SIGNED) < '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                                } elseif ($scale_range == '2') {
                                    $sql_str_scale2 = " (  CAST(`scale` AS SIGNED) > '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                                } elseif ($scale_range == '3') {
                                    $sql_str_scale2 = " (  CAST(`scale` AS SIGNED) <= '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                                } elseif ($scale_range == '4') {
                                    $sql_str_scale2 = " (  CAST(`scale` AS SIGNED) >= '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                                } elseif ($scale_range == '5') {
                                    $sql_str_scale2 = " (  CAST(`scale` AS SIGNED) = '" . $start_scale_value . "' AND `bms_entry_type` = 'situation' )  ";
                                } elseif ($scale_range == '6') {
                                    $min_value = min($start_scale_value, $end_scale_value);
                                    $max_value = max($start_scale_value, $end_scale_value);
                                    $sql_str_scale2 = " ( CAST(`scale` AS SIGNED) BETWEEN '" . $min_value . "' AND '" . $max_value . "' AND `bms_entry_type` = 'situation' ) ";
                                } else {
                                    $sql_str_scale2 = "";
                                }
                                if ($module_criteria == '9') {
                                    $sql_str_report_module_criteria2 = '';
                                    if ($trigger_criteria != '') {
                                        //$sql_str_report_module2 = " AND ( ( `bms_id` = '".$trigger_criteria."' AND `bms_entry_type` = 'trigger') OR (`bms_entry_type` = 'situation') ) ";
                                        $sql_str_report_module3 = " AND ( `bms_id` = '" . $trigger_criteria . "' AND `bms_entry_type` = 'trigger') ";
                                        $sql_str_report_module3_s = " AND ( `bms_id` = '" . $module_keyword . "' AND `bms_entry_type` = 'situation') ";
                                        $sql_str_report_module2 = " AND ( ( `bms_id` = '" . $module_keyword . "' AND `bms_entry_type` = 'situation') OR (`bms_id` = '" . $trigger_criteria . "' AND `bms_entry_type` = 'trigger') ) ";
                                        if ($criteria_scale_range == '1') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) < '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '2') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) > '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '3') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) <= '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '4') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '5') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) = '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '6') {
                                            $min_value = min($start_criteria_scale_value, $end_criteria_scale_value);
                                            $max_value = max($start_criteria_scale_value, $end_criteria_scale_value);
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) BETWEEN '" . $min_value . "' AND '" . $max_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } else {
                                            $sql_str_report_module_criteria2 = "";
                                        }
                                        if ($sql_str_report_module_criteria2 == "") {
                                            $sql_str_report_module_criteria3 = "";
                                        } else {
                                            $sql_str_report_module_criteria3 = " AND " . $sql_str_report_module_criteria2;
                                        }
                                        if ($sql_str_scale2 == "") {
                                            $sql_str_scale3 = "";
                                        } else {
                                            $sql_str_scale3 = " AND " . $sql_str_scale2;
                                        }
                                        $sql2_s = "SELECT * FROM `tblusersmdt` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`mdt_date` = '" . $arr_mdt_date[$i] . "' AND " . "`mdt_time` = '" . $mdt_time . "' AND " . "`mdt_duration` = '" . $mdt_duration . "' AND " . "`mdt_old_data` = '0'  " . $sql_str_scale3 . " " . $sql_str_report_module3_s . " ORDER BY `mdt_add_date` DESC ";
                                        //echo "<br>".$sql2_s;
                                        // $result2_s = mysql_query($sql2_s,$link);
                                        $STH = $DBH->query($sql2_s);
                                        if ($STH->rowCount() > 0) {
                                            $sql2_t = "SELECT * FROM `tblusersmdt` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`mdt_date` = '" . $arr_mdt_date[$i] . "' AND " . "`mdt_time` = '" . $mdt_time . "' AND " . "`mdt_duration` = '" . $mdt_duration . "' AND " . "`mdt_old_data` = '0'  " . $sql_str_report_module_criteria3 . " " . $sql_str_report_module3 . " ORDER BY `mdt_add_date` DESC ";
                                            //echo "<br>".$sql2_t;
                                            // $result2_t = mysql_query($sql2_t,$link);
                                            $STH = $DBH->query($sql2_t);
                                            if ($STH->rowCount() > 0) {
                                            } else {
                                                $go_ahead = false;
                                            }
                                        } else {
                                            $go_ahead = false;
                                        }
                                        if ($sql_str_scale2 == "") {
                                            if ($sql_str_report_module_criteria2 == "") {
                                            } else {
                                                $sql_str_report_module_criteria2 = " AND " . $sql_str_report_module_criteria2;
                                            }
                                        } else {
                                            if ($sql_str_report_module_criteria2 == "") {
                                                $sql_str_scale2 = " AND ( " . $sql_str_scale2 . " OR (`bms_entry_type` = 'trigger'))";
                                            } else {
                                                $sql_str_scale2 = " AND ( " . $sql_str_report_module_criteria2 . " OR " . $sql_str_scale2 . " )";
                                                $sql_str_report_module_criteria2 = "";
                                            }
                                        }
                                    } else {
                                        $sql_str_report_module3 = "";
                                        $sql_str_report_module3_s = " AND ( `bms_id` = '" . $module_keyword . "' AND `bms_entry_type` = 'situation') ";
                                        $sql_str_report_module2 = " AND ( ( `bms_id` = '" . $module_keyword . "' AND `bms_entry_type` = 'situation') OR (`bms_entry_type` = 'trigger') ) ";
                                        if ($criteria_scale_range == '1') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) < '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '2') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) > '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '3') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) <= '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '4') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '5') {
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) = '" . $start_criteria_scale_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } elseif ($criteria_scale_range == '6') {
                                            $min_value = min($start_criteria_scale_value, $end_criteria_scale_value);
                                            $max_value = max($start_criteria_scale_value, $end_criteria_scale_value);
                                            $sql_str_report_module_criteria2 = " ( CAST(`scale` AS SIGNED) BETWEEN '" . $min_value . "' AND '" . $max_value . "' AND `bms_entry_type` = 'trigger' ) ";
                                        } else {
                                            $sql_str_report_module_criteria2 = "";
                                        }
                                        if ($sql_str_report_module_criteria2 == "") {
                                            $sql_str_report_module_criteria3 = "";
                                        } else {
                                            $sql_str_report_module_criteria3 = " AND " . $sql_str_report_module_criteria2;
                                        }
                                        if ($sql_str_scale2 == "") {
                                            $sql_str_scale3 = "";
                                        } else {
                                            $sql_str_scale3 = " AND " . $sql_str_scale2;
                                        }
                                        $sql2_s = "SELECT * FROM `tblusersmdt` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`mdt_date` = '" . $arr_mdt_date[$i] . "' AND " . "`mdt_time` = '" . $mdt_time . "' AND " . "`mdt_duration` = '" . $mdt_duration . "' AND " . "`mdt_old_data` = '0'  " . $sql_str_scale3 . " " . $sql_str_report_module3_s . " ORDER BY `mdt_add_date` DESC ";
                                        //echo "<br>".$sql2_s;
                                        // $result2_s = mysql_query($sql2_s,$link);
                                        $STH = $DBH->query($sql2_s);
                                        if ($STH->rowCount() > 0) {
                                            $sql2_t = "SELECT * FROM `tblusersmdt` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`mdt_date` = '" . $arr_mdt_date[$i] . "' AND " . "`mdt_time` = '" . $mdt_time . "' AND " . "`mdt_duration` = '" . $mdt_duration . "' AND " . "`mdt_old_data` = '0'  " . $sql_str_report_module_criteria3 . " " . $sql_str_report_module3 . " ORDER BY `mdt_add_date` DESC ";
                                            //echo "<br>".$sql2_t;
                                            // $result2_t = mysql_query($sql2_t,$link);
                                            $STH = $DBH->query($sql2_t);
                                            if ($STH->rowCount() > 0) {
                                            } else {
                                                $go_ahead = false;
                                            }
                                        } else {
                                            $go_ahead = false;
                                        }
                                        if ($sql_str_scale2 == "") {
                                            if ($sql_str_report_module_criteria2 == "") {
                                            } else {
                                                $sql_str_report_module_criteria2 = " AND " . $sql_str_report_module_criteria2;
                                            }
                                        } else {
                                            if ($sql_str_report_module_criteria2 == "") {
                                                $sql_str_scale2 = " AND ( " . $sql_str_scale2 . " OR (`bms_entry_type` = 'trigger'))";
                                            } else {
                                                $sql_str_scale2 = " AND ( " . $sql_str_report_module_criteria2 . " OR " . $sql_str_scale2 . " )";
                                                $sql_str_report_module_criteria2 = "";
                                            }
                                        }
                                    }
                                } else {
                                    $sql_str_report_module_criteria2 = '';
                                }
                            }
                            if ($go_ahead) {
                                $sql2 = "SELECT * FROM `tblusersmdt` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`mdt_date` = '" . $arr_mdt_date[$i] . "' AND " . "`mdt_time` = '" . $mdt_time . "' AND " . "`mdt_duration` = '" . $mdt_duration . "' AND " . "`mdt_old_data` = '0'  " . $sql_str_scale2 . " " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . " ORDER BY `mdt_add_date` DESC ";
                                //echo "<br>".$sql2;
                                // $result2 = mysql_query($sql2,$link);
                                $STH = $DBH->query($sql2);
                                if ($STH->rowCount() > 0) {
                                    $j = 0;
                                    while ($row2 = $STH->fetch(PDO::FETCH_ASSOC)) {
                                        if ($row2['bms_id'] != '0') {
                                            $mdt_return = true;
                                            /*
                                            
                                            
                                            
                                            $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration]['bms_id'][$j] = $row2['bms_id'];
                                            
                                            
                                            
                                            $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration]['bms_type'][$j] = $row2['bms_type'];
                                            
                                            
                                            
                                            $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration]['bms_entry_type'][$j] = $row2['bms_entry_type'];
                                            
                                            
                                            
                                            $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration]['scale'][$j] = $row2['scale'];
                                            
                                            
                                            
                                            $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration]['scale_image'][$j] = getScaleImage($row2['scale']);
                                            
                                            
                                            
                                            $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration]['responce'][$j] = stripslashes($row2['remarks']);
                                            
                                            
                                            
                                            $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration]['my_target'][$j] = stripslashes($row2['my_target']);
                                            
                                            
                                            
                                            $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration]['adviser_target'][$j] = stripslashes($row2['adviser_target']);
                                            
                                            
                                            
                                            $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration]['mdt_time'][$j] = stripslashes($row2['mdt_time']);
                                            
                                            
                                            
                                            $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration]['mdt_duration'][$j] = stripslashes($row2['mdt_duration']);
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration][$j]['bms_id'] = $row2['bms_id'];
                                            
                                            
                                            
                                            $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration][$j]['bms_type'] = $row2['bms_type'];
                                            
                                            
                                            
                                            $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration][$j]['bms_entry_type'] = $row2['bms_entry_type'];
                                            
                                            
                                            
                                            $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration][$j]['scale'] = $row2['scale'];
                                            
                                            
                                            
                                            $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration][$j]['scale_image'] = getScaleImage($row2['scale']);
                                            
                                            
                                            
                                            $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration][$j]['responce'] = stripslashes($row2['remarks']);
                                            
                                            
                                            
                                            $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration][$j]['my_target'] = stripslashes($row2['my_target']);
                                            
                                            
                                            
                                            $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration][$j]['adviser_target'] = stripslashes($row2['adviser_target']);
                                            
                                            
                                            
                                            $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration][$j]['mdt_time'] = stripslashes($row2['mdt_time']);
                                            
                                            
                                            
                                            $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration][$j]['mdt_duration'] = stripslashes($row2['mdt_duration']);
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                             * 
                                            
                                            
                                            
                                            */
                                            if ($module_keyword != '' && $trigger_criteria == '') {
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['bms_id'] = $row2['bms_id'];
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['bms_type'] = $row2['bms_type'];
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['bms_entry_type'] = $row2['bms_entry_type'];
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['scale'] = $row2['scale'];
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['scale_image'] = $obj->getScaleImage($row2['scale']);
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['responce'] = stripslashes($row2['remarks']);
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['my_target'] = stripslashes($row2['my_target']);
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['adviser_target'] = stripslashes($row2['adviser_target']);
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['mdt_time'] = stripslashes($row2['mdt_time']);
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['mdt_duration'] = stripslashes($row2['mdt_duration']);
                                                $k++;
                                            } elseif ($module_keyword != '' && $trigger_criteria != '') {
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['bms_id'] = $row2['bms_id'];
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['bms_type'] = $row2['bms_type'];
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['bms_entry_type'] = $row2['bms_entry_type'];
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['scale'] = $row2['scale'];
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['scale_image'] = $obj->getScaleImage($row2['scale']);
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['responce'] = stripslashes($row2['remarks']);
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['my_target'] = stripslashes($row2['my_target']);
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['adviser_target'] = stripslashes($row2['adviser_target']);
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['mdt_time'] = stripslashes($row2['mdt_time']);
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['mdt_duration'] = stripslashes($row2['mdt_duration']);
                                                $k++;
                                            } elseif ($module_keyword == '' && $trigger_criteria != '') {
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['bms_id'] = $row2['bms_id'];
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['bms_type'] = $row2['bms_type'];
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['bms_entry_type'] = $row2['bms_entry_type'];
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['scale'] = $row2['scale'];
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['scale_image'] = $obj->getScaleImage($row2['scale']);
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['responce'] = stripslashes($row2['remarks']);
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['my_target'] = stripslashes($row2['my_target']);
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['adviser_target'] = stripslashes($row2['adviser_target']);
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['mdt_time'] = stripslashes($row2['mdt_time']);
                                                $arr_mdt_records[$arr_mdt_date[$i]][$k]['mdt_duration'] = stripslashes($row2['mdt_duration']);
                                                $k++;
                                            } else {
                                                $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration]['bms_id'][$j] = $row2['bms_id'];
                                                $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration]['bms_type'][$j] = $row2['bms_type'];
                                                $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration]['bms_entry_type'][$j] = $row2['bms_entry_type'];
                                                $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration]['scale'][$j] = $row2['scale'];
                                                $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration]['scale_image'][$j] = $obj->$obj->getScaleImage($row2['scale']);
                                                $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration]['responce'][$j] = stripslashes($row2['remarks']);
                                                $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration]['my_target'][$j] = stripslashes($row2['my_target']);
                                                $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration]['adviser_target'][$j] = stripslashes($row2['adviser_target']);
                                                $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration]['mdt_time'][$j] = stripslashes($row2['mdt_time']);
                                                $arr_mdt_records[$arr_mdt_date[$i]][$mdt_time_duration]['mdt_duration'][$j] = stripslashes($row2['mdt_duration']);
                                                $j++;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        // echo "<pre>";print_r($food_return);echo "</pre>";
        // 	exit;
        return array($food_return, $arr_meal_date, $arr_food_records, $activity_return, $arr_activity_date, $arr_activity_records, $wae_return, $arr_wae_date, $arr_wae_records, $gs_return, $arr_gs_date, $arr_gs_records, $sleep_return, $arr_sleep_date, $arr_sleep_records, $mc_return, $arr_mc_date, $arr_mc_records, $mr_return, $arr_mr_date, $arr_mr_records, $mle_return, $arr_mle_date, $arr_mle_records, $adct_return, $arr_adct_date, $arr_adct_records, $bps_return, $arr_bps_date, $arr_bps_records, $bes_return, $arr_bes_date, $arr_bes_records, $aa_return, $arr_aa_records, $mt_return, $arr_mt_records, $mdt_return, $arr_mdt_date, $arr_mdt_records);
    }
    // ---------------------------------------------------------------------------------------
    public function getActivityChart($user_id, $start_date, $end_date, $permission_type = '0', $pro_user_id = '0', $scale_range = '', $start_scale_value = '', $end_scale_value = '', $report_module = '', $module_keyword = '', $module_criteria = '', $criteria_scale_range = '', $start_criteria_scale_value = '', $end_criteria_scale_value = '') {
        /* echo "<pre>";print_r('hi5');echo "<pre>";
        
        exit;*/
        // global $link;
        $DBH = new DatabaseHandler();
        $return = false;
        $arr_date = array();
        $arr_records = array();
        $arr_total_records = array();
        $total_cal_burned = 0;
        $total_activity_entry = $obj->getTotalNoOfActivityEntry($user_id, $start_date, $end_date, $permission_type, $pro_user_id, $scale_range, $start_scale_value, $end_scale_value, $report_module, $module_keyword, $module_criteria, $criteria_scale_range, $start_criteria_scale_value, $end_criteria_scale_value);
        if ($module_keyword != '') {
            $sql_str_report_module = " AND `activity_id` = '" . $module_keyword . "' ";
            $sql_str_report_module2 = " AND tuda.activity_id = '" . $module_keyword . "' ";
        } else {
            $sql_str_report_module = '';
            $sql_str_report_module2 = '';
        }
        if ($module_criteria == '4') {
            if ($criteria_scale_range == '1') {
                $sql_str_report_module_criteria = " AND `activity_time` < '" . $start_criteria_scale_value . "' ";
                $sql_str_report_module_criteria2 = " AND tuda.activity_time < '" . $start_criteria_scale_value . "' ";
            } elseif ($criteria_scale_range == '2') {
                $sql_str_report_module_criteria = " AND `activity_time` > '" . $start_criteria_scale_value . "' ";
                $sql_str_report_module_criteria2 = " AND tuda.activity_time > '" . $start_criteria_scale_value . "' ";
            } elseif ($criteria_scale_range == '3') {
                $sql_str_report_module_criteria = " AND `activity_time` <= '" . $start_criteria_scale_value . "' ";
                $sql_str_report_module_criteria2 = " AND tuda.activity_time <= '" . $start_criteria_scale_value . "' ";
            } elseif ($criteria_scale_range == '4') {
                $sql_str_report_module_criteria = " AND `activity_time` >= '" . $start_criteria_scale_value . "' ";
                $sql_str_report_module_criteria2 = " AND tuda.activity_time >= '" . $start_criteria_scale_value . "' ";
            } elseif ($criteria_scale_range == '5') {
                $sql_str_report_module_criteria = " AND `activity_time` = '" . $start_criteria_scale_value . "' ";
                $sql_str_report_module_criteria2 = " AND tuda.activity_time = '" . $start_criteria_scale_value . "' ";
            } elseif ($criteria_scale_range == '6') {
                $sql_str_report_module_criteria = " AND `activity_time` >= '" . $start_criteria_scale_value . "' AND `activity_time` <= '" . $end_criteria_scale_value . "'";
                $sql_str_report_module_criteria2 = " AND tuda.activity_time >= '" . $start_criteria_scale_value . "' AND tuda.activity_time <= '" . $end_criteria_scale_value . "'";
            } else {
                $sql_str_report_module_criteria = "";
                $sql_str_report_module_criteria2 = "";
            }
        } elseif ($module_criteria == '3') {
            if ($criteria_scale_range == '1') {
                $sql_str_report_module_criteria = " AND CAST(`mins` AS SIGNED) < '" . $start_criteria_scale_value . "' ";
                $sql_str_report_module_criteria2 = " AND CAST(tuda.mins AS SIGNED) < '" . $start_criteria_scale_value . "' ";
            } elseif ($criteria_scale_range == '2') {
                $sql_str_report_module_criteria = " AND CAST(`mins` AS SIGNED) > '" . $start_criteria_scale_value . "' ";
                $sql_str_report_module_criteria2 = " AND CAST(tuda.mins AS SIGNED) > '" . $start_criteria_scale_value . "' ";
            } elseif ($criteria_scale_range == '3') {
                $sql_str_report_module_criteria = " AND CAST(`mins` AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
                $sql_str_report_module_criteria2 = " AND CAST(tuda.mins AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
            } elseif ($criteria_scale_range == '4') {
                $sql_str_report_module_criteria = " AND CAST(`mins` AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
                $sql_str_report_module_criteria2 = " AND CAST(tuda.mins AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
            } elseif ($criteria_scale_range == '5') {
                $sql_str_report_module_criteria = " AND CAST(`mins` AS SIGNED) = '" . $start_criteria_scale_value . "' ";
                $sql_str_report_module_criteria2 = " AND CAST(tuda.mins AS SIGNED) = '" . $start_criteria_scale_value . "' ";
            } elseif ($criteria_scale_range == '6') {
                $sql_str_report_module_criteria = " AND CAST(`mins` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(`mins` AS SIGNED) <= '" . $end_criteria_scale_value . "'";
                $sql_str_report_module_criteria2 = " AND CAST(tuda.mins AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(tuda.mins AS SIGNED) <= '" . $end_criteria_scale_value . "'";
            } else {
                $sql_str_report_module_criteria = "";
                $sql_str_report_module_criteria2 = "";
            }
        } elseif ($module_criteria == '7') {
            if ($criteria_scale_range == '5') {
                $sql_str_report_module_criteria = " AND DAYOFWEEK(activity_date) = '" . $start_criteria_scale_value . "' ";
                $sql_str_report_module_criteria2 = " AND DAYOFWEEK(tuda.activity_date) = '" . $start_criteria_scale_value . "' ";
            } elseif ($criteria_scale_range == '6') {
                $sql_str_report_module_criteria = " AND DAYOFWEEK(activity_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(activity_date) <= '" . $end_criteria_scale_value . "' ";
                $sql_str_report_module_criteria2 = " AND DAYOFWEEK(tuda.activity_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(tuda.activity_date) <= '" . $end_criteria_scale_value . "' ";
            } else {
                $sql_str_report_module_criteria = "";
                $sql_str_report_module_criteria2 = "";
            }
        } else {
            $sql_str_report_module_criteria = "";
            $sql_str_report_module_criteria2 = "";
        }
        $sql = "SELECT DISTINCT `activity_date` FROM `tblusersdailyactivity` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`activity_date` >= '" . $start_date . "' AND " . "`activity_date` <= '" . $end_date . "' AND " . "`activity_id` != '0' AND `activity_id` != '9999999999' " . $sql_str_report_module . " " . $sql_str_report_module_criteria . " ORDER BY activity_date DESC ";
        //echo "<br>".$sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                array_push($arr_date, $row['activity_date']);
            }
        }
        // $result = mysql_query($sql,$link);
        // if( ($result) && (mysql_num_rows($result) > 0) )
        // {
        //     $return = true;
        //     while ($row = mysql_fetch_assoc($result))
        //     {
        //         array_push($arr_date , $row['activity_date']);
        //     }
        // }
        if (count(arr_date) > 0) {
            $count = count($arr_date);
            for ($i = 0;$i < $count;$i++) {
                $total_sa_cal_burned_one_day = 0;
                $total_la_cal_burned_one_day = 0;
                $total_ma_cal_burned_one_day = 0;
                $total_va_cal_burned_one_day = 0;
                $total_sua_cal_burned_one_day = 0;
                $sql = "SELECT DISTINCT activity_id FROM `tblusersdailyactivity` WHERE " . "user_id = '" . $user_id . "' AND " . "activity_date = '" . $arr_date[$i] . "' AND " . "activity_id != '0' AND activity_id != '9999999999' " . $sql_str_report_module . " " . $sql_str_report_module_criteria . " ORDER BY activity_time ASC ";
                //echo "<br><br>".$sql;
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    $return = true;
                    $j = 0;
                    while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                        $sql2 = "SELECT * FROM `tblusersdailyactivity` As tuda " . "LEFT JOIN `tbldailyactivity` As tda ON tuda.activity_id = tda.activity_id " . "WHERE tuda.user_id = '" . $user_id . "' AND " . "tuda.activity_date = '" . $arr_date[$i] . "' AND " . "tda.activity_id > '0' AND " . "tuda.activity_id = '" . $row['activity_id'] . "' " . $sql_str_report_module2 . " " . $sql_str_report_module_criteria2 . " ORDER BY tuda.activity_time ASC ";
                        //echo "<br>".$sql2;
                        // $result2 = mysql_query($sql2,$link);
                        if ($STH->rowCount() > 0) {
                            $return = true;
                            $total_cal_burned = 0;
                            $time = '';
                            $duration = '';
                            while ($row2 = $STH->fetch(PDO::FETCH_ASSOC)) {
                                $total_cal_burned+= $obj->getConsumedCalOfActivity($user_id, $row2['mins'], $row['activity_id']);
                                $alc = $row2['activity_level_code'];
                                $time = $row2['activity_time'];
                                $duration = $row2['mins'];
                                $save_record = false;
                                if ($module_criteria == '8') {
                                    if ($criteria_scale_range == '1') {
                                        if ($total_cal_burned < $start_criteria_scale_value) {
                                            $save_record = true;
                                        }
                                    } elseif ($criteria_scale_range == '2') {
                                        if ($total_cal_burned > $start_criteria_scale_value) {
                                            $save_record = true;
                                        }
                                    } elseif ($criteria_scale_range == '3') {
                                        if ($total_cal_burned <= $start_criteria_scale_value) {
                                            $save_record = true;
                                        }
                                    } elseif ($criteria_scale_range == '4') {
                                        if ($total_cal_burned >= $start_criteria_scale_value) {
                                            $save_record = true;
                                        }
                                    } elseif ($criteria_scale_range == '5') {
                                        if ($total_cal_burned = $start_criteria_scale_value) {
                                            $save_record = true;
                                        }
                                    } elseif ($criteria_scale_range == '6') {
                                        if ($total_cal_burned >= $start_criteria_scale_value && $total_cal_burned <= $end_criteria_scale_value) {
                                            $save_record = true;
                                        }
                                    } else {
                                        $save_record = true;
                                    }
                                } else {
                                    $save_record = true;
                                }
                                if ($save_record) {
                                    $arr_records[$arr_date[$i]]['records'][$j]['activity_id'] = $row['activity_id'];
                                    $arr_records[$arr_date[$i]]['records'][$j]['time'] = $time;
                                    $arr_records[$arr_date[$i]]['records'][$j]['duration'] = $duration;
                                    $duration_perc = ($duration / 1440) * 100;
                                    $duration_perc = round($duration_perc, 2);
                                    $arr_records[$arr_date[$i]]['records'][$j]['duration_perc'] = $duration_perc;
                                    $total_cal_burned = round($total_cal_burned);
                                    if ($alc == 'SUA') {
                                        $arr_records[$arr_date[$i]]['records'][$j]['sua_cal_burned'] = $total_cal_burned;
                                        $arr_records[$arr_date[$i]]['records'][$j]['sa_cal_burned'] = '';
                                        $arr_records[$arr_date[$i]]['records'][$j]['la_cal_burned'] = '';
                                        $arr_records[$arr_date[$i]]['records'][$j]['ma_cal_burned'] = '';
                                        $arr_records[$arr_date[$i]]['records'][$j]['va_cal_burned'] = '';
                                        $total_sua_cal_burned_one_day+= $total_cal_burned;
                                    } elseif ($alc == 'LA') {
                                        $arr_records[$arr_date[$i]]['records'][$j]['sua_cal_burned'] = '';
                                        $arr_records[$arr_date[$i]]['records'][$j]['sa_cal_burned'] = '';
                                        $arr_records[$arr_date[$i]]['records'][$j]['la_cal_burned'] = $total_cal_burned;
                                        $arr_records[$arr_date[$i]]['records'][$j]['ma_cal_burned'] = '';
                                        $arr_records[$arr_date[$i]]['records'][$j]['va_cal_burned'] = '';
                                        $total_la_cal_burned_one_day+= $total_cal_burned;
                                    } elseif ($alc == 'MA') {
                                        $arr_records[$arr_date[$i]]['records'][$j]['sua_cal_burned'] = '';
                                        $arr_records[$arr_date[$i]]['records'][$j]['sa_cal_burned'] = '';
                                        $arr_records[$arr_date[$i]]['records'][$j]['la_cal_burned'] = '';
                                        $arr_records[$arr_date[$i]]['records'][$j]['ma_cal_burned'] = $total_cal_burned;
                                        $arr_records[$arr_date[$i]]['records'][$j]['va_cal_burned'] = '';
                                        $total_ma_cal_burned_one_day+= $total_cal_burned;
                                    } elseif ($alc == 'VA') {
                                        $arr_records[$arr_date[$i]]['records'][$j]['sua_cal_burned'] = '';
                                        $arr_records[$arr_date[$i]]['records'][$j]['sa_cal_burned'] = '';
                                        $arr_records[$arr_date[$i]]['records'][$j]['la_cal_burned'] = '';
                                        $arr_records[$arr_date[$i]]['records'][$j]['ma_cal_burned'] = '';
                                        $arr_records[$arr_date[$i]]['records'][$j]['va_cal_burned'] = $total_cal_burned;
                                        $total_va_cal_burned_one_day+= $total_cal_burned;
                                    } else {
                                        $arr_records[$arr_date[$i]]['records'][$j]['sua_cal_burned'] = '';
                                        $arr_records[$arr_date[$i]]['records'][$j]['sa_cal_burned'] = $total_cal_burned;
                                        $arr_records[$arr_date[$i]]['records'][$j]['la_cal_burned'] = '';
                                        $arr_records[$arr_date[$i]]['records'][$j]['ma_cal_burned'] = '';
                                        $arr_records[$arr_date[$i]]['records'][$j]['va_cal_burned'] = '';
                                        $total_sa_cal_burned_one_day+= $total_cal_burned;
                                    }
                                    $j++;
                                }
                            }
                        }
                    }
                    $arr_records[$arr_date[$i]]['total_sua_cal_burned'] = $total_sua_cal_burned_one_day;
                    $arr_records[$arr_date[$i]]['total_sa_cal_burned'] = $total_sa_cal_burned_one_day;
                    $arr_records[$arr_date[$i]]['total_la_cal_burned'] = $total_la_cal_burned_one_day;
                    $arr_records[$arr_date[$i]]['total_ma_cal_burned'] = $total_ma_cal_burned_one_day;
                    $arr_records[$arr_date[$i]]['total_va_cal_burned'] = $total_va_cal_burned_one_day;
                }
            }
        }
        return array($return, $arr_records);
    }
    function getConsumedCalOfActivity($user_id, $mins, $activity_id) {
        $cal_val = 0.00;
        $weight = $obj->getWeightOfUser($user_id);
        $activity_cal_kg_min = $obj->getCalPerMinOfActivity($activity_id);
        $cal_val = round($weight * $mins * $activity_cal_kg_min);
        return $cal_val;
    }
    function getWeightOfUser($user_id) {
        // global $link;
        $DBH = new DatabaseHandler();
        $weight = 0;
        $sql = "SELECT * FROM `tblusers` WHERE `user_id` = '" . $user_id . "' ";
        // $result = mysql_query($sql,$link);
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            // $row = mysql_fetch_array($result);
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $weight = stripslashes($row['weight']);
        }
        return $weight;
    }
    function getCalPerMinOfActivity($activity_id) {
        // global $link;
        $DBH = new DatabaseHandler();
        $activity_cal_kg_min = 0;
        $sql = "SELECT * FROM `tbldailyactivity` WHERE `activity_id` = '" . $activity_id . "' ";
        //echo "<br>Testkk: ".$sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $activity_cal_kg_min = stripslashes($row['activity_cal_kg_min']);
        }
        return $activity_cal_kg_min;
    }
    function getUserSleepTime($user_id, $sleep_date) {
        // global $link;
        $DBH = new DatabaseHandler();
        $sleep_time = 'NA';
        $sql = "SELECT * FROM `tblusersdailyactivity` WHERE `user_id` = '" . $user_id . "' AND `activity_date` = '" . $sleep_date . "' ORDER BY `activity_add_date` ASC ";
        //echo "<br>Testkk sql = ".$sql;
        // $result = mysql_query($sql,$link);
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $sleep_time = $row['yesterday_sleep_time'];
            }
        }
        return $sleep_time;
    }
    function getUserWakeUpTime($user_id, $wakeup_date) {
        // global $link;
        $DBH = new DatabaseHandler();
        $wakeup_time = 'NA';
        $sql = "SELECT * FROM `tblusersdailyactivity` WHERE `user_id` = '" . $user_id . "' AND `activity_date` = '" . $wakeup_date . "' ORDER BY `activity_add_date` ASC ";
        //echo "<br>Testkk sql = ".$sql;
        // $result = mysql_query($sql,$link);
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $wakeup_time = $row['today_wakeup_time'];
            }
        }
        return $wakeup_time;
    }
    function getTotalNoOfActivityEntry($user_id, $start_date, $end_date, $permission_type = '0', $pro_user_id = '0', $scale_range = '', $start_scale_value = '', $end_scale_value = '', $report_module = '', $module_keyword = '', $module_criteria = '', $criteria_scale_range = '', $start_criteria_scale_value = '', $end_criteria_scale_value = '') {
        // global $link;
        $DBH = new DatabaseHandler();
        $total_activity_entry = 0;
        if ($module_keyword != '') {
            $sql_str_report_module = " AND `activity_id` = '" . $module_keyword . "' ";
        } else {
            $sql_str_report_module = '';
        }
        if ($module_criteria == '4') {
            if ($criteria_scale_range == '1') {
                $sql_str_report_module_criteria = " AND `activity_time` < '" . $start_criteria_scale_value . "' ";
            } elseif ($criteria_scale_range == '2') {
                $sql_str_report_module_criteria = " AND `activity_time` > '" . $start_criteria_scale_value . "' ";
            } elseif ($criteria_scale_range == '3') {
                $sql_str_report_module_criteria = " AND `activity_time` <= '" . $start_criteria_scale_value . "' ";
            } elseif ($criteria_scale_range == '4') {
                $sql_str_report_module_criteria = " AND `activity_time` >= '" . $start_criteria_scale_value . "' ";
            } elseif ($criteria_scale_range == '5') {
                $sql_str_report_module_criteria = " AND `activity_time` = '" . $start_criteria_scale_value . "' ";
            } elseif ($criteria_scale_range == '6') {
                $sql_str_report_module_criteria = " AND `activity_time` >= '" . $start_criteria_scale_value . "' AND `activity_time` <= '" . $end_criteria_scale_value . "'";
            } else {
                $sql_str_report_module_criteria = "";
            }
        } elseif ($module_criteria == '3') {
            if ($criteria_scale_range == '1') {
                $sql_str_report_module_criteria = " AND CAST(`mins` AS SIGNED) < '" . $start_criteria_scale_value . "' ";
            } elseif ($criteria_scale_range == '2') {
                $sql_str_report_module_criteria = " AND CAST(`mins` AS SIGNED) > '" . $start_criteria_scale_value . "' ";
            } elseif ($criteria_scale_range == '3') {
                $sql_str_report_module_criteria = " AND CAST(`mins` AS SIGNED) <= '" . $start_criteria_scale_value . "' ";
            } elseif ($criteria_scale_range == '4') {
                $sql_str_report_module_criteria = " AND CAST(`mins` AS SIGNED) >= '" . $start_criteria_scale_value . "' ";
            } elseif ($criteria_scale_range == '5') {
                $sql_str_report_module_criteria = " AND CAST(`mins` AS SIGNED) = '" . $start_criteria_scale_value . "' ";
            } elseif ($criteria_scale_range == '6') {
                $sql_str_report_module_criteria = " AND CAST(`mins` AS SIGNED) >= '" . $start_criteria_scale_value . "' AND CAST(`mins` AS SIGNED) <= '" . $end_criteria_scale_value . "'";
            } else {
                $sql_str_report_module_criteria = "";
            }
        } elseif ($module_criteria == '7') {
            if ($criteria_scale_range == '5') {
                $sql_str_report_module_criteria = " AND DAYOFWEEK(activity_date) = '" . $start_criteria_scale_value . "' ";
            } elseif ($criteria_scale_range == '6') {
                $sql_str_report_module_criteria = " AND DAYOFWEEK(activity_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(activity_date) <= '" . $end_criteria_scale_value . "' ";
            } else {
                $sql_str_report_module_criteria = "";
            }
        } else {
            $sql_str_report_module_criteria = "";
        }
        $sql = "SELECT count(user_activity_id) AS total FROM `tblusersdailyactivity` WHERE " . "`user_id` = '" . $user_id . "' AND " . "`activity_date` >= '" . $start_date . "' AND " . "`activity_date` <= '" . $end_date . "' AND " . "`activity_id` != '0' AND `activity_id` != '9999999999' " . $sql_str_report_module . " " . $sql_str_report_module_criteria . " ORDER BY `activity_date` ASC ";
        //echo "<br>".$sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $total_activity_entry = $row['total'];
        }
        // $result = mysql_query($sql,$link);
        // if( ($result) && (mysql_num_rows($result) > 0) )
        // {
        //            $row = mysql_fetch_assoc($result);
        //            $total_activity_entry = $row['total'];
        // }
        return $total_activity_entry;
    }
    public function getMealTimeChart($user_id, $start_date, $end_date, $permission_type = '0', $pro_user_id = '0', $scale_range = '', $start_scale_value = '', $end_scale_value = '', $report_module = '', $module_keyword = '', $module_criteria = '', $criteria_scale_range = '', $start_criteria_scale_value = '', $end_criteria_scale_value = '') {
        // global $link;
        $DBH = new DatabaseHandler();
        $return = false;
        $arr_records = array();
        if ($module_criteria == '4') {
            if ($criteria_scale_range == '1') {
                $sql_str_report_module_criteria = " AND `meal_time` < '" . $start_criteria_scale_value . "' ";
            } elseif ($criteria_scale_range == '2') {
                $sql_str_report_module_criteria = " AND `meal_time` > '" . $start_criteria_scale_value . "' ";
            } elseif ($criteria_scale_range == '3') {
                $sql_str_report_module_criteria = " AND `meal_time` <= '" . $start_criteria_scale_value . "' ";
            } elseif ($criteria_scale_range == '4') {
                $sql_str_report_module_criteria = " AND `meal_time` >= '" . $start_criteria_scale_value . "' ";
            } elseif ($criteria_scale_range == '5') {
                $sql_str_report_module_criteria = " AND `meal_time` = '" . $start_criteria_scale_value . "' ";
            } elseif ($criteria_scale_range == '6') {
                $sql_str_report_module_criteria = " AND `meal_time` >= '" . $start_criteria_scale_value . "' AND `meal_time` <= '" . $end_criteria_scale_value . "'";
            } else {
                $sql_str_report_module_criteria = "";
            }
        } elseif ($module_criteria == '7') {
            if ($criteria_scale_range == '5') {
                $sql_str_report_module_criteria = " AND DAYOFWEEK(meal_date) = '" . $start_criteria_scale_value . "' ";
            } elseif ($criteria_scale_range == '6') {
                $sql_str_report_module_criteria = " AND DAYOFWEEK(meal_date) >= '" . $start_criteria_scale_value . "' AND DAYOFWEEK(meal_date) <= '" . $end_criteria_scale_value . "' ";
            } else {
                $sql_str_report_module_criteria = "";
            }
        } else {
            $sql_str_report_module_criteria = "";
        }
        $sql = "SELECT DISTINCT `meal_date` FROM `tblusersmeals` WHERE `user_id` = '" . $user_id . "' AND `meal_date` >= '" . $start_date . "' AND `meal_date` <= '" . $end_date . "' " . $sql_str_report_module_criteria . " ORDER BY `meal_date` DESC ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $sql2 = "SELECT * FROM `tblusersmeals` WHERE `user_id` = '" . $user_id . "' AND `meal_date` = '" . $row['meal_date'] . "' " . $sql_str_report_module_criteria . " ORDER BY `user_meal_id` ASC ";
                $STH = $DBH->query($sql2);
                if ($STH->rowCount() > 0) {
                    $total_meal_entry = 0;
                    $return = true;
                    while ($row2 = $STH->fetch(PDO::FETCH_ASSOC)) {
                        $total_meal_entry++;
                        if ($row2['meal_type'] == 'breakfast') {
                            $arr_records[$row['meal_date']]['breakfast_time'] = $row2['meal_time'];
                        } elseif ($row2['meal_type'] == 'brunch') {
                            $arr_records[$row['meal_date']]['brunch_time'] = $row2['meal_time'];
                        } elseif ($row2['meal_type'] == 'lunch') {
                            $arr_records[$row['meal_date']]['lunch_time'] = $row2['meal_time'];
                        } elseif ($row2['meal_type'] == 'snacks') {
                            $arr_records[$row['meal_date']]['snacks_time'] = $row2['meal_time'];
                        } elseif ($row2['meal_type'] == 'dinner') {
                            $arr_records[$row['meal_date']]['dinner_time'] = $row2['meal_time'];
                        }
                    }
                    $arr_records[$row['meal_date']]['total_entry_per_day'] = $total_meal_entry;
                }
            }
        }
        // $result = mysql_query($sql,$link);
        // if( ($result) && (mysql_num_rows($result) > 0) )
        // {
        //            while ($row = mysql_fetch_assoc($result))
        //            {
        //                $sql2 = "SELECT * FROM `tblusersmeals` WHERE `user_id` = '".$user_id."' AND `meal_date` = '".$row['meal_date']."' ".$sql_str_report_module_criteria." ORDER BY `user_meal_id` ASC ";
        //                $result2 = mysql_query($sql2,$link);
        //                if( ($result2) && (mysql_num_rows($result2) > 0) )
        //                {
        //                    $total_meal_entry = 0;
        //                    $return = true;
        //                    while ($row2 = mysql_fetch_assoc($result2))
        //                    {
        //                        $total_meal_entry++;
        //                        if($row2['meal_type'] == 'breakfast')
        //                        {
        //                            $arr_records[$row['meal_date']]['breakfast_time'] = $row2['meal_time'];
        //                        }
        //                        elseif($row2['meal_type'] == 'brunch')
        //                        {
        //                            $arr_records[$row['meal_date']]['brunch_time'] = $row2['meal_time'];
        //                        }
        //                        elseif($row2['meal_type'] == 'lunch')
        //                        {
        //                            $arr_records[$row['meal_date']]['lunch_time'] = $row2['meal_time'];
        //                        }
        //                        elseif($row2['meal_type'] == 'snacks')
        //                        {
        //                            $arr_records[$row['meal_date']]['snacks_time'] = $row2['meal_time'];
        //                        }
        //                        elseif($row2['meal_type'] == 'dinner')
        //                        {
        //                            $arr_records[$row['meal_date']]['dinner_time'] = $row2['meal_time'];
        //                        }
        //                    }
        //                    $arr_records[$row['meal_date']]['total_entry_per_day'] = $total_meal_entry;
        //                }
        //            }
        // }
        return array($return, $arr_records);
    }
    function getScaleImage($scale) {
        // global $link;
        $DBH = new DatabaseHandler();
        $value = '';
        if ($scale == 1) {
            $value = 'scale_slider_1.jpg';
        } elseif ($scale == 2) {
            $value = 'scale_slider_2.jpg';
        } elseif ($scale == 3) {
            $value = 'scale_slider_3.jpg';
        } elseif ($scale == 4) {
            $value = 'scale_slider_4.jpg';
        } elseif ($scale == 5) {
            $value = 'scale_slider_5.jpg';
        } elseif ($scale == 6) {
            $value = 'scale_slider_6.jpg';
        } elseif ($scale == 7) {
            $value = 'scale_slider_7.jpg';
        } elseif ($scale == 8) {
            $value = 'scale_slider_8.jpg';
        } elseif ($scale == 9) {
            $value = 'scale_slider_9.jpg';
        } elseif ($scale == 10) {
            $value = 'scale_slider_10.jpg';
        } else {
            $value = 'scale_slider_0.jpg';
        }
        return $value;
    }
    //update by ample 24-03-30 (for enduse='user')
    public function show_report_name($tbl_name) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        if ($tbl_name != "") {
            $tbl_val = base64_decode($tbl_name);
            $sql = "SELECT * FROM `tbl_recordshow_dropdown` WHERE `is_deleted` = 0 AND `pag_cat_status`=1 AND enduse='user' AND `table_name`='" . $tbl_val . "' ORDER BY page_cat_id DESC";
            $index = 1;
        } else {
            $sql = "SELECT * FROM `tbl_recordshow_dropdown` WHERE `is_deleted` = 0 AND `pag_cat_status`=1 AND enduse='user' ORDER BY page_cat_id DESC";
            $index = '';
        }
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $i = 0;
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $i++;
                if ($index == $i) {
                    $selected = "selected";
                } else {
                    $selected = "";
                }
                $option_str.= '<option value="' . $row['uniqu_id'] . ',' . $row['username_id'] . '" ' . $selected . '>' . stripslashes($row['report_name']) . '</option>';
            }
        }
        return $option_str;
    }
    public function show_report_vendor_access($vendor_id,$user_id) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $report_id='';

        $sql = "SELECT `report_id` FROM `tbladviserreferrals` WHERE  `user_id` = '" . $user_id . "' AND `vendor_id` = '" . $vendor_id . "'";
        //echo $sql0;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $report_id = stripslashes($row['report_id']);
            }
        }

        $getarr = explode(',', $report_id);
    
        $sql = "SELECT * FROM `tbl_recordshow_dropdown` WHERE `is_deleted` = 0 AND `pag_cat_status`=1 AND enduse='user' ORDER BY page_cat_id DESC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {

            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {

                if(!empty($getarr))
                {
                    if (in_array($row['page_cat_id'], $getarr)) {

                        $option_str.= '<option value="' . $row['uniqu_id'] . ',' . $row['username_id'] . '" >' . stripslashes($row['report_name']) . '</option>';
                
                        }

                }
                else
                {
                    $option_str.= '<option value="' . $row['uniqu_id'] . ',' . $row['username_id'] . '" >' . stripslashes($row['report_name']) . '</option>';
                }
                
                
                
            }
        }
        return $option_str;
    }
    function getMylifepetterns($session) {
        $DBH = new DatabaseHandler();
     
            // $user_id = $_SESSION['user_id'];
            $select_user = "SELECT * FROM `tblusers` WHERE `user_id`=" . $session . "";
            $STH1 = $DBH->query($select_user);
            $row1 = $STH1->fetch(PDO::FETCH_ASSOC);
        
        return $row1;
        // echo "<per>";print_r($row1);echo "</pre>";
        
    }
    // public function GetDatadropdownoption($symtum_cat)
    // {
    //         $symtum_cat = implode(',', $symtum_cat);
    //         $DBH = new DatabaseHandler();
    // 	$option_str = '';
    // 	$sql = "SELECT * FROM `tblbodymainsymptoms` WHERE bms_id IN($symtum_cat) ORDER BY `bms_name` ASC";
    // 	$STH = $DBH->query($sql);
    //         if( $STH->rowCount() > 0 )
    //         {
    //             while($row = $STH->fetch(PDO::FETCH_ASSOC))
    //             {
    //                 $option_str .= '<option value="'.$row['bms_name'].'" >'.stripslashes($row['bms_name']).'</option>';
    //             }
    // 	}
    // 	return $option_str;
    // }
    public function getProUserUniqueId($pro_user_id) {
        $DBH = new DatabaseHandler();
        $unique_id = '';
        $sql = "SELECT * FROM `tblvendors` WHERE `vendor_id` = '" . $pro_user_id . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $unique_id = stripslashes($row['vendor_unique_id']);
        }
        return $unique_id;
    }
    public function UserInputAllowed($ref_num) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "SELECT * FROM `tbl_design_your_life` WHERE `ref_code` = '" . $ref_num . "'  and `user_upload_show` = 1  ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    function chkIfUserCanRedeamGift_OLD($user_id, $start_date, $reward_module_id, $balance_points) {
        // global $link;
        $DBH = new DatabaseHandler();
        $return = false;
        //$sql = "SELECT * FROM `tblrewardlist` WHERE `reward_list_deleted` = '0' AND `reward_list_status` = '1'  AND `reward_list_module_id` = '".$reward_module_id."' AND EXTRACT(YEAR_MONTH FROM reward_list_date) <= '".date('Ym',strtotime($start_date))."' ORDER BY `reward_list_add_datetime` DESC ";
        $sql = "SELECT * FROM `tblrewardlist` WHERE `reward_list_deleted` = '0' AND `reward_list_status` = '1'  AND `reward_list_module_id` = '" . $reward_module_id . "' AND `reward_list_date` <= '" . date('Y-m-d') . "' ORDER BY `reward_list_add_datetime` DESC ";
        //echo '<br>'.$sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $reward_list_conversion_type_id = $row['reward_list_conversion_type_id'];
                $reward_list_conversion_value = stripslashes($row['reward_list_conversion_value']);
                if ($balance_points >= $reward_list_conversion_value) {
                    $return = true;
                }
            }
            // $unique_id = stripslashes($row['pro_unique_id']);
            
        }
        // $result = mysql_query($sql,$link);
        // if( ($result) && (mysql_num_rows($result) > 0) )
        // {
        // 	while($row = mysql_fetch_array($result))
        // 	{
        // 		$reward_list_conversion_type_id = $row['reward_list_conversion_type_id'];
        // 		$reward_list_conversion_value = stripslashes($row['reward_list_conversion_value']);
        // 		if($balance_points >= $reward_list_conversion_value)
        // 		{
        // 			$return = true;
        // 		}
        // 	}
        // }
        return $return;
    }
    function chkIfUserCanRedeamGift($user_id, $reward_module_id) {
        $DBH = new DatabaseHandler();
        $return = false;
        $balance_points=$this->get_total_points($user_id, $reward_module_id);
        $sql = "SELECT * FROM `tblrewardlist` WHERE `reward_list_deleted` = '0' AND `reward_list_status` = '1'  AND `reward_list_module_id` = '" . $reward_module_id . "' AND `reward_list_date` <= '" . date('Y-m-d') . "' ORDER BY `reward_list_add_datetime` DESC ";
        //echo '<br>'.$sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $reward_list_conversion_value = stripslashes($row['reward_list_conversion_value']);
                if ($balance_points >= $reward_list_conversion_value) {
                    $return = true;
                }
            }
        }
        return $return;
    }
    function showRewardCatlog($reward_list_module_id="",$reward_type="") {
        //    echo "<pre>";print_r('hihhhhhhhhhhhhh');echo "</pre>";
        // exit;
        // float:left;
        // clear:both;
        // float:left;padding-left:10px;;width:550px;height:300px;
        // global $link;
        $DBH = new DatabaseHandler();
        $output = '';
        $output.= '<div style="padding-left:10px; margin-top:15px;">


					 <strong>Particulars:</strong> <select id="tempreward_list_module_id" name="tempreward_list_module_id" style="width:200px;" onchange="showRewardCatlogUpdated()">

						<option value="">All Particulars</option>

						' . $this->getRewardModuleOptionsCatelog($reward_list_module_id) . '

					</select>

                     <strong>Appreciation type:</strong> <select id="appreciation" name="Appreciation" style="width:200px;" onchange="showRewardCatlogUpdated()">

                        <option value="">All Particulars</option>

                        ' . $this->getRewardtypeOptionsCatelog($reward_type) . '

                    </select>


				</div>';
        $output.= '<div style="margin-top:25px;">';
        $output.= '	<table class="table table-condensed table-striped table-bordered">

					<tbody>

						<tr>

							<td width="10%" height="30" align="center" valign="middle"><strong>SNo</strong></td>

							<td width="20%" height="30" align="center" valign="middle"><strong>Particular</strong></td>

							<td width="20%" height="30" align="center" valign="middle"><strong>Total Points</strong></td>

							<td width="40%" height="30" align="center" valign="middle"><strong>Rewards</strong></td>

                            <td width="10%" height="30" align="center" valign="middle"><strong>Type</strong></td>

						</tr>';
        if ($reward_list_module_id == '') {
            $sql_str_rlmd = "";
        } else {
            $sql_str_rlmd = " AND rp.reward_list_module_id = '" . $reward_list_module_id . "' ";
        }
        if ($reward_type == '') {
            $sql_str_rt = "";
        } else {
            $sql_str_rt = " AND rp.reward_type = '" . $reward_type . "' ";
        }
        //update by ample 11-04-20 (remove tblrewardcrteria)
        $sql = "SELECT rp.* , rm.reward_module_title, rm.page_id,p.page_name  FROM `tblrewardlist` AS rp LEFT JOIN `tblrewardmodules` AS rm ON rp.reward_list_module_id = rm.reward_module_id LEFT JOIN tblpages p ON rm.page_id=p.page_id  WHERE rp.reward_list_status = '1' AND rp.reward_list_deleted = '0' AND rm.reward_module_deleted = '0' " . $sql_str_rlmd . " " . $sql_str_rt . " ORDER BY p.page_name ASC ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $j = 1;
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                // $result = mysql_query($sql,$link);
                // if( ($result) && (mysql_num_rows($result) > 0) )
                // {
                // while ($row = mysql_fetch_assoc($result))
                // {
                $reward_file_type = stripslashes($row['reward_list_file_type']);
                $reward_file = stripslashes($row['reward_list_file']);
                // $reward_module_title = stripslashes($row['reward_module_title']); //add by ample 29-08-20
                $reward_module_title = $this->getPagenamebyid($row['page_id']);
                $reward_file_str = '';


                    $banner_name=$banner_file="";
                        if(!empty($reward_file_type) && is_numeric($reward_file))
                        {
                            if($reward_file_type=='Image')
                            {
                                $banner_data=$this->get_data_from_tblicons('',$reward_file);
                                $banner_name=$banner_data[0]['icons_name'];
                                $banner_file=$banner_data[0]['image'];

                                if($banner_file)
                                {
                                    // $reward_file_str ='<ul class="zoomonhoverul"><li class="zoomonhover"><a href="'.SITE_URL.'/uploads/'. $banner_file.'"  class="preview"><img src="'.SITE_URL.'/uploads/'. $banner_file.'" height="50px" alt="gallery thumbnail"/></a></li> </ul>' ;
                                     $reward_file_str = '<ul class="zoomonhoverul">

                                         <li class="zoomonhover"><a href="' . SITE_URL . '/uploads/' . $banner_file . '" class="preview"><img src="' . SITE_URL . '/uploads/' . $banner_file . '" width="50" alt="gallery thumbnail" /></a></li>

                                        </ul>';
                                }

                                 
                            }
                            else
                            {
                                $banner_data=$this->get_data_from_tblmindjumble('',$reward_file);
                                $banner_name=$banner_data[0]['box_title'];
                                $banner_file=$banner_data[0]['box_banner'];

                                if($banner_file)
                                {
                                    $reward_file_str ='<a href="'.SITE_URL.'/uploads/'. $banner_file.'" target="_blank">'.$banner_file.'</a> ' ;
                                }
                            }
                        }

                        $vals=$this->getrewardTypevalueKR($row['reward_type']);

                $output.= '		<tr>

							<td height="30" align="center" valign="middle">' . $j . '</td>

							<td height="30" align="center" valign="middle">' . $reward_module_title . '</td>

							<td height="30" align="center" valign="middle">' . stripslashes($row['reward_list_conversion_value']) . '</td>

							<td height="30" align="left" valign="middle">

								<div style="width:240px;float:left;margin-left:5px;margin-right:5px;">

									<div style="width:135px;float:left;">' . stripslashes($row['reward_list_name']) . '</div> <br>

									<div style="width:100px;float:left;text-align:right;margin-right:5px;">' . $reward_file_str . '</div>

								</div>

							</td>

                             <td height="30" align="center" valign="middle">' . $vals[1] . '</td>

						</tr>';
                $j++;
            }
        } else {
            $output.= '		<tr>

							<td colspan="5" height="30" align="center" valign="middle">No Records Found</td>

						</tr>';
        }
        $output.= '	</tbody>

					</table>

				</div>';
        return $output;
    }
    function getRewardModuleOptions($reward_module_id="") {
        // global $link;
        $DBH = new DatabaseHandler();
        $option_str = '';
        $sql = "SELECT * FROM `tblrewardmodules` where `reward_module_deleted` = '0' ORDER BY `reward_module_title` ASC";
        //echo $sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $j = 1;
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                // $result = mysql_query($sql,$link);
                // if( ($result) && (mysql_num_rows($result) > 0) )
                // {
                // while($row = mysql_fetch_array($result))
                // {
                if ($row['reward_module_id'] == $reward_module_id) {
                    $sel = ' selected ';
                } else {
                    $sel = '';
                }
                if ($row['page_id'] == '0') {
                    $title = stripslashes($row['reward_module_title']);
                } else {
                    $title = $this->getMenuTitleOfPage($row['page_id']);
                    if ($title == '') {
                        $title = stripslashes($row['reward_module_title']);
                    }
                }
                $option_str.= '<option value="' . $row['reward_module_id'] . '" ' . $sel . '>' . $title . '</option>';
            }
        }
        return $option_str;
    }
    function getRewardModuleOptionsCatelog($reward_module_id="") {
        // global $link;
        $DBH = new DatabaseHandler();
        $option_str = '';
        $sql = "SELECT DISTINCT rl.reward_list_module_id,p.page_name FROM `tblrewardlist` rl LEFT JOIN tblrewardmodules rm ON rl.reward_list_module_id=rm.reward_module_id LEFT JOIN tblpages p ON rm.page_id=p.page_id where rl.reward_list_deleted = '0' AND rl.reward_list_status='1' ORDER BY p.page_name ASC";
        //echo $sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $j = 1;
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                if ($row['reward_list_module_id'] == $reward_module_id) {
                    $sel = ' selected ';
                } else {
                    $sel = '';
                }
                 $title = stripslashes($row['page_name']);
                $option_str.= '<option value="' . $row['reward_list_module_id'] . '" ' . $sel . '>' . $title . '</option>';
            }
        }
        return $option_str;
    }
    function getRewardtypeOptionsCatelog($type_id="") {
        // global $link;
        $DBH = new DatabaseHandler();
        $option_str = '';
        $sql = "SELECT DISTINCT rl.reward_type,f.fav_cat FROM `tblrewardlist` rl LEFT JOIN tblfavcategory f ON rl.reward_type=f.fav_cat_id WHERE rl.reward_list_deleted = '0' AND rl.reward_list_status='1' ORDER BY f.fav_cat ASC";
        //echo $sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $j = 1;
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                if ($row['reward_type'] == $type_id) {
                    $sel = ' selected ';
                } else {
                    $sel = '';
                }
                $title = stripslashes($row['fav_cat']);
                $option_str.= '<option value="' . $row['reward_type'] . '" ' . $sel . '>' . $title . '</option>';
            }
        }
        return $option_str;
    }
    function getYoutubeString($banner) {
        $search = 'v=';
        $pos = strpos($banner, $search);
        $str = strlen($banner);
        $rest = substr($banner, $pos + 2, $str);
        return 'http://www.youtube.com/embed/' . $rest;
    }
    function viewAllModuleRedeamPopup($user_id, $arr_summary_reward_module_id, $arr_summary_reward_module_title, $arr_summary_total_balance_points) {
        // global $link;
        $DBH = new DatabaseHandler();
        $output = '';
        $total_balance_points = 0;
        for ($i = 0;$i < count($arr_summary_total_balance_points);$i++) {
            $total_balance_points+= $arr_summary_total_balance_points[$i];
        }
        $reward_module_id = '15';
        //if(chkIfUserCanRedeamGift($user_id,$start_date,$reward_module_id,$total_balance_points))
        //{
        $output.= '<table width="720" border="0" cellpadding="0" cellspacing="0" >

					<tbody>

						<tr>

							<td width="100%" height="30" align="left" valign="middle"><strong>Module List:</strong></td>

						</tr>';
        $output.= '</tbody>

					</table>';
        $output.= '<div style="margin-top:15px;width:720px;height:200px;overflow:scroll;">';
        $output.= '	<table width="700" border="1" cellpadding="0" cellspacing="0" class="report" style="border-collapse:collapse;">

						<tbody>

							<tr>

								<td width="10%" height="30" align="center" valign="middle"><strong>Select</strong></td>

								<td width="30%" height="30" align="center" valign="middle"><strong>Module</strong></td>

								<td width="20%" height="30" align="center" valign="middle"><strong>Balance Point</strong></td>

								<td width="40%" height="30" align="center" valign="middle"><strong>Encash Point</strong></td>

							</tr>';
        $cnt_modules = 0;
        for ($i = 0, $j = 1;$i < count($arr_summary_reward_module_id);$i++, $j++) {
            if ($arr_summary_total_balance_points[$i] == '' || $arr_summary_total_balance_points[$i] == '0') {
            } else {
                $output.= '		<tr>

								<td height="30" align="center" valign="middle"><strong><input type="checkbox" name="selected_reward_module_id" id="selected_reward_module_id_' . $i . '" value="' . $i . '" onclick="setTotalEncashedPoints(\'' . $i . '\')" /></strong></td>

								<td height="30" align="center" valign="middle"><strong>' . $arr_summary_reward_module_title[$i] . '</strong></td>

								<td height="30" align="center" valign="middle"><strong>' . $arr_summary_total_balance_points[$i] . '</strong></td>

								<td height="30" align="center" valign="middle">

									<input type="text" readonly="readonly" maxlength="4" size="4" name="selected_encashed_point_' . $i . '" id="selected_encashed_point_' . $i . '" value="" onkeyup="setTotalEncashedPoints(\'' . $i . '\')"   />

									<input type="hidden" name="hdnmodule_total_balance_points_' . $i . '" id="hdnmodule_total_balance_points_' . $i . '" value="' . $arr_summary_total_balance_points[$i] . '"  />

									<input type="hidden" name="hdnmodule_id_' . $i . '" id="hdnmodule_id_' . $i . '" value="' . $arr_summary_reward_module_id[$i] . '"  />

									<input type="hidden" name="hdnselectedmodule_title_' . $i . '" id="hdnselectedmodule_title_' . $i . '" value="' . $arr_summary_reward_module_title[$i] . '"  />

								</td>

							</tr>';
                $cnt_modules++;
            }
        }
        $output.= '	</tbody>

						</table>

					</div>';
        $output.= '<table width="720" border="0" cellpadding="0" cellspacing="0" >

					<tbody>

						<tr>

							<td width="100%" height="30" align="left" valign="middle">

								<input type="hidden" name="hdnallmoduletotal_balance_points" id="hdnallmoduletotal_balance_points" value="' . $total_balance_points . '"  />

								<strong>Total Balance Points : <span id="idallmoduletotal_balance_points">' . $total_balance_points . '</span></strong>

							</td>

						</tr>

						<tr>

							<td height="30" align="left" valign="middle">

								<input type="hidden" name="hdnallmoduletotal_encash_points" id="hdnallmoduletotal_encash_points" value="0"  />

								<strong>Total Selected Encash Points : <span id="idallmoduletotal_encash_points">0</span></strong>

							</td>

						</tr>

					</tbody>

					</table>';
        $output.= '<table width="720" border="0" cellpadding="0" cellspacing="0" >

					<tbody>

						<tr>

							<td width="100%" height="30" align="left" valign="middle">&nbsp;</td>

						</tr>

					</tbody>

					</table>';
        $output.= '<table width="720" border="0" cellpadding="0" cellspacing="0" >

					<tbody>

						<tr>

							<td width="100%" height="30" align="left" valign="middle"><strong>Gift List:</strong></td>

						</tr>';
        $output.= '</tbody>

					</table>';
        //$sql = "SELECT * FROM `tblrewardlist` WHERE `reward_list_status` = '1' AND `reward_list_deleted` = '0' AND CAST(`reward_list_conversion_value` AS SIGNED) <= '".$total_balance_points."' AND `reward_list_module_id` = '15' ORDER BY `reward_list_date` DESC ";
        $sql = "SELECT * FROM `tblrewardlist` WHERE `reward_list_status` = '1' AND `reward_list_deleted` = '0' AND `reward_list_module_id` = '15' ORDER BY `reward_list_date` DESC ";
        //  $STH = $DBH->query($sql);
        //  if($STH->rowCount() > 0 )
        // {
        // 	$j = 1;
        // 	while($row = $STH->fetch(PDO::FETCH_ASSOC))
        // 	{
        // $result = mysql_query($sql,$link);
        $STH = $DBH->query($sql);
        $output.= '<div style="margin-top:15px;width:720px;height:120px;overflow:scroll;">';
        $output.= '	<table width="700" border="1" cellpadding="0" cellspacing="0" class="report" style="border-collapse:collapse;">

							<tbody>

								<tr>

									<td width="10%" height="30" align="center" valign="middle"><strong>Select</strong></td>

									<td width="20%" height="30" align="center" valign="middle"><strong>Points</strong></td>

									<td width="70%" height="30" align="center" valign="middle"><strong>Rewards</strong></td>

								</tr>';
        if ($STH->rowCount() > 0) {
            $i = 0;
            $j = 1;
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $reward_list_conversion_value = $row['reward_list_conversion_value'];
                //echo '<br>test - reward_list_conversion_value = '.$reward_list_conversion_value;
                //echo '<br>test - total_balance_points = '.$total_balance_points;
                if ($reward_list_conversion_value <= $total_balance_points) {
                    $reward_file_type = stripslashes($row['reward_list_file_type']);
                    $reward_file = stripslashes($row['reward_list_file']);
                    $reward_file_str = '';
                    if ($reward_file != '') {
                        if ($reward_file_type == 'Pdf') {
                            $reward_file_str = '<a target="_blank" href="' . SITE_URL . '/uploads/' . $reward_file . '"><img border="0" src="images/pdf-download-icon.png" width="50" height="50"  /> </a>';
                        } elseif ($reward_file_type == 'Video') {
                            $video_url = getYoutubeString($reward_file);
                            $reward_file_str = '<a target="_blank" href="' . $video_url . '">' . $video_url . '</a>';
                        } else {
                            //$reward_file_str = '<img border="0" src="'.SITE_URL.'/uploads/'. $reward_file.'" height="50"  />';
                            $reward_file_str = '<ul class="zoomonhoverul">

								<li class="zoomonhover"><a href="' . SITE_URL . '/uploads/' . $reward_file . '" class="preview"><img src="' . SITE_URL . '/uploads/' . $reward_file . '" width="100" alt="gallery thumbnail" /></a></li>

							</ul>';
                        }
                    }
                    $output.= '	<tr>

										<td height="30" align="center" valign="middle"><input type="radio" name="reward_list_id" id="reward_list_id_' . $i . '" value="' . $row['reward_list_id'] . '" onclick="setTotalGiftPoints(\'' . $i . '\')" /></td>

										<td height="30" align="center" valign="middle">

											<input type="hidden" name="hdnreward_list_conversion_value_' . $i . '" id="hdnreward_list_conversion_value_' . $i . '" value="' . $row['reward_list_conversion_value'] . '"  />

											' . stripslashes($row['reward_list_conversion_value']) . '

										</td>

										<td height="30" align="left" valign="middle">

											<div style="width:240px;float:left;margin-left:5px;margin-right:5px;">

												<div style="width:135px;float:left;">' . stripslashes($row['reward_list_name']) . '</div>

												<div style="width:100px;float:left;text-align:right;margin-right:5px;">' . $reward_file_str . '</div>

											</div>

										</td>

									</tr>';
                    $j++;
                    $i++;
                }
            }
            $cnt_gifts = $i;
        } else {
            $output.= '	<tr>

								<td colspan="3" height="30" align="center" valign="middle">No Gift is available for now.</td>

							</tr>';
        }
        $output.= '	</tbody>

							</table>';
        $output.= '</div>';
        $output.= '<table width="720" border="0" cellpadding="0" cellspacing="0" >

					<tbody>

						<tr>

							<td width="100%" height="30" align="left" valign="middle">

								<input type="hidden" name="hdnallmoduletotal_gift_points" id="hdnallmoduletotal_gift_points" value="0"  />

								<strong>Total Gift Points : <span id="idallmoduletotal_gift_points">0</span></strong>

							</td>

						</tr>

					</tbody>

					</table>';
        $output.= '<table width="700" border="0" cellpadding="0" cellspacing="0" >

					<tbody>

						<tr>

							<td width="100%" height="30" align="left" valign="middle"><input type="button" name="btnDoRedeam" id="btnDoRedeam" value="Redeem" onclick="doRedeamAllModule(\'' . $cnt_modules . '\',\'' . $cnt_gifts . '\')" /></td>

						</tr>';
        $output.= '</tbody>

					</table>';
        return $output;
    }
    function getUsersAllEncashedRewards($user_id, $reward_list_module_id, $start_date, $end_date) {
        // global $link;
        $DBH = new DatabaseHandler();
        $arr_records = array();
        if ($user_id == 'All') {
            $str_sql_user_id = "";
        } else {
            $str_sql_user_id = " AND TRR.user_id = '" . $user_id . "' ";
        }
        if ($reward_list_module_id == '') {
            $str_sql_reward_list_module_id = '';
        } elseif ($reward_list_module_id == '15') {
            $str_sql_reward_list_module_id = " AND TRR.random_all_module_no > 0 ";
        } else {
            $str_sql_reward_list_module_id = " AND TRR.reward_module_id = '" . $reward_list_module_id . "'  ";
        }
        $sql = "SELECT TRR.* , TRL.reward_list_name , TRL.reward_list_file_type , TRL.reward_list_file , TRM.reward_module_title, TRM.page_id FROM `tblrewardredeamed` AS TRR LEFT JOIN `tblrewardlist` AS TRL ON TRR.reward_list_id = TRL.reward_list_id LEFT JOIN `tblrewardmodules` AS TRM ON TRR.reward_module_id = TRM.reward_module_id WHERE DATE(TRR.redeam_date) >= '" . date('Y-m-d', strtotime($start_date)) . "' AND DATE(TRR.redeam_date) <= '" . date('Y-m-d', strtotime($end_date)) . "' " . $str_sql_user_id . "  " . $str_sql_reward_list_module_id . " ORDER BY TRR.redeam_date DESC , TRM.reward_module_title ASC ";
        //echo '<br>'.$sql;
        //  $STH = $DBH->query($sql);
        //  if($STH->rowCount() > 0 )
        // {
        // 	$j = 1;
        // 	while($row = $STH->fetch(PDO::FETCH_ASSOC))
        // 	{
        // $result = mysql_query($sql,$link);
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $arr_records[] = $row;
            }
        }
        return $arr_records;
    }
    public function GETDATADROPDOWNMYDAYTODAYOPTION_KR($page_cat_id, $page_name) {
        $DBH = new DatabaseHandler();
        $arr_data = array();
        $sql = "SELECT * FROM `tbl_data_dropdown` WHERE page_cat_id = '" . $page_name . "' and `healcareandwellbeing` = '" . $page_cat_id . "' and `is_deleted` = 0 ORDER BY `order_show` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $arr_data[] = $row;
            }
        }
        return $arr_data;
    }
    public function getfavcatedetails($page_name, $page_cat_id) {
        $DBH = new DatabaseHandler();
        $arr_data = array();
        $sql = "SELECT * FROM `tbl_data_dropdown` WHERE page_name = '" . $page_name . "' and `healcareandwellbeing` = '" . $page_cat_id . "' and `is_deleted` = 0 ORDER BY `order_show` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $arr_data[] = $row;
            }
        }
        return $arr_data;
    }
    public function getIngredientsByIngrdientType($fav_cat_id, $comman, $page_name) {
        $getvalue = $this->GETDATADROPDOWNMYDAYTODAYOPTION_KR($fav_cat_id, $page_name);
        $countval = count($getvalue);
        // echo "<pre>";print_r($getvalue);echo"</pre>";
        // exit;
        if ($countval == 0) {
            $fav_cat = $comman;
        } else {
            // echo "hi";
            $fav_cat = $fav_cat_id;
        }
        $data_dropdown = $this->GETDATADROPDOWNMYDAYTODAYOPTION_KR($fav_cat, $page_name);
        $fetch_cat1 = $this->GetFecthDataDesign($data_dropdown[0]['canv_sub_cat1_link'], $data_dropdown[0]['sub_cat1']);
        $show_cat = '';
        $fetch_cat1 = array();
        $fetch_cat2 = array();
        $fetch_cat3 = array();
        $fetch_cat4 = array();
        $fetch_cat5 = array();
        $fetch_cat6 = array();
        $fetch_cat7 = array();
        $fetch_cat8 = array();
        $fetch_cat9 = array();
        $fetch_cat10 = array();
        if ($data_dropdown[0]['sub_cat1'] != '') {
            if ($data_dropdown[0]['canv_sub_cat1_show_fetch'] == 1) {
                $show_cat.= $data_dropdown[0]['sub_cat1'] . ',';
            } else {
                $fetch_cat1 = $this->GetFecthDataDesign($data_dropdown[0]['canv_sub_cat1_link'], $data_dropdown[0]['sub_cat1']);
            }
        }
        if ($data_dropdown[0]['sub_cat2'] != '') {
            if ($data_dropdown[0]['canv_sub_cat2_show_fetch'] == 1) {
                $show_cat.= $data_dropdown[0]['sub_cat2'] . ',';
            } else {
                $fetch_cat2 = $this->GetFecthDataDesign($data_dropdown[0]['canv_sub_cat2_link'], $data_dropdown[0]['sub_cat2']);
            }
        }
        if ($data_dropdown[0]['sub_cat3'] != '') {
            if ($data_dropdown[0]['canv_sub_cat3_show_fetch'] == 1) {
                $show_cat.= $data_dropdown[0]['sub_cat3'] . ',';
            } else {
                $fetch_cat3 = $this->GetFecthDataDesign($data_dropdown[0]['canv_sub_cat3_link'], $data_dropdown[0]['sub_cat3']);
            }
        }
        if ($data_dropdown[0]['sub_cat4'] != '') {
            if ($data_dropdown[0]['canv_sub_cat4_show_fetch'] == 1) {
                $show_cat.= $data_dropdown[0]['sub_cat4'] . ',';
            } else {
                $fetch_cat4 = $this->GetFecthDataDesign($data_dropdown[0]['canv_sub_cat4_link'], $data_dropdown[0]['sub_cat4']);
            }
        }
        if ($data_dropdown[0]['sub_cat5'] != '') {
            if ($data_dropdown[0]['canv_sub_cat5_show_fetch'] == 1) {
                $show_cat.= $data_dropdown[0]['sub_cat5'] . ',';
            } else {
                $fetch_cat5 = $this->GetFecthDataDesign($data_dropdown[0]['canv_sub_cat5_link'], $data_dropdown[0]['sub_cat5']);
            }
        }
        if ($data_dropdown[0]['sub_cat6'] != '') {
            if ($data_dropdown[0]['canv_sub_cat6_show_fetch'] == 1) {
                $show_cat.= $data_dropdown[0]['sub_cat6'] . ',';
            } else {
                $fetch_cat6 = $this->GetFecthDataDesign($data_dropdown[0]['canv_sub_cat6_link'], $data_dropdown[0]['sub_cat6']);
            }
        }
        if ($data_dropdown[0]['sub_cat7'] != '') {
            if ($data_dropdown[0]['canv_sub_cat7_show_fetch'] == 1) {
                $show_cat.= $data_dropdown[0]['sub_cat7'] . ',';
            } else {
                $fetch_cat7 = $this->GetFecthDataDesign($data_dropdown[0]['canv_sub_cat7_link'], $data_dropdown[0]['sub_cat7']);
            }
        }
        if ($data_dropdown[0]['sub_cat8'] != '') {
            if ($data_dropdown[0]['canv_sub_cat8_show_fetch'] == 1) {
                $show_cat.= $data_dropdown[0]['sub_cat8'] . ',';
            } else {
                $fetch_cat8 = $this->GetFecthDataDesign($data_dropdown[0]['canv_sub_cat8_link'], $data_dropdown[0]['sub_cat8']);
            }
        }
        if ($data_dropdown[0]['sub_cat9'] != '') {
            if ($data_dropdown[0]['canv_sub_cat9_show_fetch'] == 1) {
                $show_cat.= $data_dropdown[0]['sub_cat9'] . ',';
            } else {
                $fetch_cat9 = $this->GetFecthDataDesign($data_dropdown[0]['canv_sub_cat9_link'], $data_dropdown[0]['sub_cat9']);
            }
        }
        if ($data_dropdown[0]['sub_cat10'] != '') {
            if ($data_dropdown[0]['canv_sub_cat10_show_fetch'] == 1) {
                $show_cat.= $data_dropdown[0]['sub_cat10'] . ',';
            } else {
                $fetch_cat10 = $this->GetFecthDataDesign($data_dropdown[0]['canv_sub_cat10_link'], $data_dropdown[0]['sub_cat10']);
            }
        }
        $show_cat = explode(',', $show_cat);
        $show_cat = array_filter($show_cat);
        $final_array = array_merge($fetch_cat1, $fetch_cat2, $fetch_cat3, $fetch_cat4, $fetch_cat5, $fetch_cat6, $fetch_cat7, $fetch_cat8, $fetch_cat9, $fetch_cat10);
        $final_dropdown = $this->CreateDesignLifeDropdown($show_cat, $final_array);
        if ($final_dropdown != '') {
            echo $final_dropdown;
        } else {
            echo "";
        }
    }
    function viewEntriesDetailsList($user_id, $start_date, $end_date, $reward_module_id) {
        $DBH = new DatabaseHandler();
        $output = '';
        $output.= '<div style="margin-top:15px;height:400px;overflow:scroll;">';
        $output.= '	<table border="1" cellpadding="0" cellspacing="0" class="report" style="border-collapse:collapse; width:100%;">

					<tbody>

						<tr>

							<td width="10%" height="30" align="center" valign="middle"><strong>SNo</strong></td>

							<td width="60%" height="30" align="center" valign="middle"><strong>Date</strong></td>

							<td width="30%" height="30" align="center" valign="middle"><strong>Total Entries</strong></td>

						</tr>';
        if ($start_date == '' || $end_date == '' || $reward_module_id == '') {
            $output.= '		<tr>

							<td colspan="3" height="30" align="center" valign="middle">No Records Found!</td>

						</tr>';
        } else {
            $arr_date = $this->getDateArrayBetweenTwoDates($start_date, $end_date);
            if (count($arr_date) > 0) {
                //for($i=0,$j=1;$i<count($arr_date);$i++,$j++)
                $k=0;
                for ($i = count($arr_date) - 1, $j = 1;$i >= 0;$i--, $j++) {
                    $total_entry = $this->getTotalEntriesOfModule($reward_module_id, $arr_date[$i], $arr_date[$i], $user_id);
                    //change by ample 05-11-20
                    // if ($total_entry == '0' || $total_entry == '') {
                    //     $total_entry = '-';
                    // }
                    if ($total_entry) {
                        $k++;
                         $output.= '        <tr>

                            <td height="30" align="center" valign="middle">' . $k . '</td>

                            <td height="30" align="center" valign="middle">' . date('d-m-Y', strtotime($arr_date[$i])) . '</td>

                            <td height="30" align="center" valign="middle">' . $total_entry . '</td>

                        </tr>';
                        
                    }
                   
                }
            } else {
                $output.= '		<tr>

							<td colspan="3" height="30" align="center" valign="middle">No Records Found.</td>

						</tr>';
            }
        }
        $output.= '	</tbody>

					</table>

				</div>';
        //  echo "<pre>";print_r($output);echo"</pre>";
        // exit;
        return $output;
    }
    function getDateArrayBetweenTwoDates($start_date, $end_date) {
        $arr_date = array();
        $start = new DateTime($start_date);
        //$start->modify('first day of this month');
        $end = new DateTime($end_date);
        //$end->modify('first day of next month');
        $interval = DateInterval::createFromDateString('1 day');
        $period = new DatePeriod($start, $interval, $end);
        foreach ($period as $dt) {
            //echo $dt->format("Y-m-d") ."<br>\n";
            array_push($arr_date, $dt->format("Y-m-d"));
        }
        return $arr_date;
    }
    public function getScrollingBarCode_KR($page_id) {
        $DBH = new DatabaseHandler();
        $output = '';
        $arr_records = array();
        $today_day = date('j');
        $today_date = date('Y-m-d');
        if ($this->chkIfPageEnableForScrollingBar($page_id)) {
            $sql = "SELECT * FROM `tblscrollingbars` WHERE ( (`sb_listing_date_type` = 'days_of_month' AND FIND_IN_SET('" . $today_day . "', sb_days_of_month) ) OR (`sb_listing_date_type` = 'single_date' AND `sb_single_date` = '" . $today_date . "') OR (`sb_listing_date_type` = 'date_range' AND `sb_start_date` <= '" . $today_date . "' AND `sb_end_date` >= '" . $today_date . "') ) AND ( `sb_status` = '1' ) AND ( `sb_deleted` = '0' ) ORDER BY `sb_order` ASC , `sb_add_date` DESC ";
            //echo '<br>sql = '.$sql;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $show = false;
                    $temp_page_id = stripslashes($row['page_id']);
                    if ($temp_page_id == '') {
                        $show = true;
                    } else {
                        $arr_temp_pg_id = explode(',', $temp_page_id);
                        if (in_array($page_id, $arr_temp_pg_id)) {
                            $show = true;
                        }
                    }
                    if ($show) {
                        $arr_records[] = $row;
                    }
                }
                if (count($arr_records) > 0) {
                    $sb_bg_color = $this->getCommonSettingValue('1');
                    $sb_border_color = $this->getCommonSettingValue('2');
                    $output.= '<style>.ticker-wrapper.has-js {background-color: #' . $sb_bg_color . '; border:1px solid #' . $sb_border_color . '} .ticker {background-color: #' . $sb_bg_color . ';} .ticker-swipe {background-color: #' . $sb_bg_color . ';}</style>';
                    // $output .= '<table width="100%" border="0" cellspacing="0" cellpadding="0">
                    // 		<tr>
                    // 			<td width="100%" align="left" valign="top">';
                    $output.= '<div id="news-ticker-fade-demo" class="ticker">';
                    $output.= ' <ul id="js-news" class="js-hidden">';
                    //while ($row = mysql_fetch_assoc($result))
                    foreach ($arr_records as $key => $row) {
                        $sb_id = $row['sb_id'];
                        $sb_content = stripslashes($row['sb_content']);
                        $sb_content_font_family = stripslashes($row['sb_content_font_family']);
                        $sb_content_font_size = stripslashes($row['sb_content_font_size']);
                        $sb_content_font_color = stripslashes($row['sb_content_font_color']);
                        $sb_show_content_credit = stripslashes($row['sb_show_content_credit']);
                        $sb_content_credit_link = stripslashes($row['sb_content_credit_link']);
                        $sb_content_credit_name = stripslashes($row['sb_content_credit_name']);
                        $sb_content_style = '';
                        if ($sb_content_font_family != '') {
                            $sb_content_style = 'font-family:' . $sb_content_font_family . ';';
                        }
                        if ($sb_content_font_size != '') {
                            $sb_content_style.= 'font-size:' . $sb_content_font_size . 'px;';
                        }
                        if ($sb_content_font_color != '') {
                            $sb_content_style.= 'color:#' . $sb_content_font_color . ';';
                        }
                        if ($row['sb_content_image'] != '') {
                            $sb_content_image = '<img border="0" height="30" src="' . SITE_URL . '/uploads/' . stripslashes($row['sb_content_image']) . '" />';
                            $sb_content_image = '';
                        } else {
                            $sb_content_image = '';
                        }
                        if ($sb_show_content_credit == '1') {
                            if ($sb_content_credit_name != '') {
                                $sb_content_credit = '&nbsp;&nbsp;---&nbsp;&nbsp;<a href="' . $sb_content_credit_link . '" target="_blank">' . $sb_content_credit_name . '</a>&nbsp;&nbsp;&nbsp;&nbsp;';
                            } else {
                                $sb_content_credit = '';
                            }
                        } else {
                            $sb_content_credit = '';
                        }
                        $output.= '<li class="news-item"><a href="#" style="' . $sb_content_style . '">' . $sb_content . ' &nbsp;&nbsp;' . $sb_content_image . '</a> &nbsp;&nbsp;<span>' . $sb_content_credit . '</span></li>';
                    }
                    $output.= '</ul>';
                    $output.= '</div>';
                    // $output .= ' </td>
                    // 		</tr>
                    // 	</table>
                    // 	<table width="100%" border="0" cellspacing="0" cellpadding="0">
                    // 		<tr>
                    // 			<td height="10"><img src="images/spacer.gif" width="1" height="1" /></td>
                    // 		</tr>
                    // 	</table>   ';
                    
                }
            }
        }
        return $output;
    }
    public function getSolutionCategoryName($fav_cat_id) {
        // $my_DBH = new mysqlConnection();
        $DBH = new DatabaseHandler();
        // $DBH = $my_DBH->raw_handle();
        // $DBH->beginTransaction();
        $name = '';
        //$sql = "SELECT * FROM `tblsolutioncategories` WHERE `sol_cat_id` = '".$sol_cat_id."' ";
        $sql = "SELECT * FROM `tblfavcategory` WHERE `fav_cat_id` = '" . $fav_cat_id . "' ";
        $STH = $DBH->query($sql);
        // $STH = $DBH->prepare($sql);
        // $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $name = stripslashes($row['fav_cat']);
        }
        return $name;
    }
    function getDatesFromRangeKR($start, $end, $format = 'Y-m-d') {
        // Declare an empty array
        $array = array();
        // Variable that store the date interval
        // of period 1 day
        $interval = new DateInterval('P1D');
        $realEnd = new DateTime($end);
        $realEnd->add($interval);
        $period = new DatePeriod(new DateTime($start), $interval, $realEnd);
        // Use loop to store date into array
        foreach ($period as $date) {
            $array[] = $date->format($format);
        }
        // Return the array elements
        return $array;
    }
    public function gethomepagepopupdataKR($day_month_year) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $arr_days = array();
        $single_date = date("Y-m-d", strtotime($day_month_year));
        $all = date("d", strtotime($day_month_year));
        $month_wise = date("m", strtotime($day_month_year));
        $days_of_week = date('w', strtotime($day_month_year));
        // $sql = "SELECT * FROM `tbltheams` WHERE status = '1' ORDER BY `theam_name` ASC";
        $sql = "SELECT * FROM `tblprofilecustomization` WHERE status = '1' AND deleted='0' ORDER BY `prct_id` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                if ($row['listing_date_type'] == 'single_date') {
                    if ($single_date == $row['single_date']) {
                        $data = $this->selectdatewisedata($row['prct_id']);
                        if ($data != "") {
                            $value[] = $data;
                        }
                        // echo "<pre>";print_r($data);echo"</pre>";
                        // exit;
                        
                    }
                } elseif ($row['listing_date_type'] == 'all') {
                    $all_arr = explode(',', $row['days_of_month']);
                    // echo "<pre>";print_r($all_arr );echo "</pre>";
                    if (in_array($all, $all_arr)) {
                        $data = $this->selectdatewisedata($row['prct_id']);
                        if ($data != "") {
                            $value[] = $data;
                        }
                    }
                } elseif ($row['listing_date_type'] == 'days_of_month') {
                    $all_arr = explode(',', $row['days_of_month']);
                    if (in_array($all, $all_arr)) {
                        $data = $this->selectdatewisedata($row['prct_id']);
                        if ($data != "") {
                            $value[] = $data;
                        }
                    }
                } elseif ($row['listing_date_type'] == 'date_range') {
                    $datearrr = $this->getDatesFromRangeKR($row['start_date'], $row['end_date']);
                    // if(($row['start_date'] >=$single_date) && ($single_date<= $row['end_date']) )
                    if (in_array(date('Y-m-d'), $datearrr)) {
                        $data = $this->selectdatewisedata($row['prct_id']);
                        if ($data != "") {
                            $value[] = $data;
                        }
                    }
                } elseif ($row['listing_date_type'] == 'month_wise') {
                    $all_arr = explode(',', $row['months']);
                    if (in_array($month_wise, $all_arr)) {
                        $data = $this->selectdatewisedata($row['prct_id']);
                        if ($data != "") {
                            $value[] = $data;
                        }
                    }
                } elseif ($row['listing_date_type'] == 'days_of_week') {
                    $all_arr = explode(',', $row['days_of_week']);
                    if (in_array($days_of_week, $all_arr)) {
                        $data = $this->selectdatewisedata($row['prct_id']);
                        if ($data != "") {
                            $value[] = $data;
                        }
                    }
                }
            }
        }
        return $value;
    }
    public function selectdatewisedata($sol_itm_id) {
        $DBH = new DatabaseHandler();
        $sql = "SELECT * FROM `tblsolutionitems` WHERE `prct_id`=" . $sol_itm_id . " AND `sol_item_deleted` = '0' AND `show_pop`='Yes' ORDER BY sol_item_add_date DESC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $get_sol_cat_name = $this->getSolutionCategoryName($row['sol_item_cat_id']);
                $make_arr = array('sol_item_id' => $row['sol_item_id'], 'sol_item_status' => $row['sol_item_status'], 'sol_item_cat_id' => $row['sol_item_cat_id'], 'get_sol_cat_name' => $get_sol_cat_name, 'narration' => $row['narration'], 'show_pop' => $row['show_pop'], 'date' => $row['sol_item_add_date']);
            }
            return $make_arr;
        }
    }
    function getMultipleFieldsValueByComma($str) {
        $var = '';
        $var_rest = '';
        $var_add = '';
        $var_cnt = 0;
        $var_arr = array();
        $var_arr_rest = array();
        if (isset($_POST["$str"])) {
            if (is_array($_POST["$str"]) && count($_POST["$str"]) > 0) {
                foreach ($_POST["$str"] as $key => $val) {
                    $var.= trim($_POST["$str"][$key]) . ',';
                    $var_cnt++;
                    array_push($var_arr, trim($_POST["$str"][$key]));
                }
            }
        }
        $var = substr($var, 0, -1);
        $var_add = $var;
        if ($var_cnt > 1) {
            $temp_arr = explode(',', $var, 2);
            $var = $temp_arr[0];
            $var_rest = $temp_arr[1];
            $pos2 = strpos($var_rest, ',');
            if ($pos2 !== false) {
                $var_arr_rest = explode(",", $var_rest);
            } else {
                array_push($var_arr_rest, $var_rest);
            }
        }
        return array($var, $var_add, $var_rest, $var_cnt, $var_arr_rest, $var_arr);
    }
    function getMultipleFieldsValueBy($str) {
        $var = '';
        $var_rest = '';
        $var_add = '';
        $var_cnt = 0;
        $var_arr = array();
        $var_arr_rest = array();
        if (isset($_POST["$str"])) {
            if (is_array($_POST["$str"]) && count($_POST["$str"]) > 0) {
                foreach ($_POST["$str"] as $key => $val) {
                    $var.= trim($_POST["$str"][$key]) . '::';
                    $var_cnt++;
                    array_push($var_arr, trim($_POST["$str"][$key]));
                }
            }
        }
        $var = substr($var, 0, -2);
        $var_add = $var;
        if ($var_cnt > 1) {
            $temp_arr = explode('::', $var, 2);
            $var = $temp_arr[0];
            $var_rest = $temp_arr[1];
            $pos2 = strpos($var_rest, '::');
            if ($pos2 !== false) {
                $var_arr_rest = explode("::", $var_rest);
            } else {
                array_push($var_arr_rest, $var_rest);
            }
        }
        return array($var, $var_add, $var_rest, $var_cnt, $var_arr_rest, $var_arr);
    }
    function getDailyMealName($meal_id) {
        // global $link;
        $DBH = new DatabaseHandler();
        $meal_item = '';
        if ($meal_id == '9999999999') {
            $meal_item = 'Others';
        } else {
            $sql = "SELECT * FROM `tbldailymeals` WHERE `meal_id` = '" . $meal_id . "' ";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                // while($row = $STH->fetch(PDO::FETCH_ASSOC))
                // {
                // $result = mysql_query($sql,$link);
                // if( ($result) && (mysql_num_rows($result) > 0) )
                // {
                $row = $STH->fetch(PDO::FETCH_ASSOC);
                // $row = mysql_fetch_array($result);
                $meal_item = stripslashes($row['meal_item']);
            }
        }
        return $meal_item;
    }
    function chkFoodItemExists($meal_id) {
        // global $link;
        $DBH = new DatabaseHandler();
        $return = false;
        if ($meal_id == '9999999999') {
            $return = true;
        } else {
            $sql = "SELECT * FROM `tbldailymeals` WHERE `meal_id` = '" . $meal_id . "' ";
            // $result = mysql_query($sql,$link);
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
            }
        }
        return $return;
    }
    function addUsersDailyMeal($user_id, $meal_date, $breakfast_time, $breakfast_item_id_arr, $breakfast_other_item_arr, $breakfast_meal_like_arr, $breakfast_quantity_arr, $breakfast_measure_arr, $breakfast_consultant_remark_arr, $brunch_time, $brunch_item_id_arr, $brunch_other_item_arr, $brunch_meal_like_arr, $brunch_quantity_arr, $brunch_measure_arr, $brunch_consultant_remark_arr, $lunch_time, $lunch_item_id_arr, $lunch_other_item_arr, $lunch_meal_like_arr, $lunch_quantity_arr, $lunch_measure_arr, $lunch_consultant_remark_arr, $snacks_time, $snacks_item_id_arr, $snacks_other_item_arr, $snacks_meal_like_arr, $snacks_quantity_arr, $snacks_measure_arr, $snacks_consultant_remark_arr, $dinner_time, $dinner_item_id_arr, $dinner_other_item_arr, $dinner_meal_like_arr, $dinner_quantity_arr, $dinner_measure_arr, $dinner_consultant_remark_arr) {
        // global $link;
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "DELETE FROM `tblusersmeals` WHERE `user_id` = '" . $user_id . "' AND  `meal_date` = '" . $meal_date . "'";
        // $result = mysql_query($sql,$link);
        $result = $DBH->query($sql);
        for ($i = 0;$i < count($breakfast_item_id_arr);$i++) {
            $meal_type = 'breakfast';
            if ($breakfast_time != '') {
                $sql = "INSERT INTO `tblusersmeals` (`user_id`,`meal_date`,`meal_time`,`meal_id`,`meal_others`,`meal_like`,`meal_quantity`,`meal_measure`,`meal_consultant_remark`,`meal_type`) VALUES ('" . $user_id . "','" . $meal_date . "','" . $breakfast_time . "','" . $breakfast_item_id_arr[$i] . "','" . addslashes($breakfast_other_item_arr[$i]) . "','" . $breakfast_meal_like_arr[$i] . "','" . $breakfast_quantity_arr[$i] . "','" . $breakfast_measure_arr[$i] . "','" . addslashes($breakfast_consultant_remark_arr[$i]) . "','" . $meal_type . "')";
                // $result = mysql_query($sql,$link);
                $result = $DBH->query($sql);
                if ($result) {
                    $return = true;
                }
            }
        }
        for ($i = 0;$i < count($brunch_item_id_arr);$i++) {
            $meal_type = 'brunch';
            if ($brunch_time != '') {
                $sql = "INSERT INTO `tblusersmeals` (`user_id`,`meal_date`,`meal_time`,`meal_id`,`meal_others`,`meal_like`,`meal_quantity`,`meal_measure`,`meal_consultant_remark`,`meal_type`) VALUES ('" . $user_id . "','" . $meal_date . "','" . $brunch_time . "','" . $brunch_item_id_arr[$i] . "','" . addslashes($brunch_other_item_arr[$i]) . "','" . $brunch_meal_like_arr[$i] . "','" . $brunch_quantity_arr[$i] . "','" . $brunch_measure_arr[$i] . "','" . addslashes($brunch_consultant_remark_arr[$i]) . "','" . $meal_type . "')";
                // $result = mysql_query($sql,$link);
                $result = $DBH->query($sql);
                if ($result) {
                    $return = true;
                }
            }
        }
        for ($i = 0;$i < count($lunch_item_id_arr);$i++) {
            $meal_type = 'lunch';
            if ($lunch_time != '') {
                $sql = "INSERT INTO `tblusersmeals` (`user_id`,`meal_date`,`meal_time`,`meal_id`,`meal_others`,`meal_like`,`meal_quantity`,`meal_measure`,`meal_consultant_remark`,`meal_type`) VALUES ('" . $user_id . "','" . $meal_date . "','" . $lunch_time . "','" . $lunch_item_id_arr[$i] . "','" . addslashes($lunch_other_item_arr[$i]) . "','" . $lunch_meal_like_arr[$i] . "','" . $lunch_quantity_arr[$i] . "','" . $lunch_measure_arr[$i] . "','" . addslashes($lunch_consultant_remark_arr[$i]) . "','" . $meal_type . "')";
                // $result = mysql_query($sql,$link);
                $result = $DBH->query($sql);
                if ($result) {
                    $return = true;
                }
            }
        }
        for ($i = 0;$i < count($snacks_item_id_arr);$i++) {
            $meal_type = 'snacks';
            if ($snacks_time != '') {
                $sql = "INSERT INTO `tblusersmeals` (`user_id`,`meal_date`,`meal_time`,`meal_id`,`meal_others`,`meal_like`,`meal_quantity`,`meal_measure`,`meal_consultant_remark`,`meal_type`) VALUES ('" . $user_id . "','" . $meal_date . "','" . $snacks_time . "','" . $snacks_item_id_arr[$i] . "','" . addslashes($snacks_other_item_arr[$i]) . "','" . $snacks_meal_like_arr[$i] . "','" . $snacks_quantity_arr[$i] . "','" . $snacks_measure_arr[$i] . "','" . addslashes($snacks_consultant_remark_arr[$i]) . "','" . $meal_type . "')";
                // $result = mysql_query($sql,$link);
                $result = $DBH->query($sql);
                if ($result) {
                    $return = true;
                }
            }
        }
        for ($i = 0;$i < count($dinner_item_id_arr);$i++) {
            $meal_type = 'dinner';
            if ($dinner_time != '') {
                $sql = "INSERT INTO `tblusersmeals` (`user_id`,`meal_date`,`meal_time`,`meal_id`,`meal_others`,`meal_like`,`meal_quantity`,`meal_measure`,`meal_consultant_remark`,`meal_type`) VALUES ('" . $user_id . "','" . $meal_date . "','" . $dinner_time . "','" . $dinner_item_id_arr[$i] . "','" . addslashes($dinner_other_item_arr[$i]) . "','" . $dinner_meal_like_arr[$i] . "','" . $dinner_quantity_arr[$i] . "','" . $dinner_measure_arr[$i] . "','" . addslashes($dinner_consultant_remark_arr[$i]) . "','" . $meal_type . "')";
                // $result = mysql_query($sql,$link);
                $result = $DBH->query($sql);
                if ($result) {
                    $return = true;
                }
            }
        }
        return $return;
    }
    function getUsersDailyMealsDetails($user_id, $meal_date) {
        // global $link;
        $DBH = new DatabaseHandler();
        $arr_user_meal_id = array();
        $arr_meal_date = array();
        $arr_meal_time = array();
        $arr_meal_id = array();
        $arr_meal_others = array();
        $arr_meal_like = array();
        $arr_meal_quantity = array();
        $arr_meal_measure = array();
        $arr_meal_consultant_remark = array();
        $arr_meal_type = array();
        $sql = "SELECT * FROM `tblusersmeals` WHERE `user_id` = '" . $user_id . "' AND `meal_date` = '" . $meal_date . "' AND `meal_time` != '' ORDER BY `user_meal_id` ASC";
        //echo "<br>Testkk sql = ".$sql;
        // $STH = $DBH->query($sql);
        //           if($STH->rowCount()>0)
        //            {
        // while($row = $STH->fetch(PDO::FETCH_ASSOC))
        // {
        // $result = mysql_query($sql,$link);
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                array_push($arr_user_meal_id, $row['user_meal_id']);
                array_push($arr_meal_date, stripslashes($row['meal_date']));
                array_push($arr_meal_time, stripslashes($row['meal_time']));
                array_push($arr_meal_id, stripslashes($row['meal_id']));
                array_push($arr_meal_others, stripslashes($row['meal_others']));
                array_push($arr_meal_like, stripslashes($row['meal_like']));
                array_push($arr_meal_quantity, stripslashes($row['meal_quantity']));
                array_push($arr_meal_measure, stripslashes($row['meal_measure']));
                array_push($arr_meal_consultant_remark, stripslashes($row['meal_consultant_remark']));
                array_push($arr_meal_type, stripslashes($row['meal_type']));
            }
        }
        return array($arr_user_meal_id, $arr_meal_date, $arr_meal_time, $arr_meal_id, $arr_meal_others, $arr_meal_like, $arr_meal_quantity, $arr_meal_measure, $arr_meal_consultant_remark, $arr_meal_type);
    }
    function getMealsAutoList($user_id) {
        // global $link;
        $DBH = new DatabaseHandler();
        $data = array();
        $veg_str = '';
        list($food_veg_nonveg, $beef, $pork) = $this->getFoodVegNonVegOfUser($user_id);
        if ($food_veg_nonveg == 'V') {
            $veg_str = " WHERE `food_veg_nonveg` != 'NV' AND `food_veg_nonveg` != 'E' AND `food_veg_nonveg` != 'B' AND `food_veg_nonveg` != 'P' ";
        } elseif ($food_veg_nonveg == 'VE') {
            $veg_str = " WHERE `food_veg_nonveg` != 'NV' AND `food_veg_nonveg` != 'B' AND `food_veg_nonveg` != 'P' ";
        } else {
            if ($beef == '0') {
                $veg_str = " WHERE `food_veg_nonveg` != 'B' ";
                if ($pork == '0') {
                    $veg_str.= " AND `food_veg_nonveg` != 'P' ";
                }
            } else {
                if ($pork == '0') {
                    $veg_str = " WHERE `food_veg_nonveg` != 'P' ";
                }
            }
        }
        $sql = "SELECT * FROM `tbldailymeals` " . $veg_str . " ORDER BY `meal_item` ASC";
        // $STH = $DBH->query($sql);
        //           if($STH->rowCount()>0)
        //            {
        // while($row = $STH->fetch(PDO::FETCH_ASSOC))
        // {
        // $result = mysql_query($sql,$link);
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $json = array();
                $json['value'] = $row['meal_id'];
                $json['name'] = stripslashes($row['meal_item']);
                $data[] = $json;
            }
            $json['value'] = '9999999999';
            $json['name'] = 'Others';
            $data[] = $json;
            return json_encode($data);
        }
    }
    function getPreFillList($prefill_id) {
        if (($prefill_id == '') || ($prefill_id == '{}')) {
            $output = '{}';
        } else {
            $output = $prefill_id;
        }
        return $output;
    }
    function getMealLikeIcon($meal_like) {
        // global $link;
        $DBH = new DatabaseHandler();
        $icon = '';
        if ($meal_like == 'Like') {
            $icon = '<img border="0" src="' . SITE_URL . '/images/like_icon.jpg" width="18" height="18">';
        } elseif ($meal_like == 'Dislike') {
            $icon = '<img border="0" src="' . SITE_URL . '/images/dislike_icon.jpg" width="18" height="18">';
        } elseif ($meal_like == 'Favourite') {
            $icon = '<img border="0" src="' . SITE_URL . '/images/favorite_icon.jpg" width="18" height="18">';
        } elseif ($meal_like == 'Allergic') {
            $icon = '<img border="0" src="' . SITE_URL . '/images/allergies_icon.jpg" width="18" height="18">';
        } else {
            $icon = '';
        }
        return $icon;
    }
    function getDailyActivityName($activity_id) {
        // global $link;
        $DBH = new DatabaseHandler();
        $activity = '';
        if ($activity_id == '9999999999') {
            $activity = 'Others';
        } else {
            $sql = "SELECT * FROM `tbldailyactivity` WHERE `activity_id` = '" . $activity_id . "' ";
            // if($STH->rowCount()>0)
            // {
            // 	while ($row = $STH->fetch(PDO::FETCH_ASSOC))
            // 	{
            // $result = mysql_query($sql,$link);
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $row = $STH->fetch(PDO::FETCH_ASSOC);
                $activity = stripslashes($row['activity']);
            }
        }
        return $activity;
    }
    function addUsersDailyActivity($user_id, $activity_date, $activity_id_arr, $other_activity_arr, $activity_time_arr, $mins_arr, $proper_guidance_arr, $precaution_arr, $yesterday_sleep_time, $today_wakeup_time) {
        // global $link;
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "DELETE FROM `tblusersdailyactivity` WHERE `user_id` = '" . $user_id . "' AND  `activity_date` = '" . $activity_date . "'";
        // $result = mysql_query($sql,$link);
        $result = $DBH->query($sql);
        for ($i = 0;$i < count($activity_id_arr);$i++) {
            if (($activity_id_arr[$i] != '') && ($activity_id_arr[$i] != '0') && ($mins_arr[$i] != '') && ($mins_arr[$i] != '0')) {
                $sql = "INSERT INTO `tblusersdailyactivity` (`user_id`,`activity_date`,`activity_id`,`other_activity`,`activity_time`,`mins`,`proper_guidance`,`precaution`,`yesterday_sleep_time`,`today_wakeup_time`) VALUES ('" . $user_id . "','" . $activity_date . "','" . $activity_id_arr[$i] . "','" . addslashes($other_activity_arr[$i]) . "','" . $activity_time_arr[$i] . "','" . $mins_arr[$i] . "','" . $proper_guidance_arr[$i] . "','" . addslashes($precaution_arr[$i]) . "','" . addslashes($yesterday_sleep_time) . "','" . addslashes($today_wakeup_time) . "')";
                //echo"<br>".$sql;
                $result = $DBH->query($sql);
                // $result = mysql_query($sql,$link);
                if ($result) {
                    $return = true;
                }
            }
        }
        return $return;
    }
    function getUsersDailyActivityDetails($user_id, $activity_date) {
        // global $link;
        $DBH = new DatabaseHandler();
        $yesterday_sleep_time = '';
        $today_wakeup_time = '';
        $activity_time_arr = array();
        $mins_arr = array();
        $activity_id_arr = array();
        $other_activity_arr = array();
        $proper_guidance_arr = array();
        $precaution_arr = array();
        $sql = "SELECT * FROM `tblusersdailyactivity` WHERE `user_id` = '" . $user_id . "' AND `activity_date` = '" . $activity_date . "' AND `activity_time` != '' ORDER BY `user_activity_id` ASC";
        //echo "<br>Testkk sql = ".$sql;
        // $result = mysql_query($sql,$link);
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $yesterday_sleep_time = $row['yesterday_sleep_time'];
                $today_wakeup_time = $row['today_wakeup_time'];
                array_push($activity_time_arr, $row['activity_time']);
                array_push($mins_arr, $row['mins']);
                array_push($activity_id_arr, stripslashes($row['activity_id']));
                array_push($other_activity_arr, stripslashes($row['other_activity']));
                array_push($proper_guidance_arr, stripslashes($row['proper_guidance']));
                array_push($precaution_arr, stripslashes($row['precaution']));
            }
        }
        return array($yesterday_sleep_time, $today_wakeup_time, $mins_arr, $activity_id_arr, $other_activity_arr, $proper_guidance_arr, $precaution_arr, $activity_time_arr);
    }
    function getActivityAutoList() {
        // global $link;
        $DBH = new DatabaseHandler();
        $data = array();
        $sql = "SELECT * FROM `tbldailyactivity` ORDER BY `activity` ASC";
        // $result = mysql_query($sql,$link);
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $json = array();
                $json['value'] = $row['activity_id'];
                $json['name'] = stripslashes($row['activity']);
                $data[] = $json;
            }
            $json['value'] = '9999999999';
            $json['name'] = 'Others';
            $data[] = $json;
            return json_encode($data);
        }
    }
    function signUpGestUserVivek($name, $middle_name) {
        // global $link;
        $DBH = new DatabaseHandler();
        $return = 0;
        $now = time();
        $sql = "INSERT INTO `tblusers` (`name`,`middle_name`) VALUES ('" . addslashes($name) . "','" . addslashes($middle_name) . "')";
        // $result = mysql_query($sql,$link);
        $result = $DBH->query($sql);
        if ($result) {
            // $user_id = mysql_insert_id($link);
            $user_id = $DBH->lastInsertId();
            $sql2 = "UPDATE `tblusers` SET `gest_id` = '" . $user_id . "' WHERE `user_id` = '" . $user_id . "'";
            // $result2 = mysql_query($sql2,$link);
            $result2 = $DBH->query($sql2);
            if ($result2) {
                $return = $user_id;
            }
        }
        return $return;
    }
    function getSleepQuestions($user_id, $sleep_date, $pro_user_id) {
        // global $link;
        $DBH = new DatabaseHandler();
        $return = false;
        $arr_sleep_id = array();
        $arr_situation = array();
        $arr_situation_font_family = array();
        $arr_situation_font_size = array();
        $arr_situation_font_color = array();
        $today_day = date('j', strtotime($sleep_date));
        $today_date = date('Y-m-d', strtotime($sleep_date));
        if ($pro_user_id != '') {
            if ($pro_user_id == '999999999') {
                $sql_str_pro = " AND ( `practitioner_id` = '0' ) ";
            } else {
                $sql_str_pro = " AND ( `practitioner_id` = '" . $pro_user_id . "' ) ";
            }
            $sql = "SELECT * FROM `tblsleeps` WHERE ( (`listing_date_type` = 'days_of_month' AND FIND_IN_SET('" . $today_day . "', days_of_month) ) OR (`listing_date_type` = 'single_date' AND `single_date` = '" . $today_date . "') OR (`listing_date_type` = 'date_range' AND `start_date` <= '" . $today_date . "' AND `end_date` >= '" . $today_date . "') ) AND ( `status` = '1' ) " . $sql_str_pro . " ORDER BY `listing_order` ASC , `sleep_add_date` DESC ";
            //echo '<br>'.$sql;
            // $result = mysql_query($sql,$link);
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $practitioner_id = $row['practitioner_id'];
                    $str_user_id = $row['user_id'];
                    $country_id = $row['country_id'];
                    $str_state_id = $row['state_id'];
                    $str_city_id = $row['city_id'];
                    $str_place_id = $row['place_id'];
                    $add_to_record = $this->chkIfQuestionInUserCriteria($practitioner_id, $str_user_id, $user_id, $country_id, $str_state_id, $str_city_id, $str_place_id);
                    if ($add_to_record) {
                        array_push($arr_sleep_id, $row['sleep_id']);
                        array_push($arr_situation, stripslashes($row['situation']));
                        array_push($arr_situation_font_family, stripslashes($row['situation_font_family']));
                        array_push($arr_situation_font_size, stripslashes($row['situation_font_size']));
                        array_push($arr_situation_font_color, stripslashes($row['situation_font_color']));
                    }
                }
            }
        }
        return array($arr_sleep_id, $arr_situation, $arr_situation_font_family, $arr_situation_font_size, $arr_situation_font_color);
    }
    function getImageAndColorCodeOfAdviserTheme($practitioner_id) {
        // global $link;
        $DBH = new DatabaseHandler();
        $color_code = '#339900';
        $image = '';
        $today_day = date('j');
        $sql = "SELECT * FROM `tbltheams` WHERE `practitioner_id` = '" . $practitioner_id . "' AND `status` = '1' AND FIND_IN_SET('" . $today_day . "', day) ORDER BY RAND() limit 1";
        //echo '<br>'.$sql.'<br>';
        // $result = mysql_query($sql,$link);
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            // $row = mysql_fetch_array($result);
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $image = SITE_URL . "/uploads/" . stripslashes($row['image']);
            $color_code = "#" . stripslashes($row['color_code']);
        }
        return array($image, $color_code);
    }
    function addUsersSleepQuestion($user_id, $sleep_date, $selected_sleep_id_arr, $scale_arr, $remarks_arr) {
        // global $link;
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "DELETE FROM `tbluserssleep` WHERE `user_id` = '" . $user_id . "' AND  `sleep_date` = '" . $sleep_date . "'";
        $result = $DBH->query($sql);
        // $result = mysql_query($sql,$link);
        for ($i = 0;$i < count($selected_sleep_id_arr);$i++) {
            if ($selected_sleep_id_arr[$i] > 0) {
                $sql = "INSERT INTO `tbluserssleep` (`user_id`,`sleep_date`,`selected_sleep_id`,`scale`,`remarks`) VALUES ('" . $user_id . "','" . $sleep_date . "','" . $selected_sleep_id_arr[$i] . "','" . $scale_arr[$i] . "','" . $remarks_arr[$i] . "')";
                //echo"<br>".$sql;
                $result = $DBH->query($sql);
                // $result = mysql_query($sql,$link);
                if ($result) {
                    $return = true;
                }
            }
        }
        return $return;
    }
    function getUsersSleepQuestionDetails($user_id, $sleep_date) {
        // global $link;
        $DBH = new DatabaseHandler();
        $selected_sleep_id_arr = array();
        $activity_id_arr = array();
        $scale_arr = array();
        $remarks_arr = array();
        $sql = "SELECT * FROM `tbluserssleep` WHERE `user_id` = '" . $user_id . "' AND `sleep_date` = '" . $sleep_date . "' ORDER BY `selected_sleep_id` ASC";
        //echo "<br>Testkk sql = ".$sql;
        // $result = mysql_query($sql,$link);
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                array_push($selected_sleep_id_arr, $row['selected_sleep_id']);
                array_push($scale_arr, stripslashes($row['scale']));
                array_push($remarks_arr, stripslashes($row['remarks']));
            }
        }
        return array($scale_arr, $remarks_arr, $selected_sleep_id_arr);
    }
    function getUsersLastMyTargetSleepValue($user_id, $sleep_set_id, $selected_sleep_id) {
        // global $link;
        $DBH = new DatabaseHandler();
        $my_target = '';
        $adviser_target = '';
        if ($sleep_set_id == '999999999') {
            $sql_str_pro = " AND `sleep_set_id` = '0' ";
        } else {
            $sql_str_pro = " AND `sleep_set_id` = '" . $sleep_set_id . "' ";
        }
        $sql = "SELECT * FROM `tbluserssleep` WHERE `user_id` = '" . $user_id . "' AND `sleep_old_data` = '0' AND `selected_sleep_id` = '" . $selected_sleep_id . "' " . $sql_str_pro . " ORDER BY `sleep_date` DESC LIMIT 1";
        //echo "<br>Testkk sql = ".$sql;
        // $result = mysql_query($sql,$link);
        // $DBH = new DatabaseHandler();
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            // $row = mysql_fetch_array($result);
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $my_target = stripslashes($row['my_target']);
            $adviser_target = stripslashes($row['adviser_target']);
        }
        return array($my_target, $adviser_target);
    }
    function getUsersSleepQuestionDetailsCode($day, $month, $year, $pro_user_id, $user_id, $old_scale_arr, $old_remarks_arr, $old_selected_sleep_id_arr, $old_my_target_arr, $old_adviser_target_arr) {
        // global $link;
        $DBH = new DatabaseHandler();
        $output = '';
        $sleep_date = $year . '-' . $month . '-' . $day;
        $tr_response_img = array();
        $tr_response_slider = array();
        list($arr_sleep_id, $arr_situation, $arr_situation_font_family, $arr_situation_font_size, $arr_situation_font_color) = $this->getSleepQuestions($user_id, $sleep_date, $pro_user_id);
        $cnt = count($arr_sleep_id);
        for ($i = 0;$i < $cnt;$i++) {
            $tr_response_img[$i] = '';
            $tr_response_slider[$i] = 'none';
        }
        //list($old_scale_arr,$old_remarks_arr,$old_selected_sleep_id_arr,$old_my_target_arr,$old_adviser_target_arr) = getUsersSleepQuestionDetails($user_id,$sleep_date,$pro_user_id);
        $selected_sleep_id_arr = array();
        $scale_arr = array();
        $remarks_arr = array();
        $my_target = array();
        $adviser_target = array();
        $j = 0;
        for ($i = 0;$i < count($arr_sleep_id);$i++) {
            if (in_array($arr_sleep_id[$i], $old_selected_sleep_id_arr)) {
                $key = array_search($arr_sleep_id[$i], $old_selected_sleep_id_arr);
                $tr_response_img[$i] = 'none';
                $tr_response_slider[$i] = '';
                $selected_sleep_id_arr[$i] = $old_selected_sleep_id_arr[$key];
                $scale_arr[$i] = $old_scale_arr[$key];
                $remarks_arr[$i] = $old_remarks_arr[$key];
                $my_target_arr[$i] = $old_my_target_arr[$key];
                $adviser_target_arr[$i] = $old_adviser_target_arr[$key];
                $j++;
            } else {
                $tr_response_img[$i] = '';
                $tr_response_slider[$i] = 'none';
                $selected_sleep_id_arr[$i] = '';
                $scale_arr[$i] = 0;
                $remarks_arr[$i] = '';
                list($my_target_arr[$i], $adviser_target_arr[$i]) = $this->getUsersLastMyTargetSleepValue($user_id, $pro_user_id, $arr_sleep_id[$i]);
            }
        }
        $output = '';
        $output.= '<table width="100%" border="0" cellspacing="0" cellpadding="0" id="tblsleep">';
        if (count($arr_sleep_id) > 0) {
            for ($i = 0;$i < count($arr_sleep_id);$i++) {
                $output.= '<tr style="display:none" valign="top">';
                $output.= '	<td align="left" colspan="2" class="err_msg" valign="top"></td>';
                $output.= '</tr>';
                $output.= '<tr>';
                $output.= '	<td align="left" colspan="2" valign="top">&nbsp;</td>';
                $output.= '</tr>';
                $output.= '<tr>';
                $output.= '	<td width="30%" height="35" align="left" valign="top">Situation:</td>';
                $output.= '	<td width="70%" height="35" align="left" valign="top">';
                if ($selected_sleep_id_arr[$i] == $arr_sleep_id[$i]) {
                    $field_disable = '';
                    $chked = ' checked="checked" ';
                } else {
                    $field_disable = ' disabled="disabled" ';
                    $chked = '';
                }
                $output.= '        <input type="checkbox" name="selected_sleep_id_' . $i . '" id="selected_sleep_id_' . $i . '" value="' . $arr_sleep_id[$i] . '" ' . $chked . '  onclick="toggleMyResponseScale(\'selected_sleep_id_\',\'' . $i . '\')" />&nbsp;<strong><span style="font-family:' . $arr_situation_font_family[$i] . ';font-size:' . $arr_situation_font_size[$i] . 'px;color:#' . $arr_situation_font_color[$i] . ';">' . $arr_situation[$i] . '</span></strong>';
                $output.= '	</td>';
                $output.= '</tr>';
                $output.= '<tr>';
                $output.= '	<td width="30" height="45" align="left" valign="top">My Response Scale:</td>';
                $output.= '	<td width="70%" height="45" align="left" valign="top">';
                $output.= $this->getScaleSliderCode($i, $tr_response_img[$i], $tr_response_slider[$i], $scale_arr[$i]);
                $output.= '	</td>';
                $output.= '</tr>';
                $output.= '<tr>';
                $output.= '	<td align="left" colspan="2" valign="top">&nbsp;</td>';
                $output.= '</tr>';
                $output.= '<tr>';
                $output.= '	<td width="30%" align="left" valign="top">My Response Details:</td>';
                $output.= '	<td width="70%" align="left" valign="top">';
                $output.= '        <div class="tr_response_slider_' . $i . '" style="display:' . $tr_response_slider[$i] . '"><textarea name="remarks[]" id="remarks_' . $i . '" cols="25" rows="3" >' . $remarks_arr[$i] . '</textarea></div>';
                $output.= '        <div class="tr_response_img_' . $i . '" style="display:' . $tr_response_img[$i] . '"><textarea name="remarks2[]" id="remarks2_' . $i . '" cols="25" rows="3" disabled></textarea></div>';
                $output.= '	</td>';
                $output.= '</tr>';
                $output.= '<tr>';
                $output.= '    <td align="left" colspan="2" valign="top">&nbsp;</td>';
                $output.= '</tr>';
                $output.= '<tr>' . '     <td align="left" colspan="2" valign="top">



                            <table width="100%" border="0" cellspacing="0" cellpadding="0">



                                <tr>';
                $output.= '                    <td width="20%" align="left" valign="top">My Target:</td>';
                $output.= '                    <td width="30%" align="left" valign="top">';
                $output.= '                        <div class="tr_response_slider_' . $i . '" style="display:' . $tr_response_slider[$i] . '"><select name="my_target[]" id="my_target_' . $i . '" >';
                $output.= '                            <option value="">Select</option>';
                for ($j = 1;$j <= 10;$j++) {
                    if ($my_target_arr[$i] == $j) {
                        $sel = ' selected="selected" ';
                    } else {
                        $sel = '';
                    }
                    $output.= '                            <option value="' . $j . '" ' . $sel . '>' . $j . '</option>';
                }
                $output.= '                        </select><br>' . $this->getUsersLastMyTargetSleepDateString($user_id, $pro_user_id, $arr_sleep_id[$i]) . '</div>';
                $output.= '                        <div class="tr_response_img_' . $i . '" style="display:' . $tr_response_img[$i] . '"><select name="my_target2[]" id="my_target2_' . $i . '" disabled>';
                $output.= '                            <option value="">Select</option>';
                for ($j = 1;$j <= 10;$j++) {
                    if ($my_target_arr[$i] == $j) {
                        $sel = ' selected="selected" ';
                    } else {
                        $sel = '';
                    }
                    $output.= '                            <option value="' . $j . '" ' . $sel . '>' . $j . '</option>';
                }
                $output.= '                        </select><br>' . $this->getUsersLastMyTargetSleepDateString($user_id, $pro_user_id, $arr_sleep_id[$i]) . '</div>';
                $output.= '                    </td>';
                $output.= '                    <td width="20%" align="left" valign="top">Adviser Set Target:</td>';
                $output.= '                    <td width="30%" align="left" valign="top">';
                $output.= '                        <div class="tr_response_slider_' . $i . '" style="display:' . $tr_response_slider[$i] . '"><select name="adviser_target[]" id="adviser_target_' . $i . '" >';
                $output.= '                            <option value="">Select</option>';
                for ($j = 1;$j <= 10;$j++) {
                    if ($adviser_target_arr[$i] == $j) {
                        $sel = ' selected="selected" ';
                    } else {
                        $sel = '';
                    }
                    $output.= '                            <option value="' . $j . '" ' . $sel . '>' . $j . '</option>';
                }
                $output.= '                        </select><br>' . $this->getUsersLastAdviserTargetSleepDateString($user_id, $pro_user_id, $arr_sleep_id[$i]) . '</div>';
                $output.= '                        <div class="tr_response_img_' . $i . '" style="display:' . $tr_response_img[$i] . '"><select name="adviser_target2[]" id="adviser_target2_' . $i . '" disabled>';
                $output.= '                            <option value="">Select</option>';
                for ($j = 1;$j <= 10;$j++) {
                    if ($adviser_target_arr[$i] == $j) {
                        $sel = ' selected="selected" ';
                    } else {
                        $sel = '';
                    }
                    $output.= '                            <option value="' . $j . '" ' . $sel . '>' . $j . '</option>';
                }
                $output.= '                        </select><br>' . $this->getUsersLastAdviserTargetSleepDateString($user_id, $pro_user_id, $arr_sleep_id[$i]) . '</div>';
                $output.= '                    </td>';
                $output.= '                </tr>' . '             </table>' . '         </td>' . '     </tr>';
            }
            $output.= '<tr>';
            $output.= '	<td width="30%" height="35" align="left" valign="top">&nbsp;</td>';
            $output.= '	<td width="70%" align="left" valign="top"><input type="submit" name="btnSubmit" id="btnSubmit" value="Submit"class="btn btn-primary" /></td>';
            $output.= '</tr>';
        } else {
            if ($pro_user_id == '') {
                $err_msg2 = '<span class="Header_blue">Please select your Diary Notings</span>';
            } else {
                $err_msg2 = '<span class="Header_blue">No Inputs available from your Adviser Mr ' . $this->getProUserFullNameById($pro_user_id) . '. For Standard Set Inputs, select from Dropdown.</span>';
            }
            $output.= '<tr>';
            $output.= '	<td align="center" colspan="2" valign="top">' . $err_msg2 . '</td>';
            $output.= '</tr>';
        }
        $output.= '</table>';
        return $output;
    }
    function getUsersLastAdviserTargetSleepDateString($user_id, $sleep_set_id, $selected_sleep_id) {
        $DBH = new DatabaseHandler();
        $output = '';
        if ($sleep_set_id == '999999999') {
            $sql_str_pro = " AND `sleep_set_id` = '0' ";
        } else {
            $sql_str_pro = " AND `sleep_set_id` = '" . $sleep_set_id . "' ";
        }
        $sql = "SELECT * FROM `tbluserssleep` WHERE `user_id` = '" . $user_id . "' AND `sleep_old_data` = '0' AND `selected_sleep_id` = '" . $selected_sleep_id . "' " . $sql_str_pro . " ORDER BY `sleep_date` DESC LIMIT 1";
        //echo "<br>Testkk sql = ".$sql;
        // $STH= $DBH->query($sql);
        // 	if($STH->rowCount()>0 )
        // 	{
        // $row = mysql_fetch_array($result);
        // $result = mysql_query($sql,$link);
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $adviser_target = stripslashes($row['adviser_target']);
            $adviser_target_date = stripslashes($row['user_sleep_add_date']);
            if ($adviser_target != '') {
                $output.= '<span style="font-size:11px;color:#0000FF;">Set on ' . date('d-m-Y', strtotime($adviser_target_date)) . '</span>';
            }
        }
        return $output;
    }
    function getUsersLastMyTargetSleepDateString($user_id, $sleep_set_id, $selected_sleep_id) {
        $DBH = new DatabaseHandler();
        $output = '';
        if ($sleep_set_id == '999999999') {
            $sql_str_pro = " AND `sleep_set_id` = '0' ";
        } else {
            $sql_str_pro = " AND `sleep_set_id` = '" . $sleep_set_id . "' ";
        }
        $sql = "SELECT * FROM `tbluserssleep` WHERE `user_id` = '" . $user_id . "' AND `sleep_old_data` = '0' AND `selected_sleep_id` = '" . $selected_sleep_id . "' " . $sql_str_pro . " ORDER BY `sleep_date` DESC LIMIT 1";
        //echo "<br>Testkk sql = ".$sql;
        // if($STH->rowCount()>0 )
        // {
        // $row = mysql_fetch_array($result);
        // $row = $STH->fetch(PDO::FETCH_ASSOC);
        // $result = mysql_query($sql,$link);
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $my_target = stripslashes($row['my_target']);
            $my_target_date = stripslashes($row['user_sleep_add_date']);
            if ($my_target != '') {
                $output.= '<span style="font-size:11px;color:#0000FF;">Set on ' . date('d-m-Y', strtotime($my_target_date)) . '</span>';
            }
        }
        return $output;
    }
    function getScaleSliderCode($i, $tr_response_img, $tr_response_slider, $scale_val) {
        // global $link;
        $DBH = new DatabaseHandler();
        $output = '';
        $output.= '<div id="tr_response_img_' . $i . '" style="display:' . $tr_response_img . '">';
        //$output .= '        <img border="0" src="images/scale_slider.jpg" width="427"  />';
        $output.= '        <img border="0" src="images/scale_slider.jpg"  />';
        $output.= '</div>';
        $output.= '<div id="tr_response_slider_' . $i . '" style="display:' . $tr_response_slider . '">';
        $output.= '        <select name="scale[]" id="scale_' . $i . '" style="display:none;">';
        $output.= '		<option value="0">Very Low</option>';
        for ($j = 1;$j <= 10;$j++) {
            if ($scale_val == $j) {
                $sel = ' selected="selected" ';
            } else {
                $sel = '';
            }
            if (($j >= 0) && ($j <= 2)) {
                $val = " (Very Low)";
            } elseif (($j >= 3) && ($j <= 4)) {
                $val = " (Low)";
            } elseif (($j >= 5) && ($j <= 6)) {
                $val = " (Average)";
            } elseif (($j >= 7) && ($j <= 8)) {
                $val = " (High)";
            } else {
                $val = " (Very High)";
            }
            $output.= '		<option value="' . $j . '" ' . $sel . '>' . $val . '</option>';
        }
        $output.= '        </select>';
        $output.= '        </div>';
        return $output;
    }
    function getActivitiesRows($today_wakeup_time, $mins_arr, $activity_id_arr, $other_activity_arr, $proper_guidance_arr, $precaution_arr, $tr_err_activity, $err_activity, $skip_time_arr) {
        //debug_array($skip_time_arr);
        $today_end_time = '24:00 PM';
        $ret_str = '';
        $ret_str.= '<table width="100%" border="0" cellspacing="0" cellpadding="0">



						<tr>



							<td width="15%" height="30" align="center" valign="middle" bgcolor="#CCCCCC" ><strong>Time</strong></td>



							<td width="15%" height="30" align="center" valign="middle" bgcolor="#CCCCCC">&nbsp;</td>



							<td width="35%" height="30" align="center" valign="middle" bgcolor="#CCCCCC"><strong>Activity</strong></td>



							<td width="35%" height="30" align="center" valign="middle" bgcolor="#CCCCCC"><strong>Duration</strong></td>



						</tr>



						<tr>



							<td height="30" colspan="4">&nbsp;</td>



						</tr>';
        if ($today_wakeup_time != '') {
            $arr_activity_time = $this->getActivityTimeList($today_wakeup_time, $today_end_time, 15, $mins_arr, $skip_time_arr);
            //debug_array($arr_activity_time);
            
            for ($i = 0;$i < count($arr_activity_time);$i++) {
                if ($i == 0) {
                    $skip_time_start = $today_wakeup_time;
                } else {
                    $temp_prev_activity_time = $arr_activity_time[$i - 1];
                    $temp_prev_activity_time = explode(" ", $temp_prev_activity_time);
                    $temp_prev_activity_time = $temp_prev_activity_time[0];
                    $temp_prev_mins = $mins_arr[$i - 1];
                    $temp_time = strtotime($temp_prev_activity_time);
                    $skip_time_start = date("H:i A", strtotime('+' . $temp_prev_mins . ' minutes', $temp_time));
                    // echo"<br>Testkk: temp_prev_activity_time = ".$temp_prev_activity_time;
                    // echo"<br>Testkk: temp_prev_mins = ".$temp_prev_mins;
                    // echo"<br>Testkk: skip_time_start = ".$skip_time_start;
                    $skip_time_start = $arr_activity_time[$i];
                    
                }
                $ret_str.= '	<tr id="tr1_' . $i . '">



							<td colspan="4" height="45" align="left" valign="middle" >



								<span><strong>Skip Time to</strong></span>



								<span>



									<select name="skip_time[]" id="skip_time_' . $i . '" class="skip_time">



										<option value="">Select Time</option>


										' . $this->getSkipTimeOptions($skip_time_start, '24', $skip_time_arr[$i]) . '


									</select>



								</span>



							</td>



						</tr>';
                $ret_str.= '	<tr id="tr2_' . $i . '">



							<td height="45" align="center" valign="middle" >



								<strong>' . $arr_activity_time[$i] . '</strong><input type="hidden" name="activity_time[]" id="activity_time_' . $i . '" value="' . $arr_activity_time[$i] . '" />



							</td>



							<td height="45" align="center" valign="middle" >-</td>



							<td height="45" align="left" valign="middle" >



								<select name="activity_id[]" class="chosen" id="activity_id_' . $i . '" >


                                       <!--  code added by ample 16-03-20  -->
                                               
                                               ' . $this->get_activity_data() . '
                                     
                                    </select>

                                    <script type="text/javascript">
      $(".chosen").chosen();
</script>


							</td>



							<td height="45" align="center" valign="middle">';
                /* // old minute selectbox
                
                
                
                $ret_str .='			<select name="mins[]" id="mins_'.$i.'" class="mins">
                
                
                
                <option value="0">Select Duration</option>';
                
                
                
                $j = 15;
                
                
                
                while($j <= 300)
                
                
                
                {
                
                
                
                if($mins_arr[$i] == $j)
                
                
                
                {
                
                
                
                $sel = ' selected ';
                
                
                
                }
                
                
                
                else
                
                
                
                {
                
                
                
                $sel = '';
                
                
                
                }
                
                
                
                $ret_str .='				<option value="'.$j.'" '.$sel.'>'.$j.' Mins</option>';
                
                
                
                $j = $j + 15;
                
                
                
                }
                
                
                
                $ret_str .='			</select>';
                
                
                
                */
                $ret_str.= '		<strong>Duration in Mins</strong>&nbsp<input style="width:30px;" type="text" maxlength="3" name="mins[]" id="mins_' . $i . '" value="' . $mins_arr[$i] . '" class="mins"><input type="button" class="btnnew" name="btngetactivityrows[]" id="btngetactivityrows_' . $i . '" value="Set" style="width:30px;" >';
                $ret_str.= '		</td>



						</tr>';
                if ($activity_id_arr[$i] == '9999999999') {
                    $tr_other_activity = '';
                } else {
                    $tr_other_activity = 'none';
                }
                $ret_str.= '	<tr id="tr3_' . $i . '" style="display:' . $tr_other_activity . '">



							<td align="left" valign="middle" colspan="2">&nbsp;</td>';
                $ret_str.= '		<td height="35" align="left" valign="bottom" colspan="2">



								<input name="other_activity[]" type="text" class="input" id="other_activity_' . $i . '" value="' . $other_activity_arr[$i] . '" />



							</td>



						</tr>';
                $ret_str.= '	<tr id="tr4_' . $i . '">



							<td align="left" valign="middle" colspan="2">&nbsp;</td>';
                $ret_str.= '		<td height="35" align="left" valign="bottom" colspan="2">Do you do under proper guidance?</td>



						</tr>';
                $ret_str.= '	<tr id="tr5_' . $i . '">



							<td height="30" align="left" valign="middle" colspan="2">&nbsp;</td>';
                $ret_str.= '		<td height="30" align="left" valign="middle" colspan="2">';
                if ($proper_guidance_arr[$i] == '1') {
                    $chked1 = ' checked="checked" ';
                    $chked2 = '';
                } elseif ($proper_guidance_arr[$i] == '0') {
                    $chked1 = '';
                    $chked2 = ' checked="checked" ';
                } else {
                    $chked1 = '';
                    $chked2 = 'checked="checked"';
                }
                //update by ample 16-03-20
                $ret_str.= '			<input type="radio" name="proper_guidance_' . $i . '[]" id="proper_guidance_' . $i . '" value="1" ' . $chked1 . ' />Yes &nbsp;';
                $ret_str.= '			<input type="radio" name="proper_guidance_' . $i . '[]" id="proper_guidance_' . $i . '" value="0" ' . $chked2 . ' />No



							</td>



						</tr>';
                $ret_str.= '	<tr id="tr6_' . $i . '">



							<td align="left" valign="middle" colspan="2">&nbsp;</td>';
                $ret_str.= '		<td align="left" valign="middle" colspan="2">



								<textarea name="precaution[]" id="precaution_' . $i . '" cols="25" rows="3">' . $precaution_arr[$i] . '</textarea>



							</td>



						</tr>';
                $ret_str.= '	<tr id="tr7_' . $i . '">



							<td align="left" valign="middle" colspan="2">&nbsp;</td>';
                $ret_str.= '		<td align="left" valign="middle" colspan="2">



								(Including any Precaution taken)



							</td>



						</tr>';
                $ret_str.= '	<tr id="tr8_' . $i . '"  style="display:' . $tr_err_activity[$i] . '">



							<td height="20" align="left" valign="middle" colspan="4" class="err_msg">' . $err_activity[$i] . '</td>



						</tr>';
                $ret_str.= '	<tr id="tr9_' . $i . '">



							<td height="20" align="left" valign="middle" class="border_bottom" colspan="4">&nbsp;</td>



						</tr>';
            }
        }
        $ret_str.= '</table>';
        return $ret_str;
    }
    function getSkipTimeOptions($start_time, $end_time, $time) {
        if ($end_time == $start_time) {
        } elseif ($end_time < $start_time) {
            $end_time = 24 + $end_time;
            $start = $start_time * 60 + 0;
            $end = $end_time * 60 + 0;
            $i = $start;
            while ($i < $end) {
                $minute = $i % 60;
                $hour = ($i - $minute) / 60;
                if ($hour > 23) {
                    $hour = $hour - 24;
                }
                if (($hour >= 0) && ($hour < 12)) {
                    $str = 'AM';
                } else {
                    $str = 'PM';
                }
                $val = sprintf('%02d:%02d', $hour, $minute);
                $val = $val . ' ' . $str;
                if ($time == $val) {
                    $selected = ' selected ';
                } else {
                    $selected = '';
                }
                $option_str.= '<option value="' . $val . '" ' . $selected . ' >' . $val . '</option>';
                $i = $i + 5;
            }
        } else {
            $org_start_time = $start_time;
            $tmp_str = explode(" ", $start_time);
            $temp_time = explode(":", $tmp_str[0]);
            $start_time = $temp_time[0];
            $start = $start_time * 60 + 0;
            $end = $end_time * 60 + 0;
            for ($i = $start;$i < $end;$i+= 5) {
                $minute = $i % 60;
                $hour = ($i - $minute) / 60;
                if (($hour >= 24) && ($hour <= 36)) {
                    $hour = $hour - 24;
                }
                if (($hour >= 0) && ($hour < 12)) {
                    $str = 'AM';
                } else {
                    $str = 'PM';
                }
                $val = sprintf('%02d:%02d', $hour, $minute);
                $val = $val . ' ' . $str;
                if ($this->chkIsGreaterTimeValue($val, $org_start_time)) {
                    if ($time == $val) {
                        $selected = ' selected ';
                    } else {
                        $selected = '';
                    }
                    $option_str.= '<option value="' . $val . '" ' . $selected . ' >' . $val . '</option>';
                }
            }
        }
        return $option_str;
    }
    function getActivityTimeList($actvity_start_time, $actvity_end_time, $time_interval, $mins_arr, $skip_time_arr) {
        $arr_activity_time = array();
        // echo"<br>Testkk: actvity_start_time = ".$actvity_start_time;
        // echo"<br>Testkk: actvity_end_time = ".$actvity_end_time;
        // echo"<br>Testkk: time_interval = ".$time_interval;
        // echo"<br>Testkk: mins_arr - <br>";
        // debug_array($mins_arr);
        // echo"<br><br>";
        // echo"<br>Testkk: skip_time_arr - <br>";
        // debug_array($skip_time_arr);
        // echo"<br><br>";
        // echo"<br>Testkk: skip_time_arr[0] = ".$skip_time_arr[0];
        if ($skip_time_arr[0] == '') {
            $tmp_start_time = explode(":", $actvity_start_time);
            $start_time = $tmp_start_time[0];
            $tmp_start_min = explode(" ", $tmp_start_time[1]);
            $start_min = $tmp_start_min[0];
            $tmp_end_time = explode(":", $actvity_end_time);
            $end_time = $tmp_end_time[0];
        } else {
            if ($actvity_start_time == $skip_time_arr[0]) {
                $tmp_start_time = explode(":", $actvity_start_time);
                $start_time = $tmp_start_time[0];
                $tmp_start_min = explode(" ", $tmp_start_time[1]);
                $start_min = $tmp_start_min[0];
                $tmp_end_time = explode(":", $actvity_end_time);
                $end_time = $tmp_end_time[0];
            } elseif ($this->chkIsGreaterTimeValue($actvity_start_time, $skip_time_arr[0])) {
                $tmp_start_time = explode(":", $actvity_start_time);
                $start_time = $tmp_start_time[0];
                $tmp_start_min = explode(" ", $tmp_start_time[1]);
                $start_min = $tmp_start_min[0];
                $tmp_end_time = explode(":", $actvity_end_time);
                $end_time = $tmp_end_time[0];
            } else {
                $tmp_start_time = explode(":", $skip_time_arr[0]);
                $start_time = $tmp_start_time[0];
                $tmp_start_min = explode(" ", $tmp_start_time[1]);
                $start_min = $tmp_start_min[0];
                $tmp_end_time = explode(":", $actvity_end_time);
                $end_time = $tmp_end_time[0];
            }
        }
        // echo"<br>Testkk: start_time = ".$start_time;
        // echo"<br>Testkk: start_min = ".$start_min;
        // echo"<br>Testkk: end_time = ".$end_time;
        $start = $start_time * 60 + 0 + $start_min;
        $end = $end_time * 60 + 0;
        // echo"<br>Testkk: start = ".$start;
        // echo"<br>Testkk: end = ".$end;
        $tmp_next_start_time = $start;
        $arr_new_activity_time = array();
        for ($i = 0;$i < count($mins_arr);$i++) {
            if ($i == '0') {
                if ($skip_time_arr[$i] == '') {
                } else {
                    $tmp_next_start_time = $this->convertTimeFormatToMinutes($skip_time_arr[$i]);
                }
                $val = $this->convertMinutesToTimeFormat($tmp_next_start_time);
                array_push($arr_new_activity_time, $val);
            } else {
                if (($mins_arr[$i - 1] == '0') || ($mins_arr[$i - 1] == '')) {
                    break;
                } else {
                    if ($skip_time_arr[$i] == '') {
                        $tmp_next_start_time = $tmp_next_start_time + $mins_arr[$i - 1];
                    } else {
                        //$tmp_next_start_time = convertTimeFormatToMinutes($skip_time_arr[$i]) + $mins_arr[$i-1];
                        $tmp_next_start_time = $this->convertTimeFormatToMinutes($skip_time_arr[$i]);
                    }
                    $val = $this->convertMinutesToTimeFormat($tmp_next_start_time);
                    array_push($arr_new_activity_time, $val);
                }
            }
        }
        if (($mins_arr[$i - 1] == '0') || ($mins_arr[$i - 1] == '')) {
        } else {
            $tmp_next_start_time = $tmp_next_start_time + $mins_arr[$i - 1];
            $val = $this->convertMinutesToTimeFormat($tmp_next_start_time);
            array_push($arr_new_activity_time, $val);
        }
        // echo"<br>Testkk: arr_new_activity_time - <br>";
        // debug_array($arr_new_activity_time);
        // echo"<br><br>";
        return $arr_new_activity_time;
    }
    function chkIsGreaterTimeValue($first_time, $second_time) {
        $return = true;
        //echo"<br>Testkk first_time = ".$first_time;
        //echo"<br>Testkk second_time = ".$second_time;
        if (($first_time != '') && ($second_time != '')) {
            $tmp_first_time_str = explode(" ", $first_time);
            $tmp_first_time = explode(":", $tmp_first_time_str[0]);
            $first_time_hr = $tmp_first_time[0];
            $first_time_min = $tmp_first_time[1];
            $tmp_second_time_str = explode(" ", $second_time);
            $tmp_second_time = explode(":", $tmp_second_time_str[0]);
            $second_time_hr = $tmp_second_time[0];
            $second_time_min = $tmp_second_time[1];
            if ($first_time_hr == $second_time_hr) {
                if ($first_time_min >= $second_time_min) {
                    $return = true;
                } else {
                    $return = false;
                }
            } elseif ($first_time_hr > $second_time_hr) {
                $return = true;
            } else {
                $return = false;
            }
        }
        return $return;
    }
    function convertTimeFormatToMinutes($str_time) {
        $tmp_time = explode(":", $str_time);
        $hr_time = $tmp_time[0];
        $tmp_min = explode(" ", $tmp_time[1]);
        $min_time = $tmp_min[0];
        $val = $hr_time * 60 + 0 + $min_time;
        return $val;
    }
    function convertMinutesToTimeFormat($tmp_next_start_time) {
        $minute = $tmp_next_start_time % 60;
        $hour = ($tmp_next_start_time - $minute) / 60;
        if (($hour >= 24) && ($hour <= 36)) {
            $hour = $hour - 24;
        }
        if (($hour >= 0) && ($hour < 12)) {
            $str = 'AM';
        } else {
            $str = 'PM';
        }
        $val = sprintf('%02d:%02d', $hour, $minute);
        $val = $val . ' ' . $str;
        return $val;
    }
    public function getSideCartBox() {
        $DBH = new DatabaseHandler();
        $output = '';
        $output.= '<div class="side-cart-header">

						<h4>Your Cart</h4>

						<div class="back cart-box-toggle" id="cart-box-toggle" onclick="closeCartPopup()">close</div>

					</div>';
        $output.= '<div class="side-cart-body">

						<div class="cart">';
        $cart_session_id = session_id();
        if ($this->isLoggedIn()) {
            $user_id = $_SESSION['user_id'];
        } else {
            $user_id = 0;
        }
        try {
            if (isset($_SESSION['current_showing_date']) && $_SESSION['current_showing_date'] != '') {
                $current_showing_date = $_SESSION['current_showing_date'];
            } else {
                $current_showing_date = '';
            }
            if (isset($_SESSION['topcityid']) && $_SESSION['topcityid'] != '') {
                $topcityid = $_SESSION['topcityid'];
            } else {
                $topcityid = '0';
            }
            if (isset($_SESSION['topareaid']) && $_SESSION['topareaid'] != '') {
                $topareaid = $_SESSION['topareaid'];
            } else {
                $topareaid = '0';
            }
            /*
            
            $sql = "SELECT * FROM `tblcart` WHERE
            
            `cart_session_id` = '".$cart_session_id."' AND
            
            `cart_delivery_date` = '".$current_showing_date."' AND
            
            `cart_city_id` = '".$topcityid."' AND
            
            `cart_area_id` = '".$topareaid."' AND
            
            `cart_status` = '0' AND
            
            `cart_deleted` = '0' ";
            
            */
            // $sql = "SELECT * FROM `tblcart` WHERE
            // 		`cart_session_id` = '".$cart_session_id."' AND `cart_city_id` = '".$topcityid."' AND `cart_status` = '0' AND `cart_deleted` = '0' ORDER BY cart_add_date DESC";
            $sql = "SELECT * FROM `tblcart` WHERE `cart_session_id` = '" . $cart_session_id . "' AND `cart_status` = '0' AND `cart_deleted` = '0' ORDER BY cart_add_date DESC";
            $STH = $DBH->query($sql);
            // echo $STH->rowCount();
            // exit;
            if ($STH->rowCount() > 0) {
                $subtotal = 0;
                $cnt = 0;
                while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                    // echo "<pre>";print_r($r);echo "</pre>";
                    // $obj_temp = new commonFunctions();
                    // $arr_cusine_details = $this->getCusineDetailsForCart($r['cusine_id']);
                    // echo '<br><pre>';
                    // print_r($arr_cusine_details);
                    // echo '<br></pre>';
                    // $hh=$this->getItemName($arr_cusine_details['item_id']);
                    // echo "<pre>";print_r($arr_cusine_details['min_order']);echo "</pre>";
                    // exit;
                    // .$this->getItemName($arr_cusine_details['item_id']).
                    // $this->getCusineLocationStr($r['cart_city_id'],$r['cart_area_id'])
                    // $arr_cusine_details['cusine_image']
                    $output.= '<div class="item ng-scope">

									<div class="image" style="background-image: url(&quot;' . SITE_URL . '/wa/uploads/' . $this->getevent_image($r['cusine_id']) . '&quot;);"></div>

									<div class="info">

										<div class="close" onclick="removeFromCart(' . $r['cart_id'] . ');">Ã—</div>

										<h4>' . $r['event_name'] . '</h4>

										<p class="cart_small_text" style="margin: 0 0 -10px;">Delivery Date : ' . date('jS F', strtotime($r['cart_delivery_date'])) . '</p>

										<p class="cart_small_text">Delivery Area : ' . $r['booking_slot'] . '</p>

										<p class="cart_small_text">Ticket Type : ' . $this->gettickettype($r['ticket_type']) . '</p>

										<div class="actions">

											<div class="qty">

												<input type="hidden" name="hdncartcusine_id" id="hdncartcusine_id_' . $cnt . '" value="' . $r['cusine_id'] . '">

												<input type="hidden" name="hdncartdelivery_date" id="hdncartdelivery_date_' . $cnt . '" value="' . $r['cart_delivery_date'] . '">

												<select name="cart_qty" id="cart_qty_' . $cnt . '" onchange="updateCartSingleItem(' . $cnt . ',\'' . $r['booking_type'] . '\')">';
                    if (isset($arr_cusine_details['min_order']) && $arr_cusine_details['min_order'] != '') {
                        $min_order = $arr_cusine_details['min_order'];
                    } else {
                        $min_order = 1;
                    }
                    if (isset($arr_cusine_details['max_order']) && $arr_cusine_details['max_order'] != '') {
                        $max_order = $arr_cusine_details['max_order'];
                    } else {
                        $max_order = 10;
                    }
                    if ($arr_cusine_details['cusine_type_id'] == '122') {
                        $output.= '<option value="' . $min_order . '" ' . $str_sel . '>' . $min_order . '</option>';
                    } else {
                        for ($i = $min_order;$i <= $max_order;$i++) {
                            if ($r['qty'] == $i) {
                                $str_sel = ' selected ';
                            } else {
                                $str_sel = '';
                            }
                            $output.= '<option value="' . $i . '" ' . $str_sel . '>' . $i . '</option>';
                        }
                    }
                    $output.= '					</select>

											</div>

											<span class="price">

												<span class="ng-binding">â‚¹ ' . $r['subtotal'] . '</span>

											</span>

										</div>

									</div>

								</div>';
                    $subtotal = $subtotal + $r['subtotal'];
                    $cnt++;
                }
                $subtotal_str = '<label>SUBTOTAL</label>â‚¹ ' . $subtotal;
                $btn_proceed_str = '<button onclick="javascipt:window.location.href=\'checkout.php\'">Proceed to Checkout</button>';
                $output.= '	</div>

					</div>';
                $output.= $this->getSideCartComplementrySlider($subtotal);
                // echo "<pre>";print_r($this->getSideCartComplementrySlider($subtotal));echo "</pre>";
                
            } else {
                $output.= '<div class="empty">

								<h3>Your cart is empty.</h3>

								<h4>Add some delicious food available on our menu to checkout.</h4>

            				</div>';
                $subtotal_str = '';
                $btn_proceed_str = '<button>Proceed to Checkout</button>';
                $output.= '	</div>

					</div>';
            }
            $output.= '<div class="secondary">

						<div class="total">

							' . $subtotal_str . '

						</div>

					</div>

					<div class="footer" style="padding: 18px;">

						' . $btn_proceed_str . '

					</div>';
        }
        catch(Exception $e) {
            $stringData = '[getSideCartBox] Catch Error:' . $e->getMessage() . ', sql:' . $sql;
            $this->debuglog($stringData);
            return $output;
        }
        // echo "<pre>";print_r($output);echo "</pre>";
        // exit;
        return $output;
    }
    public function gettickettype($get_id) {
        $DBH = new DatabaseHandler();
        // $return = false;
        try {
            $sql = "SELECT * FROM `tblfavcategory` WHERE `fav_cat_id` = '" . $get_id . "'";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $r = $STH->fetch(PDO::FETCH_ASSOC);
                $return = $r['fav_cat'];
            }
        }
        catch(Exception $e) {
            $stringData = '[chkIfCusineQtyAvailable] Catch Error:' . $e->getMessage() . ', sql:' . $sql;
            $this->debuglog($stringData);
            $return = false;
        }
        return $return;
    }
    public function getevent_image($get_id) {
        $DBH = new DatabaseHandler();
        // $return = false;
        try {
            $sql = "SELECT * FROM `tbl_event_details` WHERE `event_id` = '" . $get_id . "'";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $r = $STH->fetch(PDO::FETCH_ASSOC);
                $return = $r['event_image'];
            }
        }
        catch(Exception $e) {
            $stringData = '[chkIfCusineQtyAvailable] Catch Error:' . $e->getMessage() . ', sql:' . $sql;
            $this->debuglog($stringData);
            $return = false;
        }
        return $return;
    }
    public function removeFromCart($cart_id) {
        $my_DBH = new DatabaseHandler();
        $return = false;
        $cart_session_id = session_id();
        if ($this->isLoggedIn()) {
            $user_id = $_SESSION['user_id'];
        } else {
            $user_id = 0;
        }
        if ($cart_id != '') {
            $sql = "SELECT * FROM `tblcart` WHERE `cart_session_id` = '" . $cart_session_id . "' AND `cart_id` = '" . $cart_id . "' AND `cart_status` = '0' AND `cart_deleted` = '0' ";
            $STH = $my_DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $DBH = $my_DBH->raw_handle();
                $DBH->beginTransaction();
                try {
                    $sql = "UPDATE `tblcart` SET 

							`cart_deleted` = :cart_deleted,

							`cart_add_date` = :cart_add_date

							WHERE 		

							`cart_session_id` = :cart_session_id AND 

							`cart_id` = :cart_id ";
                    $STH = $DBH->prepare($sql);
                    $STH->execute(array(':cart_deleted' => 1, ':cart_add_date' => date('Y-m-d H:i:s'), ':cart_session_id' => addslashes($cart_session_id), ':cart_id' => addslashes($cart_id)));
                    $DBH->commit();
                    $return = true;
                }
                catch(Exception $e) {
                    $stringData = '[removeFromCart] Catch Error:' . $e->getMessage() . ', sql:' . $sql;
                    $this->debuglog($stringData);
                    return false;
                }
            }
        }
        return $return;
    }
    public function chkIfCusineQtyAvailable($cusine_id, $qty) {
        $DBH = new DatabaseHandler();
        $return = false;
        try {
            // $sql = "SELECT * FROM `tblcusinelocations` WHERE `cusine_id` = '".$cusine_id."' AND `default_price` = '1' AND `culoc_status` = '1' AND `culoc_deleted` = '0' ";
            $sql = "SELECT * FROM `tbl_event_loc_price` WHERE `event_id` = '" . $cusine_id . "' AND `default_price` = '1' AND `culoc_status` = '1' AND `culoc_deleted` = '0' ";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $r = $STH->fetch(PDO::FETCH_ASSOC);
                $cusine_qty = $r['cusine_qty'];
                if ($cusine_qty > 0 && $qty > 0 && $cusine_qty >= $qty) {
                    $return = true;
                }
            }
        }
        catch(Exception $e) {
            $stringData = '[chkIfCusineQtyAvailable] Catch Error:' . $e->getMessage() . ', sql:' . $sql;
            $this->debuglog($stringData);
            return false;
        }
        return $return;
    }
    //   public function chkIfEventQtyAvailable($cusine_id,$qty)
    //   {
    //       $DBH = new DatabaseHandler();
    //       $return = false;
    // try {
    // 	$sql = "SELECT * FROM `tbl_event_loc_price` WHERE `event_id` = '".$cusine_id."' AND `default_price` = '1' AND `culoc_status` = '1' AND `culoc_deleted` = '0' ";
    // 	$STH = $DBH->query($sql);
    // 	if( $STH->rowCount() > 0 )
    // 	{
    // 		$r = $STH->fetch(PDO::FETCH_ASSOC);
    // 		$cusine_qty = $r['cusine_qty'];
    // 		if($cusine_qty > 0 && $qty > 0 && $cusine_qty >= $qty)
    // 		{
    // 			$return = true;
    // 		}
    // 	}
    // } catch (Exception $e) {
    // 	$stringData = '[chkIfCusineQtyAvailable] Catch Error:'.$e->getMessage().', sql:'.$sql;
    // 	$this->debuglog($stringData);
    // 	return false;
    // }
    //       return $return;
    //   }
    public function chkIfOfferCusine($cusine_id) {
        $arr_cusine_records = $this->getCusineDetailsForCart($cusine_id);
        $offer_item_flag = false;
        $today_day_of_month = date('j');
        $today_day_of_week = date('N');
        $today_single_date = date('Y-m-d');
        if ($arr_cusine_records['is_offer'] == '1') {
            if ($arr_cusine_records['offer_date_type'] == 'days_of_month') {
                if ($arr_cusine_records['offer_days_of_month'] == '-1') {
                    $offer_item_flag = true;
                } else {
                    $temp_ofr_dom = explode(',', $arr_cusine_records['offer_days_of_month']);
                    if (in_array($today_day_of_month, $temp_ofr_dom)) {
                        $offer_item_flag = true;
                    }
                }
            } elseif ($arr_cusine_records['offer_date_type'] == 'days_of_week') {
                if ($arr_cusine_records['offer_days_of_week'] == '-1') {
                    $offer_item_flag = true;
                } else {
                    $temp_ofr_dow = explode(',', $arr_cusine_records['offer_days_of_week']);
                    if (in_array($today_day_of_week, $temp_ofr_dow)) {
                        $offer_item_flag = true;
                    }
                }
            } elseif ($arr_cusine_records['offer_date_type'] == 'single_date') {
                if ($arr_cusine_records['offer_single_date'] == $today_single_date) {
                    $offer_item_flag = true;
                }
            } elseif ($arr_cusine_records['offer_date_type'] == 'date_range') {
                $temp_ts_today = strtotime($today_single_date);
                $temp_ts_start = strtotime($arr_cusine_records['offer_single_date']);
                $temp_ts_end = strtotime($arr_cusine_records['offer_end_date']);
                if ($temp_ts_start <= $temp_ts_today && $temp_ts_end >= $temp_ts_today) {
                    $offer_item_flag = true;
                }
            }
        }
        return $offer_item_flag;
    }
    public function updateCartSingleItem($cusine_id, $qty, $cart_delivery_date, $typess) {
        // echo $typess;
        // exit;
        $my_DBH = new DatabaseHandler();
        $return = false;
        $cart_session_id = session_id();
        if ($this->isLoggedIn()) {
            $user_id = $_SESSION['user_id'];
        } else {
            $user_id = 0;
        }
        if ($this->chkIfCusineQtyAvailable($cusine_id, $qty)) {
            if (isset($_SESSION['current_showing_date']) && $_SESSION['current_showing_date'] != '') {
                $current_showing_date = $_SESSION['current_showing_date'];
            } else {
                $current_showing_date = '';
            }
            if (isset($_SESSION['topcityid']) && $_SESSION['topcityid'] != '') {
                $topcityid = $_SESSION['topcityid'];
            } else {
                $topcityid = '0';
            }
            if (isset($_SESSION['topareaid']) && $_SESSION['topareaid'] != '') {
                $topareaid = $_SESSION['topareaid'];
            } else {
                $topareaid = '0';
            }
            $arr_cusine_details = $this->getCusineDetailsForCart($cusine_id);
            // --krishna-
            if ($this->chkIfOfferCusine($cusine_id)) {
                $is_offer = 1;
                $offer_price = $arr_cusine_details['offer_price'];
            } else {
                $is_offer = 0;
                $offer_price = '';
            }
            // echo $offer_price;
            // exit;
            /*
            
            $sql = "SELECT * FROM `tblcart` WHERE
            
            `cart_session_id` = '".$cart_session_id."' AND
            
            `cusine_id` = '".$cusine_id."' AND
            
            `cart_delivery_date` = '".$current_showing_date."' AND
            
            `cart_city_id` = '".$topcityid."' AND
            
            `cart_area_id` = '".$topareaid."' AND
            
            `cart_status` = '0' AND
            
            `cart_deleted` = '0' ";
            
            */
            // echo $sql = "SELECT * FROM `tblcart` WHERE
            // 		`cart_session_id` = '".$cart_session_id."' AND
            // 		`cusine_id` = '".$cusine_id."' AND
            // 		`cart_delivery_date` = '".$cart_delivery_date."' AND
            // 		`cart_city_id` = '".$topcityid."' AND
            // 		`cart_status` = '0' AND
            // 		`cart_deleted` = '0' ";
            $sql = "SELECT * FROM `tblcart` WHERE 

			 		`cart_session_id` = '" . $cart_session_id . "' AND 

			 		`cusine_id` = '" . $cusine_id . "' AND 

		 		    `cart_delivery_date` = '" . $cart_delivery_date . "' AND

			 		`cart_status` = '0' AND 

			 		`cart_deleted` = '0' ";
            $STH = $my_DBH->query($sql);
            if ($STH->rowCount() > 0) {
                //echo '2222222222222';
                $r = $STH->fetch(PDO::FETCH_ASSOC);
                $DBH = $my_DBH->raw_handle();
                $DBH->beginTransaction();
                $price = $arr_cusine_details['cusine_price'];
                $register_price = $arr_cusine_details['registration_fees'];
                if ($is_offer == '1') {
                    $subtotal = $offer_price * $qty;
                    // echo "<pre>";print_r($subtotal);echo "</pre>";
                    
                } else {
                    if ($typess == "Registraion") {
                        $subtotal = $register_price * $qty;
                    } else {
                        $subtotal = $price * $qty;
                    }
                    // echo $subtotal;
                    // echo"<br>";
                    // echo $price;
                    // echo"<br>";
                    // echo $qty;
                    // echo"<br>";
                    // exit;
                    
                }
                // exit;
                try {
                    // echo $sql = "UPDATE `tblcart` SET
                    // 		`qty` = :qty,
                    // 		`price` = :price,
                    // 		`subtotal` = :subtotal,
                    // 		`is_offer` = :is_offer,
                    // 		`offer_price` = :offer_price,
                    // 		`cart_add_date` = :cart_add_date
                    // 		WHERE
                    // 		`cart_session_id` = :cart_session_id AND
                    // 		`cart_delivery_date` = :cart_delivery_date AND
                    // 		`cart_city_id` = :cart_city_id AND
                    // 		`cusine_id` = :cusine_id ";
                    // $STH = $DBH->prepare($sql);
                    // $STH->execute(array(
                    // 	':qty' => addslashes($qty),
                    // 	':price' => addslashes($price),
                    // 	':subtotal' => addslashes($subtotal),
                    // 	':is_offer' => addslashes($is_offer),
                    // 	':offer_price' => addslashes($offer_price),
                    // 	':cart_add_date' => date('Y-m-d H:i:s'),
                    // 	':cart_session_id' => addslashes($cart_session_id),
                    // 	':cart_delivery_date' => addslashes($cart_delivery_date),
                    // 	':cart_city_id' => addslashes($topcityid),
                    // 	':cusine_id' => addslashes($cusine_id)
                    // ));
                    $sql = "UPDATE `tblcart` SET 

							`qty` = :qty,

							`price` = :price,

							`subtotal` = :subtotal,

							`is_offer` = :is_offer,

							`offer_price` = :offer_price,

							`cart_add_date` = :cart_add_date

							WHERE 		

							`cart_session_id` = :cart_session_id AND 

							`cart_delivery_date` = :cart_delivery_date AND 

							`cusine_id` = :cusine_id ";
                    $STH = $DBH->prepare($sql);
                    $STH->execute(array(':qty' => addslashes($qty), ':price' => addslashes($price), ':subtotal' => addslashes($subtotal), ':is_offer' => addslashes($is_offer), ':offer_price' => addslashes($offer_price), ':cart_add_date' => date('Y-m-d H:i:s'), ':cart_session_id' => addslashes($cart_session_id), ':cart_delivery_date' => addslashes($cart_delivery_date), ':cusine_id' => addslashes($cusine_id)));
                    $DBH->commit();
                    //            echo "hiiiiiii----";
                    // echo"<pre>"; print_r($STH);echo "</pre>";
                    //           exit;
                    $return = true;
                }
                catch(Exception $e) {
                    $stringData = '[updateCartSingleItem] Catch Error:' . $e->getMessage() . ', sql:' . $sql;
                    $this->debuglog($stringData);
                    return false;
                }
            }
        }
        return $return;
    }
    public function getCusineLocationStr($city_id, $area_id = '') {
        $DBH = new DatabaseHandler();
        $output = '';
        try {
            if ($area_id == '' || $area_id == '-1' || $area_id == '0') {
                $sql = "SELECT TCT.city_name,TST.state_name,TCN.country_name FROM `tblcities` AS TCT

					LEFT JOIN `tblstates` AS TST ON TCT.state_id = TST.state_id 

					LEFT JOIN `tblcountry` AS TCN ON TCT.country_id = TCN.country_id 

					WHERE TCT.city_id = '" . $city_id . "' AND TCT.city_deleted = '0' AND TCT.city_status = '1' AND TST.state_deleted = '0' AND TST.state_status = '1' AND TCN.country_deleted = '0' AND TCN.country_status = '1' ORDER BY TCT.city_name ASC, TST.state_name ASC, TCN.country_name ASC";
            } else {
                $sql = "SELECT TAR.area_name,TCT.city_name,TST.state_name,TCN.country_name FROM `tblarea` AS TAR

					LEFT JOIN `tblcities` AS TCT ON TAR.city_id = TCT.city_id 

					LEFT JOIN `tblstates` AS TST ON TAR.state_id = TST.state_id 

					LEFT JOIN `tblcountry` AS TCN ON TAR.country_id = TCN.country_id 

					WHERE TAR.area_id = '" . $area_id . "' AND TAR.area_deleted = '0' AND TAR.area_status = '1' AND TCT.city_id = '" . $city_id . "' AND TCT.city_deleted = '0' AND TCT.city_status = '1' AND TST.state_deleted = '0' AND TST.state_status = '1' AND TCN.country_deleted = '0' AND TCN.country_status = '1' ORDER BY TAR.area_name ASC, TCT.city_name ASC, TST.state_name ASC, TCN.country_name ASC";
            }
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                    if ($area_id == '' || $area_id == '-1' || $area_id == '0') {
                        //$output = stripslashes($r['city_name']).', '.stripslashes($r['state_name']).', '.stripslashes($r['country_name']);
                        $output = 'All Areas, ' . stripslashes($r['city_name']);
                    } else {
                        //$output = stripslashes($r['area_name']).', '.stripslashes($r['city_name']).', '.stripslashes($r['state_name']).', '.stripslashes($r['country_name']);
                        $output = stripslashes($r['area_name']) . ', ' . stripslashes($r['city_name']);
                    }
                }
            }
        }
        catch(Exception $e) {
            $stringData = '[getCusineLocationStr] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $output;
        }
        return $output;
    }
    public function getSideCartComplementrySlider($subtotal) {
        $DBH = new DatabaseHandler();
        $output = '';
        // echo "<pre>";print_r($subtotal);echo "</pre>";
        // exit;
        $cart_session_id = session_id();
        $topcityid = $_SESSION['topcityid'];
        $topareaid = $_SESSION['topareaid'];
        $current_showing_date = $_SESSION['current_showing_date'];
        if ($this->chkIfAnyComplementryAlreadyAddedToCart()) {
            $output.= '<div class="complementry_box">

							<h3>You have selected complimentry item</h3>

						</div>';
        } else {
            $arr_cusine_records_temp = $this->getAllPublishedComplementryCusines($topcityid, $topareaid, $current_showing_date);
            if ($this->isLoggedIn()) {
                $user_id = $_SESSION['user_id'];
            } else {
                $user_id = 0;
            }
            $arr_cusine_records = array();
            if (count($arr_cusine_records_temp) > 0) {
                foreach ($arr_cusine_records_temp as $cnt => $r) {
                    // $obj_temp = new commonFunctions();
                    $arr_cusine_details = $this->getCusineDetailsForCart($r['cusine_id']);
                    //echo '<br><pre>';
                    //print_r($arr_cusine_details);
                    //echo '<br></pre>';
                    if ($arr_cusine_details['cusine_type_id'] == '122') {
                        if (!$this->chkIfComplementryAlreadyAddedToCart($r['cusine_id'])) {
                            if ($arr_cusine_details['min_cart_price'] == '') {
                                $arr_cusine_details['min_cart_price'] = 0;
                            }
                            if ($arr_cusine_details['min_cart_price'] <= $subtotal) {
                                //foreach($r as $key1 => $val1)
                                //{
                                //$r[$key1] = stripslashes($val1);
                                //}
                                $arr_cusine_records[] = $r;
                            }
                        }
                    } else {
                        //foreach($r as $key1 => $val1)
                        //{
                        //$r[$key1] = stripslashes($val1);
                        //}
                        $arr_cusine_records[] = $r;
                    }
                }
            }
            if (count($arr_cusine_records) > 0) {
                $output.= '<div class="complementry_box">

								<h3>Please select any complimentry Item</h3>

								<div class="my_silick_complementry">';
                foreach ($arr_cusine_records as $cnt => $r) {
                    $output.= '	<div class="silick item">

										<div class="image" style="background-image: url(&quot;' . SITE_URL . '/uploads/' . $r['cusine_image'] . '&quot;);"></div>

										<div class="info">

											<h4>' . $r['cusine_name'] . '</h4>

											<div class="actions">

												<div class="qty"></div>

												<span class="price">

													<span>â‚¹ ' . $r['cusine_default']['cusine_price'] . '</span>

												</span>

											</div>

											<button class="button_complementry" onclick="addToCart(\'' . $r['cusine_id'] . '\',\'1	\');">Add to Cart</button>

										</div>

									</div>';
                }
                $output.= '	</div>

							</div>';
            }
        }
        return $output;
    }
    public function chkIfComplementryAlreadyAddedToCart($cusine_id) {
        $DBH = new DatabaseHandler();
        $return = false;
        $cart_session_id = session_id();
        try {
            if (isset($_SESSION['current_showing_date']) && $_SESSION['current_showing_date'] != '') {
                $current_showing_date = $_SESSION['current_showing_date'];
            } else {
                $current_showing_date = '';
            }
            if (isset($_SESSION['topcityid']) && $_SESSION['topcityid'] != '') {
                $topcityid = $_SESSION['topcityid'];
            } else {
                $topcityid = '0';
            }
            if (isset($_SESSION['topareaid']) && $_SESSION['topareaid'] != '') {
                $topareaid = $_SESSION['topareaid'];
            } else {
                $topareaid = '0';
            }
            /*
            
            $sql = "SELECT * FROM `tblcart` WHERE
            
            `cart_session_id` = '".$cart_session_id."' AND
            
            `cusine_id` = '".$cusine_id."' AND
            
            `cart_delivery_date` = '".$current_showing_date."' AND
            
            `cart_city_id` = '".$topcityid."' AND
            
            `cart_area_id` = '".$topareaid."' AND
            
            `cart_status` = '0' AND
            
            `cart_deleted` = '0' ";
            
            */
            $sql = "SELECT * FROM `tblcart` WHERE 

					`cart_session_id` = '" . $cart_session_id . "' AND 

					`cusine_id` = '" . $cusine_id . "' AND 

					`cart_city_id` = '" . $topcityid . "' AND 

					`cart_status` = '0' AND 

					`cart_deleted` = '0' ";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
            }
        }
        catch(Exception $e) {
            $stringData = '[chkIfComplementryAlreadyAddedToCart] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return false;
        }
        return $return;
    }
    public function getAllPublishedComplementryCusines($city_id, $area_id = '', $current_showing_date = '') {
        $DBH = new DatabaseHandler();
        $output = array();
        $state_id = $this->getStateIdOfCityId($city_id);
        $country_id = $this->getCountryIdOfCityId($city_id);
        if ($current_showing_date == '') {
            $current_showing_date = date('Y-m-d');
        }
        $today_day_of_month = date('j', strtotime($current_showing_date));
        $today_day_of_week = date('N', strtotime($current_showing_date));
        $today_single_date = date('Y-m-d', strtotime($current_showing_date));
        $cnt = 0;
        try {
            if ($area_id == '' || $area_id == '-1') {
                $sql = "SELECT * FROM `tblcusines` 

					WHERE ( 

						( cusine_city_id = '" . $city_id . "' ) OR 

						( FIND_IN_SET(" . $city_id . ", cusine_city_id) > 0 ) OR

						( cusine_city_id = '-1' AND cusine_state_id = '" . $state_id . "' ) OR 

						( cusine_city_id = '-1' AND FIND_IN_SET(" . $state_id . ", cusine_state_id) > 0 ) OR 

						( cusine_city_id = '-1' AND cusine_state_id = '-1' AND cusine_country_id = '" . $country_id . "' ) OR 

						( cusine_city_id = '-1' AND cusine_state_id = '-1' AND FIND_IN_SET(" . $country_id . ", cusine_country_id) > 0  ) OR 

						( cusine_city_id = '-1' AND cusine_state_id = '-1' AND cusine_country_id = '-1' ) 

					) AND cusine_deleted = '0' AND cusine_status = '1' AND cusine_type_id = '122' ";
            } else {
                $sql = "SELECT * FROM `tblcusines` 

					WHERE ( 

						( cusine_city_id = '" . $city_id . "' AND cusine_area_id = '" . $area_id . "' ) OR 

						( FIND_IN_SET(" . $city_id . ", cusine_city_id) > 0 AND cusine_area_id = '" . $area_id . "' ) OR 

						( cusine_city_id = '-1' AND cusine_area_id = '" . $area_id . "' ) OR 

						( cusine_city_id = '" . $city_id . "' AND FIND_IN_SET(" . $area_id . ", cusine_area_id) > 0  ) OR 

						( FIND_IN_SET(" . $city_id . ", cusine_city_id) > 0 AND FIND_IN_SET(" . $area_id . ", cusine_area_id) > 0  ) OR 

						( cusine_city_id = '-1' AND FIND_IN_SET(" . $area_id . ", cusine_area_id) > 0  ) OR 

						( cusine_city_id = '" . $city_id . "' AND cusine_area_id = '-1' ) OR 

						( FIND_IN_SET(" . $city_id . ", cusine_city_id) > 0 AND cusine_area_id = '-1'  ) OR

						( cusine_city_id = '-1' AND cusine_area_id = '-1' AND cusine_state_id = '" . $state_id . "' ) OR 

						( cusine_city_id = '-1' AND cusine_area_id = '-1' AND FIND_IN_SET(" . $state_id . ", cusine_state_id) > 0 ) OR 

						( cusine_city_id = '-1' AND cusine_area_id = '-1' AND cusine_state_id = '-1' AND cusine_country_id = '" . $country_id . "' ) OR 

						( cusine_city_id = '-1' AND cusine_area_id = '-1' AND cusine_state_id = '-1' AND FIND_IN_SET(" . $country_id . ", cusine_country_id) > 0  ) OR 

						( cusine_city_id = '-1' AND cusine_area_id = '-1' AND cusine_state_id = '-1' AND cusine_country_id = '-1' )

						

					) AND cusine_deleted = '0' AND cusine_status = '1' AND cusine_type_id = '122' ";
            }
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $temp_date = date('Y-m-d');
                    $go_ahead = false;
                    if ($r['publish_date_type'] == 'days_of_month') {
                        if ($r['publish_days_of_month'] == '-1') {
                            $go_ahead = true;
                        } elseif ($r['publish_days_of_month'] == '') {
                        } else {
                            $temp_arr_publish_days_of_month = explode(',', $r['publish_days_of_month']);
                            if (in_array($today_day_of_month, $temp_arr_publish_days_of_month)) {
                                $go_ahead = true;
                            }
                        }
                    } elseif ($r['publish_date_type'] == 'days_of_week') {
                        if ($r['publish_days_of_week'] == '-1') {
                            $go_ahead = true;
                        } elseif ($r['publish_days_of_week'] == '') {
                        } else {
                            $temp_arr_publish_days_of_week = explode(',', $r['publish_days_of_week']);
                            if (in_array($today_day_of_week, $temp_arr_publish_days_of_week)) {
                                $go_ahead = true;
                            }
                        }
                    } elseif ($r['publish_date_type'] == 'single_date') {
                        //echo '<br>'.$r['publish_single_date'];
                        //echo '<br>'.$today_single_date;
                        if (strtotime($r['publish_single_date']) <= strtotime($today_single_date)) {
                            $go_ahead = true;
                        }
                    } elseif ($r['publish_date_type'] == 'date_range') {
                        if ((strtotime($r['publish_start_date']) <= strtotime($today_single_date)) && (strtotime($r['publish_end_date']) >= strtotime($today_single_date))) {
                            $go_ahead = true;
                        }
                    }
                    if ($go_ahead) {
                        $go_ahead = false;
                        if ($r['delivery_date_type'] == 'days_of_month') {
                            if ($r['delivery_days_of_month'] == '-1') {
                                $go_ahead = true;
                            } elseif ($r['delivery_days_of_month'] == '') {
                            } else {
                                $temp_arr_delivery_days_of_month = explode(',', $r['delivery_days_of_month']);
                                if (in_array($today_day_of_month, $temp_arr_delivery_days_of_month)) {
                                    $go_ahead = true;
                                }
                            }
                        } elseif ($r['delivery_date_type'] == 'days_of_week') {
                            //echo'<br>222222222222222';
                            if ($r['delivery_days_of_week'] == '-1') {
                                $go_ahead = true;
                            } elseif ($r['delivery_days_of_week'] == '') {
                            } else {
                                $temp_arr_delivery_days_of_week = explode(',', $r['delivery_days_of_week']);
                                if (in_array($today_day_of_week, $temp_arr_delivery_days_of_week)) {
                                    $go_ahead = true;
                                }
                            }
                        } elseif ($r['delivery_date_type'] == 'single_date') {
                            //echo'<br>'.$r['delivery_single_date'];
                            //echo'<br>'.$current_showing_date;
                            if ($r['delivery_single_date'] == $current_showing_date) {
                                $go_ahead = true;
                            }
                        } elseif ($r['delivery_date_type'] == 'date_range') {
                            if ($r['delivery_start_date'] != '0000-00-00') {
                                if ($r['delivery_end_date'] != '0000-00-00') {
                                    if ((strtotime($current_showing_date) >= strtotime($r['delivery_start_date'])) && (strtotime($current_showing_date) <= strtotime($r['delivery_end_date']))) {
                                        $go_ahead = true;
                                    }
                                }
                            }
                        }
                    }
                    if ($go_ahead) {
                        // $obj_r = new commonFunctions();
                        $r['region_category'] = $this->getRegionCategoryNameOfItem($r['item_id']);
                        $r['cusine_name'] = $this->getItemName($r['item_id']);
                        $r['cusine_default'] = $this->getCusineDefaultPriceAndStock($r['cusine_id']);
                        //foreach($r as $key1 => $val1)
                        //{
                        //$r[$key1] = stripslashes($val1);
                        //}
                        $output[] = $r;
                    }
                }
            }
        }
        catch(Exception $e) {
            $stringData = '[getAllPublishedComplementryCusines] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $output;
        }
        return $output;
    }
    public function getRegionCategoryNameOfItem($item_id) {
        $DBH = new DatabaseHandler();
        $output = '';
        try {
            //echo'<br>';
            $sql = "SELECT TBC.cat_name FROM `tblitemcategory` AS TIC

					LEFT JOIN `tblcategories` AS TBC ON TIC.ic_cat_id = TBC.cat_id 

					WHERE TIC.item_id = '" . $item_id . "' AND TIC.ic_cat_parent_id = '1' AND TIC.ic_deleted = '0' AND TIC.ic_status = '1' ";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $output = $r['cat_name'];
                }
            }
            return $output;
        }
        catch(Exception $e) {
            $stringData = '[getRegionCategoryNameOfItem] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $output;
        }
    }
    public function getCusineDefaultPriceAndStock($cusine_id) {
        $DBH = new DatabaseHandler();
        $output = array();
        try {
            $sql = "SELECT TCL.max_order,TCL.min_order,TCL.cusine_qty,TCL.currency_id,TCL.cusine_price,TCL.ordering_size_show,TCL.cusine_qty_show,

					TCL.sold_qty_show,TCL.is_offer,TCL.offer_price,TCL.offer_date_type,TCL.offer_days_of_month,TCL.offer_days_of_week,TCL.offer_single_date,

					TCL.offer_start_date,TCL.offer_end_date,TBC.cat_id,TBC.cat_name 

					FROM `tblcusinelocations` AS TCL 

					LEFT JOIN `tblcategories` AS TBC ON TCL.ordering_size_id = TBC.cat_id

					WHERE TCL.cusine_id= '" . $cusine_id . "' AND TCL.default_price = '1' AND TCL.culoc_status = '1' AND TCL.culoc_deleted = '0' ";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $r['sold_count'] = 0;
                    $output = $r;
                }
            }
            return $output;
        }
        catch(Exception $e) {
            $stringData = '[getCusineDefaultPriceAndStock] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $output;
        }
    }
    // public function doUserLogin($email)
    //     {
    //         $DBH = new DatabaseHandler();
    //         $return = false;
    //         $user_id = $this->getUserId($email);
    //         if($user_id > 0)
    //         {
    // 			$user_fullname = $this->getUserFullNameById($user_id);
    // 			$user_firstname = $this->getUserFirstNameById($user_id);
    // 			$user_mobile_no = $this->getUserMobileNoById($user_id);
    //             $return = true;
    //             $_SESSION['user_id'] = $user_id;
    //             $_SESSION['username'] = $email;
    //             $_SESSION['user_email'] = $email;
    //             $_SESSION['user_mobile_no'] = $user_mobile_no;
    //             $_SESSION['user_firstname'] = $user_firstname;
    //             $_SESSION['user_fullname'] = $user_fullname;
    //         }
    //         return $return;
    //     }
    public function chkIfAnyComplementryAlreadyAddedToCart() {
        $DBH = new DatabaseHandler();
        $return = false;
        $cart_session_id = session_id();
        try {
            if (isset($_SESSION['current_showing_date']) && $_SESSION['current_showing_date'] != '') {
                $current_showing_date = $_SESSION['current_showing_date'];
            } else {
                $current_showing_date = '';
            }
            if (isset($_SESSION['topcityid']) && $_SESSION['topcityid'] != '') {
                $topcityid = $_SESSION['topcityid'];
            } else {
                $topcityid = '0';
            }
            if (isset($_SESSION['topareaid']) && $_SESSION['topareaid'] != '') {
                $topareaid = $_SESSION['topareaid'];
            } else {
                $topareaid = '0';
            }
            /*
            
            $sql = "SELECT * FROM `tblcart` WHERE
            
            `cart_session_id` = '".$cart_session_id."' AND
            
            `cart_delivery_date` = '".$current_showing_date."' AND
            
            `cart_city_id` = '".$topcityid."' AND
            
            `cart_area_id` = '".$topareaid."' AND
            
            `cart_status` = '0' AND
            
            `cart_deleted` = '0' ";
            
            */
            $sql = "SELECT * FROM `tblcart` WHERE 

					`cart_session_id` = '" . $cart_session_id . "' AND 

					`cart_city_id` = '" . $topcityid . "' AND 

					`cart_status` = '0' AND 

					`cart_deleted` = '0' ";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                    // $obj_temp = new commonFunctions();
                    $arr_cusine_details = $this->getCusineDetailsForCart($r['cusine_id']);
                    if ($arr_cusine_details['cusine_type_id'] == '122') {
                        $return = true;
                        break;
                    }
                }
            }
        }
        catch(Exception $e) {
            $stringData = '[chkIfAnyComplementryAlreadyAddedToCart] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return false;
        }
        return $return;
    }
    public function getTopLocationStr($city_id, $area_id = '') {
        $DBH = new DatabaseHandler();
        $output = '';
        try {
            if ($area_id == '' || $area_id == '-1' || $area_id == '0') {
                $sql = "SELECT TCT.city_name,TST.state_name,TCN.country_name FROM `tblcities` AS TCT

					LEFT JOIN `tblstates` AS TST ON TCT.state_id = TST.state_id 

					LEFT JOIN `tblcountry` AS TCN ON TCT.country_id = TCN.country_id 

					WHERE TCT.city_id = '" . $city_id . "' AND TCT.city_deleted = '0' AND TCT.city_status = '1' AND TST.state_deleted = '0' AND TST.state_status = '1' AND TCN.country_deleted = '0' AND TCN.country_status = '1' ORDER BY TCT.city_name ASC, TST.state_name ASC, TCN.country_name ASC";
            } else {
                $sql = "SELECT TAR.area_name,TCT.city_name,TST.state_name,TCN.country_name FROM `tblarea` AS TAR

					LEFT JOIN `tblcities` AS TCT ON TAR.city_id = TCT.city_id 

					LEFT JOIN `tblstates` AS TST ON TAR.state_id = TST.state_id 

					LEFT JOIN `tblcountry` AS TCN ON TAR.country_id = TCN.country_id 

					WHERE TAR.area_id = '" . $area_id . "' AND TAR.area_deleted = '0' AND TAR.area_status = '1' AND TCT.city_id = '" . $city_id . "' AND TCT.city_deleted = '0' AND TCT.city_status = '1' AND TST.state_deleted = '0' AND TST.state_status = '1' AND TCN.country_deleted = '0' AND TCN.country_status = '1' ORDER BY TAR.area_name ASC, TCT.city_name ASC, TST.state_name ASC, TCN.country_name ASC";
            }
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                    if ($area_id == '' || $area_id == '-1' || $area_id == '0') {
                        //$output = stripslashes($r['city_name']).', '.stripslashes($r['state_name']).', '.stripslashes($r['country_name']);
                        $output = stripslashes($r['city_name']);
                    } else {
                        //$output = stripslashes($r['area_name']).', '.stripslashes($r['city_name']).', '.stripslashes($r['state_name']).', '.stripslashes($r['country_name']);
                        $output = stripslashes($r['area_name']) . ', ' . stripslashes($r['city_name']);
                    }
                }
            }
        }
        catch(Exception $e) {
            $stringData = '[getTopLocationStr] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $output;
        }
        return $output;
    }
    public function getPincodeOfArea($area_id) {
        $DBH = new DatabaseHandler();
        $area_pincode = '';
        try {
            $sql = "SELECT `area_pincode` FROM `tblarea` WHERE `area_id`= '" . $area_id . "' ";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $r = $STH->fetch(PDO::FETCH_ASSOC);
                $area_pincode = stripslashes($r['area_pincode']);
            }
        }
        catch(Exception $e) {
            $stringData = '[getPincodeOfArea] Catch Error:' . $e->getMessage() . ', sql:' . $sql;
            $this->debuglog($stringData);
            return '';
        }
        return $area_pincode;
    }
    public function getAllLocationsOption($area_id, $type = '1', $multiple = '') {
        $DBH = new DatabaseHandler();
        $output = '';
        if ($type == '2') {
            if ($multiple == '1') {
                if (in_array('-1', $area_id)) {
                    $selected = ' selected ';
                } else {
                    $selected = '';
                }
                $output.= '<option value="-1" ' . $selected . ' >All Locations</option>';
            } else {
                $selected = '';
                $output.= '<option value="" ' . $selected . ' >All Locations</option>';
            }
        } else {
            $output.= '<option value="" >Select Location</option>';
        }
        try {
            /*
            
            $sql = "SELECT TAR.area_id,TAR.area_name,TCT.city_name,TST.state_name,TCN.country_name FROM `tblarea` AS TAR
            
            LEFT JOIN `tblcities` AS TCT ON TAR.city_id = TCT.city_id
            
            LEFT JOIN `tblstates` AS TST ON TAR.state_id = TST.state_id
            
            LEFT JOIN `tblcountry` AS TCN ON TAR.country_id = TCN.country_id
            
            WHERE TAR.area_deleted = '0' AND TAR.area_status = '1' AND TCT.city_deleted = '0' AND TCT.city_status = '1' AND TST.state_deleted = '0' AND TST.state_status = '1' AND TCN.country_deleted = '0' AND TCN.country_status = '1' ORDER BY TAR.area_name ASC, TCT.city_name ASC, TST.state_name ASC, TCN.country_name ASC";
            
            */
            // $sql = "SELECT TAR.city_id AS area_id,TAR.city_name AS area_name,TST.state_name,TCN.country_name FROM `tblcities` AS TAR
            // 		LEFT JOIN `tblstates` AS TST ON TAR.state_id = TST.state_id
            // 		LEFT JOIN `tblcountry` AS TCN ON TAR.country_id = TCN.country_id
            // 		WHERE TAR.city_deleted = '0' AND TAR.city_status = '1' AND TST.state_deleted = '0' AND TST.state_status = '1' AND TCN.country_deleted = '0' AND TCN.country_status = '1' ORDER BY TAR.city_name ASC, TST.state_name ASC, TCN.country_name ASC";
            $sql = "SELECT TAR.city_id AS area_id,TAR.city AS area_name,TST.state,TCN.country_name FROM `tblcities` AS TAR

					LEFT JOIN `tblstates` AS TST ON TAR.state_id = TST.state_id 

					LEFT JOIN `tblcountry` AS TCN ON TAR.country_id = TCN.country_id 

					WHERE TAR.city_deleted = '0' AND TAR.city_status = '1' AND TST.state_deleted = '0' AND TST.state_status = '1' AND TCN.country_deleted = '0' AND TCN.country_status = '1' ORDER BY TAR.city ASC, TST.state ASC, TCN.country_name ASC";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                    if ($multiple == '1') {
                        if (is_array($area_id) && in_array($r['area_id'], $area_id)) {
                            $selected = ' selected ';
                        } else {
                            $selected = '';
                        }
                    } else {
                        if ($r['area_id'] == $area_id) {
                            $selected = ' selected ';
                        } else {
                            $selected = '';
                        }
                    }
                    //$output .= '<option value="'.$r['area_id'].'" '.$selected.'>'.stripslashes($r['area_name']).', '.stripslashes($r['city_name']).', '.stripslashes($r['state_name']).', '.stripslashes($r['country_name']).'</option>';
                    $output.= '<option value="' . $r['area_id'] . '" ' . $selected . '>' . stripslashes($r['area_name']) . ', ' . stripslashes($r['state']) . ', ' . stripslashes($r['country_name']) . '</option>';
                }
            }
        }
        catch(Exception $e) {
            $stringData = '[getAllLocationsOption] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return $output;
        }
        // echo "<pre>";print_r($output);echo"</pre>";
        return $output;
    }
    public function getTopAreaOption($city_id, $area_id, $type = '1', $multiple = '') {
        $DBH = new DatabaseHandler();
        $output = '';
        if ($type == '2') {
            if ($multiple == '1') {
                if (in_array('-1', $area_id)) {
                    $selected = ' selected ';
                } else {
                    $selected = '';
                }
                $output.= '<option value="-1" ' . $selected . ' >All Areas</option>';
            } else {
                $selected = '';
                $output.= '<option value="" ' . $selected . ' >All Areas</option>';
            }
        } else {
            $output.= '<option value="" >Select Area</option>';
        }
        if ($city_id != '') {
            try {
                $sql = "SELECT TAR.area_id,TAR.area_name,TCT.city,TST.state,TCN.country_name FROM `tblarea` AS TAR

						LEFT JOIN `tblcities` AS TCT ON TAR.city_id = TCT.city_id 

						LEFT JOIN `tblstates` AS TST ON TAR.state_id = TST.state_id 

						LEFT JOIN `tblcountry` AS TCN ON TAR.country_id = TCN.country_id 

						WHERE TAR.city_id = '" . $city_id . "' AND TAR.area_deleted = '0' AND TAR.area_status = '1' AND TCT.city_deleted = '0' AND TCT.city_status = '1' AND TST.state_deleted = '0' AND TST.state_status = '1' AND TCN.country_deleted = '0' AND TCN.country_status = '1' ORDER BY TAR.area_name ASC, TCT.city ASC, TST.state ASC, TCN.country_name ASC";
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                        if ($multiple == '1') {
                            if (is_array($area_id) && in_array($r['area_id'], $area_id)) {
                                $selected = ' selected ';
                            } else {
                                $selected = '';
                            }
                        } else {
                            if ($r['area_id'] == $area_id) {
                                $selected = ' selected ';
                            } else {
                                $selected = '';
                            }
                        }
                        $output.= '<option value="' . $r['area_id'] . '" ' . $selected . '>' . stripslashes($r['area_name']) . '</option>';
                    }
                }
            }
            catch(Exception $e) {
                $stringData = '[getTopAreaOption] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
                $this->debuglog($stringData);
                return $output;
            }
        }
        return $output;
    }
    public function getSideCartBoxCheckout() {
        $DBH = new DatabaseHandler();
        $output = '';
        $output.= '<div class="checkout-cart-body">

						<div class="cart">';
        $cart_session_id = session_id();
        if ($this->isLoggedIn()) {
            $user_id = $_SESSION['user_id'];
        } else {
            $user_id = 0;
        }
        try {
            if (isset($_SESSION['current_showing_date']) && $_SESSION['current_showing_date'] != '') {
                $current_showing_date = $_SESSION['current_showing_date'];
            } else {
                $current_showing_date = '';
            }
            if (isset($_SESSION['topcityid']) && $_SESSION['topcityid'] != '') {
                $topcityid = $_SESSION['topcityid'];
            } else {
                $topcityid = '0';
            }
            if (isset($_SESSION['topareaid']) && $_SESSION['topareaid'] != '') {
                $topareaid = $_SESSION['topareaid'];
            } else {
                $topareaid = '0';
            }
            /*
            
            $sql = "SELECT * FROM `tblcart` WHERE
            
            `cart_session_id` = '".$cart_session_id."' AND
            
            `cart_delivery_date` = '".$current_showing_date."' AND
            
            `cart_city_id` = '".$topcityid."' AND
            
            `cart_area_id` = '".$topareaid."' AND
            
            `cart_status` = '0' AND
            
            `cart_deleted` = '0' ";
            
            */
            // `cart_city_id` = '".$topcityid."' AND
            $sql = "SELECT * FROM `tblcart` WHERE `cart_session_id` = '" . $cart_session_id . "' AND `cart_status` = '0' AND `cart_deleted` = '0' ORDER BY cart_add_date DESC";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $subtotal = 0;
                $cnt = 0;
                $cgst_amount = 0.00;
                $sgst_amount = 0.00;
                $cess_amount = 0.00;
                $gst_amount = 0.00;
                $arr_vendor_discount_amt = array();
                while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                    // echo "<pre>";print_r($r);echo "</pre>";
                    // $obj_temp = new commonFunctions();
                    $arr_cusine_details = $this->getCusineDetailsForCart($r['cusine_id']);
                    if (isset($arr_cusine_details['cgst_tax']) && $arr_cusine_details['cgst_tax'] != '') {
                        $tax_calculated_amt_cgst = 0.00;
                        $arr_temp_tax_details = $this->getTaxDetailsByTaxId($arr_cusine_details['cgst_tax']);
                        if (count($arr_temp_tax_details) > 0) {
                            if ($arr_temp_tax_details['tax_type'] == '0') {
                                $tax_calculated_amt_cgst = $arr_temp_tax_details['tax_amount'];
                            } elseif ($arr_temp_tax_details['tax_type'] == '1') {
                                $tax_calculated_amt_cgst = ($r['subtotal'] * $arr_temp_tax_details['tax_percentage']) / 100;
                            } elseif ($arr_temp_tax_details['tax_type'] == '2') {
                            } elseif ($arr_temp_tax_details['tax_type'] == '3') {
                            }
                        }
                        $cgst_amount = $cgst_amount + $tax_calculated_amt_cgst;
                    }
                    // print_r($cgst_amount);
                    if (isset($arr_cusine_details['sgst_tax']) && $arr_cusine_details['sgst_tax'] != '') {
                        $tax_calculated_amt_sgst = 0.00;
                        $arr_temp_tax_details = $this->getTaxDetailsByTaxId($arr_cusine_details['sgst_tax']);
                        if (count($arr_temp_tax_details) > 0) {
                            if ($arr_temp_tax_details['tax_type'] == '0') {
                                $tax_calculated_amt_sgst = $arr_temp_tax_details['tax_amount'];
                            } elseif ($arr_temp_tax_details['tax_type'] == '1') {
                                $tax_calculated_amt_sgst = ($r['subtotal'] * $arr_temp_tax_details['tax_percentage']) / 100;
                            } elseif ($arr_temp_tax_details['tax_type'] == '2') {
                            } elseif ($arr_temp_tax_details['tax_type'] == '3') {
                            }
                        }
                        $sgst_amount = $sgst_amount + $tax_calculated_amt_sgst;
                    }
                    if (isset($arr_cusine_details['cess_tax']) && $arr_cusine_details['cess_tax'] != '') {
                        $tax_calculated_amt_cess = 0.00;
                        $arr_temp_tax_details = $this->getTaxDetailsByTaxId($arr_cusine_details['cess_tax']);
                        if (count($arr_temp_tax_details) > 0) {
                            if ($arr_temp_tax_details['tax_type'] == '0') {
                                $tax_calculated_amt_cess = $arr_temp_tax_details['tax_amount'];
                            } elseif ($arr_temp_tax_details['tax_type'] == '1') {
                                $tax_calculated_amt_cess = ($r['subtotal'] * $arr_temp_tax_details['tax_percentage']) / 100;
                            } elseif ($arr_temp_tax_details['tax_type'] == '2') {
                            } elseif ($arr_temp_tax_details['tax_type'] == '3') {
                            }
                        }
                        $cess_amount = $cess_amount + $tax_calculated_amt_cess;
                    }
                    // echo $cess_amount;
                    if (isset($arr_cusine_details['gst_tax']) && $arr_cusine_details['gst_tax'] != '') {
                        $tax_calculated_amt_gst = 0.00;
                        $arr_temp_tax_details = $this->getTaxDetailsByTaxId($arr_cusine_details['gst_tax']);
                        if (count($arr_temp_tax_details) > 0) {
                            if ($arr_temp_tax_details['tax_type'] == '0') {
                                $tax_calculated_amt_gst = $arr_temp_tax_details['tax_amount'];
                            } elseif ($arr_temp_tax_details['tax_type'] == '1') {
                                $tax_calculated_amt_gst = ($r['subtotal'] * $arr_temp_tax_details['tax_percentage']) / 100;
                            } elseif ($arr_temp_tax_details['tax_type'] == '2') {
                            } elseif ($arr_temp_tax_details['tax_type'] == '3') {
                            }
                        }
                        $gst_amount = $gst_amount + $tax_calculated_amt_gst;
                    }
                    // echo $gst_amount;
                    $output.= '<div class="item ng-scope">

									<div class="image" style="background-image: url(&quot;' . SITE_URL . '/wa/uploads/' . $this->getevent_image($r['cusine_id']) . '&quot;);"></div>

									<div class="info">

										<div class="close" onclick="removeFromCartCheckout(' . $r['cart_id'] . ');">Ã—</div>

										<h4>' . $r['event_name'] . '</h4>

										<p class="cart_small_text" style="margin: 0 0 -10px;">Delivery Date : ' . date('jS F', strtotime($r['cart_delivery_date'])) . '</p>



										<p class="cart_small_text">Delivery Area : ' . $r['booking_slot'] . '</p>

										<p class="cart_small_text">Ticket Type : ' . $this->gettickettype($r['ticket_type']) . '</p>

										<div class="actions">

											<div class="qty">

												<input type="hidden" name="hdncartcusine_id" id="hdncartcusine_id_' . $cnt . '" value="' . $r['cusine_id'] . '">

												<input type="hidden" name="hdncartdelivery_date" id="hdncartdelivery_date' . $cnt . '" value="' . $r['cart_delivery_date'] . '">

												<select name="cart_qty" id="cart_qty_' . $cnt . '" onchange="updateCartSingleItemCheckout(' . $cnt . ',\'' . $r['booking_type'] . '\')">';
                    if (isset($arr_cusine_details['min_order']) && $arr_cusine_details['min_order'] != '') {
                        $min_order = $arr_cusine_details['min_order'];
                    } else {
                        $min_order = 1;
                    }
                    if (isset($arr_cusine_details['max_order']) && $arr_cusine_details['max_order'] != '') {
                        $max_order = $arr_cusine_details['max_order'];
                    } else {
                        $max_order = 10;
                    }
                    if ($arr_cusine_details['cusine_type_id'] == '122') {
                        $output.= '<option value="' . $min_order . '" ' . $str_sel . '>' . $min_order . '</option>';
                    } else {
                        for ($i = $min_order;$i <= $max_order;$i++) {
                            if ($r['qty'] == $i) {
                                $str_sel = ' selected ';
                            } else {
                                $str_sel = '';
                            }
                            $output.= '<option value="' . $i . '" ' . $str_sel . '>' . $i . '</option>';
                        }
                    }
                    $output.= '					</select>

											</div>

											<span class="price">

												<span class="ng-binding">â‚¹ ' . $r['subtotal'] . '</span>

											</span>

										</div>

									</div>

								</div>';
                    $subtotal = $subtotal + $r['subtotal'];
                    $discount_coupon = stripslashes($r['discount_coupon']);
                    // echo '<br><pre>';
                    // print_r($arr_cusine_details);
                    // echo '<br></pre>';
                    // if(array_key_exists($arr_cusine_details['vendor_id'],$arr_vendor_discount_amt))
                    // {
                    // 	$arr_vendor_discount_amt[$arr_cusine_details['vendor_id']] += $r['subtotal'];
                    // }
                    // else
                    // {
                    // 	$arr_vendor_discount_amt[$arr_cusine_details['vendor_id']] = $r['subtotal'];
                    // }
                    $cnt++;
                }
                $trade_discount = $this->getTradeDiscountPrice($subtotal, $topcityid);
                $discount_amount = 0.00;
                $discount_on_subtotal = false;
                $discount_on_final = false;
                $arr_coupon_details = $this->getDiscountCouponDetailsByCoupon($discount_coupon);
                // echo "hi";
                // echo "<pre>";print_r($arr_coupon_details);echo "</pre>";
                // exit;
                // 7-5-2019
                if (is_array($arr_coupon_details) && count($arr_coupon_details) > 0) {
                    if ($arr_coupon_details['vendor_id'] == '0') {
                        if ($arr_coupon_details['dc_type'] == '0') {
                            if ($arr_coupon_details['discount_price'] == '') {
                                $calculated_discount_price = 0.00;
                            } else {
                                $calculated_discount_price = $arr_coupon_details['discount_price'];
                            }
                            $discount_amount = $calculated_discount_price;
                            if ($arr_coupon_details['dc_applied_on'] == '0') {
                                $discount_on_subtotal = true;
                            } elseif ($arr_coupon_details['dc_applied_on'] == '1') {
                                $discount_on_final = true;
                            }
                        } elseif ($arr_coupon_details['dc_type'] == '1') {
                            if ($arr_coupon_details['dc_percentage'] == '') {
                                $calculated_discount_price = 0.00;
                            } else {
                                $calculated_discount_price = ($subtotal * $arr_coupon_details['dc_percentage']) / 100;
                                if ($arr_coupon_details['dc_applied_on'] == '0') {
                                    $discount_on_subtotal = true;
                                } elseif ($arr_coupon_details['dc_applied_on'] == '1') {
                                    $discount_on_final = true;
                                }
                            }
                            $discount_amount = $calculated_discount_price;
                        } elseif ($arr_coupon_details['dc_type'] == '2') {
                        }
                    } else {
                        if (array_key_exists($arr_coupon_details['vendor_id'], $arr_vendor_discount_amt)) {
                            if ($arr_coupon_details['dc_type'] == '0') {
                                if ($arr_coupon_details['discount_price'] == '') {
                                    $calculated_discount_price = 0.00;
                                } else {
                                    $calculated_discount_price = $arr_coupon_details['discount_price'];
                                }
                                $discount_amount = $calculated_discount_price;
                                if ($arr_coupon_details['dc_applied_on'] == '0') {
                                    $discount_on_subtotal = true;
                                } elseif ($arr_coupon_details['dc_applied_on'] == '1') {
                                    $discount_on_final = true;
                                }
                            } elseif ($arr_coupon_details['dc_type'] == '1') {
                                if ($arr_coupon_details['dc_percentage'] == '') {
                                    $calculated_discount_price = 0.00;
                                } else {
                                    $calculated_discount_price = ($arr_vendor_discount_amt[$arr_coupon_details['vendor_id']] * $arr_coupon_details['dc_percentage']) / 100;
                                    if ($arr_coupon_details['dc_applied_on'] == '0') {
                                        $discount_on_subtotal = true;
                                    } elseif ($arr_coupon_details['dc_applied_on'] == '1') {
                                        $discount_on_final = true;
                                    }
                                }
                                $discount_amount = $calculated_discount_price;
                            } elseif ($arr_coupon_details['dc_type'] == '2') {
                            }
                        } else {
                        }
                    }
                }
                //$shipping_price = $this->getShippingPrice($subtotal,$topcityid,$topareaid);
                $shipping_price = $this->getShippingPrice($subtotal, $topcityid);
                $tax_amount = 0.00;
                //$tax_amount = $cgst_amount + $sgst_amount + $cess_amount + $gst_amount;
                $tax_amount = $cgst_amount + $sgst_amount + $cess_amount;
                $tax_str = '';
                $tax_str_cgst = '';
                $tax_str_sgst = '';
                $tax_str_cess = '';
                $tax_str_gst = '';
                if ($cgst_amount > 0) {
                    $tax_str_cgst = '<div class="total"><label>CGST</label>â‚¹ ' . number_format((float)$cgst_amount, 2, '.', '') . '</div>';
                }
                if ($sgst_amount > 0) {
                    $tax_str_sgst = '<div class="total"><label>SGST</label>â‚¹ ' . number_format((float)$sgst_amount, 2, '.', '') . '</div>';
                }
                if ($cess_amount > 0) {
                    $tax_str_cess = '<div class="total"><label>CESS </label>â‚¹ ' . number_format((float)$cess_amount, 2, '.', '') . '</div>';
                }
                if ($gst_amount > 0) {
                    //$tax_str_gst = '<div class="total"><label>GST </label>â‚¹ '.number_format((float)$gst_amount, 2, '.', '').'</div>';
                    
                }
                /*
                
                //Commentd - for deactivate common tax - Start
                
                $arr_tax_details = $this->getTaxDetails($topcityid,$topareaid);
                
                if(is_array($arr_tax_details) && count($arr_tax_details) > 0)
                
                {
                
                if($arr_tax_details['tax_type'] == '0')
                
                {
                
                if($arr_tax_details['tax_applied_on'] == '0')
                
                {
                
                $tax_amount = $tax_amount +	$arr_tax_details['tax_amount'];
                
                }
                
                elseif($arr_tax_details['tax_applied_on'] == '1')
                
                {
                
                $tax_amount = $tax_amount +	$arr_tax_details['tax_amount'];
                
                }
                
                elseif($arr_tax_details['tax_applied_on'] == '2' )
                
                {
                
                $tax_amount = $tax_amount +	$arr_tax_details['tax_amount'];
                
                }
                
                elseif($arr_tax_details['tax_applied_on'] == '3' )
                
                {
                
                $tax_amount = $tax_amount +	$arr_tax_details['tax_amount'];
                
                }
                
                else
                
                {
                
                
                
                }
                
                
                
                if($tax_amount > 0)
                
                {
                
                $tax_str = '<label>'.$arr_tax_details['tax_name'].'( â‚¹ '.$arr_tax_details['tax_amount'].' )</label>â‚¹ '.number_format((float)$tax_amount, 2, '.', '');
                
                }
                
                }
                
                elseif($arr_tax_details['tax_type'] == '1')
                
                {
                
                if($arr_tax_details['tax_applied_on'] == '0')
                
                {
                
                $tax_calculated_amt = ( $subtotal * $arr_tax_details['tax_percentage'] ) / 100;
                
                $tax_amount = $tax_amount +	$tax_calculated_amt;
                
                }
                
                elseif($arr_tax_details['tax_applied_on'] == '1')
                
                {
                
                $tax_calculated_amt = ( ( $subtotal - $discount_amount) * $arr_tax_details['tax_percentage'] ) / 100;
                
                $tax_amount = $tax_amount +	$tax_calculated_amt;
                
                }
                
                elseif($arr_tax_details['tax_applied_on'] == '2' )
                
                {
                
                $tax_calculated_amt = ( ( $subtotal - $discount_amount + $shipping_price) * $arr_tax_details['tax_percentage'] ) / 100;
                
                $tax_amount = $tax_amount +	$tax_calculated_amt;
                
                }
                
                elseif($arr_tax_details['tax_applied_on'] == '3' )
                
                {
                
                $tax_calculated_amt = ( ( $subtotal - $discount_amount + $shipping_price) * $arr_tax_details['tax_percentage'] ) / 100;
                
                $tax_amount = $tax_amount +	$tax_calculated_amt;
                
                }
                
                else
                
                {
                
                
                
                }
                
                
                
                if($tax_amount > 0)
                
                {
                
                $tax_str = '<label>'.$arr_tax_details['tax_name'].'('.$arr_tax_details['tax_percentage'].' % )</label>â‚¹ '.number_format((float)$tax_amount, 2, '.', '');
                
                }
                
                }
                
                elseif($arr_tax_details['tax_type'] == '2')
                
                {
                
                
                
                }
                
                elseif($arr_tax_details['tax_type'] == '3')
                
                {
                
                $tax_str = '<label>'.$arr_tax_details['tax_name'].'</label>â‚¹ '.number_format((float)$tax_amount, 2, '.', '');
                
                }
                
                }
                
                //Commentd - for deactivate common tax - End
                
                */
                $final_total = $subtotal - $trade_discount - $discount_amount + $shipping_price + $tax_amount;
                //if($trade_discount > 0)
                //{
                $trade_discount_str = '<label>Trade Discount Amount</label>â‚¹ ' . number_format((float)$trade_discount, 2, '.', '');
                //}
                //else
                //{
                //	$trade_discount_str = '';
                //}
                $discountcouponbtn_str = '<div class="row"><div class="col-lg-7"><label class="dc_text">Do you have Discount Coupon?</label></div><div class="col-lg-5"><input class="dc_input" type="text" name="discount_coupon" id="discount_coupon" value="' . $discount_coupon . '" > </div> ';
                $discountcouponbtn_str.= '<div class="col-lg-8">&nbsp;</div><div class="col-lg-4"><a style="margin-bottom:16px;" class="btn-red-small" href="javascript:doApplyDiscountCoupon();">Redeem</a> </div> </div>';
                $subtotal_str = '<label>SUBTOTAL</label>â‚¹ ' . number_format((float)$subtotal, 2, '.', '');
                $discount_str = '<label>Promo Discount Amount</label>â‚¹ ' . number_format((float)$discount_amount, 2, '.', '');
                $shipping_str = '<label>Shipping/Handling Charges</label>â‚¹ ' . number_format((float)$shipping_price, 2, '.', '');
                $total_str = '<label>TOTAL</label>â‚¹ ' . number_format((float)$final_total, 2, '.', '');
                $btn_proceed_str = '';
            } else {
                $output.= '<div class="empty">

								<h3>Your cart is empty.</h3>

								<h4>Add some delicious food available on our menu to checkout.</h4>

            				</div>';
                $subtotal_str = '';
                $trade_discount_str = '';
                $discountcouponbtn_str = '';
                $discount_str = '';
                $shipping_str = '';
                $tax_str = '';
                $tax_str_cgst = '';
                $tax_str_sgst = '';
                $tax_str_cess = '';
                $tax_str_gst = '';
                $total_str = '';
                $btn_proceed_str = '';
            }
            $output.= '	</div>

					</div>

					<div class="secondary">

						<div class="total">

							' . $discountcouponbtn_str . '

						</div>

						<div class="total">

							' . $subtotal_str . '

						</div>';
            if ($trade_discount_str != '') {
                $output.= '	<div class="total">

							' . $trade_discount_str . '

						</div>';
            }
            $output.= '	<div class="total">

							' . $discount_str . '

						</div>

						<div class="total">

							' . $shipping_str . '

						</div>

						' . $tax_str_cgst . '

						' . $tax_str_sgst . '

						' . $tax_str_cess . '

						<div class="final_total">

							' . $total_str . '

						</div>

					</div>

					<div class="footer" style="padding: 18px;">

						' . $btn_proceed_str . '

					</div>';
        }
        catch(Exception $e) {
            $stringData = '[getSideCartBox] Catch Error:' . $e->getMessage() . ', sql:' . $sql;
            $this->debuglog($stringData);
            return $output;
        }
        return $output;
    }
    public function updateUserAddressDetails($tdata) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return = false;
        try {
            $sql = "UPDATE `tblusers` SET 

					`building_name` = :building_name,

					`floor_no` = :floor_no,

					`landmark` = :landmark,

					`address` = :address,  

					`country_id` = :country_id,  

					`state_id` = :state_id,  

					`city_id` = :city_id,  

					`area_id` = :area_id,  

					`delivery_mobile_no` = :delivery_mobile_no,

					`pincode` = :pincode,

					`billing_building_name` = :billing_building_name,

					`billing_floor_no` = :billing_floor_no,

					`billing_landmark` = :billing_landmark,

					`billing_address` = :billing_address,  

					`billing_country_id` = :billing_country_id,  

					`billing_state_id` = :billing_state_id,  

					`billing_city_id` = :billing_city_id,  

					`billing_area_id` = :billing_area_id,  

					`billing_mobile_no` = :billing_mobile_no,

					`billing_pincode` = :billing_pincode,

					`delivery_name` = :delivery_name,

					`billing_name` = :billing_name

					WHERE `user_id` = :user_id ";
            $STH = $DBH->prepare($sql);
            $STH->execute(array(':building_name' => addslashes($tdata['building_name']), ':floor_no' => addslashes($tdata['floor_no']), ':landmark' => addslashes($tdata['landmark']), ':address' => addslashes($tdata['address']), ':country_id' => addslashes($tdata['country_id']), ':state_id' => addslashes($tdata['state_id']), ':city_id' => addslashes($tdata['city_id']), ':area_id' => addslashes($tdata['area_id']), ':delivery_mobile_no' => addslashes($tdata['delivery_mobile_no']), ':pincode' => addslashes($tdata['pincode']), ':billing_building_name' => addslashes($tdata['billing_building_name']), ':billing_floor_no' => addslashes($tdata['billing_floor_no']), ':billing_landmark' => addslashes($tdata['billing_landmark']), ':billing_address' => addslashes($tdata['billing_address']), ':billing_country_id' => addslashes($tdata['billing_country_id']), ':billing_state_id' => addslashes($tdata['billing_state_id']), ':billing_city_id' => addslashes($tdata['billing_city_id']), ':billing_area_id' => addslashes($tdata['billing_area_id']), ':billing_mobile_no' => addslashes($tdata['billing_mobile_no']), ':billing_pincode' => addslashes($tdata['billing_pincode']), ':delivery_name' => addslashes($tdata['delivery_name']), ':billing_name' => addslashes($tdata['billing_name']), ':user_id' => $tdata['user_id']));
            $DBH->commit();
            $return = true;
        }
        catch(Exception $e) {
            $stringData = '[updateUserAddressDetails] Catch Error:' . $e->getMessage();
            $this->debuglog($stringData);
            return false;
        }
        return $return;
    }
    public function getSideLoggedinMenu($page_id) {
        $output = '';
        $my_account_active = '';
        if ($page_id == '7') {
            $my_account_active = ' class="active" ';
        }
        $edit_profile_active = '';
        if ($page_id == '8') {
            $edit_profile_active = ' class="active" ';
        }
        $my_orders_active = '';
        if ($page_id == '9' || $page_id == '10') {
            $my_orders_active = ' class="active" ';
        }
        $change_password_active = '';
        if ($page_id == '21') {
            $change_password_active = ' class="active" ';
        }
        $output.= '<div class="myaccount-menu"><a ' . $my_account_active . ' href="' . SITE_URL . '/my_account.php">My Account</a></div>

					<div class="myaccount-menu"><a ' . $edit_profile_active . ' href="' . SITE_URL . '/edit_profile.php">Edit Profile</a></div>

					<div class="myaccount-menu"><a ' . $change_password_active . ' href="' . SITE_URL . '/change_password.php">Change Password</a></div>

					<div class="myaccount-menu"><a ' . $my_orders_active . ' href="' . SITE_URL . '/my_orders.php">My Orders</a></div>

					<div class="myaccount-menu"><a href="#">Track Order</a></div>

					<div class="myaccount-menu"><a href="' . SITE_URL . '/logout.php">Logout</a></div>';
        return $output;
    }
    public function changeUserPassword($tdata) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return = false;
        try {
            $sql = "UPDATE `tblusers` SET `password` = :password  WHERE `user_id` = :user_id ";
            $STH = $DBH->prepare($sql);
            $STH->execute(array(':password' => md5($tdata['password']), ':user_id' => $tdata['user_id']));
            $DBH->commit();
            $return = true;
        }
        catch(Exception $e) {
            $stringData = '[changeUserPassword] Catch Error:' . $e->getMessage();
            $this->debuglog($stringData);
            return false;
        }
        return $return;
    }
    public function getUsersAllOrders($user_id) {
        $DBH = new DatabaseHandler();
        $arr_records = array();
        $sql = "SELECT * FROM `tblorders` WHERE user_id = '" . $user_id . "' AND `order_status` > 0 ORDER BY order_add_date DESC ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($r = $STH->fetch(PDO::FETCH_ASSOC)) {
                //foreach($r as $key1 => $val1)
                //{
                //$r[$key1] = stripslashes($val1);
                //}
                $arr_records[] = $r;
            }
        }
        return $arr_records;
    }
    public function getOrderStatusString($status) {
        $output = '';
        $arr_order_status = array('Pending', 'Order Received', 'Shipped', 'Completed', 'Cancelled', 'Declined');
        if (array_key_exists($status, $arr_order_status)) {
            $output = $arr_order_status[$status];
        }
        return $output;
    }
    public function doCheckoutSignUp($tdata) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return = 0;
        try {
            $sql = "INSERT INTO `tblusers` (`first_name`,`last_name`,`email`,`password`,`mobile_no`,`user_status`,`user_add_date`,`is_guest_user`,`user_otp`) 

					VALUES (:first_name,:last_name,:email,:password,:mobile_no,:user_status,:user_add_date,:is_guest_user,:user_otp)";
            $STH = $DBH->prepare($sql);
            $STH->execute(array(':first_name' => addslashes($tdata['first_name']), ':last_name' => addslashes($tdata['last_name']), ':email' => addslashes($tdata['email']), ':password' => md5($tdata['password']), ':mobile_no' => addslashes($tdata['mobile_no']), ':user_status' => addslashes($tdata['user_status']), ':user_add_date' => date('Y-m-d H:i:s'), ':is_guest_user' => addslashes($tdata['is_guest_user']), ':user_otp' => addslashes($tdata['user_otp'])));
            $return = $DBH->lastInsertId();
            $DBH->commit();
        }
        catch(Exception $e) {
            $stringData = '[doCheckoutSignUp] Catch Error:' . $e->getMessage();
            $this->debuglog($stringData);
            return 0;
        }
        return $return;
    }
    public function chkIfValidCityId($city_id) {
        $DBH = new DatabaseHandler();
        $return = false;
        try {
            $sql = "SELECT * FROM `tblcities` WHERE `city_id` = '" . $city_id . "' AND `city_status` = '1' AND `city_deleted` = '0' ";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
            }
        }
        catch(Exception $e) {
            $stringData = '[chkIfValidCityId] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return false;
        }
        return $return;
    }
    //   public function doVerifyOTP($tdata)
    //   {
    //       $my_DBH = new DatabaseHandler();
    //       $DBH = $my_DBH->raw_handle();
    //       $DBH->beginTransaction();
    //       $return = false;
    // if($this->chkValidOTP($tdata))
    // {
    // 	try {
    // 		$sql = "UPDATE `tblusers` SET `user_status` = :user_status,`user_modified_date` = :user_modified_date WHERE `mobile_no` = :mobile_no AND `user_deleted` = :user_deleted AND `email` = :email ";
    // 		$STH = $DBH->prepare($sql);
    // 		$STH->execute(array(
    // 			':user_status' => 1,
    // 			':user_modified_date' => date('Y-m-d H:i:s'),
    // 			':mobile_no' => addslashes($tdata['mobile_no']),
    // 			':user_deleted' => 0,
    // 			':email' => addslashes($tdata['email'])
    // 		));
    // 		$DBH->commit();
    // 		$return = true;
    // 	} catch (Exception $e) {
    // 		$stringData = '[doVerifyOTP] Catch Error:'.$e->getMessage();
    // 		$this->debuglog($stringData);
    // 		return false;
    // 	}
    // }
    //       return $return;
    //   }
    public function doVerifyOTP($tdata) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return = false;
        if ($this->chkValidOTP($tdata)) {
            try {
                $sql = "UPDATE `tblusers` SET `status` = :user_status,`user_update_date` = :user_modified_date WHERE `mobile` = :mobile_no AND `email` = :email ";
                $STH = $DBH->prepare($sql);
                $STH->execute(array(':user_status' => 1, ':user_modified_date' => date('Y-m-d H:i:s'), ':mobile_no' => addslashes($tdata['mobile_no']), ':email' => addslashes($tdata['email'])));
                $DBH->commit();
                $return = true;
            }
            catch(Exception $e) {
                $stringData = '[doVerifyOTP] Catch Error:' . $e->getMessage();
                $this->debuglog($stringData);
                return false;
            }
        }
        return $return;
    }
    public function chkValidOTP($tdata) {
        $DBH = new DatabaseHandler();
        $return = false;
        try {
            $sql = "SELECT * FROM `tblusers` WHERE `email` = '" . $tdata['email'] . "' AND `mobile` = '" . $tdata['mobile_no'] . "' AND `user_otp` = '" . $tdata['user_otp'] . "'";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
            }
        }
        catch(Exception $e) {
            $stringData = '[chkValidOTP] Catch Error:' . $e->getMessage() . ', sql:' . $sql;
            $this->debuglog($stringData);
            return false;
        }
        return $return;
    }
    public function sendSignUpEmailToCustomer($email) {
        $user_id = $this->getUserId($email);
        if ($user_id > 0) {
            $fname = $this->getUserFirstNameById($user_id);
            $from_email = 'support@tastes-of-states.com';
            $from_name = 'Tastes of States';
            $subject = "Welcome to Tastes of States";
            $emailHTML = '';
            $emailHTML.= '<p>Dear ' . $fname . '</p>';
            $emailHTML.= '<p>Your profile is successfully created at Tastes of states.</p>';
            $emailHTML.= '<p>Thanks and Regards</p>';
            $emailHTML.= '<p>Team Tastes of states</p>';
            $to_email = $email;
            $mail = new PHPMailer();
            $mail->IsHTML(true);
            $mail->Host = "batmobile.websitewelcome.com"; // SMTP server
            $mail->From = $from_email;
            $mail->FromName = $from_name;
            $mail->AddAddress($to_email);
            $mail->Subject = $subject;
            $mail->Body = $emailHTML;
            $mail->Send();
            $mail->ClearAddresses();
            // SENDSMS TO CUSTOMER - SIGNUP - START
            $tdata_sms = array();
            $tdata_sms['mobile_no'] = $this->getUserMobileNoById($user_id);
            $tdata_sms['sms_message'] = 'Dear ' . $fname . ', Your profile is successfully created at Tastes of states.';
            $this->sendSMS($tdata_sms);
            // SENDSMS TO CUSTOMER - SIGNUP - END
            // SENDSMS TO ADMIN - SIGNUP - START
            $tdata_sms_admin = array();
            $tdata_sms_admin['mobile_no'] = '8828033111';
            $tdata_sms_admin['sms_message'] = "Dear Admin, new customer registered with name : " . $fname;
            $this->sendSMS($tdata_sms_admin);
            // SENDSMS TO ADMIN - SIGNUP - END
            
        }
    }
    public function getUserFirstNameById($user_id) {
        $DBH = new DatabaseHandler();
        $name = '';
        $sql = "SELECT * FROM `tblusers` WHERE `user_id` = '" . $user_id . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $r = $STH->fetch(PDO::FETCH_ASSOC);
            $first_name = stripslashes($r['name']);
            $name = $first_name;
        }
        return $name;
    }
    public function getUserMobileNoById($user_id) {
        $DBH = new DatabaseHandler();
        $mobile_no = '';
        $sql = "SELECT * FROM `tblusers` WHERE `user_id` = '" . $user_id . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $r = $STH->fetch(PDO::FETCH_ASSOC);
            $mobile_no = stripslashes($r['mobile']);
        }
        return $mobile_no;
    }
    function InsertFeedback($parent_id, $page_id, $name, $email, $feedback, $user_id) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "INSERT INTO `tblfeedback` (`parent_feedback_id`,`page_id`,`user_id`,`name`,`email`,`feedback`,`admin`,`status`) VALUES ('" . addslashes($parent_id) . "','" . addslashes($page_id) . "','" . addslashes($user_id) . "','" . addslashes($name) . "','" . addslashes($email) . "','" . addslashes($feedback) . "','0','1')";
        // $result = mysql_query($sql,$link);
        $result = $DBH->query($sql);
        if ($result) {
            $return = true;
        }
        return $return;
    }
    public function chkIfValidAreaId($area_id) {
        $DBH = new DatabaseHandler();
        $return = false;
        try {
            $sql = "SELECT * FROM `tblarea` WHERE `area_id` = '" . $area_id . "' AND `area_status` = '1' AND `area_deleted` = '0' ";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $return = true;
            }
        }
        catch(Exception $e) {
            $stringData = '[chkIfValidAreaId] Catch Error:' . $e->getMessage() . ' , sql:' . $sql;
            $this->debuglog($stringData);
            return false;
        }
        return $return;
    }
    //  public function chkValidUserLogin($email,$password)
    //   {
    //       $DBH = new DatabaseHandler();
    //       $return = false;
    //      echo  $sql = "SELECT * FROM `tblusers` WHERE `email` = '".$email."' AND `password` = '".md5($password)."' AND `user_status` = 1 AND `user_deleted` = '0' AND `user_blocked` = '0' AND `is_guest_user` = '0' ";
    //       $STH = $DBH->query($sql);
    // if( $STH->rowCount() > 0 )
    //       {
    //           $return = true;
    //       }
    //       return $return;
    //   }
    // public function row_wise_report_name($arr_rows)
    // {
    // 	  // echo "<pre>";print_r($arr_rows);echo "</pre>";
    // 	  // exit;
    //         foreach($arr_rows as $key=>$final_val_row)
    //         {
    //            $sort_row[$key] = $final_val_row['col_report_order'];
    //         }
    //            array_multisort($sort_row, SORT_DESC, $arr_rows);
    //         $final_row_arr=array();
    //         foreach($sort_row as $val_sort_row)
    //         {
    //         	foreach($arr_rows as $final_row)
    //         	{
    //                if($val_sort_row==$final_row['col_report_order'])
    //                {
    //                	 array_push($final_row_arr,$final_row);
    //                }
    //         	}
    //         }
    //        $reve_final_row=array_reverse($final_row_arr);
    //         return $reve_final_rowl;
    //                // echo "<pre>";print_r($reve_final_row);echo "</pre>";
    // }
    public function table_colums($tablm_name) {
        $DBH = new DatabaseHandler();
        // $option_str = '';
        $sql = "SELECT column_name FROM information_schema.columns WHERE table_name='" . $tablm_name . "'";
        $STH = $DBH->query($sql);
        // $STH->execute();
        if ($STH->rowCount() > 0) {
            $html = '';
            $index = 0;
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $colues[] = $row;
            }
        }
        return $colues;
    }
    //old function keywords
    public function getRecordData_OLD($record) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $sql = "SELECT * FROM `tbl_recordshow_dropdown` WHERE `uniqu_id` ='" . $record . "'AND`pag_cat_status`=1 AND `is_deleted`=0";
        $STH = $DBH->query($sql);
        $row = $STH->fetch(PDO::FETCH_ASSOC);
        $getcolums = "SELECT * FROM  `tblcolumndetails` WHERE `uniqu_m_id`='" . $record . "' AND `col_query_order`=1 AND `col_query_field`='Yes'";
        $STH2 = $DBH->query($getcolums);
        if ($STH2->rowCount() > 0) {
            while ($row2 = $STH2->fetch(PDO::FETCH_ASSOC)) {
                $colums[] = $row2['col_name'];
                $Id_table[] = $row2['Id_table'];
                $fetch_columns[] = $row2['fetch_columns'];
                $fetch_value[] = $row2['fetch_value'];
            }
        }

        $col_name = $this->table_colums($row['table_name']);
        foreach ($col_name as $col_vali) {
            $colnameshow[] = $col_vali['column_name'];
        }

        $colums_str = implode(',', $colums);
        if (in_array('user_id', $colnameshow)) {
            $sql1 = "SELECT " . $colums_str . " FROM `" . $row['table_name'] . "` WHERE `user_id`=" . $_SESSION['user_id'] . "";
        } else {
            $sql1 = "SELECT " . $colums_str . " FROM `" . $row['table_name'] . "`";
        }
        $STH1 = $DBH->query($sql1);
        if ($STH1->rowCount() > 0) {
            while ($row1 = $STH1->fetch(PDO::FETCH_ASSOC)) {
                $data[] = $row1;
            }
            foreach ($data as $value) {
                foreach ($colums as $col) {
                    $get_arr[] = $col . '|' . $value[$col];
                }
            }
            $get_uniqu = array_values(array_unique($get_arr));
            $count_arr = count($Id_table);
            foreach ($get_uniqu as $final_val) {
                $exp_va = explode('|', $final_val);
                    if ($exp_va[1] != "") {
                        if (is_numeric($exp_va[1])) {
                            for ($i = 0;$i < $count_arr;$i++) {
                                $mul_sql = "SELECT " . $fetch_value[$i] . " FROM `" . $Id_table[$i] . "` WHERE `" . $fetch_columns[$i] . "`=" . $exp_va[1] . "";
                                // echo "<br>";
                                $STH2 = $DBH->query($mul_sql);
                                if ($STH2->rowCount() > 0) {
                                    while ($row2 = $STH2->fetch(PDO::FETCH_ASSOC)) {
                                        $option_str.= '<option  value="' . $final_val . '">' . stripslashes($row2[$fetch_value[$i]]) . '</option>';
                                    }
                                }
                            }
                        }
                        else
                        {
                            $option_str.= '<option  value="' . $final_val . '">' . stripslashes($exp_va[1]) . '</option>';
                        }
                    }

            }

        }
        return $option_str;
    }
    //new function keywords by ample for (add date conditions) 02-04-20
    public function getRecordData($record,$datetype,$date_arr) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $sql = "SELECT * FROM `tbl_recordshow_dropdown` WHERE `uniqu_id` ='" . $record . "' AND `pag_cat_status`=1 AND `is_deleted`=0";
        $STH = $DBH->query($sql);
        $row = $STH->fetch(PDO::FETCH_ASSOC);
        $getcolums = "SELECT * FROM  `tblcolumndetails` WHERE `uniqu_m_id`='" . $record . "' AND `col_query_order`=1 AND `col_query_field`='Yes'";
        $STH2 = $DBH->query($getcolums);
        if ($STH2->rowCount() > 0) {
            while ($row2 = $STH2->fetch(PDO::FETCH_ASSOC)) {
                $colums[] = $row2['col_name'];
                $Id_table[] = $row2['Id_table'];
                $fetch_columns[] = $row2['fetch_columns'];
                $fetch_value[] = $row2['fetch_value'];
            }
        }
        $col_name = $this->table_colums($row['table_name']);
        foreach ($col_name as $col_vali) {
            $colnameshow[] = $col_vali['column_name'];
        }
        $query_date = $this->getquerydata($record);
        $data=array();
        $colums_str = implode(',', $colums);
        if (in_array('user_id', $colnameshow)) 
        {
            //update for vendor side
            if(isset($_SESSION['adm_vendor_id']))
            {
                $session = " AND `user_id`=" . $_SESSION['adm_user_id'];
            }
            else
            {
                $session = " AND `user_id`=" . $_SESSION['user_id'];
            }
            
        }
        else
        {
            $session = "";
        }
        if ($datetype == "date_range") {

            $startdate = date('Y-m-d', strtotime($date_arr[0]));
            $enddate = date('Y-m-d', strtotime($date_arr[1]));
            $rangedate = $this->getDatesFromRangeKR($startdate, $enddate, $format = 'Y-m-d');

                foreach ($rangedate as $per_Date) {

                       $sql1 = "SELECT " . $colums_str . " FROM `" . $row['table_name'] . "` WHERE DATE_FORMAT(" . $query_date . ",'%Y-%m-%d') = '" . $per_Date . "' " . $session. "";
                        $STH1 = $DBH->query($sql1);
                        if ($STH1->rowCount() > 0) {
                            while ($row1 = $STH1->fetch(PDO::FETCH_ASSOC)) {
                                $data[] = $row1;
                            }
                        }
                }
        }
        else
        {
              
            if ($datetype == "single_date") {

                $single_date = date('Y-m-d', strtotime($date_arr[0]));

                $sql1 = "SELECT " . $colums_str . " FROM `" . $row['table_name'] . "` WHERE  DATE_FORMAT(" . $query_date . ",'%Y-%m-%d') = '" . $single_date . "' " . $session. "";

            } elseif ($datetype == "month_wise") {

                $months = $date_arr[0];
                $years = $date_arr[1];
                $month_year = $years . '-' . sprintf("%02d", $months);

                $sql1 = "SELECT " . $colums_str . " FROM `" . $row['table_name'] . "` WHERE DATE_FORMAT(" . $query_date . ",'%Y-%m') = '" . $month_year . "' " . $session. "";

            } elseif ($datetype == "days_of_week") {

                $days_weeks = $date_arr[0];
                $years = $date_arr[1];
                $weekdate = implode(",",$days_weeks);

                $sql1 = "SELECT " . $colums_str . " FROM `" . $row['table_name'] . "` WHERE DAYOFWEEK(DATE_FORMAT(" . $query_date . ",'%Y-%m-%d')) IN (" . $weekdate . ") AND DATE_FORMAT(" . $query_date . ",'%Y')='" . $years . "' " . $session. "";

            } elseif ($datetype == "days_of_month") {

                $days_months = $date_arr[0];
                $years = $date_arr[1];
                $array_month=array();
                foreach ($days_months as $month) {
                    $array_month[]=sprintf("%02d", $month);
                }
                $monthsdate=implode(",",$array_month);
                $sql1 = "SELECT " . $colums_str . " FROM `" . $row['table_name'] . "` WHERE DATE_FORMAT(" . $query_date . ",'%d') IN (" . $monthsdate . ") AND DATE_FORMAT(" . $query_date . ",'%Y')='" . $years . "' " . $session. "";

            }
            $STH1 = $DBH->query($sql1);
            if ($STH1->rowCount() > 0) {
                while ($row1 = $STH1->fetch(PDO::FETCH_ASSOC)) {
                    $data[] = $row1;
                }
            }
            
        }
        if(!empty($data))
        { 
            foreach ($data as $value) {
                foreach ($colums as $col) {
                    $get_arr[] = $col . '|' . $value[$col];
                }
            }
            $get_uniqu = array_values(array_unique($get_arr));
            $count_arr = count($Id_table);
            foreach ($get_uniqu as $final_val) {
                $exp_va = explode('|', $final_val);
                    if ($exp_va[1] != "") {
                        if (is_numeric($exp_va[1])) {
                            for ($i = 0;$i < $count_arr;$i++) {
                                $mul_sql = "SELECT " . $fetch_value[$i] . " FROM `" . $Id_table[$i] . "` WHERE `" . $fetch_columns[$i] . "`=" . $exp_va[1] . "";
                                // echo "<br>";
                                $STH2 = $DBH->query($mul_sql);
                                if ($STH2->rowCount() > 0) {
                                    while ($row2 = $STH2->fetch(PDO::FETCH_ASSOC)) {
                                        if(!empty($row2[$fetch_value[$i]]))
                                        {
                                            $option_str.= '<option  value="' . $final_val . '">' . stripslashes($row2[$fetch_value[$i]]) . '</option>'; 
                                        }
                                       
                                    }
                                }
                            }
                        }
                        else
                        {
                            $option_str.= '<option  value="' . $final_val . '">' . stripslashes($exp_va[1]) . '</option>';
                        }
                    }
            }
        }
        return $option_str;
    }
    //old function Criteria 1
    public function getRecordDataCriteria_OLD($record) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $sql = "SELECT * FROM `tbl_recordshow_dropdown` WHERE `uniqu_id` ='" . $record . "'AND`pag_cat_status`=1 AND `is_deleted`=0";
        $STH = $DBH->query($sql);
        $row = $STH->fetch(PDO::FETCH_ASSOC);
        $getcolums = "SELECT * FROM  `tblcolumndetails` WHERE `uniqu_m_id`='" . $record . "' AND `col_query_order`=2 AND `col_query_field`='Yes'";
        $STH2 = $DBH->query($getcolums);
        if ($STH2->rowCount() > 0) {
            while ($row2 = $STH2->fetch(PDO::FETCH_ASSOC)) {
                $colums[] = $row2['col_name'];
                $Id_table[] = $row2['Id_table'];
                $fetch_columns[] = $row2['fetch_columns'];
                $fetch_value[] = $row2['fetch_value'];
            }
        }
        // echo "<pre>";print_r($Id_table);echo "<pre>";
        // exit;
        $col_name = $this->table_colums($row['table_name']);
        foreach ($col_name as $col_vali) {
            $colnameshow[] = $col_vali['column_name'];
        }
        $colums_str = implode(',', $colums);
        if (in_array('user_id', $colnameshow)) {
            $sql1 = "SELECT " . $colums_str . " FROM `" . $row['table_name'] . "` WHERE `user_id`=" . $_SESSION['user_id'] . "";
        } else {
            $sql1 = "SELECT " . $colums_str . " FROM `" . $row['table_name'] . "`";
        }
        $STH1 = $DBH->query($sql1);
        if ($STH1->rowCount() > 0) {
            while ($row1 = $STH1->fetch(PDO::FETCH_ASSOC)) {
                $data[] = $row1;
            }
            foreach ($data as $arrr_val) {
                foreach ($colums as $col) {
                    $arr[$col][] = $arrr_val[$col];
                }
            }
            foreach ($colums as $uni_col1) {
                $get_arr1 = array_values(array_unique($arr[$uni_col1]));
                foreach ($get_arr1 as $final_show1) {
                    $get_str1[] = $uni_col1 . '::::' . $final_show1;
                }
            }
            $count_arr = count($Id_table);
            foreach ($get_str1 as $val_id) {
                $sapreate_value = explode('::::', $val_id);
                if ($sapreate_value[1] != "") {
                    if (is_numeric($sapreate_value[1])) {
                        if ($sapreate_value[1] != "") {
                            for ($i = 0;$i < $count_arr;$i++) {
                                $mul_sql = "SELECT " . $fetch_value[$i] . " FROM `" . $Id_table[$i] . "` WHERE `" . $fetch_columns[$i] . "`=" . $sapreate_value[1] . "";
                                // echo "<br>";
                                $STH2 = $DBH->query($mul_sql);
                                if ($STH2->rowCount() > 0) {
                                    while ($row2 = $STH2->fetch(PDO::FETCH_ASSOC)) {
                                        $data_id_value[] = $val_id . '::::' . $row2[$fetch_value[$i]];
                                    }
                                }
                            }
                        }
                    } else {
                        foreach ($colums as $uni_col) {
                            $get_arr = array_values(array_unique($arr[$uni_col]));
                            foreach ($get_arr as $final_show) {
                                $data_id_value[] = $uni_col . '::::NULL::::' . $final_show;
                            }
                        }
                    }
                }
            }
            // ---
            $get_str = array_values(array_unique($data_id_value));
            foreach ($get_str as $final) {
                $saprate = explode('::::', $final);
                $option_str.= '<option data-value="' . $saprate[0] . '" data-id="' . $saprate[1] . '" value="' . stripslashes($saprate[2]) . '" >' . stripslashes($saprate[2]) . '</option>';
            }
            // echo "<pre>";print_r($get_uniqu_value);echo "</pre>";
            // foreach($colums as $uni_col)
            // {
            // 	$get_arr=array_values(array_unique($arr[$uni_col]));
            // 	  foreach($get_arr as $final_show)
            // 	  {
            // 	  	$get_str[]=$uni_col.':::'.$final_show;
            // 	  }
            // }
            // echo "<pre>";print_r($get_str);echo "</pre>";
            // foreach($data as $value)
            // {
            // 	  foreach($colums as $col)
            // 	  {
            //           array_push($arr,stripslashes($value[$col]));
            // 	  	$option_str .= '<option data-value="'.$col.'" value="'.stripslashes($value[$col]).'" >'.stripslashes($value[$col]).'</option>';
            // 	  }
            // }
            
        }
        return $option_str;
    }
    //new function for criteria 1 by ample 01-04-20
    public function getRecordDataCriteria($record,$keywords,$datetype,$date_arr) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $sql = "SELECT * FROM `tbl_recordshow_dropdown` WHERE `uniqu_id` ='" . $record . "'AND`pag_cat_status`=1 AND `is_deleted`=0";
        $STH = $DBH->query($sql);
        $row = $STH->fetch(PDO::FETCH_ASSOC);
        $getcolums = "SELECT * FROM  `tblcolumndetails` WHERE `uniqu_m_id`='" . $record . "' AND `col_query_order`=2 AND `col_query_field`='Yes'";
        $STH2 = $DBH->query($getcolums);
        if ($STH2->rowCount() > 0) {
            while ($row2 = $STH2->fetch(PDO::FETCH_ASSOC)) {
                $colums[] = $row2['col_name'];
                $Id_table[] = $row2['Id_table'];
                $fetch_columns[] = $row2['fetch_columns'];
                $fetch_value[] = $row2['fetch_value'];
            }
        }
        $col_name = $this->table_colums($row['table_name']);
        foreach ($col_name as $col_vali) {
            $colnameshow[] = $col_vali['column_name'];
        }
        $query_date = $this->getquerydata($record);
        $data=array();
        $colums_str = implode(',', $colums);
        if (in_array('user_id', $colnameshow)) 
        {
            if(isset($_SESSION['adm_vendor_id']))
            {
                $session = " AND `user_id`=" . $_SESSION['adm_user_id'];
            }
            else
            {
                $session = " AND `user_id`=" . $_SESSION['user_id'];
            }
        }
        else
        {
            $session = "";
        }
        if ($datetype == "date_range") {

            $startdate = date('Y-m-d', strtotime($date_arr[0]));
            $enddate = date('Y-m-d', strtotime($date_arr[1]));
            $rangedate = $this->getDatesFromRangeKR($startdate, $enddate, $format = 'Y-m-d');

                foreach ($rangedate as $per_Date) {

                    foreach ($keywords as $key_val) 
                    {   
                        $key_name = explode('|', $key_val);
                        $sql1 = "SELECT " . $colums_str . " FROM `" . $row['table_name'] . "` WHERE " . $key_name[0] . " = '" . addslashes($key_name[1]) . "' AND DATE_FORMAT(" . $query_date . ",'%Y-%m-%d') = '" . $per_Date . "' " . $session. "";
                        $STH1 = $DBH->query($sql1);
                        if ($STH1->rowCount() > 0) {
                            while ($row1 = $STH1->fetch(PDO::FETCH_ASSOC)) {
                                $data[] = $row1;
                            }
                        }

                    }

                }
        }
        else
        {
            foreach ($keywords as $key_val) 
            {   
                $key_name = explode('|', $key_val);
                if ($datetype == "single_date") {

                    $single_date = date('Y-m-d', strtotime($date_arr[0]));

                    $sql1 = "SELECT " . $colums_str . " FROM `" . $row['table_name'] . "` WHERE " . $key_name[0] . " = '" . addslashes($key_name[1]) . "' AND DATE_FORMAT(" . $query_date . ",'%Y-%m-%d') = '" . $single_date . "' " . $session. "";

                } elseif ($datetype == "month_wise") {

                    $months = $date_arr[0];
                    $years = $date_arr[1];
                    $month_year = $years . '-' . sprintf("%02d", $months);

                    $sql1 = "SELECT " . $colums_str . " FROM `" . $row['table_name'] . "` WHERE " . $key_name[0] . " = '" . addslashes($key_name[1]) . "' AND DATE_FORMAT(" . $query_date . ",'%Y-%m') = '" . $month_year . "' " . $session. "";

                } elseif ($datetype == "days_of_week") {

                    $days_weeks = $date_arr[0];
                    $years = $date_arr[1];
                    $weekdate = implode(",",$days_weeks);

                    $sql1 = "SELECT " . $colums_str . " FROM `" . $row['table_name'] . "` WHERE " . $key_name[0] . " = '" . addslashes($key_name[1]) . "' AND DAYOFWEEK(DATE_FORMAT(" . $query_date . ",'%Y-%m-%d')) IN (" . $weekdate . ") AND DATE_FORMAT(" . $query_date . ",'%Y')='" . $years . "' " . $session. "";

                } elseif ($datetype == "days_of_month") {

                    $days_months = $date_arr[0];
                    $years = $date_arr[1];
                    $array_month=array();
                    foreach ($days_months as $month) {
                        $array_month[]=sprintf("%02d", $month);
                    }
                    $monthsdate=implode(",",$array_month);
                    $sql1 = "SELECT " . $colums_str . " FROM `" . $row['table_name'] . "` WHERE " . $key_name[0] . " = '" . addslashes($key_name[1]) . "' AND DATE_FORMAT(" . $query_date . ",'%d') IN (" . $monthsdate . ") AND DATE_FORMAT(" . $query_date . ",'%Y')='" . $years . "' " . $session. "";

                }

                $STH1 = $DBH->query($sql1);
                if ($STH1->rowCount() > 0) {
                    while ($row1 = $STH1->fetch(PDO::FETCH_ASSOC)) {
                        $data[] = $row1;
                    }
                }
            }

        }
        //echo '<pre>';print_r($data); die('-dgdg');
        if(!empty($data)){
            foreach ($data as $arrr_val) {
                foreach ($colums as $col) {
                    $arr[$col][] = $arrr_val[$col];
                }
            }
            foreach ($colums as $uni_col1) {
                $get_arr1 = array_values(array_unique($arr[$uni_col1]));
                foreach ($get_arr1 as $final_show1) {
                    $get_str1[] = $uni_col1 . '::::' . $final_show1;
                }
            }
            $count_arr = count($Id_table);
            foreach ($get_str1 as $val_id) {
                $sapreate_value = explode('::::', $val_id);
                if ($sapreate_value[1] != "") {
                    if (is_numeric($sapreate_value[1])) {
                        if ($sapreate_value[1] != "") {
                            for ($i = 0;$i < $count_arr;$i++) {
                                $mul_sql = "SELECT " . $fetch_value[$i] . " FROM `" . $Id_table[$i] . "` WHERE `" . $fetch_columns[$i] . "`=" . $sapreate_value[1] . "";
                                // echo "<br>";
                                $STH2 = $DBH->query($mul_sql);
                                if ($STH2->rowCount() > 0) {
                                    while ($row2 = $STH2->fetch(PDO::FETCH_ASSOC)) {
                                        $data_id_value[] = $val_id . '::::' . $row2[$fetch_value[$i]];
                                    }
                                }
                            }
                        }
                    } else {
                        foreach ($colums as $uni_col) {
                            $get_arr = array_values(array_unique($arr[$uni_col]));
                            foreach ($get_arr as $final_show) {
                                $data_id_value[] = $uni_col . '::::NULL::::' . $final_show;
                            }
                        }
                    }
                }
            }
            $get_str = array_values(array_unique($data_id_value));
            foreach ($get_str as $final) {
                $saprate = explode('::::', $final);
                $option_str.= '<option data-value="' . $saprate[0] . '" data-id="' . $saprate[1] . '" value="' . stripslashes($saprate[2]) . '" >' . stripslashes($saprate[2]) . '</option>';
            }
            
        }
        return $option_str;
    }
     //new function for criteria 2 by ample 01-04-20
    public function getRecordData_sub_Criteria($record,$keywords,$datetype,$date_arr) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $sql = "SELECT * FROM `tbl_recordshow_dropdown` WHERE `uniqu_id` ='" . $record . "'AND`pag_cat_status`=1 AND `is_deleted`=0";
        $STH = $DBH->query($sql);
        $row = $STH->fetch(PDO::FETCH_ASSOC);
        $getcolums = "SELECT * FROM  `tblcolumndetails` WHERE `uniqu_m_id`='" . $record . "' AND `col_query_order`=3 AND `col_query_field`='Yes'";
        $STH2 = $DBH->query($getcolums);
        if ($STH2->rowCount() > 0) {
            while ($row2 = $STH2->fetch(PDO::FETCH_ASSOC)) {
                $colums[] = $row2['col_name'];
                $Id_table[] = $row2['Id_table'];
                $fetch_columns[] = $row2['fetch_columns'];
                $fetch_value[] = $row2['fetch_value'];
            }
        }
        $col_name = $this->table_colums($row['table_name']);
        foreach ($col_name as $col_vali) {
            $colnameshow[] = $col_vali['column_name'];
        }
        $query_date = $this->getquerydata($record);
        $data=array();
        $colums_str = implode(',', $colums);
        if (in_array('user_id', $colnameshow)) 
        {
           if(isset($_SESSION['adm_vendor_id']))
            {
                $session = " AND `user_id`=" . $_SESSION['adm_user_id'];
            }
            else
            {
                $session = " AND `user_id`=" . $_SESSION['user_id'];
            }
        }
        else
        {
            $session = "";
        }
        if ($datetype == "date_range") {

            $startdate = date('Y-m-d', strtotime($date_arr[0]));
            $enddate = date('Y-m-d', strtotime($date_arr[1]));
            $rangedate = $this->getDatesFromRangeKR($startdate, $enddate, $format = 'Y-m-d');

                foreach ($rangedate as $per_Date) {

                    foreach ($keywords as $key_val) 
                    {   
                        $key_name = explode('|', $key_val);
                        $sql1 = "SELECT " . $colums_str . " FROM `" . $row['table_name'] . "` WHERE " . $key_name[0] . " = '" . addslashes($key_name[1]) . "' AND DATE_FORMAT(" . $query_date . ",'%Y-%m-%d') = '" . $per_Date . "' " . $session. "";
                        $STH1 = $DBH->query($sql1);
                        if ($STH1->rowCount() > 0) {
                            while ($row1 = $STH1->fetch(PDO::FETCH_ASSOC)) {
                                $data[] = $row1;
                            }
                        }

                    }

                }
        }
        else
        {
            foreach ($keywords as $key_val) 
            {   
                $key_name = explode('|', $key_val);
                if ($datetype == "single_date") {

                    $single_date = date('Y-m-d', strtotime($date_arr[0]));

                    $sql1 = "SELECT " . $colums_str . " FROM `" . $row['table_name'] . "` WHERE " . $key_name[0] . " = '" . addslashes($key_name[1]) . "' AND DATE_FORMAT(" . $query_date . ",'%Y-%m-%d') = '" . $single_date . "' " . $session. "";

                } elseif ($datetype == "month_wise") {

                    $months = $date_arr[0];
                    $years = $date_arr[1];
                    $month_year = $years . '-' . sprintf("%02d", $months);

                    $sql1 = "SELECT " . $colums_str . " FROM `" . $row['table_name'] . "` WHERE " . $key_name[0] . " = '" . addslashes($key_name[1]) . "' AND DATE_FORMAT(" . $query_date . ",'%Y-%m') = '" . $month_year . "' " . $session. "";

                } elseif ($datetype == "days_of_week") {

                    $days_weeks = $date_arr[0];
                    $years = $date_arr[1];
                    $weekdate = implode(",",$days_weeks);

                    $sql1 = "SELECT " . $colums_str . " FROM `" . $row['table_name'] . "` WHERE " . $key_name[0] . " = '" . addslashes($key_name[1]) . "' AND DAYOFWEEK(DATE_FORMAT(" . $query_date . ",'%Y-%m-%d')) IN (" . $weekdate . ") AND DATE_FORMAT(" . $query_date . ",'%Y')='" . $years . "' " . $session. "";

                } elseif ($datetype == "days_of_month") {

                    $days_months = $date_arr[0];
                    $years = $date_arr[1];
                    $array_month=array();
                    foreach ($days_months as $month) {
                        $array_month[]=sprintf("%02d", $month);
                    }
                    $monthsdate=implode(",",$array_month);
                    $sql1 = "SELECT " . $colums_str . " FROM `" . $row['table_name'] . "` WHERE " . $key_name[0] . " = '" . addslashes($key_name[1]) . "' AND DATE_FORMAT(" . $query_date . ",'%d') IN (" . $monthsdate . ") AND DATE_FORMAT(" . $query_date . ",'%Y')='" . $years . "' " . $session. "";

                }

                $STH1 = $DBH->query($sql1);
                if ($STH1->rowCount() > 0) {
                    while ($row1 = $STH1->fetch(PDO::FETCH_ASSOC)) {
                        $data[] = $row1;
                    }
                }
            }

        }
        //echo '<pre>';print_r($data); die('-dgdg');
        if(!empty($data)){
            foreach ($data as $arrr_val) {
                foreach ($colums as $col) {
                    $arr[$col][] = $arrr_val[$col];
                }
            }
            foreach ($colums as $uni_col1) {
                $get_arr1 = array_values(array_unique($arr[$uni_col1]));
                foreach ($get_arr1 as $final_show1) {
                    $get_str1[] = $uni_col1 . '::::' . $final_show1;
                }
            }
            $count_arr = count($Id_table);
            foreach ($get_str1 as $val_id) {
                $sapreate_value = explode('::::', $val_id);
                if ($sapreate_value[1] != "") {
                    if (is_numeric($sapreate_value[1])) {
                        if ($sapreate_value[1] != "") {
                            for ($i = 0;$i < $count_arr;$i++) {
                                $mul_sql = "SELECT " . $fetch_value[$i] . " FROM `" . $Id_table[$i] . "` WHERE `" . $fetch_columns[$i] . "`=" . $sapreate_value[1] . "";
                                // echo "<br>";
                                $STH2 = $DBH->query($mul_sql);
                                if ($STH2->rowCount() > 0) {
                                    while ($row2 = $STH2->fetch(PDO::FETCH_ASSOC)) {
                                        $data_id_value[] = $val_id . '::::' . $row2[$fetch_value[$i]];
                                    }
                                }
                            }
                        }
                    } else {
                        foreach ($colums as $uni_col) {
                            $get_arr = array_values(array_unique($arr[$uni_col]));
                            foreach ($get_arr as $final_show) {
                                $data_id_value[] = $uni_col . '::::NULL::::' . $final_show;
                            }
                        }
                    }
                }
            }
            $get_str = array_values(array_unique($data_id_value));
            foreach ($get_str as $final) {
                $saprate = explode('::::', $final);
                $option_str.= '<option data-value="' . $saprate[0] . '" data-id="' . $saprate[1] . '" value="' . stripslashes($saprate[2]) . '" >' . stripslashes($saprate[2]) . '</option>';
            }
            
        }
        return $option_str;
    }
    //old function criteria 2
    public function getRecordData_sub_Criteria_old($record) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $sql = "SELECT * FROM `tbl_recordshow_dropdown` WHERE `uniqu_id` ='" . $record . "'AND`pag_cat_status`=1 AND `is_deleted`=0";
        $STH = $DBH->query($sql);
        $row = $STH->fetch(PDO::FETCH_ASSOC);
        $getcolums = "SELECT * FROM  `tblcolumndetails` WHERE `uniqu_m_id`='" . $record . "' AND `col_query_order`=3 AND `col_query_field`='Yes'";
        $STH2 = $DBH->query($getcolums);
        if ($STH2->rowCount() > 0) {
            while ($row2 = $STH2->fetch(PDO::FETCH_ASSOC)) {
                $colums[] = $row2['col_name'];
                $Id_table[] = $row2['Id_table'];
                $fetch_columns[] = $row2['fetch_columns'];
                $fetch_value[] = $row2['fetch_value'];
            }
        }
        $col_name = $this->table_colums($row['table_name']);
        foreach ($col_name as $col_vali) {
            $colnameshow[] = $col_vali['column_name'];
        }
        $colums_str = implode(',', $colums);
        if (in_array('user_id', $colnameshow)) {
            $sql1 = "SELECT " . $colums_str . " FROM `" . $row['table_name'] . "` WHERE `user_id`=" . $_SESSION['user_id'] . "";
        } else {
            $sql1 = "SELECT " . $colums_str . " FROM `" . $row['table_name'] . "`";
        }
        // --
        $STH1 = $DBH->query($sql1);
        if ($STH1->rowCount() > 0) {
            while ($row1 = $STH1->fetch(PDO::FETCH_ASSOC)) {
                $data[] = $row1;
            }
            foreach ($data as $arrr_val) {
                foreach ($colums as $col) {
                    $arr[$col][] = $arrr_val[$col];
                }
            }
            // echo "<pre>";print_r($arr);echo "</pre>";
            // foreach($colums as $uni_col)
            // {
            // 	$get_arr=array_values(array_unique($arr[$uni_col]));
            // 	  foreach($get_arr as $final_show)
            // 	  {
            // 	  	$get_str[]=$uni_col.':::'.$final_show;
            // 	  }
            // }
            foreach ($colums as $uni_col1) {
                $get_arr1 = array_values(array_unique($arr[$uni_col1]));
                foreach ($get_arr1 as $final_show1) {
                    $get_str1[] = $uni_col1 . '::::' . $final_show1;
                }
            }
            $count_arr = count($Id_table);
            foreach ($get_str1 as $val_id) {
                $sapreate_value = explode('::::', $val_id);
                if ($sapreate_value[1] != "") {
                    if (is_numeric($sapreate_value[1])) {
                        if ($sapreate_value[1] != "") {
                            for ($i = 0;$i < $count_arr;$i++) {
                                $mul_sql = "SELECT " . $fetch_value[$i] . " FROM `" . $Id_table[$i] . "` WHERE `" . $fetch_columns[$i] . "`=" . $sapreate_value[1] . "";
                                $STH2 = $DBH->query($mul_sql);
                                if ($STH2->rowCount() > 0) {
                                    while ($row2 = $STH2->fetch(PDO::FETCH_ASSOC)) {
                                        $data_id_value[] = $val_id . '::::' . $row2[$fetch_value[$i]];
                                    }
                                }
                            }
                            // echo "<pre>";print_r($data_id_value);echo "</pre>";
                            
                        }
                    } else {
                        foreach ($colums as $uni_col) {
                            $get_arr = array_values(array_unique($arr[$uni_col]));
                            foreach ($get_arr as $final_show) {
                                $data_id_value[] = $uni_col . '::::NULL::::' . $final_show;
                            }
                        }
                    }
                }
            }
            $get_str = array_values(array_unique($data_id_value));
            foreach ($get_str as $final) {
                $saprate = explode('::::', $final);
                $option_str.= '<option data-value="' . $saprate[0] . '" data-id="' . $saprate[1] . '" value="' . stripslashes($saprate[2]) . '" >' . stripslashes($saprate[2]) . '</option>';
            }
            // foreach($get_str as $final)
            // {
            // 	$saprate=explode(':::', $final);
            //    $option_str .= '<option data-value="'.$saprate[0].'" value="'.stripslashes($saprate[1]).'" >'.stripslashes($saprate[1]).'</option>';
            // }
            // foreach($data as $value)
            // {
            // 	  foreach($colums as $col)
            // 	  {
            // 	  	$option_str .= '<option data-value="'.$col.'" value="'.stripslashes($value[$col]).'" >'.stripslashes($value[$col]).'</option>';
            // 	  }
            // }
            
        }
        return $option_str;
    }
    public function getRecordData_parameters($record) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $sql = "SELECT * FROM `tbl_recordshow_dropdown` WHERE `uniqu_id` ='" . $record . "'AND `pag_cat_status`=1 AND `is_deleted`=0";
        $STH = $DBH->query($sql);
        $row = $STH->fetch(PDO::FETCH_ASSOC);
        $getcolums = "SELECT * FROM  `tblcolumndetails` WHERE `uniqu_m_id`='" . $record . "' AND `col_query_order`=4 AND `col_query_field`='Yes'";
        $STH2 = $DBH->query($getcolums);
        if ($STH2->rowCount() > 0) {
            while ($row2 = $STH2->fetch(PDO::FETCH_ASSOC)) {
                $colums[] = $row2['col_report_label'];
            }
        }
        // echo "<pre>";print_r($colums);echo "</pre>";
        // $col_name=$this->table_colums($row['table_name']);
        // foreach($col_name as $col_vali)
        // {
        // 	$colnameshow[]=$col_vali['column_name'];
        // }
        // $colums_str=implode(',', $colums);
        // if(in_array('user_id',$colnameshow))
        // {
        // 	$sql1 = "SELECT ".$colums_str." FROM `".$row['table_name']."` WHERE `user_id`=".$_SESSION['user_id']."";
        // }
        // else
        // {
        //    $sql1 = "SELECT ".$colums_str." FROM `".$row['table_name']."`";
        // }
        // $STH1 = $DBH->query($sql1);
        // if($STH1->rowCount()>0)
        //  {
        // while($row1 = $STH1->fetch(PDO::FETCH_ASSOC))
        // {
        //    $data[]=$row1;
        // }
        //   foreach($data as $arrr_val)
        //   {
        //    foreach($colums as $col)
        //   {
        //        $arr[$col][]=$arrr_val[$col];
        //       }
        //   }
        // foreach($colums as $uni_col)
        // {
        // 	$get_arr=array_values(array_unique($arr[$uni_col]));
        // 	  foreach($get_arr as $final_show)
        // 	  {
        // 	  	$get_str[]=$uni_col.':::'.$final_show;
        // 	  }
        // }
        foreach ($colums as $final) {
            $option_str.= '<option  value="' . stripslashes($final) . '" >' . stripslashes($final) . '</option>';
        }
        // }
        return $option_str;
    }
    //--------------------------------------------------------------------------------------------------------
    //------------------------------------------------------------------------------------------------------
    public function getquerydata($uniq) {
        $DBH = new DatabaseHandler();
        $select_sql_col = "SELECT `col_name` FROM `tblcolumndetails` WHERE `uniqu_m_id` = '" . $uniq . "' AND `col_query_field`='Yes' AND `col_query_combo`='query_date'";
        $STH1 = $DBH->query($select_sql_col);
        //print_r($STH1);
        // if($STH1->rowCount()>0)
        // {
        $row_col = $STH1->fetch(PDO::FETCH_ASSOC);
        $data = $row_col['col_name'];
        // echo "<pre>";print_r($data);echo "</pre>";
        // exit;
        //}
        return $data;
    }
    //update by ample
    public function userReportDetails($date_arr, $datetype, $reportname_id, $keyword, $criteria_col, $criteria_name, $scale_range, $criteria2_name, $criteria2_col, $last_parameter, $parameter_value1, $parameter_value2) {
        $DBH = new DatabaseHandler();
        $option_str = '';
        $split = explode(',', $reportname_id);
        $user_id = $split[1];
        $sql = "SELECT * FROM `tbl_recordshow_dropdown` WHERE `uniqu_id` ='" . $split[0] . "' AND `pag_cat_status`=1 AND `is_deleted`=0";
        $STH = $DBH->query($sql);
        $row = $STH->fetch(PDO::FETCH_ASSOC);
        $select_sql_col = "SELECT * FROM `tblcolumndetails` WHERE `uniqu_m_id` ='" . $split[0] . "' AND `col_report_feild`='Yes'";
        $STH1 = $DBH->query($select_sql_col);
    
        if ($STH1->rowCount() > 0) {
            while ($row_col = $STH1->fetch(PDO::FETCH_ASSOC)) {
                $data[] = $row_col;
            }
        }

        $arr_colums = array();
        $arr_rows=array();
        //add by ample 21-02-20
        $arr_MH = array();
        $arr_TK = array();

        // $arr_rows=array();
        foreach ($data as $collect_data) {
            if ($collect_data['col_row_col'] == 'Colums') {
                array_push($arr_colums, $collect_data);
            }
            elseif ($collect_data['col_row_col'] == 'MH') {
                 array_push($arr_MH, $collect_data);
             }
             elseif ($collect_data['col_row_col'] == 'TK') {
                 array_push($arr_TK, $collect_data);
             } else {
                array_push($arr_rows, $collect_data);
            }
        }

        // $row_array_value=$this->row_wise_report_name($arr_rows);
        //colume array------------------------------
        foreach ($arr_colums as $key => $final_val) {
            $sort[$key] = $final_val['col_report_order'];
        }
        array_multisort($sort, SORT_DESC, $arr_colums);
        $final_arr = array();
        foreach ($sort as $val_sort) {
            foreach ($arr_colums as $final) {
                if ($val_sort == $final['col_report_order']) {
                    array_push($final_arr, $final);
                }
            }
        }
        $reve_final_col = array_reverse($final_arr);
        foreach ($reve_final_col as $get_col_str) {
            $str_col[] = $get_col_str['col_name'];
        }

        $get_str = implode(',', $str_col);
        $query_date = $this->getquerydata($split[0]);

        // if(!empty($arr_TK))
        // {   
        //     foreach ($arr_TK as $get_TK_str) {
        //     $str_TK[] = $get_TK_str['col_name'];
        //     }
        //     $get_str_TK = implode(',', $str_TK);
        //     $get_str .= "," . $get_str_TK;
        // }
        

        //add by ample 23-03-30
        $other_labels=array('MH'=>$arr_MH,'TK'=>$arr_TK,'rows'=>$arr_rows);


        if(!empty($last_parameter))
        {   
            $param_array=array();
            foreach ($reve_final_col as $fkey => $fvalue) {
                if($fvalue['col_report_label']==$last_parameter)
                {
                    $param_array=$fvalue;
                }
            }
        }

        //all update by ample
        if ($datetype == "date_range") {
            $startdate = date('Y-m-d', strtotime($date_arr[0]));
            $enddate = date('Y-m-d', strtotime($date_arr[1]));
            $rangedate[] = $this->getDatesFromRangeKR($startdate, $enddate, $format = 'Y-m-d');
            $final_date = $this->getDateRangeData($keyword, $rangedate[0], $reve_final_col, $get_str, $row['table_name'], $criteria_col, $criteria_name, $criteria2_col,$criteria2_name, $datetype, $query_date, $user_id,$param_array['col_name'],$scale_range,$parameter_value1, $parameter_value2,$other_labels);
        } elseif ($datetype == "single_date") {
            $single_date = date('Y-m-d', strtotime($date_arr[0]));
            $final_date = $this->getSingleDateData($keyword, $single_date, $reve_final_col, $get_str, $row['table_name'], $criteria_col, $criteria_name, $criteria2_col,$criteria2_name, $datetype, $query_date, $user_id,$param_array['col_name'],$scale_range,$parameter_value1, $parameter_value2,$other_labels);
        } elseif ($datetype == "month_wise") {
            $months = $date_arr[0];
            $years = $date_arr[1];
            $final_date = $this->getMonthswiseData($keyword, $months, $years, $reve_final_col, $get_str, $row['table_name'], $criteria_col, $criteria_name,$criteria2_col,$criteria2_name, $datetype, $query_date, $user_id,$param_array['col_name'],$scale_range,$parameter_value1, $parameter_value2,$other_labels);
        } elseif ($datetype == "days_of_week") {
            $days_weeks = $date_arr[0];
            $years = $date_arr[1]; //add by ample 01-04-20
            // print_r($days_weeks); die();
            $final_date = $this->getDaysOfWeeksData($keyword, $days_weeks,$years, $reve_final_col, $get_str, $row['table_name'], $criteria_col, $criteria_name,$criteria2_col,$criteria2_name, $datetype, $query_date, $user_id,$param_array['col_name'],$scale_range,$parameter_value1, $parameter_value2,$other_labels);
        } elseif ($datetype == "days_of_month") {
            $days_months = $date_arr[0];
            $years = $date_arr[1]; //add by ample 01-04-20
            $final_date = $this->getDaysOfMonthsData($keyword, $days_months,$years, $reve_final_col, $get_str, $row['table_name'], $criteria_col, $criteria_name,$criteria2_col,$criteria2_name, $datetype, $query_date, $user_id,$param_array['col_name'],$scale_range,$parameter_value1, $parameter_value2,$other_labels);
        }
        // add by ample 23-3-20
        $final_date['heading']=$row['heading'];
        return $final_date;
    }
    //update by ample 13-03-20
    public function getDaysOfMonthsData($keyword, $days_months,$years, $reve_final_col, $get_str, $tblname, $criteria_col, $criteria_name,$criteria_col2, $criteria_name2, $datetype, $query_date, $user_id,$param_col,$scale_range,$parameter_value1, $parameter_value2,$other_labels) {
        $DBH = new DatabaseHandler();
         $criteria=$criteria2=$param=""; // add by ample 13-03-20
        if ($user_id != "") {
            //update by ample 06-04-20 for vendor side login
            if(isset($_SESSION['adm_vendor_id']))
            {
                $session = " AND `user_id`=" . $_SESSION['adm_user_id'];
            }
            else
            {
                $session = " AND `user_id`=" . $_SESSION['user_id'];
            }
        } else {
            $session = "";
        }
        // add by ample 13-03-20
        if(!empty($criteria_col) && !empty($criteria_name) )
        {
            $criteria=" AND " . $criteria_col . " = '" . addslashes($criteria_name)."'";
        }
        if(!empty($criteria_col2) && !empty($criteria_name2) )
        {
            $criteria2=" AND " . $criteria_col2 . " = '" . addslashes($criteria_name2)."'";
        }
        if(!empty($param_col) && !empty($scale_range))
        {
            if($scale_range==1) {
                $param=" AND " . $param_col . " < '" .$parameter_value1."'";
            }
            elseif ($scale_range==2) {
                $param=" AND " . $param_col . " > '" .$parameter_value1."'";
            }
            elseif ($scale_range==3) {
                $param=" AND " . $param_col . " <= '" .$parameter_value1."'";
            }
            elseif ($scale_range==4) {
                $param=" AND " . $param_col . " >= '" .$parameter_value1."'";
            }
            elseif ($scale_range==5) {
                $param=" AND " . $param_col . " = '" .$parameter_value1."'";
            }
            elseif ($scale_range==6) {
                $param=" AND (" . $param_col . " BETWEEN '" .$parameter_value1."' AND '" .$parameter_value2."')";
            }
        }
        //$monthsdate = sprintf("%02d", $days_months);
        $array_month=array();
        foreach ($days_months as $month) {
            $array_month[]=sprintf("%02d", $month);
        }
        $monthsdate=implode(",",$array_month);
        $data_arr[] = $datetype;
        $data_arr['col_name'] = $reve_final_col;
        foreach ($keyword as $key_val) {
            $key_name = explode('|', $key_val);
            $sql = "SELECT " . $get_str . " FROM " . $tblname . " WHERE " . $key_name[0] . " = '" . addslashes($key_name[1]) . "' " . $criteria . " " . $criteria2 . " AND DATE_FORMAT(" . $query_date . ",'%d') IN (" . $monthsdate . ") AND DATE_FORMAT(" . $query_date . ",'%Y')='" . $years . "' " . $session . " " . $param . " ";
            //print_r($sql); die('dsadsdsas');
            $row_arr = array();
            $STH = $DBH->query($sql);
            //print_r($STH); die;
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $row_arr[] = $row;
                }
            }
            //update by ample 23-03-30
                if (is_numeric($key_name[1])) 
                {
                    foreach ($other_labels['rows'] as $row) {
                       if($row['col_name']==$key_name[0])
                       {
                            $key_data=$this->dynamic_query_data($key_name[1],$row['Id_table'],$row['fetch_columns'],$row['fetch_value']);
                            $arr[]=array($key_data, $row_arr);
                       }
                    }
                }
                else
                {
                    $arr[] = array($key_name[1], $row_arr);
                }
        }
        $data_arr['other_labels'] = $other_labels;
        $data_arr['row_site'] = $arr;
        $final_date[$weekdate] = $data_arr;
        return $final_date;
    }
    public function getDaysOfMonthsData_OLD($keyword, $days_months, $reve_final_col, $get_str, $tblname, $criteria_col, $criteria_name,$criteria_col2, $criteria_name2, $datetype, $query_date, $user_id,$param_col,$scale_range,$parameter_value1, $parameter_value2,$other_labels) {
        $DBH = new DatabaseHandler();
         $criteria=$criteria2=$param=""; // add by ample 13-03-20
        if ($user_id != "") {
            //update by ample 06-04-20 for vendor side login
            if(isset($_SESSION['adm_vendor_id']))
            {
                $session = " AND `user_id`=" . $_SESSION['adm_user_id'];
            }
            else
            {
                $session = " AND `user_id`=" . $_SESSION['user_id'];
            }
        } else {
            $session = "";
        }
        // add by ample 13-03-20
        if(!empty($criteria_col) && !empty($criteria_name) )
        {
            $criteria=" AND " . $criteria_col . " = '" . addslashes($criteria_name)."'";
        }
        if(!empty($criteria_col2) && !empty($criteria_name2) )
        {
            $criteria2=" AND " . $criteria_col2 . " = '" . addslashes($criteria_name2)."'";
        }
        if(!empty($param_col) && !empty($scale_range))
        {
            if($scale_range==1) {
                $param=" AND " . $param_col . " < '" .$parameter_value1."'";
            }
            elseif ($scale_range==2) {
                $param=" AND " . $param_col . " > '" .$parameter_value1."'";
            }
            elseif ($scale_range==3) {
                $param=" AND " . $param_col . " <= '" .$parameter_value1."'";
            }
            elseif ($scale_range==4) {
                $param=" AND " . $param_col . " >= '" .$parameter_value1."'";
            }
            elseif ($scale_range==5) {
                $param=" AND " . $param_col . " = '" .$parameter_value1."'";
            }
            elseif ($scale_range==6) {
                $param=" AND (" . $param_col . " BETWEEN '" .$parameter_value1."' AND '" .$parameter_value2."')";
            }
        }
        //$monthsdate = sprintf("%02d", $days_months);
        $array_month=array();
        foreach ($days_months as $month) {
            $array_month[]=sprintf("%02d", $month);
        }
        $monthsdate=implode(",",$array_month);
        $data_arr[] = $datetype;
        $data_arr['col_name'] = $reve_final_col;
        foreach ($keyword as $key_val) {
            $key_name = explode('|', $key_val);
            $sql = "SELECT " . $get_str . " FROM " . $tblname . " WHERE " . $key_name[0] . " = '" . addslashes($key_name[1]) . "' " . $criteria . " " . $criteria2 . " AND DATE_FORMAT(" . $query_date . ",'%m') IN (" . $monthsdate . ") AND DATE_FORMAT(" . $query_date . ",'%Y')='" . date('Y') . "' " . $session . " " . $param . " ";
            //print_r($sql); die('dsadsdsas');
            $row_arr = array();
            $STH = $DBH->query($sql);
            //print_r($STH); die;
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $row_arr[] = $row;
                }
            }
            //update by ample 23-03-30
                if (is_numeric($key_name[1])) 
                {
                    foreach ($other_labels['rows'] as $row) {
                       if($row['col_name']==$key_name[0])
                       {
                            $key_data=$this->dynamic_query_data($key_name[1],$row['Id_table'],$row['fetch_columns'],$row['fetch_value']);
                            $arr[]=array($key_data, $row_arr);
                       }
                    }
                }
                else
                {
                    $arr[] = array($key_name[1], $row_arr);
                }
        }
        $data_arr['other_labels'] = $other_labels;
        $data_arr['row_site'] = $arr;
        $final_date[$weekdate] = $data_arr;
        return $final_date;
    }
    //update by ample 13-03-20
    public function getDaysOfWeeksData($keyword, $days_weeks,$years, $reve_final_col, $get_str, $tblname, $criteria_col, $criteria_name,$criteria_col2, $criteria_name2, $datetype, $query_date, $user_id,$param_col,$scale_range,$parameter_value1, $parameter_value2,$other_labels) {
        $DBH = new DatabaseHandler();
        $criteria=$criteria2=$param=""; // add by ample 13-03-20
        if ($user_id != "") {
            if(isset($_SESSION['adm_vendor_id']))
            {
                $session = " AND `user_id`=" . $_SESSION['adm_user_id'];
            }
            else
            {
                $session = " AND `user_id`=" . $_SESSION['user_id'];
            }
        } else {
            $session = "";
        }
        // add by ample 13-03-20
        if(!empty($criteria_col) && !empty($criteria_name) )
        {
            $criteria=" AND " . $criteria_col . " = '" . addslashes($criteria_name)."'";
        }
        if(!empty($criteria_col2) && !empty($criteria_name2) )
        {
            $criteria2=" AND " . $criteria_col2 . " = '" . addslashes($criteria_name2)."'";
        }
        if(!empty($param_col) && !empty($scale_range))
        {
            if($scale_range==1) {
                $param=" AND " . $param_col . " < '" .$parameter_value1."'";
            }
            elseif ($scale_range==2) {
                $param=" AND " . $param_col . " > '" .$parameter_value1."'";
            }
            elseif ($scale_range==3) {
                $param=" AND " . $param_col . " <= '" .$parameter_value1."'";
            }
            elseif ($scale_range==4) {
                $param=" AND " . $param_col . " >= '" .$parameter_value1."'";
            }
            elseif ($scale_range==5) {
                $param=" AND " . $param_col . " = '" .$parameter_value1."'";
            }
            elseif ($scale_range==6) {
                $param=" AND (" . $param_col . " BETWEEN '" .$parameter_value1."' AND '" .$parameter_value2."')";
            }
        }
        $weekdate = implode(",",$days_weeks);
        $data_arr[] = $datetype;
        $data_arr['col_name'] = $reve_final_col;
        // $month_year=$years.'-'.sprintf("%02d", $months);
        foreach ($keyword as $key_val) {
            $key_name = explode('|', $key_val);
            $sql = "SELECT " . $get_str . " FROM " . $tblname . " WHERE " . $key_name[0] . " = '" . addslashes($key_name[1]) . "' " . $criteria . " " . $criteria2 . " AND DAYOFWEEK(DATE_FORMAT(" . $query_date . ",'%Y-%m-%d')) IN (" . $weekdate . ") AND DATE_FORMAT(" . $query_date . ",'%Y')='" . $years . "' " . $session . " " . $param . " ";
            // print_r($sql); die('dsadsdsas');
            $row_arr = array();
            $STH = $DBH->query($sql);
            //print_r($STH); die('dsadas');
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $row_arr[] = $row;
                }
            }
            //update by ample 23-03-30
                if (is_numeric($key_name[1])) 
                {
                    foreach ($other_labels['rows'] as $row) {
                       if($row['col_name']==$key_name[0])
                       {
                            $key_data=$this->dynamic_query_data($key_name[1],$row['Id_table'],$row['fetch_columns'],$row['fetch_value']);
                            $arr[]=array($key_data, $row_arr);
                       }
                    }
                }
                else
                {
                    $arr[] = array($key_name[1], $row_arr);
                }
        }
        $data_arr['row_site'] = $arr;
        $data_arr['other_labels'] = $other_labels;
        $final_date[$weekdate] = $data_arr;
        return $final_date;
    }
    //update by ample 13-03-20
    public function getMonthswiseData($keyword, $months, $years, $reve_final_col, $get_str, $tblname, $criteria_col, $criteria_name,$criteria_col2, $criteria_name2, $datetype, $query_date, $user_id,$param_col,$scale_range,$parameter_value1, $parameter_value2,$other_labels) {
        $DBH = new DatabaseHandler();
        $criteria=$criteria2=$param=""; // add by ample 13-03-20
        if ($user_id != "") {
            //update by ample 06-04-20 for vendor side login
            if(isset($_SESSION['adm_vendor_id']))
            {
                $session = " AND `user_id`=" . $_SESSION['adm_user_id'];
            }
            else
            {
                $session = " AND `user_id`=" . $_SESSION['user_id'];
            }
        } else {
            $session = "";
        }
        // add by ample 13-03-20
        if(!empty($criteria_col) && !empty($criteria_name) )
        {
            $criteria=" AND " . $criteria_col . " = '" . addslashes($criteria_name)."'";
        }
        if(!empty($criteria_col2) && !empty($criteria_name2) )
        {
            $criteria2=" AND " . $criteria_col2 . " = '" . addslashes($criteria_name2)."'";
        }
        if(!empty($param_col) && !empty($scale_range))
        {
            if($scale_range==1) {
                $param=" AND " . $param_col . " < '" .$parameter_value1."'";
            }
            elseif ($scale_range==2) {
                $param=" AND " . $param_col . " > '" .$parameter_value1."'";
            }
            elseif ($scale_range==3) {
                $param=" AND " . $param_col . " <= '" .$parameter_value1."'";
            }
            elseif ($scale_range==4) {
                $param=" AND " . $param_col . " >= '" .$parameter_value1."'";
            }
            elseif ($scale_range==5) {
                $param=" AND " . $param_col . " = '" .$parameter_value1."'";
            }
            elseif ($scale_range==6) {
                $param=" AND (" . $param_col . " BETWEEN '" .$parameter_value1."' AND '" .$parameter_value2."')";
            }
        }
        $data_arr[] = $datetype;
        $data_arr['col_name'] = $reve_final_col;
        $month_year = $years . '-' . sprintf("%02d", $months);
        foreach ($keyword as $key_val) {
            $key_name = explode('|', $key_val);
            $sql = "SELECT " . $get_str . " FROM " . $tblname . " WHERE " . $key_name[0] . " = '" . addslashes($key_name[1]) . "' " . $criteria . " " . $criteria2 . " AND DATE_FORMAT(" . $query_date . ",'%Y-%m') = '" . $month_year . "' " . $session . " " . $param . " ";
            // echo "<br>";
            $row_arr = array();
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    // echo "<pre>";print_r($row);echo "<pre>";
                    $row_arr[] = $row;
                }
            }
            //update by ample 23-03-30

            if(!empty($row_arr))
            {
                 if (is_numeric($key_name[1])) 
                {
                    foreach ($other_labels['rows'] as $row) {
                       if($row['col_name']==$key_name[0])
                       {
                            $key_data=$this->dynamic_query_data($key_name[1],$row['Id_table'],$row['fetch_columns'],$row['fetch_value']);
                            $arr[]=array($key_data, $row_arr);
                       }
                    }
                }
                else
                {
                    $arr[] = array($key_name[1], $row_arr);
                }
            }
               
        }
        $data_arr['row_site'] = $arr;
        $data_arr['other_labels'] = $other_labels;
        $final_date[$month_year] = $data_arr;
        return $final_date;
    }
    //update by ample 11-03-20
    public function getSingleDateData($keyword, $singledate, $reve_final_col, $get_str, $tblname, $criteria_col, $criteria_name, $criteria_col2, $criteria_name2, $datetype, $query_date, $user_id,$param_col,$scale_range,$parameter_value1, $parameter_value2,$other_labels) {

        $DBH = new DatabaseHandler();
        $criteria=$criteria2=$param=""; // add by ample 11-03-20
        if ($user_id != "") {
            //update by ample 06-04-20 for vendor side login
            if(isset($_SESSION['adm_vendor_id']))
            {
                $session = " AND `user_id`=" . $_SESSION['adm_user_id'];
            }
            else
            {
                $session = " AND `user_id`=" . $_SESSION['user_id'];
            }
        } else {
            $session = "";
        }
        // add by ample 11-03-20
        if(!empty($criteria_col) && !empty($criteria_name) )
        {
            $criteria=" AND " . $criteria_col . " = '" . addslashes($criteria_name)."'";
        }
        if(!empty($criteria_col2) && !empty($criteria_name2) )
        {
            $criteria2=" AND " . $criteria_col2 . " = '" . addslashes($criteria_name2)."'";
        }
        if(!empty($param_col) && !empty($scale_range))
        {
            if($scale_range==1) {
                $param=" AND " . $param_col . " < '" .$parameter_value1."'";
            }
            elseif ($scale_range==2) {
                $param=" AND " . $param_col . " > '" .$parameter_value1."'";
            }
            elseif ($scale_range==3) {
                $param=" AND " . $param_col . " <= '" .$parameter_value1."'";
            }
            elseif ($scale_range==4) {
                $param=" AND " . $param_col . " >= '" .$parameter_value1."'";
            }
            elseif ($scale_range==5) {
                $param=" AND " . $param_col . " = '" .$parameter_value1."'";
            }
            elseif ($scale_range==6) {
                $param=" AND (" . $param_col . " BETWEEN '" .$parameter_value1."' AND '" .$parameter_value2."')";
            }
        }
        $data_arr[] = $datetype;
        $data_arr['other_labels'] = $other_labels;
        $data_arr['col_name'] = $reve_final_col;
        // $arr=array();
        foreach ($keyword as $key_val) {
            $key_name = explode('|', $key_val);
            // $data=$this->deferenttabledata($get_str,$tblname,$key_name[0],$key_name[1],$criteria_col,$criteria_name,$datetype,$query_date,$singledate);
            //coment by ample 11-03-20
            // $sql = "SELECT " . $get_str . " FROM " . $tblname . " WHERE " . $key_name[0] . " = '" . addslashes($key_name[1]) . "' AND " . $criteria_col . " = '" . addslashes($criteria_name) . "' AND DATE_FORMAT(" . $query_date . ",'%Y-%m-%d') = '" . $singledate . "' " . $session . "";
            //update by ample 11-03-20
            $sql = "SELECT " . $get_str . " FROM " . $tblname . " WHERE " . $key_name[0] . " = '" . addslashes($key_name[1]) . "' " . $criteria . " " . $criteria2 . " AND DATE_FORMAT(" . $query_date . ",'%Y-%m-%d') = '" . $singledate . "' " . $session . " " . $param . " ";
            // echo "<br>";
            // print_r($sql); die('lkdfnj');
            $row_arr = array();
            $STH = $DBH->query($sql);
            // print_r($STH); die('kldgjkd');
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $row_arr[] = $row;
                }
            }
            //update by ample 23-03-30
                if (is_numeric($key_name[1])) 
                {
                    foreach ($other_labels['rows'] as $row) {
                       if($row['col_name']==$key_name[0])
                       {
                            $key_data=$this->dynamic_query_data($key_name[1],$row['Id_table'],$row['fetch_columns'],$row['fetch_value']);
                            $arr[]=array($key_data, $row_arr);
                       }
                    }
                }
                else
                {
                    $arr[] = array($key_name[1], $row_arr);
                }
        }
        $data_arr['row_site'] = $arr;
        $final_date[$singledate] = $data_arr;
        // print_r($data_arr['row_site']); die();
        // exit;

        return $final_date;
    }
    //update by ample 11-03-20
    public function getDateRangeData($keyword, $rangedate, $reve_final_col, $get_str, $tblname, $criteria_col, $criteria_name, $criteria_col2, $criteria_name2, $datetype, $query_date, $user_id,$param_col,$scale_range,$parameter_value1, $parameter_value2,$other_labels) {
        $data_arr[] = $datetype;
        foreach ($rangedate as $per_Date) { 
            $data_arr['col_name'] = $reve_final_col;
            $arr = array();
            foreach ($keyword as $key_val) {
                $key_name = explode('|', $key_val);
                $data = $this->deferenttabledata($get_str, $tblname, $key_name[0], $key_name[1], $criteria_col, $criteria_name, $criteria_col2, $criteria_name2, $datetype, $query_date, $per_Date, $user_id,$param_col,$scale_range,$parameter_value1, $parameter_value2);
                // echo '<pre>';
                // print_r($data);
                // die('sff');
                if(!empty($data))
                {
                    //update by ample 23-03-30
                    if (is_numeric($key_name[1])) 
                    {
                        foreach ($other_labels['rows'] as $row) {
                           if($row['col_name']==$key_name[0])
                           {
                                $key_data=$this->dynamic_query_data($key_name[1],$row['Id_table'],$row['fetch_columns'],$row['fetch_value']);
                                $arr[]=array($key_data, $data);
                           }
                        }
                    }
                    else
                    {
                        $arr[] = array($key_name[1], $data);
                    }
                }
                
            }
            if(!empty($arr))
            {
                $data_arr['row_site'] = $arr;
                $data_arr['other_labels'] = $other_labels;
                $final_date[$per_Date] = $data_arr;
            }
        }
        return $final_date;
    }
    //update by ample 13-03-20
    public function deferenttabledata($colname, $table_name, $col1, $col1_val, $col2, $col2_val, $col3, $col3_val, $datetype, $querydate, $per_Date, $user_id,$param_col,$scale_range,$parameter_value1, $parameter_value2) {
        $DBH = new DatabaseHandler();
        $criteria2=$criteria3=$param=""; // add by ample
        if ($user_id != "") {
            //update by ample 06-04-20 for vendor side login
            if(isset($_SESSION['adm_vendor_id']))
            {
                $session = " AND `user_id`=" . $_SESSION['adm_user_id'];
            }
            else
            {
                $session = " AND `user_id`=" . $_SESSION['user_id'];
            }
        } else {
            $session = "";
        }
        // add by ample 11-03-20
        if(!empty($col2) && !empty($col2_val) )
        {
            $criteria2=" AND " . $col2 . " = '" . addslashes($col2_val)."'";
        }
        if(!empty($col3) && !empty($col3_val) )
        {
            $criteria3=" AND " . $col3 . " = '" . addslashes($col3_val)."'";
        }
        //add by ample 13-03-20
        if(!empty($param_col) && !empty($scale_range))
        {
            if($scale_range==1) {
                $param=" AND " . $param_col . " < '" .$parameter_value1."'";
            }
            elseif ($scale_range==2) {
                $param=" AND " . $param_col . " > '" .$parameter_value1."'";
            }
            elseif ($scale_range==3) {
                $param=" AND " . $param_col . " <= '" .$parameter_value1."'";
            }
            elseif ($scale_range==4) {
                $param=" AND " . $param_col . " >= '" .$parameter_value1."'";
            }
            elseif ($scale_range==5) {
                $param=" AND " . $param_col . " = '" .$parameter_value1."'";
            }
            elseif ($scale_range==6) {
                $param=" AND (" . $param_col . " BETWEEN '" .$parameter_value1."' AND '" .$parameter_value2."')";
            }
        }
        //comment by ample 11-03-20
        // $sql = "SELECT " . $colname . " FROM " . $table_name . " WHERE " . $col1 . " = '" . addslashes($col1_val) . "' AND " . $col2 . " = '" . addslashes($col2_val) . "' AND DATE_FORMAT(" . $querydate . ",'%Y-%m-%d') = '" . $per_Date . "' " . $session . "";
        // update by ample 11-03-20
        $sql = "SELECT " . $colname . " FROM " . $table_name . " WHERE " . $col1 . " = '" . addslashes($col1_val) . "' " . $criteria2 . " " . $criteria3. " AND DATE_FORMAT(" . $querydate . ",'%Y-%m-%d') = '" . $per_Date . "' " . $session . " " . $param . " ";
        $STH = $DBH->query($sql);
        //print_r($STH);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $row_arr[] = $row;
            }
        } 
        // else {
        //     $exp = explode(',', $colname);
        //     foreach ($exp as $col_emt) {
        //         $row_arr[$col_emt] = '';
        //     }
        // }
        // echo "<pre>";
        // print_r($row_arr); //die();
        return $row_arr;
    }
    public function getmonthname($no_month) {
        $option_str = '';
        $arr_record = array(1 => 'January', 2 => 'February', 3 => 'March', 4 => 'April', 5 => 'May', 6 => 'June', 7 => 'July', 8 => 'August', 9 => 'September', 10 => 'October', 11 => 'November', 12 => 'December');
        return $arr_record[$no_month];
    }
    public function getWeekName($no_week) {
        $option_str = '';
        $arr_day_of_week = array(1 => 'Sunday', 2 => 'Monday', 3 => 'Tuesday', 4 => 'Wednesday', 5 => 'Thursday', 6 => 'Friday', 7 => 'Saturday');
        return $arr_day_of_week[$no_week];
    }
    ////-----------------------------------------------------------------------------------------
    //-----------------------------------------------------------------------------------------
    public function showPopupPageOnselectingPage($basename) {
        $DBH = new DatabaseHandler();
        $sql = "SELECT * FROM `tbl_page_pop` WHERE `pop_show` ='Show'AND`pag_cat_status`=1 AND `is_deleted`=0";
        $STH = $DBH->query($sql);
        while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
            $page_id[] = $this->page_name_kr($row['page_name']);
        }
        foreach ($page_id as $file_name) {
            if ($basename == $file_name[0]) {
                $page_id1 = $file_name[0];
            }
        }
        return $page_id1;
    }
    public function page_name_kr($page_id) {
        // global $link;
        $DBH = new DatabaseHandler();
        // $selected_sleep_id_arr = array();
        // $activity_id_arr = array();
        // $scale_arr = array();
        $row_arr = array();
        $sql = "SELECT * FROM `tblpages` WHERE `page_id` = '" . $page_id . "'";
        //echo "<br>Testkk sql = ".$sql;
        // $result = mysql_query($sql,$link);
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                array_push($row_arr, stripslashes($row['menu_link']));
            }
        }
        return $row_arr;
    }
    public function print_message($msg) {
        $DBH = new DatabaseHandler();
        $sql = "SELECT * FROM `tblcommonsettings` WHERE `cs_id` = '" . $msg . "' AND `cs_status`=1";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $row_arr = $row['cs_value'];
        }
        return $row_arr;
    }
    public function chkIfDiscountCouponAlreadyRedeamed($discount_coupon) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "SELECT * FROM `tblorders` WHERE `order_discount_coupon` = '" . addslashes($discount_coupon) . "' AND `order_status` > 0 ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function chkIfValidDiscountCoupon($discount_coupon) {
        $DBH = new DatabaseHandler();
        $return = false;
        $effective_day_of_month = date('j');
        $effective_day_of_week = date('N');
        $effective_single_date = date('Y-m-d');
        $sql_dc_effective_date_str = " AND ( 

							( dc_effective_date_type = 'days_of_month' AND ( dc_effective_days_of_month = '-1' OR dc_effective_days_of_month = '" . $effective_day_of_month . "' OR  FIND_IN_SET(" . $effective_day_of_month . ", dc_effective_days_of_month) > 0 ) ) OR

							( dc_effective_date_type = 'days_of_week' AND ( dc_effective_days_of_week = '-1' OR dc_effective_days_of_week = '" . $effective_day_of_week . "' OR  FIND_IN_SET(" . $effective_day_of_week . ", dc_effective_days_of_week) > 0 ) ) OR

							( dc_effective_date_type = 'single_date' AND ( dc_effective_single_date <= '" . $effective_single_date . "' ) ) OR

							( dc_effective_date_type = 'date_range' AND ( dc_effective_start_date <= '" . $effective_single_date . "' AND dc_effective_end_date >= '" . $effective_single_date . "' ) ) 

							) ";
        $sql = "SELECT * FROM `tbldiscountcoupons` WHERE `discount_coupon` = '" . addslashes($discount_coupon) . "' AND `dc_status` = '1' AND `dc_deleted` = '0' " . $sql_dc_effective_date_str . " ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $r = $STH->fetch(PDO::FETCH_ASSOC);
            $dc_multiuser = stripslashes($r['dc_multiuser']);
            if ($dc_multiuser == '1') {
                $return = true;
            } elseif (!$this->chkIfDiscountCouponAlreadyRedeamed($discount_coupon)) {
                $return = true;
            }
        }
        return $return;
    }
    public function doApplyDiscountCoupon($discount_coupon) {
        $my_DBH = new DatabaseHandler();
        $return = false;
        $cart_session_id = session_id();
        if ($this->isLoggedIn()) {
            $user_id = $_SESSION['user_id'];
        } else {
            $user_id = 0;
        }
        if (isset($_SESSION['current_showing_date']) && $_SESSION['current_showing_date'] != '') {
            $current_showing_date = $_SESSION['current_showing_date'];
        } else {
            $current_showing_date = '';
        }
        if (isset($_SESSION['topcityid']) && $_SESSION['topcityid'] != '') {
            $topcityid = $_SESSION['topcityid'];
        } else {
            $topcityid = '0';
        }
        if (isset($_SESSION['topareaid']) && $_SESSION['topareaid'] != '') {
            $topareaid = $_SESSION['topareaid'];
        } else {
            $topareaid = '0';
        }
        $arr_coupon_details = $this->getDiscountCouponDetailsByCoupon($discount_coupon);
        // echo "<pre>";print_r($arr_coupon_details);echo "</pre>";
        /*
        
        $sql = "SELECT * FROM `tblcart` WHERE
        
        `cart_session_id` = '".$cart_session_id."' AND
        
        `cusine_id` = '".$cusine_id."' AND
        
        `cart_delivery_date` = '".$current_showing_date."' AND
        
        `cart_city_id` = '".$topcityid."' AND
        
        `cart_area_id` = '".$topareaid."' AND
        
        `cart_status` = '0' AND
        
        `cart_deleted` = '0' ";
        
        */
        // `cart_city_id` = '".$topcityid."' AND
        $sql = "SELECT * FROM `tblcart` 

				WHERE 

				`cart_session_id` = '" . $cart_session_id . "' AND 

				`cart_status` = '0' AND 

				`cart_deleted` = '0' ";
        $STH = $my_DBH->query($sql);
        // `cart_city_id` = :cart_city_id AND
        // ':cart_city_id' => addslashes($topcityid)
        if ($STH->rowCount() > 0) {
            $DBH = $my_DBH->raw_handle();
            $DBH->beginTransaction();
            try {
                $sql = "UPDATE `tblcart` SET `discount_coupon` = :discount_coupon WHERE 		

						`cart_session_id` = :cart_session_id AND 

						`cart_status` = '0' AND `cart_deleted` = '0' ";
                $STH = $DBH->prepare($sql);
                $STH->execute(array(':discount_coupon' => addslashes($discount_coupon), ':cart_session_id' => addslashes($cart_session_id)));
                $DBH->commit();
                $return = true;
            }
            catch(Exception $e) {
                $stringData = '[doApplyDiscountCoupon] Catch Error:' . $e->getMessage() . ', sql:' . $sql;
                $this->debuglog($stringData);
                return false;
            }
        }
        return $return;
    }
    // public function getcolumns_detrails($record)
    // {
    //             $DBH = new DatabaseHandler();
    //             $option_str = '';
    //             $sql = "SELECT * FROM `tbl_recordshow_dropdown` WHERE `uniqu_id` ='".$record."'AND`pag_cat_status`=1 AND `is_deleted`=0";
    //             $STH = $DBH->query($sql);
    //             $row = $STH->fetch(PDO::FETCH_ASSOC);
    //                $getcolums="SELECT * FROM  `tblcolumndetails` WHERE `uniqu_m_id`='".$record."' AND `col_query_order`=2";
    //                $STH2 = $DBH->query($getcolums);
    //                 if($STH2->rowCount() > 0)
    //                   {
    // 		              while($row2 = $STH2->fetch(PDO::FETCH_ASSOC))
    // 		              {
    // 		               $colums[]=$row2['col_name'];
    // 		              }
    //                  }
    // // array_values(array_unique(
    //              $colums_str=implode(',', $colums);
    //              if(in_array('user_id',$colums))
    //              {
    //              	$sql1 = "SELECT ".$colums_str." FROM `".$row['table_name']."` WHERE `user_id`=".$_SESSION['user_id']."";
    //              }
    //              else
    //              {
    //                 $sql1 = "SELECT ".$colums_str." FROM `".$row['table_name']."`";
    //              }
    //             $STH1 = $DBH->query($sql1);
    //             if($STH1->rowCount()>0)
    //              {
    // 	                while($row1 = $STH1->fetch(PDO::FETCH_ASSOC))
    // 	                {
    // 	                   $data[]=$row1;
    // 	                }
    // 	                foreach($data as $value)
    // 	                {
    // 	                	  foreach($colums as $col)
    // 	                	  {
    // 	                	  	$arr[$value[$col]]=$col;
    // 	                	  	// $option_str .= '<option data-value="'.$col.'" value="'.stripslashes($value[$col]).'" >'.stripslashes($value[$col]).'</option>';
    // 	                	  }
    // 	                }
    // 	                echo "<pre>";print_r($arr);echo "</pre>";
    //                 exit;
    //              }
    //           return $option_str;
    //  }
    // public function getDayOfWeekOptionsMultiple($day_of_week)
    // {
    //     $option_str = '';
    //     $arr_day_of_week = array (
    //         1 => 'Sunday',
    //         2 => 'Monday',
    //         3 => 'Tuesday',
    //         4 => 'Wednesday',
    //         5 => 'Thursday',
    //         6 => 'Friday',
    //         7 => 'Saturday'
    //     );
    //     foreach($arr_day_of_week as $k => $v )
    //     {
    //             if(in_array($k ,$day_of_week))
    //             {
    //                 $selected = ' selected ';
    //             }
    //             else
    //             {
    //                 $selected = '';
    //             }
    //             $option_str .= '<option value="'.$k.'" '.$selected.' >'.$v.'</option>';
    //     }
    //     return $option_str;
    // }
    // public function ShowHomePopup()
    // {
    //   $DBH = new DatabaseHandler();
    //   $sql = "SELECT * FROM `tblsolutionitems` AS tbl_sol LEFT JOIN `tblprofilecustomization` AS tbl_pro ON tbl_sol.sol_item_id = tbl_pro.sol_item_id WHERE tbl_sol.sol_item_deleted= '0'  ORDER BY tbl_sol.sol_item_add_date DESC ";
    //   // $sql = "SELECT * FROM `tblsolutionitems` WHERE `sol_item_deleted` = '0' ORDER BY sol_item_add_date DESC";
    //      $STH = $DBH->query($sql);
    //      if( $STH->rowCount() > 0 )
    // {
    // 	while ($row = $STH->fetch(PDO::FETCH_ASSOC))
    // 	{
    //             // echo "<pre>";print_r($row);echo "</pre>";
    //               $get_sol_cat_name=$this->getSolutionCategoryName($row['sol_item_cat_id']);
    //               $make_arr[]=array('sol_item_id'=>$row['sol_item_id'],
    // 		               	'sol_item_status'=>$row['sol_item_status'],
    // 		               	'sol_item_cat_id'=>$row['sol_item_cat_id'],
    // 		               	'get_sol_cat_name'=>$get_sol_cat_name,
    // 		               	'narration'=>$row['narration'],
    // 		               	'show_pop'=>$row['show_pop'],
    // 		               	'prct_id'=>$row['prct_id'],
    //                               'listing_date_type'=>$row['listing_date_type'],
    //                               'days_of_month'=>$row['days_of_month'],
    //                               'single_date'=>$row['single_date'],
    //                               'start_date'=>$row['start_date'],
    //                               'end_date'=>$row['end_date'],
    //                               'days_of_week'=>$row['days_of_week'],
    //                                'months'=>$row['months'],
    //                              'prct_add_date'=>$row['prct_add_date'],
    // 		               );
    // 	}
    // }
    // return $make_arr;
    // }


    //function added by ample 11-11-19
    public function getDataRecordsDropdownDetails($table_name="")
    {   

            $my_DBH = new DatabaseHandler();
            $DBH = $my_DBH->raw_handle();
            $DBH->beginTransaction();
            $pdm_id = '';
            $page_id_str = '';
            $pd_status = '';

          $sql = "SELECT * FROM `tbl_recordshow_dropdown` WHERE `table_name` = '".$table_name."' AND `is_deleted` = '0' ";




            $STH = $DBH->prepare($sql);

            $STH->execute();

            if($STH->rowCount()  > 0)

             {
                 $row = $STH->fetch(PDO::FETCH_ASSOC);


                  $sql1="SELECT * FROM `tblcolumndetails` WHERE `uniqu_m_id`='".$row['uniqu_id']."'";



                  $STH = $DBH->prepare($sql1);

                    $STH->execute();

                    if($STH->rowCount()  > 0)

                    {

                       while($row1 = $STH->fetch(PDO::FETCH_ASSOC))

                       {

                         $details_arr[]=$row1;

                       }

                    }
                                    
            }

            return $details_arr;
    } 
    //function added by ample 12-11-19
    public function get_custom_filter_check($report_data="",$colum_name="",$special_col="")
    {   
        $report_list = array();
        if(!empty($report_data))
        {
            //$filter_data=1;
            foreach ($report_data as $key => $value) {

                if($value['col_name']==$colum_name)
                {
                    //$report_list=$value;
                    $report_list['final_data_value']=$value;
                    // if($value['col_query_field']=='No')
                    // {
                    //     $filter_data=0;
                    // }
                }
                elseif($value['col_name']==$special_col)
                {
                    $report_list['special_data_value']=$value;
                }
                else
                {   

                    // if($value['col_query_field']=='Yes')
                    // {
                          $report_list['filter_data_value'][]=$value;
                    //}
                }
            }
            // if($filter_data==0)
            // {
            //     $report_list['filter_data_value']=array();
            // }
        }
        return $report_list;
    }
    //function added by ample 12-11-19
    public function get_custom_filter_data($filter_data="",$cat_id="",$prof_cat_tbl="",$prof_cat_col="")
    {   
       
        $DBH = new DatabaseHandler();
        $key_col="";
        $data = array();
        if(!empty($filter_data))
        {
            foreach ($filter_data as $key => $value) {

                $key_col=$this->get_dynamic_column_of_delete_and_status($prof_cat_tbl); //add by ample 04-05-20

                //$cat_id = explode(',',$cat_id);
                $cat_id = implode(",",$cat_id);
                //$sql = "SELECT DISTINCT ".$value['fetch_columns']." FROM ".$value['Id_table']." WHERE ".$value['fetch_value']." IN ('".$cat_id."')";
                $sql = "SELECT DISTINCT ".$prof_cat_col." FROM ".$prof_cat_tbl." WHERE ".$value['col_name']." IN (".$cat_id.") ".$key_col."";
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                        //$data[] = $row[$value['fetch_columns']];
                        $data[] = $row[$prof_cat_col];
                    }
                }
            }
        }
        return $data;
    }
    //function added by ample 12-11-19
    public function get_custom_final_key_value($cat_data="",$match_data="",$special_id="",$special_key="")
    {   
        $DBH = new DatabaseHandler();
        $data = array();
        $key_col=$special="";
        if(!empty($cat_data))
        {   
                //add by ample 21-05-20
                if($special_id)
                {
                    $special=" AND " .$special_key."=".$special_id;
                }

            foreach ($cat_data as $key => $value) {

                 $key_col=$this->get_dynamic_column_of_delete_and_status($match_data['Id_table']); //add by ample 04-05-20

                
                $sql = "SELECT ".$match_data['fetch_columns']." FROM ".$match_data['Id_table']." WHERE ".$match_data['fetch_value']." = '".$value."'" .$special."" .$key_col."";
                $STH = $DBH->query($sql);
                if ($STH->rowCount() > 0) {
                    while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                        //add new 21-05-20
                        $str = $row[$match_data['fetch_columns']];
                        $test = @json_decode($str);


                        if($test){
                          $data=array_merge($data,$test);
                        }else{
                             
                          $data[] = $str;
                        }
                        
                    }
                }
            }
        }
        return $data;
    } 

    //function added by ample 21-05-20
    public function get_special_key_value($match_data="",$keyword="")
    {   
        $DBH = new DatabaseHandler();
        $data = array();
        $key_col="";
        
            
            $key_col=$this->get_dynamic_column_of_delete_and_status($match_data['Id_table']); //add by ample 04-05-20

            
            $sql = "SELECT ".$match_data['fetch_columns']." FROM ".$match_data['Id_table']." WHERE ".$match_data['fetch_value']." = '".$keyword."'" .$key_col."";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $row = $STH->fetch(PDO::FETCH_ASSOC);
                $data = $row[$match_data['fetch_columns']];
            }
            
        
        return $data;
    }
    //function added by ample 13-11-19 again update this 22-11-19
    public function getDataFromReportCustomized($sub_cat="",$prof_cat_tbl="",$prof_cat_col="",$UID="",$special_col="",$keyword="")
    {   


        $final_data=array();
        $special_id=$special_key="";
        if($sub_cat && $prof_cat_tbl && $prof_cat_col && $UID)
        {
            // echo "<pre>";
            //   print_r($sub_cat);
            // change function 22-11-19
             // $report_custom = $this->getDataRecordsDropdownDetails($prof_cat_tbl);
             $report_custom = $this->get_data_from_tblcolumndetails($UID);
              //   echo "report-custom--------";echo "<pre>";
              // print_r($report_custom); 
              if(!empty($report_custom))
              {
                $report_list = $this->get_custom_filter_check($report_custom,$prof_cat_col,$special_col);
              }
              // echo "report_list----------";echo "<pre>";
              // print_r($report_list); 

              if(!empty($report_list['special_data_value']))
              {
                    $special_id=$this->get_special_key_value($report_list['special_data_value'],$keyword);
                    $special_key=$report_list['special_data_value']['col_name'];
                    // print_r($special_id);
              }



              if(!empty($report_list['filter_data_value']))
              {
                $filter_arrray=$this->get_custom_filter_data($report_list['filter_data_value'],$sub_cat,$prof_cat_tbl,$prof_cat_col);
                 // echo "filter_array----------"; echo "<pre>";
                 // print_r($filter_arrray);
                if(!empty($filter_arrray) && $report_list['final_data_value'])
                {
                  $final_data=$this->get_custom_final_key_value($filter_arrray,$report_list['final_data_value'],$special_id,$special_key);

                }

              }
              else
              { 
                if(!empty($report_list['final_data_value']))
                {
                    $final_data=$this->get_custom_final_key_value($sub_cat,$report_list['final_data_value'],$special_id,$special_key);

                }
                
              }
            return $final_data; 
        }
        else
        {
         return $final_data; 
        }
         
    }
    // function write by ample 13-11-19
    public function getDataFromFavCategory($cat_ids="")
    {
        $DBH = new DatabaseHandler();
        $data = array();


            //$cat_id = implode($cat_ids, '\',\'');
            $cat_id = implode('\',\'', $cat_ids);

            $sql = "SELECT fav_cat FROM tblfavcategory WHERE fav_cat_id IN ('".$cat_id."')";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $data[] = $row['fav_cat'];
                }
            }
          
      
        return $data;
    
    }
    // added by ample 22-11-19
    public function get_data_from_tblcolumndetails($UID="")
    {   

            $my_DBH = new DatabaseHandler();
            $DBH = $my_DBH->raw_handle();
            $DBH->beginTransaction();

            $details_arr=array();

            $sql1="SELECT * FROM `tblcolumndetails` WHERE `uniqu_m_id`='".$UID."'";


            $STH = $DBH->prepare($sql1);

                $STH->execute();

                if($STH->rowCount()  > 0)

                {

                   while($row1 = $STH->fetch(PDO::FETCH_ASSOC))

                   {

                     $details_arr[]=$row1;

                   }

                }
                                
        

        return $details_arr;
    } 

    //added by ample 11-12-19
    public function getImgData($icons_id="")
    {

        $DBH = new DatabaseHandler();
        $data = array();

            $sql = "SELECT * FROM  tbl_icons WHERE  icons_id=".$icons_id;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $data = $row;
                }
            }

        return $data;
    }
    //added by ample 11-12-19
    // public function getFileData($box_id="")
    // {

    //     $DBH = new DatabaseHandler();
    //     $data = array();

    //         $sql = "SELECT * FROM  tblmindjumble WHERE  mind_jumble_box_id=".$box_id;
    //         $STH = $DBH->query($sql);
    //         if ($STH->rowCount() > 0) {
    //             while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
    //                 $data = $row;
    //             }
    //         }

    //     return $data;
    // }
    public function getFileData($box_id="")
    {

        $DBH = new DatabaseHandler();
        $data = array();

            $sql = "SELECT * FROM  tblsolutionitems WHERE  sol_item_id=".$box_id;
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $data = $row;
                }
            }

        return $data;
    }
    // changed by rahul 5th oct 2025
    public function filter_data_by_keywords($cat_data = [], $keyword_data = [])
    {
        $final_arrray = array();
        if (!empty($cat_data) && !empty($keyword_data)) {   
            foreach ($keyword_data as $row) {
                foreach ($cat_data as $value) {
                    if (preg_match('/\b(' . $row . ')\b/i', $value)) {
                        $final_arrray[] = $value;
                    } 
                }
            }
        }
        return $final_arrray;
    }

    public function find_keyword_by_bms_name($bms_name="")
    {   
        $DBH = new DatabaseHandler();
        $data = '';
          

            $sql = "SELECT bms_id FROM tblbodymainsymptoms WHERE bms_name like '".$bms_name."'";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $bmsid = $row['bms_id'];
                }
            }

            if($bmsid)
            {
                $data=$this->get_keywords_by_bms_id($bmsid);
            }

        return $data;
    }
    // add by ample
    public function get_keywords_by_bms_id($bmsid="")
    {   

        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $option_str = '';       
        $sql = "SELECT * FROM `tbl_symptom_keyword` WHERE `symptom_id` = '".$bmsid."' ORDER BY `keywords` ASC";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if($STH->rowCount() > 0)
        {
            while($row = $STH->fetch(PDO::FETCH_ASSOC)) 
            {
                $option_str .= $row['keywords'].',';
            }
            $option_str = rtrim($option_str,",");
        }
        return $option_str;
    }

    //add by ample

    public function GetDesignMyLifeData($day_month_year, $group_id, $ref_num) {
        $all_arr = explode(',', $ref_num);
        $str = implode('\',\'', $all_arr);
        $DBH = new DatabaseHandler();
        $sql = "SELECT * FROM `tbl_design_your_life` WHERE status = 1 and `group_code_id` = '" . $group_id . "' and ref_code IN ('" . $str . "') ORDER BY `id` ASC";
        $STH = $DBH->query($sql);
        //print_r($STH);
        $data = array();
        $single_date = date("Y-m-d", strtotime($day_month_year));
        $all = date("d", strtotime($day_month_year));
        $month_wise = date("m", strtotime($day_month_year));
        $days_of_week = date('w', strtotime($day_month_year));
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                if ($row['listing_date_type'] == 'single_date') {
                    if ($single_date == $row['single_date']) {
                        $data[] = $row;
                    }
                } elseif ($row['listing_date_type'] == 'all') {
                    $all_arr = explode(',', $row['days_of_month']);
                    if (in_array($all, $all_arr)) {
                        $data[] = $row;
                    }
                } elseif ($row['listing_date_type'] == 'days_of_month') {
                    $all_arr = explode(',', $row['days_of_month']);
                    if (in_array($all, $all_arr)) {
                        $data[] = $row;
                    }
                } elseif ($row['listing_date_type'] == 'month_wise') {
                    $all_arr = explode(',', $row['months']);
                    if (in_array($month_wise, $all_arr)) {
                        $data[] = $row;
                    }
                } elseif ($row['listing_date_type'] == 'days_of_week') {
                    $all_arr = explode(',', $row['days_of_week']);
                    if (in_array($days_of_week, $all_arr)) {
                        $data[] = $row;
                    }
                }
            }
        }
        return $data;
    }
    function getBannersDYL($id="")
    {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();       
        $sql = "SELECT * FROM `tbl_multiple_banners_dyl` WHERE `ref_id` = '".$id."' AND banner_show='1' ORDER BY `id` ASC";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if($STH->rowCount() > 0)
        {
            while($row = $STH->fetch(PDO::FETCH_ASSOC)) 
            {
                $data[] = $row;
            }
        }
        return $data;
    }
    // add by ample 14-02-20s
    function saveMycanvasPreviewData($user_id="",$sequence="",$mdt_date="",$html_data="")
    {   
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $last_id = false;
        $sql = "INSERT INTO `tbl_mycanvas_preview_data`(`user_id`, `mdt_date`, `sequence`,`preview_data` ) " . "VALUES ('" . $user_id . "','" . date("Y-m-d", strtotime($mdt_date)) . "','" . $sequence . "','" . $html_data . "')";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
             $last_id = $DBH->lastInsertId();
        }
        return $last_id;
    }
    function deleteMycanvasPreviewData($preview_id="")
    {   
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $res = false;
        $sql = "DELETE FROM `tbl_mycanvas_preview_data` WHERE `preview_id`=".$preview_id;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
             $res = true;
        }
        return $last_id;
    }
    //add by ample 20-02-20
    function getLastSaveDataMycanvas($preview_id="",$keywords="")
    {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();  
        if(!empty($keywords))
        {
            foreach ($keywords as $key => $value) {
                $sql = "SELECT * FROM `tbl_mycanvas` WHERE `preview_id` = '".$preview_id."' AND main_tab = '".$value."' ORDER BY `id` ASC";
                $STH = $DBH->prepare($sql);
                $STH->execute();
                if($STH->rowCount() > 0)
                {
                    while($row = $STH->fetch(PDO::FETCH_ASSOC)) 
                    {
                        $data[] = $row;
                    }
                }
            }
        }
        else
        {
            $sql = "SELECT * FROM `tbl_mycanvas` WHERE `preview_id` = '".$preview_id."' ORDER BY `id` ASC";
            $STH = $DBH->prepare($sql);
            $STH->execute();
            if($STH->rowCount() > 0)
            {
                while($row = $STH->fetch(PDO::FETCH_ASSOC)) 
                {
                    $data[] = $row;
                }
            }
        }
       
        if($data)
        {
            $data=$this->group_by($data,'main_tab');
        }
        return $data;
    }
    public function getFavCategoryName($fav_cat_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $fav_cat_type = '';
        $sql = "SELECT * FROM `tblfavcategory` WHERE `fav_cat_id` = '" . $fav_cat_id . "' ";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $fav_cat_type = stripslashes($row['fav_cat']);
        }
        return $fav_cat_type;
    }
    //add by ample 01-06-20
    public function getFavCategoryNameMultiple($fav_cat_id) {

        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $fav_cat_data = array();
        $sql = "SELECT * FROM `tblfavcategory` WHERE `fav_cat_id` IN (" . $fav_cat_id . ") ";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
             while($row = $STH->fetch(PDO::FETCH_ASSOC)) 
                {
                    $fav_cat_data[] = stripslashes($row['fav_cat']);
                }
        }
        return implode(',', $fav_cat_data);
    }
    //add by ample 22-02-20
    public function group_by($array, $key) {
        $return = array();
        foreach($array as $val) {
            $return[$val[$key]][] = $val;
        }
        return $return;
    }
    //add by ample 22-02-20
    // public function group_by_multipe($array, $keys=array()) {
    //     $return = array();
    //     foreach($array as $val){
    //         $final_key = "";
    //         foreach($keys as $theKey){
    //             $final_key .= $val[$theKey] . "_";
    //         }
    //         $return[$final_key][] = $val;
    //     }
    //    return $return;
    // }
    //add by ample 25-02-20
    // function getAllSaveDataMycanvas($date="",$to="")
    // {
    //     $my_DBH = new DatabaseHandler();
    //     $DBH = $my_DBH->raw_handle();
    //     $DBH->beginTransaction();
    //     $data = array();       
    //     $sql = "SELECT DISTINCT preview_id FROM `tbl_mycanvas` WHERE add_date >= '$date' and add_date <='$to' ORDER BY preview_id DESC";
    //     $STH = $DBH->prepare($sql);
    //     $STH->execute();
    //     if($STH->rowCount() > 0)
    //     {
    //         while($row = $STH->fetch(PDO::FETCH_ASSOC)) 
    //         {
    //             $data[] = $row;
    //         }
    //     }
    //     if($data)
    //     {
    //         foreach ($data as $key => $value) {
    //             $data[$key]['data']=$this->get_data_mycanvas($value['preview_id']);
    //         }
    //     }
    //     return $data;
    // }
    // function get_data_mycanvas($preview_id="")
    // {
    //    $my_DBH = new DatabaseHandler();
    //     $DBH = $my_DBH->raw_handle();
    //     $DBH->beginTransaction();
    //     $data = array();       
    //     $sql = "SELECT * FROM `tbl_mycanvas` WHERE preview_id = '$preview_id' ";
    //     $STH = $DBH->prepare($sql);
    //     $STH->execute();
    //     if($STH->rowCount() > 0)
    //     {
    //         while($row = $STH->fetch(PDO::FETCH_ASSOC)) 
    //         {
    //             $data[] = $row;
    //         }
    //     }
    //     if($data)
    //     {
    //         $data=$this->group_by($data,'main_tab');
    //         //$data=$this->group_by_multipe($data,array('main_tab','sub_tab'));
    //     }
    //     return $data;
    // }
    // function filterByData($preview_data)
    // {
    //     $array_main=array();
    //   foreach ($preview_data as $key => $value) {
        
    //     $array_main[]['data']=$value;
    //   }

    //   foreach ($array_main as $key => $value) {

    //     $array_main[$key]['data']['heading']=$value['data'][0]['main_tab'];
    //     $array_main[$key]['data']['newData']=$this->group_by($value['data'],'sub_tab');
    //     $array_main[$key]['heading']=$array_main[$key]['data']['heading'];
    //     $array_main[$key]['filterData']=$array_main[$key]['data']['newData'];
    //     unset($array_main[$key]['data']);
    //   }

    //   foreach ($array_main as $key => $value) {

    //       foreach ($value['filterData'] as $index => $row) {
    //         $array_main[$key]['finalData'][]['data']=$row;
    //         unset($array_main[$key]['filterData']);
    //         }
    //      }
    //  return $array_main;
    // }

    //function added by ample 12-03-19
    public function dynamic_query_data($data_id="",$Id_table="",$fetch_value="",$fetch_columns="")
    {   
        $DBH = new DatabaseHandler();
        $data = array();

        //commented by rahul
            //$cat_id = implode($cat_id, '\',\'');
            if (is_array($cat_id)) {
                $cat_id = implode("','", $cat_id);
            } else {
                $cat_id = (string)$cat_id; // fallback if not an array
            }

            $sql = "SELECT ".$fetch_columns." FROM ".$Id_table." WHERE ".$fetch_value." = '".$data_id."'";
            //print_r($sql);
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $data = $row[$fetch_columns];
                }
            }
        return $data;
    }
    //add by ample
    public function get_activity_data($sel_id="")
    {
        // global $link;
        $DBH = new DatabaseHandler();
        $option_str="";
        $sql = "SELECT * FROM `tbldailyactivity` ORDER BY `activity` ASC";
        // $result = mysql_query($sql,$link);
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $sel="";
                if(!empty($sel_id))
                {   
                    if($sel_id==$row['activity_id'])
                    {
                        $sel="selected";
                    }
                }
                $option_str.= '<option value="' . $row['activity'] . '" data-value="' . $row['activity_id'] . '" '.$sel.'>' . stripslashes($row['activity']) . '</option>';
            }
        }
        return $option_str;
    }
    //get fav category option
    public function getCategoryOptions($main_cat="",$sel_id="") {
        $DBH = new DatabaseHandler();
        $data=array();
        $option_str = '<option value="">Select</option>';
        $sql = "SELECT * FROM `tblcustomfavcategory` WHERE  fav_cat_type_id IN($main_cat) AND cat_deleted=0 and cat_status = 1";
        $STH = $DBH->query($sql);
        //print_r($STH);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                //$option_str.='<option value="'.$row['fav_cat_id'].'">'.strip_tags($row['fav_cat']).'</option>';
                $data[]=$row['favcat_id'];
            }
        }
        if(!empty($data))
        {
                foreach ($data as $key => $value) {
                    $sql1 = "SELECT * FROM `tblfavcategory` WHERE  fav_cat_id=".$value." ORDER BY fav_cat ASC";
                    $STH1 = $DBH->query($sql1);
                    if ($STH1->rowCount() > 0) {
                        while ($row1 = $STH1->fetch(PDO::FETCH_ASSOC)) {
                            $sel="";
                            if(!empty($sel_id))
                            {   
                                if($sel_id==$row1['fav_cat_id'])
                                {
                                    $sel="selected";
                                }
                            }
                            $option_str.='<option value="'.$row1['fav_cat_id'].'" '.$sel.'>'.strip_tags($row1['fav_cat']).'</option>';
                        }
                    }
                }
        }
        return $option_str;
    }
    function get_times($start_time="00:00", $end_time="23:59", $default = '',$interval = '+15 minutes') {

    $output = '<option value="">Select Time</option>';

    $current = strtotime( $start_time );
    $end = strtotime( $end_time );

    if($current <= $end)
    {
        while( $current <= $end ) {
        $time = date( 'H:i', $current );
        $sel = ( $time == $default ) ? ' selected' : '';

        $output .= "<option value=\"{$time}\"{$sel}>" . date( 'h:i A', $current ) .'</option>';
        $current = strtotime( $interval, $current );
        }
    }
    else
    {   
        $end = strtotime( '23:59' );
        while( $current <= $end ) {
            $time = date( 'H:i', $current );
            $sel = ( $time == $default ) ? ' selected' : '';

            $output .= "<option value=\"{$time}\"{$sel}>" . date( 'h:i A', $current ) .'</option>';
            $current = strtotime( $interval, $current );
        }

        $current = strtotime( '00:00' );
        $end = strtotime( $end_time );

        while( $current <= $end ) {
            $time = date( 'H:i', $current );
            $sel = ( $time == $default ) ? ' selected' : '';

            $output .= "<option value=\"{$time}\"{$sel}>" . date( 'h:i A', $current ) .'</option>';
            $current = strtotime( $interval, $current );
        }
    }

    return $output;
    }
     //create new function for save or update user activity
    function add_user_activity($data="",$count_row="",$date="",$redirect=0)
    {       
            //update 12-06-20
            if($redirect!=1)
            {
                $this->delete_activity_data($date);
            }
            if(empty($end_date_main)){
                $end_date_main = '0000-00-00';
            }
            
            
            $my_DBH = new DatabaseHandler();
            $DBH = $my_DBH->raw_handle();
            $DBH->beginTransaction();
            $return=false;
            
                $query = "INSERT INTO `tblusersdailyactivity` (`user_id`,`activity_date`,`activity_id`,`other_activity`,`activity_start_time`,`activity_end_time`,`activity_duration`,`consultant_remark`,`proper_guidance`,`precaution`,`user_response_id`,`location_type_id`,`location_id`,`yesterday_sleep_time`,`today_wakeup_time`,`sleep_duration`,`dyl_parent_id`,`dyl_child_id`) VALUES ";
                $values = '';
                foreach ($data as $key => $value) {
                    $value['activity_id'] = is_numeric($value['activity_id']) ? (int)$value['activity_id'] : 0;
                        //update 12-06-20
                        if($value['activity_id'] || $value['other_activity'])
                        {
                            $value['parent_id'] = $value['parent_id'] ? $value['parent_id'] : 0;
                            $value['child_id'] = $value['child_id'] ? $value['child_id'] : 0;
                            $values .= "('".$value['user_id']."','".$value['activity_date']."',".$value['activity_id'].",'".$value['other_activity']."','".$value['activity_start_time']."','".$value['activity_end_time']."','".$value['activity_duration']."','','".$value['proper_guidance']."','".$value['precaution']."','".$value['user_response_id']."','".$value['location_type_id']."','".$value['location_id']."','".$value['yesterday_sleep_time']."','".$value['today_wakeup_time']."','".$value['sleep_duration']."','".$value['parent_id']."','".$value['child_id']."'),";
                        }

                }
                //$values = rtrim($values, ',');
                $values = substr($values, 0, strlen($values) - 1);
                $insert_query = $query . $values;
               
            // $STH = $DBH->prepare($sql);
            //  $STH->execute();
             $STH = $DBH->query($insert_query);
            // print_r($STH);  die('fhs');
            if($STH->rowCount() > 0)
            {   
                $return = true;
            }
        return $return;
    }
    // add by ample 20-03-20
    public function check_already_fill_activity($user_id="",$date_set="")
    {

        $DBH = new DatabaseHandler();
        $data=array();
        $sql = "SELECT * FROM `tblusersdailyactivity` WHERE user_id=".$user_id." AND activity_date='".$date_set."' ORDER BY `activity_start_time` ASC";
        $STH = $DBH->query($sql);
        //print_r($STH);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]=$row;
            }
        }
        return $data;
    }
    //added by ample 20-03-20 & update on 29-4-20 
    public function get_activity_html_data($data="")
    {
        $html="";
        if(!empty($data))
        {
            foreach ($data as $key => $value) 
            {   
                $checked0='checked'; $checked1='';
                if($value['proper_guidance']==1)
                {
                    $checked0='';
                    $checked1='checked';
                }
                $activity_name=$this->get_activity_name($value['activity_id']);
                $duration=$this->covertMinutes($value['activity_duration']);

                $html.='<div class="row" id="row'.$key.'">
                            <div class="col-md-1">
                            </div>
                            <div class="col-md-10">
                                <div class="form-group row">
                                    <div class="col-md-6">
                                      <label class="label Header_brown">Activity</label>
                                      <input name="activity[]" type="text" class="form-control" id="activity_'.$key.'"  list="capitals'.$key.'" autocomplete="off" onchange="activity_datalist('.$key.')" value="'.$activity_name.'"  />
                                                <datalist id="capitals'.$key.'" class="dlist" >
                                                               ' . $this->get_activity_data($value['activity_id']) . '
                                                    </datalist>
                                        <input type="hidden" name="activity_id[]" id="activity_id_'.$key.'" value="'.$value['activity_id'].'">
                                        <a href="javascript:void(0);" onclick="erase_input('.$key.');"><i class="fa fa-eraser" aria-hidden="true" style="font-size: 15px; display:block;"></i></a>
                                    </div>
                                    <div class="col-md-6 row">
                                       <label class="label Header_brown">Other Activity</label>
                                       <input type="text" name="other_activity[]" class="form-control" value="'.$value['other_activity'].'">
                                    </div>
                                </div>
                                 <div class="form-group row">
                                    <div class="col-md-3">
                                      <label class="label Header_brown">Activity Time Start</label>
                                      <!--<select class="form-control" id="start_time_'.$key.'" name="start_time[]" onchange="calculate_time_duration('.$key.')" required>'.$this->get_times('00:00','23:30',$value['activity_start_time']).' </select>-->
                                      <!-- change as per email 29-04-20 -->
                                        <input type="time" class="form-control" id="start_time_'.$key.'" name="start_time[]" onchange="calculate_time_duration('.$key.')" value="'.$value['activity_start_time'].'" required />
                                    </div>
                                    <div class="col-md-3">
                                       <label class="label Header_brown">Activity Time End</label>
                                       <!--<select class="form-control" id="end_time_'.$key.'" name="end_time[]" onchange="calculate_time_duration('.$key.')" required>'.$this->get_times('00:15','23:45',$value['activity_end_time']).' </select>-->
                                       <!-- change as per email 29-04-20 -->
                                        <input type="time" class="form-control" id="end_time_'.$key.'" name="end_time[]" onchange="calculate_time_duration('.$key.')" value="'.$value['activity_end_time'].'" required />
                                    </div>
                                    <div class="col-md-6">
                                        <label class="label Header_brown">Duration</label>
                                       <input type="text" id="duration_text_'.$key.'" name="duration_text[]" class="form-control"  value="'.$duration.'" disabled>
                                       <input type="hidden" id="duration_'.$key.'" name="duration[]" class="form-control" value="'.$value['activity_duration'].'">
                                    </div>
                                    <div class="col-md-12">
                                         <p class="text-danger" id="time_note_0" style="font-size: 11px;"><a href="images/Device-SystemTime-Format.png" target="_blank" style="color: red;    text-decoration: underline;">Displays AM/PM or 24 Hour Format as per your Device Time Setting</a></p>
                                      </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-md-4">
                                        <label class="label Header_brown">My View</label>
                                        <select class="form-control" name="user_response[]">'.$this->getCategoryOptions('46',$value['user_response_id']).'</select>
                                    </div>
                                    <div class="col-md-4">
                                      <label class="label Header_brown">Activity Location Type</label>
                                      <select class="form-control" name="location_type[]">'.$this->getCategoryOptions('40',$value['location_type_id']).'</select>
                                    </div>
                                    <div class="col-md-4">
                                       <label class="label Header_brown">Activity Location</label>
                                       <select class="form-control" name="location_id[]">'.$this->getCategoryOptions('21',$value['location_id']).'</select>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                        <br>
                                        Do you do under proper guidance?
                                        <label class="radio-inline Header_brown"><input type="radio" name="proper_guidance_'.$key.'" value="1" '.$checked1.'>Yes</label>
                                        <label class="radio-inline Header_brown"><input type="radio" name="proper_guidance_'.$key.'" value="0" '.$checked0.'>No</label>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label class="label Header_brown">(Including any Precaution taken)</label>
                                            <textarea class="form-control" rows="3" name="precaution[]">'.$value['precaution'].'</textarea>
                                        </div>
                                    </div>
                                </div>';
                                if($key==0)
                                {
                                    $html.='<button type="button" class="btn btn-info btn-xs add_more_activity" onclick="add_more_activity()">Add More</button>';
                                }
                                else
                                {
                                    $html.='<button type="button" class="btn btn-warning btn-xs remove_activity" onclick="remove_activity('.$key.')">Remove</button>';
                                }
                                $html.='<hr>
                            </div>
                            <div class="col-md-1">
                            </div>
                        </div>';
            }
        }
        return $html;
    }
    //add by ample 11-06-20
    public function get_other_activity_html_data($other_activity="",$total_row=0)
    {
         $html="";

    $html.='<div class="row" id="row'.$total_row.'">
                <div class="col-md-1">
                </div>
                <div class="col-md-10">
                    <div class="form-group row">
                        <div class="col-md-6">
                          <label class="label Header_brown">Activity</label>
                          <input name="activity[]" type="text" class="form-control" id="activity_'.$total_row.'" readonly  />
                            <input type="hidden" name="activity_id[]" id="activity_id_'.$total_row.'">
                            
                        </div>
                        <div class="col-md-6 row">
                           <label class="label Header_brown">Other Activity</label>
                           <input type="text" name="other_activity[]" class="form-control" value="'.$other_activity.'">
                        </div>
                    </div>
                     <div class="form-group row">
                        <div class="col-md-3">
                          <label class="label Header_brown">Activity Time Start</label>
                          <!--<select class="form-control" id="start_time_'.$total_row.'" name="start_time[]" onchange="calculate_time_duration('.$total_row.')" required>'.$this->get_times('00:00','23:30').' </select>-->
                          <!-- change as per email 29-04-20 -->
                          <input type="time" class="form-control" id="start_time_'.$total_row.'" name="start_time[]" onchange="calculate_time_duration('.$total_row.')" required />
                        </div>
                        <div class="col-md-3">
                           <label class="label Header_brown">Activity Time End</label>
                           <!--<select class="form-control" id="end_time_'.$total_row.'" name="end_time[]" onchange="calculate_time_duration('.$total_row.')" required>'.$this->get_times('00:15','23:45').' </select>-->
                           <!-- change as per email 29-04-20 -->
                          <input type="time" class="form-control" id="end_time_'.$total_row.'" name="end_time[]" onchange="calculate_time_duration('.$total_row.')" required />
                        </div>
                        <div class="col-md-6">
                            <label class="label Header_brown">Duration</label>
                           <input type="text" id="duration_text_'.$total_row.'" name="duration_text[]" class="form-control" disabled>
                           <input type="hidden" id="duration_'.$total_row.'" name="duration[]" class="form-control">
                        </div>
                        <div class="col-md-12">
                         <p class="text-danger" id="time_note_0" style="font-size: 11px;"><a href="images/Device-SystemTime-Format.png" target="_blank" style="color: red;    text-decoration: underline;">Displays AM/PM or 24 Hour Format as per your Device Time Setting</a></p>
                      </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-4">
                            <label class="label Header_brown">My View</label>
                            <select class="form-control" name="user_response[]">'.$this->getCategoryOptions('46').'</select>
                        </div>
                        <div class="col-md-4">
                          <label class="label Header_brown">Activity Location Type</label>
                          <select class="form-control" name="location_type[]">'.$this->getCategoryOptions('40').'</select>
                        </div>
                        <div class="col-md-4">
                           <label class="label Header_brown">Activity Location</label>
                           <select class="form-control" name="location_id[]">'.$this->getCategoryOptions('21').'</select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group Header_brown">
                            <br>
                             <span class="Header_brown">Do you do under proper guidance?</span>
                            <label class="radio-inline Header_brown"><input type="radio" name="proper_guidance_'.$total_row.'" value="1">Yes</label>
                            <label class="radio-inline Header_brown"><input type="radio" name="proper_guidance_'.$total_row.'" value="0" checked>No</label>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class="label Header_brown">(Including any Precaution taken)</label>
                                <textarea class="form-control" rows="3" name="precaution[]"></textarea>
                            </div>
                        </div>
                    </div>';
                    // if($total_row==0)
                    // {
                    //     $html.='<button type="button" class="btn btn-info btn-xs add_more_activity" onclick="add_more_activity()">Add More</button>';
                    // }
                    // else
                    // {
                    //     $html.='<button type="button" class="btn btn-warning btn-xs remove_activity" onclick="remove_activity('.$total_row.')">Remove</button>';
                    // }
                    $html.='<hr>
                </div>
                <div class="col-md-1">
                </div>
            </div>';

        return $html;
    }
    //add by ample 20-03-20
    public function get_activity_name($activity_id="")
    {
        // global $link;
        $DBH = new DatabaseHandler();
        $name="";
        $sql = "SELECT * FROM `tbldailyactivity` WHERE activity_id=".$activity_id;
        // $result = mysql_query($sql,$link);
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $name= $row['activity'];
            }
        }
        return $name;
    }
    //add by ample 20-03-20
    public function covertMinutes($minutes="")
    {
        return $hours =   $minutes . ' minutes [' .sprintf('%02d',intdiv($minutes, 60)) .' hour(s) & '. ( sprintf('%02d',$minutes % 60)) . ' minute(s) ]';
    }
    // add by ample 20-03-20
    public function delete_activity_data($activity_date="")
    {

        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return=false;
        $sql = "DELETE FROM `tblusersdailyactivity` WHERE `activity_date` = '".$activity_date."' AND user_id=".$_SESSION['user_id']; 
        // $STH = $DBH->prepare($sql); 
        // $STH->execute();
        $STH = $DBH->query($sql);
        $STH->execute();
        if($STH->rowCount() > 0)
        {
            $return = true;
        }
        return $return;
    }
    //add by ample 08-04-20
    public function getFavCategoryData($fav_cat_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $sql = "SELECT * FROM `tblfavcategory` WHERE `fav_cat_id` = '" . $fav_cat_id . "' ";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $data = $row;
        }
        return $data;
    }
    //add by ample 20-02-20
    function get_canvas_report($date_type="",$date_arr="",$keywords="")
    {

        $data = array();

        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();

        if($date_type=='single_date')
        {   
            $singledate=date('Y-m-d', strtotime($date_arr[0]));
            $data['data'][0]['date']=$singledate;
            $sql = "SELECT preview_id FROM tbl_mycanvas_preview_data WHERE DATE_FORMAT(mdt_date,'%Y-%m-%d') = '" . $singledate . "' AND user_id=".$_SESSION['user_id'];
            $STH = $DBH->prepare($sql);
            $STH->execute();
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $data['data'][0]['data'][] = $row;
                }
            }
            if(empty($data['data'][0]['data']))
                {
                    unset($data['data'][0]);
                }
            $data['data'] = array_values($data['data']);
        }
        elseif($date_type=='date_range')
        {
            $startdate = date('Y-m-d', strtotime($date_arr[0]));
            $enddate = date('Y-m-d', strtotime($date_arr[1]));
            $rangedate= $this->getDatesFromRangeKR($startdate, $enddate, $format = 'Y-m-d');
            foreach ($rangedate as $key=>$per_Date) 
            {   
                $data['data'][$key]['date']=$per_Date;
                $sql = "SELECT preview_id FROM tbl_mycanvas_preview_data WHERE DATE_FORMAT(mdt_date,'%Y-%m-%d') = '" . $per_Date . "' AND user_id=".$_SESSION['user_id'];
                $STH = $DBH->prepare($sql);
                $STH->execute();
                if ($STH->rowCount() > 0) {
                    while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                        $data['data'][$key]['data'][] = $row;
                    }
                }
                if(empty($data['data'][$key]['data']))
                {
                    unset($data['data'][$key]);
                }
                $data['data'] = array_values($data['data']);
            }
        }

        if(!empty($data))
        {
            foreach ($data['data'] as $pkey => $pvalue) {

                foreach ($pvalue['data'] as $dkey => $dvalue) {

                    $preview_data=$this->getLastSaveDataMycanvas($dvalue['preview_id'],$keywords);
                     $array_main=array();
                      foreach ($preview_data as $key => $value) 
                      {
                        $array_main[]['data']=$value;
                      }
                      foreach ($array_main as $key => $value) 
                      {
                        $array_main[$key]['data']['heading']=$value['data'][0]['main_tab'];
                        $array_main[$key]['data']['newData']=$this->group_by($value['data'],'sub_tab');
                        $array_main[$key]['heading']=$array_main[$key]['data']['heading'];
                        $array_main[$key]['filterData']=$array_main[$key]['data']['newData'];
                        unset($array_main[$key]['data']);
                      }
                        foreach ($array_main as $key => $value) 
                        {
                          foreach ($value['filterData'] as $index => $row) 
                          {
                            $array_main[$key]['finalData'][]['data']=$row;
                            unset($array_main[$key]['filterData']);
                          }
                        }

                    $data['data'][$pkey]['data'][$dkey]['preview_data']=$array_main;
                }

            }
        }

        return $data['data'];

    }
    //add by ample 20-02-20
    function getkeywords_mycanvas($date_type="",$date_arr="")
    {

        $data = array();

        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();

        if($date_type=='single_date')
        {   
            $singledate=date('Y-m-d', strtotime($date_arr[0]));
            $sql = "SELECT main_tab FROM tbl_mycanvas WHERE DATE_FORMAT(mdt_entry_date,'%Y-%m-%d') = '" . $singledate . "' AND user_id=".$_SESSION['user_id'];
            $STH = $DBH->prepare($sql);
            $STH->execute();
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $data[] = $row['main_tab'];
                }
            }
        }
        elseif($date_type=='date_range')
        {
            $startdate = date('Y-m-d', strtotime($date_arr[0]));
            $enddate = date('Y-m-d', strtotime($date_arr[1]));
            $rangedate= $this->getDatesFromRangeKR($startdate, $enddate, $format = 'Y-m-d');
            foreach ($rangedate as $key=>$per_Date) 
            {   

                $sql = "SELECT main_tab FROM tbl_mycanvas WHERE DATE_FORMAT(mdt_entry_date,'%Y-%m-%d') = '" . $per_Date . "' AND user_id=".$_SESSION['user_id'];
                $STH = $DBH->prepare($sql);
                $STH->execute();
                if ($STH->rowCount() > 0) {
                    while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                        $data[] = $row['main_tab'];
                    }
                }
            }
        }


        if(!empty($data))
        {

            $data = array_values(array_unique($data));
        }

        return $data;

    }
    //add by ample 14-04-20 & update 16-04-20
    public function GetFeedBackData() {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();

        $user_id=$_SESSION['user_id'];
        $email = $this->getUserEmailById($user_id);

        $sql = "SELECT * FROM `tblfeedback` WHERE (user_id=".$user_id." OR email='".$email."') AND `parent_feedback_id` = '0' AND `admin` = '0' AND is_vendor='0' AND status='1' ORDER BY feedback_add_date DESC";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }
        return $data;
    }
    //add by ample 14-04-20 & update 16-04-20
    public function GetFeedBackDataByID($feedback_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $user_id=$_SESSION['user_id'];
        $email = $this->getUserEmailById($user_id);
        $sql = "SELECT * FROM `tblfeedback` WHERE (user_id=".$user_id." OR email='".$email."') AND feedback_id=".$feedback_id." AND `parent_feedback_id` = '0' AND `admin` = '0' AND is_vendor='0'";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
                $data= $row;
        }
        return $data;
    }
    //add by ample 14-04-20
    public function GetAllConvarsationByID($feedback_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $sql = "SELECT * FROM `tblfeedback` WHERE `parent_feedback_id` = ".$feedback_id." AND status='1'
                    ORDER BY feedback_add_date DESC";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }
        return $data;
    }
    //add by ample 15-04-20
    public function get_feedback_data($feedback_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $sql = "SELECT * FROM `tblfeedback` WHERE feedback_id=".$feedback_id;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
                $data= $row;
        }
        return $data;
    }
    //add ample 15-04-20
    public function feedback_update($feedback_id, $feedback) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "UPDATE `tblfeedback` SET `feedback` = '".$feedback."' WHERE `feedback_id` = '".$feedback_id."'";
        //echo $sql;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    //add by ample 22-04-20
    public function getPageIcon($page_id="") {
        $DBH = new DatabaseHandler();
        $page_icon = '';
        $sql = "SELECT * FROM `tblpages` WHERE `page_id` = '" . $page_id . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            if($row['page_icon']!='' && is_numeric($row['page_icon'])) { 

                    if($row['page_icon_type']=='Image')
                    {   

                        $imgData=$this->getImgData($row['page_icon']);
                        if(!empty($imgData['image']))
                        {
                            $page_icon='<img src="'.SITE_URL.'/uploads/'.$imgData['image'].'" style="width:128px; height: 128px;"/><br>';
                        }
                    }
                    else
                    {   
                        $fileData=$this->getFileData($row['page_icon']);
                        if(!empty($fileData['banner']))
                        {
                            $page_icon='<a href="'.SITE_URL.'/uploads/'. $fileData['banner'].'" target="_blank">'.$fileData['banner'].'</a><br>';
                        }
                        
                    }
            
              }

        }
        return $page_icon;
    }
    //get fevcategory icon add by ample 23-04-20
    public function get_icon_of_favcategory($favcat_id="")
    {
        $icon='';
        $data=$this->getFavCategoryData($favcat_id);
        if(!empty($data))
        {
            if($data['page_icon']!='') { 

                    if($data['page_icon_type']=='Image')
                    {   

                        $imgData=$this->getImgData($data['page_icon']);
                        if(!empty($imgData['image']))
                        {
                            $icon=$imgData['image'];
                        }
                    }
                    // else
                    // {   
                    //     $fileData=$this->getFileData($data['page_icon']);
                    //     $page_icon='<a href="'.SITE_URL.'/uploads/'. $fileData['box_banner'].'" target="_blank">'.$fileData['box_banner'].'</a><br>';
                    // }
            
              }
        }
        return $icon;
    }
    //get fevcategory url add by ample 23-04-20
    public function get_url_of_favcategory($favcat_id="",$redirect_page="",$redirect_id="",$redirect="",$title="",$url_type="")
    {   
        $url='';
        $data=$this->getFavCategoryData($favcat_id);
        if(!empty($data))
        {   
            if($url_type=='VIEW')
            {   
                $url=$data['data_view_url'].'?';
                $url=$url.'&redirect_page='.$redirect_page.'&redirect_id='.$redirect_id.'&redirect='.$redirect;
            }
            else
            {
                 if(!empty($data['link']))
                {
                    $url=$data['link'].'?';
                    if(!empty($data['ref_num']))
                    {
                        $url=$url.'&ref_num='.$data['ref_num'];
                    }
                    if(!empty($data['group_code_id']))
                    {
                        $url=$url.'&group_id='.$data['group_code_id'];
                    }
                    if(!empty($data['ref_num']) || !empty($data['group_code_id']))
                    {
                        $url=$url.'&fav_cat_id='.$data['fav_cat_id'];
                        if($title)
                        {
                            $title=base64_encode($title);
                            $url=$url.'&title='.$title;
                        }
                    }
                    if($data['link']=='design-my-life.php')
                    {
                        $url=$url.'&redirect_page='.$redirect_page.'&redirect_id='.$redirect_id.'&redirect='.$redirect;
                    }

                }
            }
           
        }
        return $url;
    }
    //add by ample 24-04-20
    public function get_redirection_data($redirect="",$redirect_id="") {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = false;
        $user_id=$_SESSION['user_id'];
        $sql = "SELECT * FROM `tbl_user_design_your_data` WHERE redirect='".$redirect."' AND redirect_id=".$redirect_id." AND user_id=".$user_id;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
                //$data= $row;
            $data= true;
        }
        return $data;
    }
    //add by ample 24-04-20
    public function get_redirection_data_vendor($redirect="",$redirect_id="",$vendor_id="") {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = false;
        $sql = "SELECT * FROM `tbl_user_design_your_data` WHERE redirect='".$redirect."' AND vendor_id=".$vendor_id." AND redirect_id=".$redirect_id;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
                //$data= $row;
            $data= true;
        }
        return $data;
    }
    //add by ample 28-04-20
    public function get_design_my_life_redirect_data($redirect="",$redirect_id="") {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = false;
        $sql = "SELECT * FROM `tbl_user_design_your_data` WHERE redirect='".$redirect."' AND redirect_id=".$redirect_id;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
                $data= $row;
        }
        if(!empty($data))
        {
            $data['user_inputs']=$this->get_design_my_life_user_inputs($data['id']);
            //$data['favcat_data']=$this->get_design_my_life_favcat_data($data['id']);
            $data['user_special']=$this->get_design_my_life_special_data($data['id']);
        }
        return $data;
    }
    //add by ample 28-04-20
    public function get_design_my_life_data($data_id="") {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = false;
        $sql = "SELECT * FROM `tbl_user_design_your_data` WHERE id=".$data_id;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
                $data= $row;
        }
        if(!empty($data))
        {
            $data['user_inputs']=$this->get_design_my_life_user_inputs($data_id);
            //$data['favcat_data']=$this->get_design_my_life_favcat_data($data['id']);
            $data['user_special']=$this->get_design_my_life_special_data($data_id);
        }
        return $data;
    }
    //add by ample 28-04-20
    public function get_design_my_life_user_inputs($data_id="") {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $sql = "SELECT * FROM `tbl_design_user_inputs` WHERE is_special_data='0' AND design_data_id=".$data_id;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }
        return $data;
    }
    //add by ample 28-04-20
    public function get_design_my_life_favcat_data($data_id="") {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $sql = "SELECT * FROM `tbl_user_design_favcat_data` WHERE design_data_id=".$data_id;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }
        return $data;
    }
    //add by ample 28-04-20
    public function get_design_my_life_special_data($data_id="") {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $sql = "SELECT * FROM `tbl_design_user_inputs` WHERE is_special_data='1' AND design_data_id=".$data_id;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }
        return $data;
    }
    //add by ample 01-05-20 not used
    public function get_design_my_life_by_date($start_date="",$end_date="") {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $user_id=$_SESSION['user_id'];
        $sql = "SELECT * FROM `tbl_user_design_your_data` WHERE single_date='$start_date' OR ( start_date >= '$start_date' AND end_date < '$end_date') AND user_id=".$user_id;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }
        return $data;
    }
    //add by ample 01-05-20
    public function get_design_my_life_main_edata($start_date="",$end_date="") {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $user_id=$_SESSION['user_id'];
        $sql = "SELECT id,user_id,box_title as title ,comment,listing_date_type,single_date,start_date,end_date,redirect,bes_time,days_of_week,months,days_of_month,add_date,is_repeat_task FROM `tbl_user_design_your_data` WHERE (listing_date_type='single_date' OR listing_date_type='date_range') AND ( YEAR(single_date) = YEAR('$start_date') OR YEAR(start_date) = YEAR('$start_date') OR YEAR(end_date) = YEAR('$end_date')  )  AND user_id=".$user_id;
        $sql.= " UNION SELECT id,user_id,box_title as title ,comment,listing_date_type,single_date,start_date,end_date,redirect,bes_time,days_of_week,months,days_of_month,add_date,is_repeat_task FROM `tbl_user_design_your_data` WHERE listing_date_type='days_of_week' AND user_id=".$user_id;
        $sql.= " UNION SELECT id,user_id,box_title as title ,comment,listing_date_type,single_date,start_date,end_date,redirect,bes_time,days_of_week,months,days_of_month,add_date,is_repeat_task FROM `tbl_user_design_your_data` WHERE listing_date_type='month_wise' AND user_id=".$user_id;
        $sql.= " UNION SELECT id,user_id,box_title as title ,comment,listing_date_type,single_date,start_date,end_date,redirect,bes_time,days_of_week,months,days_of_month,add_date,is_repeat_task FROM `tbl_user_design_your_data` WHERE listing_date_type='days_of_month' AND user_id=".$user_id;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }
        return $data;
    }
    //add by ample 01-05-20
    public function get_design_my_life_favCat_event_data($start_date="",$end_date="") {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $user_id=$_SESSION['user_id'];
        $sql = "SELECT design_data_id as id,user_id,fav_cat_2 as title,comment,listing_date_type,single_date,start_date,end_date,bes_time,days_of_week,months,days_of_month FROM `tbl_user_design_favcat_data` WHERE (listing_date_type='single_date' OR listing_date_type='date_range') AND ( YEAR(single_date) = YEAR('$start_date') OR YEAR(start_date) = YEAR('$start_date') OR YEAR(end_date) = YEAR('$end_date')  )  AND user_id=".$user_id;
        $sql.= " UNION SELECT design_data_id as id,user_id,fav_cat_2 as title,comment,listing_date_type,single_date,start_date,end_date,bes_time,days_of_week,months,days_of_month FROM `tbl_user_design_favcat_data` WHERE listing_date_type='days_of_week' AND user_id=".$user_id;
        $sql.= " UNION SELECT design_data_id as id,user_id,fav_cat_2 as title,comment,listing_date_type,single_date,start_date,end_date,bes_time,days_of_week,months,days_of_month FROM `tbl_user_design_favcat_data` WHERE listing_date_type='month_wise' AND user_id=".$user_id;
        $sql.= " UNION SELECT design_data_id as id,user_id,fav_cat_2 as title,comment,listing_date_type,single_date,start_date,end_date,bes_time,days_of_week,months,days_of_month FROM `tbl_user_design_favcat_data` WHERE listing_date_type='days_of_month' AND user_id=".$user_id;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }
        return $data;
    }
    //add by ample 01-05-20
    public function get_design_my_life_user_input_event_data($start_date="",$end_date="") {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $user_id=$_SESSION['user_id'];
        $sql = "SELECT design_data_id as id,id as input_id,user_id,user_input as title,comment,listing_date_type,single_date,start_date,end_date,bes_time,days_of_week,months,days_of_month,add_date FROM `tbl_design_user_inputs` WHERE (listing_date_type='single_date' OR listing_date_type='date_range') AND ( YEAR(single_date) = YEAR('$start_date') OR YEAR(start_date) = YEAR('$start_date') OR YEAR(end_date) = YEAR('$end_date')  )  AND user_id=".$user_id;
        $sql.= " UNION SELECT design_data_id as id,id as input_id,user_id,user_input as title,comment,listing_date_type,single_date,start_date,end_date,bes_time,days_of_week,months,days_of_month,add_date FROM `tbl_design_user_inputs` WHERE listing_date_type='days_of_week' AND user_id=".$user_id;
        $sql.= " UNION SELECT design_data_id as id,id as input_id,user_id,user_input as title,comment,listing_date_type,single_date,start_date,end_date,bes_time,days_of_week,months,days_of_month,add_date FROM `tbl_design_user_inputs` WHERE listing_date_type='month_wise' AND user_id=".$user_id;
        $sql.= " UNION SELECT design_data_id as id,id as input_id,user_id,user_input as title,comment,listing_date_type,single_date,start_date,end_date,bes_time,days_of_week,months,days_of_month,add_date FROM `tbl_design_user_inputs` WHERE listing_date_type='days_of_month' AND user_id=".$user_id;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }
        return $data;
    }
    //add by ample 04-05-20
    public function get_dynamic_column_of_delete_and_status($table="")
    {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = false;
        $str='';
        $sql = "SELECT * FROM `tbl_recordshow_dropdown` WHERE pag_cat_status='1' AND is_deleted='0' AND is_action='1' AND table_name='".$table."'";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
                $data= $row;
        }
        if(!empty($data))
        {   
            $status=$this->get_dynamic_column($data['uniqu_id'],'status');
            if($status)
            {
                $str=$str.' AND '.$status.'=1';
            }
            $deleted=$this->get_dynamic_column($data['uniqu_id'],'deleted');
            if($deleted)
            {
                $str=$str.' AND '.$deleted.'=0';
            }
        }
        return $str;
    }
    //add by ample
    public function get_dynamic_column($uniq,$key) {
        $DBH = new DatabaseHandler();
        $select_sql_col = "SELECT `col_name` FROM `tblcolumndetails` WHERE `uniqu_m_id` = '" . $uniq . "' AND `col_query_field`='Yes' AND `col_query_combo`='".$key."'";
        $STH1 = $DBH->query($select_sql_col);
        $row_col = $STH1->fetch(PDO::FETCH_ASSOC);
        $data = $row_col['col_name'];
        return $data;
    }
    //add by ample for calendar months 08-05-20
    function get_month_list($sdate,$edate)
    {
        $output = [];
        $time   = strtotime('-1 day', strtotime($sdate));
        $last   = date('Y-m', strtotime($edate));

        do {
            $month = date('Y-m', $time);
            $total = date('t', $time);
            $mo = date('n', $time);

            $output[] = [
                'mo'    =>$mo,
                'month' => $month,
                'total' => $total,
            ];

            $time = strtotime('+1 month', $time);
        } while ($month != $last);

        return $output;    
    }
    //add by ample 25-05-15
    public function GetDesignYourLifeData($design_id)
    {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data =array();
        $sql = "SELECT * FROM `tbl_design_your_life` WHERE id ='".$design_id."' ";
        $STH = $DBH->query($sql);
        if( $STH->rowCount() > 0 )
        {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $data = $row;
        }
        return $data;     
    }
    //add by ample 28-05-15
    public function GetDesignMyLifeSpecialData($design_id)
    {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data =array();
        $sql = "SELECT * FROM `tbl_specifiq_text_dyl` WHERE data_id ='".$design_id."' AND text_show='1' ORDER BY text_order ASC";
        $STH = $DBH->query($sql);
        if( $STH->rowCount() > 0 )
        {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }
        return $data;     
    }
    //add by ample 04-06-20
    public function get_data_from_wellness_items($query="",$keyword="")
    {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data =array();
        $add_ons="";
        if($keyword)
        {
            $add_ons="OR reference_title = '%".$keyword."%' OR topic_subject LIKE '%".$keyword."%' OR narration LIKE '%".$keyword."%' OR tags LIKE '%".$keyword."%'";
        }
       //$sql = "SELECT * FROM `tblsolutionitems` LEFT JOIN tblsolutionitems_others ON tblsolutionitems.sol_item_id=tblsolutionitems_others.sol_item_id  WHERE reference_title = '".$query."' OR topic_subject = '".$query."' OR narration = '".$query."' OR tags = '".$query."' ".$add_ons." ORDER BY tblsolutionitems.sol_item_id DESC"; 
       $sql = "SELECT * FROM `tblsolutionitems`  WHERE (reference_title = '".$query."' OR topic_subject = '".$query."' OR narration = '".$query."' OR tags = '".$query."' ".$add_ons." ) AND sol_item_status=1 AND sol_item_deleted=0 ORDER BY order_show ASC"; 
       $STH = $DBH->query($sql);
        if( $STH->rowCount() > 0 )
        {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }

        if(!empty($data))
        {
            foreach ($data as $key => $value) {
                $data[$key]['gallery']=$this->get_gallery_data_wellness_items($value['sol_item_id']);
            }
        }
        return $data;     
    }
    //add by ample 04-06-20
    public function get_data_from_wellness_items_for_keywords($keywords="",$category="")
    {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data =array();

      // $sql = "SELECT * FROM `tblsolutionitems` LEFT JOIN tblsolutionitems_others ON tblsolutionitems.sol_item_id=tblsolutionitems_others.sol_item_id"; 

        $sql = "SELECT * FROM `tblsolutionitems` WHERE ("; 
       
       if(!empty($keywords))
       {
         $count=count($keywords);
        foreach ($keywords as $key => $keyword) {


            $sql.="reference_title regexp '[[:<:]]".$keyword."[[:>:]]' OR topic_subject regexp '[[:<:]]".$keyword."[[:>:]]' OR narration regexp '[[:<:]]".$keyword."[[:>:]]' OR tags regexp '[[:<:]]".$keyword."[[:>:]]'";

            if($key<$count-1)
            {
                $sql.=" OR ";
            }
        }
        //add-on by ample 22-08-20
        if(!empty($category))
        {   
            $counts=count($category);
            foreach ($category as $index => $cat) {

                 if($index==0)
                {
                    $sql.=" OR ";
                }

                $sql.="category_ids regexp '[[:<:]]".$cat."[[:>:]]'";

                if($index<$counts-1)
                {
                    $sql.=" OR ";
                }
            }

        }

       }

       $sql.=" ) AND sol_item_status=1 AND sol_item_deleted=0 ORDER BY tblsolutionitems.order_show ASC";

       $STH = $DBH->query($sql);
        if( $STH->rowCount() > 0 )
        {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }

        if(!empty($data))
        {
            foreach ($data as $key => $value) {
                $data[$key]['gallery']=$this->get_gallery_data_wellness_items($value['sol_item_id']);
            }
        }
        return $data;     
    }
    //add by ample 05-06-20
    public function get_gallery_data_wellness_items($data_id)
    {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data =array();
        $sql = "SELECT * FROM `tblsolutionitems_banners` WHERE ref_id =".$data_id." ORDER BY banner_order ASC";
        $STH = $DBH->query($sql);
        if( $STH->rowCount() > 0 )
        {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }

        return $data;     
    }
    //add by ample 10-06-20
    function set_today_activity_process($data)
    {
        $result=0;
        if($data['listing_date_type']=='single_date')
        {
            $today=date('Y-m-d');
            if($data['single_date']==$today)
            {
                $result=1;
            }
        }
        elseif($data['listing_date_type']=='days_of_week')
        {
            $current_week = date("w");
            $current_week=$current_week+1;
            $days_of_week=explode(',', $data['days_of_week']);

            if (in_array($current_week, $days_of_week))
            {
                $result=1;
            }

        }
        elseif($data['listing_date_type']=='month_wise')
        {
            $current_month= date("n");
            $months=explode(',', $data['months']);

            if (in_array($current_month, $months))
            {
                $result=1;
            }
        }
        elseif($data['listing_date_type']=='days_of_month')
        {
            $current_day= date("j");
            $days_of_month=explode(',', $data['days_of_month']);

            if (in_array($current_day, $days_of_month))
            {
                $result=1;
            }
        }
        elseif($data['listing_date_type']=='date_range')
        {
            $currentDate = date('Y-m-d');
            $startDate =$data['start_date'];
            $endDate = $data['end_date'];

            if (($currentDate >= $startDate) && ($currentDate <= $endDate)){
                $result=1;
            }
        }
        elseif(empty($data['listing_date_type']))
        {
            $result=1;
        }
        return $result;  
    }
    //add by 11-06-20
    function update_calendar_DOW($days_of_week)
    {
        $array_DOW=explode(',', $days_of_week);
        $DOW=array();
        foreach ($array_DOW as $key => $value) {
             $DOW[]=$value-1;
        }
        return $DOW;
    }
    //add by ample 15-06-20
    function getUserEmailByMobile($mobile) {
        $DBH = new DatabaseHandler();
        $email = array();
        $sql = "SELECT * FROM `tblusers` WHERE `mobile` = '" . $mobile . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $r = $STH->fetch(PDO::FETCH_ASSOC);
            $email = $r['email'];
        }
        return $email;
    }

    //add by ample 15-06-20
    function getVendorEmailByMobile($mobile)
    {
        $DBH = new DatabaseHandler();
        $email = '';
        $sql = "select * from `tblvendors` where vendor_mobile = '" . $mobile . "' AND `vendor_status` = '1'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $email = stripslashes($row['vendor_email']);
        }
        return $email;
    }
    //add by ample 25-05-15
    public function get_DYL_data($ref_code,$group_id)
    {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data =array();
        $sql = "SELECT * FROM `tbl_design_your_life` WHERE ref_code ='".$ref_code."' AND group_code_id ='".$group_id."' ";
        $STH = $DBH->query($sql);
        if( $STH->rowCount() > 0 )
        {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $data = $row;
        }
        return $data;     
    }
    //add by ample 25-05-15
    public function getScrollingWindowsPageSetting($page_id)
    {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data =array();
        $sql = "SELECT * FROM `tblscrollingwindows` as sw LEFT JOIN `tblscrollingcontents` as sc ON sw.sw_id=sc.sw_id WHERE page_id ='".$page_id."' ";
        $STH = $DBH->query($sql);
        if( $STH->rowCount() > 0 )
        {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $data = $row;
        }
        return $data;     
    }
    //add by ample 19-06-20
     public function getVendorDetails($vendor_id) {
        $DBH = new DatabaseHandler();
        $data = array();
        $sql = "SELECT * FROM `tblvendors` WHERE `vendor_id` = '" . $vendor_id . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $data = $STH->fetch(PDO::FETCH_ASSOC);
        }
        return $data;
    }
    //add by ample 22-06-20
    public function getVendorContactPersons($vendor_id) {
        $DBH = new DatabaseHandler();
        $data = array();
        $sql = "SELECT con.*,C.country_name,S.state,D.city,A.area_name FROM `tblvendorcontacts` as con LEFT JOIN tblvendorlocations as LOC ON LOC.vloc_id=con.vloc_id LEFT JOIN tblcountry as C ON C.country_id=LOC.country_id LEFT JOIN tblstates as S ON S.state_id=LOC.state_id LEFT JOIN tblcities as D ON D.city_id=LOC.city_id LEFT JOIN tblarea as A ON A.area_id=LOC.area_id  WHERE con.status=1 AND con.vendor_id = '" . $vendor_id . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }
        return $data;
    }
    //add by ample 06-07-20
    public function getScrollingWindowsData($sw_id)
    {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data =array();
        $sql = "SELECT * FROM `tblscrollingwindows` as sw LEFT JOIN `tblscrollingcontents` as sc ON sw.sw_id=sc.sw_id WHERE sw.sw_id ='".$sw_id."' ";
        $STH = $DBH->query($sql);
        if( $STH->rowCount() > 0 )
        {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $data = $row;
        }
        return $data;     
    }
    //add by ample 07-07-20
    public function get_data_dropdown_by_id($page_cat_id) {
        $DBH = new DatabaseHandler();
        $arr_data = array();
        $sql = "SELECT * FROM `tbl_data_dropdown` WHERE `page_cat_id` = '" . $page_cat_id . "' and `is_deleted` = 0 ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
                $row = $STH->fetch(PDO::FETCH_ASSOC);
                $arr_data= $row;
        }
        return $arr_data;
    }
    //add by ample 07-07-20
    public function get_text_from_data_dropdown($data_dropdown)
    {
        $show_cat = '';
          $fetch_cat1 = array();
          $fetch_cat2 = array();
          $fetch_cat3 = array();
          $fetch_cat4 = array();
          $fetch_cat5 = array();
          $fetch_cat6 = array();
          $fetch_cat7 = array();
          $fetch_cat8 = array();
          $fetch_cat9 = array();
          $fetch_cat10 = array();

          if ($data_dropdown['sub_cat1'] != '')
          {
            if ($data_dropdown['canv_sub_cat1_show_fetch'] == 1)
            {
              $show_cat.= $data_dropdown['sub_cat1'].',';
            } else
            {
              $sub_cat1 = explode(',', $data_dropdown['sub_cat1']);
              $fetch_cat1 = $this -> getDataFromReportCustomized($sub_cat1, $data_dropdown['canv_sub_cat1_link'], $data_dropdown['prof_cat1_ref_code'], $data_dropdown['prof_cat1_uid']);
            }
          }
          if ($data_dropdown['sub_cat2'] != '')
          {
            if ($data_dropdown['canv_sub_cat2_show_fetch'] == 1)
            {
              $show_cat.= $data_dropdown['sub_cat2'].',';
            } else
            {
              $sub_cat2 = explode(',', $data_dropdown['sub_cat2']);
              $fetch_cat2 = $this -> getDataFromReportCustomized($sub_cat2, $data_dropdown['canv_sub_cat2_link'], $data_dropdown['prof_cat2_ref_code'], $data_dropdown['prof_cat2_uid']);
            }
          }
          if ($data_dropdown['sub_cat3'] != '')
          {
            if ($data_dropdown['canv_sub_cat3_show_fetch'] == 1)
            {
              $show_cat.= $data_dropdown['sub_cat3'].',';
            } else
            {
              $sub_cat3 = explode(',', $data_dropdown['sub_cat3']);
              $fetch_cat3 = $this -> getDataFromReportCustomized($sub_cat3, $data_dropdown['canv_sub_cat3_link'], $data_dropdown['prof_cat3_ref_code'], $data_dropdown['prof_cat3_uid']);
            }
          }

          if ($data_dropdown['sub_cat4'] != '')
          {
            if ($data_dropdown['canv_sub_cat4_show_fetch'] == 1)
            {
              $show_cat.= $data_dropdown['sub_cat4'].',';

            } else
            {
              $sub_cat4 = explode(',', $data_dropdown['sub_cat4']);
              $fetch_cat4 = $this -> getDataFromReportCustomized($sub_cat4, $data_dropdown['canv_sub_cat4_link'], $data_dropdown['prof_cat4_ref_code'], $data_dropdown['prof_cat4_uid']);
            }
          }
          if ($data_dropdown['sub_cat5'] != '')
          {
            if ($data_dropdown['canv_sub_cat5_show_fetch'] == 1)
            {
              $show_cat.= $data_dropdown['sub_cat5'].',';
            } else
            {
              $sub_cat5 = explode(',', $data_dropdown['sub_cat5']);
              $fetch_cat5 = $this -> getDataFromReportCustomized($sub_cat5, $data_dropdown['canv_sub_cat5_link'], $data_dropdown['prof_cat5_ref_code'], $data_dropdown['prof_cat5_uid']);
            }
          }
          if ($data_dropdown['sub_cat6'] != '')
          {
            if ($data_dropdown['canv_sub_cat6_show_fetch'] == 1)
            {
              $show_cat.= $data_dropdown['sub_cat6'].',';
            } else
            {
              $sub_cat6 = explode(',', $data_dropdown['sub_cat6']);
              $fetch_cat6 = $this -> getDataFromReportCustomized($sub_cat6, $data_dropdown['canv_sub_cat6_link'], $data_dropdown['prof_cat6_ref_code'], $data_dropdown['prof_cat6_uid']);
            }
          }
          if ($data_dropdown['sub_cat7'] != '')
          {
            if ($data_dropdown['canv_sub_cat7_show_fetch'] == 1)
            {
              $show_cat.= $data_dropdown['sub_cat7'].',';
            } else
            {
              $sub_cat7 = explode(',', $data_dropdown['sub_cat7']);
              $fetch_cat7 = $this -> getDataFromReportCustomized($sub_cat7, $data_dropdown['canv_sub_cat7_link'], $data_dropdown['prof_cat7_ref_code'], $data_dropdown['prof_cat7_uid']);
            }
          }
          if ($data_dropdown['sub_cat8'] != '')
          {
            if ($data_dropdown['canv_sub_cat8_show_fetch'] == 1)
            {
              $show_cat.= $data_dropdown['sub_cat8'].',';
            } else
            {
              $sub_cat8 = explode(',', $data_dropdown['sub_cat8']);
              $fetch_cat8 = $this -> getDataFromReportCustomized($sub_cat8, $data_dropdown['canv_sub_cat8_link'], $data_dropdown['prof_cat8_ref_code'], $data_dropdown['prof_cat8_uid']);
            }
          }
          if ($data_dropdown['sub_cat9'] != '')
          {
            if ($data_dropdown['canv_sub_cat9_show_fetch'] == 1)
            {
              $show_cat.= $data_dropdown['sub_cat9'].',';
            } else
            {
              $sub_cat9 = explode(',', $data_dropdown['sub_cat9']);
              $fetch_cat9 = $this -> getDataFromReportCustomized($sub_cat9, $data_dropdown['canv_sub_cat9_link'], $data_dropdown['prof_cat9_ref_code'], $data_dropdown['prof_cat9_uid']);
            }
          }
          if ($data_dropdown['sub_cat10'] != '')
          {
            if ($data_dropdown['canv_sub_cat10_show_fetch'] == 1)
            {
              $show_cat.= $data_dropdown['sub_cat10'].',';
            } else
            {
              $sub_cat10 = explode(',', $data_dropdown['sub_cat10']);
              $fetch_cat10 = $this -> getDataFromReportCustomized($sub_cat10, $data_dropdown['canv_sub_cat10_link'], $data_dropdown['prof_cat10_ref_code'], $data_dropdown['prof_cat10_uid']);
            }
          }

          $show_cat = explode(',', $show_cat);
          $show_cat = array_filter($show_cat);
          $final_array = array_merge($fetch_cat1, $fetch_cat2, $fetch_cat3, $fetch_cat4, $fetch_cat5, $fetch_cat6, $fetch_cat7, $fetch_cat8, $fetch_cat9, $fetch_cat10);
          $final_dropdown = $this -> CreateDesignLifeDropdowns($show_cat, $final_array);

          return $final_dropdown;
    }
    //add byample 09-07-20
    public function get_week_slots($week,$contact_id,$vendor_id)
    {
        $DBH = new DatabaseHandler();
        $data = array();
        $sql = "SELECT * FROM `vendor_session_time` WHERE `week` = '" . $week . "' AND `contact_id` = " . $contact_id . " AND `vendor_id` = " . $vendor_id . " ORDER BY start_time ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
                 while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }
        return $data;
    }
    //add by amle 09-07-20
    public function get_week_status($week,$contact_id,$vendor_id)
    {
        $DBH = new DatabaseHandler();
        $data = array();
        $sql = "SELECT * FROM `vendor_week_setting` WHERE `week` = '" . $week . "' AND `contact_id` = " . $contact_id . " AND `vendor_id` = " . $vendor_id . " ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
                $row = $STH->fetch(PDO::FETCH_ASSOC);
                $data= $row;
        }
        return $data;
    }
    //add by amle 09-07-20
    public function get_holiday_status($date,$contact_id,$vendor_id)
    {
        $DBH = new DatabaseHandler();
        $data = array();
        $sql = "SELECT * FROM `vendor_holidays` WHERE ('".$date."' between start_date AND end_date) AND `contact_id` = " . $contact_id . " AND `vendor_id` = " . $vendor_id . " ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }
        return $data;
    }
    //add by ample 11-07-20
    public function get_SMS_credential($SMS_ID) {
        $DBH = new DatabaseHandler();
        $data = array();
        $sql = "SELECT * FROM `tbl_sms_credentials` WHERE `SMS_ID` = '" . $SMS_ID . "' AND `STATUS` = '1' AND `DELETED` = '0' ORDER BY `SMS_ID` DESC LIMIT 1 ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $r = $STH->fetch(PDO::FETCH_ASSOC);
            $data = $r;
        }
        return $data;
    }
    //add by ample 16-07-20
    public function check_time_slot($week,$contact_id,$time)
    {
        $DBH = new DatabaseHandler();
        $return=false;
        $sql = "SELECT * FROM `vendor_session_time` WHERE `week` = '" . $week . "' AND `contact_id` = " . $contact_id . " AND ( '".$time."' BETWEEN start_time AND end_time)";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return=true;
        }
        return $return;
    }
    //add by ample 16-06-20
    public function add_appointment_data($data)
    {   

        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return=false;

        $sql = "INSERT INTO `tbl_appointment_data` (`DYL_id`,`ref_code`,`group_code_id`,`user_id`,`vendor_id`,`contact_id`,`contact_name`,`contact_address`,`appointment_date`,`appointment_time`) VALUES (".$data['DYL_id'].",'".$data['ref_code']."','".$data['group_code_id']."','".$data['user_id']."','".$data['vendor_id']."','".$data['contact_id']."','".$data['contact_name']."','".$data['contact_address']."','".$data['appointment_date']."','".$data['appointment_time']."')";

        $STH = $DBH->prepare($sql);
        $STH->execute();
        if($STH->rowCount() > 0)
        {   
           $last_id = $DBH->lastInsertId();
            $return = $last_id;
        }
        return $return;
    }
    //add by ample 16-06-20
    //commented by rahul
    // public function appointment_other_data_save($data) {
    //     $DBH = new DatabaseHandler();
    //     $return = false;
    //     if(empty($data['duration_lo']) || empty($data['unit_lo']))
    //     {
    //         $data['duration_lo']="";
    //         $data['unit_lo']="";
    //     }
    //     $sql = "INSERT INTO `tbl_appointment_other_data`(`box_title`,`appointment_id`,`comment`,`location_fav_cat`,`user_response_fav_cat`,`user_Interaction`,`alerts_fav_cat`,`scale`,`listing_date_type`,`days_of_month`,`single_date`,`start_date`,`end_date`,`months`,`days_of_week`,`bes_time`,`duration`,`unit`,`rank`) " . "VALUES ('" . addslashes($data['box_title']) . "','" . addslashes($data['appointment_id']) . "','" . addslashes($data['comment_lo']) . "','" . addslashes($data['location_lo']) . "','" . addslashes($data['User_view_lo']) . "','" . addslashes($data['User_Interaction_lo']) . "','" . addslashes($data['alert_lo']) . "','" . addslashes($data['scale_lo']) . "','" . addslashes($data['userdate_lo']) . "','" . addslashes($data['days_of_month_lo']) . "','" . $data['single_date_lo'] . "','" . $data['start_date_lo'] . "','" . $data['end_date_lo'] . "','" . addslashes($data['months_lo']) . "','" . addslashes($data['days_of_week_lo']) . "','" . addslashes($data['bes_time_lo']) . "','" . addslashes($data['duration_lo']) . "','" . addslashes($data['unit_lo']) . "','" . addslashes($data['rank']) . "')";
    //     $STH = $DBH->query($sql);
    //     if ($STH->rowCount() > 0) {
    //         $return = true;
    //     }
    //     return $return;
    // }
    //add by ample 17-07-20

    public function appointment_other_data_save($data) {
        $DBH = new DatabaseHandler();
        $return = false;

        // Set default values if empty
        $data['duration_lo'] = $data['duration_lo'] ?? '';
        $data['unit_lo'] = $data['unit_lo'] ?? '';

        // List of columns to insert
        $columns = [
            'box_title', 'appointment_id', 'comment', 'location_fav_cat', 'user_response_fav_cat',
            'user_Interaction', 'alerts_fav_cat', 'scale', 'listing_date_type', 'days_of_month',
            'single_date', 'start_date', 'end_date', 'months', 'days_of_week',
            'bes_time', 'duration', 'unit', 'rank'
        ];

        // Map $data to parameters safely
        $params = [
            ':box_title' => $data['box_title'] ?? '',
            ':appointment_id' => $data['appointment_id'] ?? '',
            ':comment' => $data['comment_lo'] ?? '',
            ':location_fav_cat' => $data['location_lo'] ?? '',
            ':user_response_fav_cat' => $data['User_view_lo'] ?? '',
            ':user_Interaction' => $data['User_Interaction_lo'] ?? '',
            ':alerts_fav_cat' => $data['alert_lo'] ?? '',
            ':scale' => $data['scale_lo'] ?? '',
            ':listing_date_type' => $data['userdate_lo'] ?? '',
            ':days_of_month' => $data['days_of_month_lo'] ?? '',
            ':single_date' => $data['single_date_lo'] ?? '',
            ':start_date' => $data['start_date_lo'] ?? '',
            ':end_date' => $data['end_date_lo'] ?? '',
            ':months' => $data['months_lo'] ?? '',
            ':days_of_week' => $data['days_of_week_lo'] ?? '',
            ':bes_time' => $data['bes_time_lo'] ?? '',
            ':duration' => $data['duration_lo'],
            ':unit' => $data['unit_lo'],
            ':rank' => $data['rank'] ?? ''
        ];

        // Build placeholders
        $placeholders = implode(',', array_keys($params));

        // Prepare SQL with placeholders
        $sql = "INSERT INTO tbl_appointment_other_data
                (" . implode(',', $columns) . ")
                VALUES (" . implode(',', array_keys($params)) . ")";

        $STH = $DBH->query($sql);
        if ($STH->execute($params)) {
            $return = true;
        }

        return $return;
    }

    public function GetAppointmentData($start_date="",$end_date="",$search_keywords="",$vendor_id="") {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        if ($vendor_id != '') {
            $str_sql_vendor_id = " AND `vendor_id` = '" . $vendor_id . "' ";
        } else {
            $str_sql_vendor_id = '';
        }
        if ($search_keywords != '') {
            $str_sql_search_keywords = " AND ( `contact_name` LIKE '%" . $search_keywords . "%' OR `contact_address` LIKE '%" . $search_keywords . "%' )";
        } else {
            $str_sql_search_keywords = '';
        }
        if ($start_date != '') {
            $str_sql_start_date = " AND DATE(appointment_date) >= '" . date('Y-m-d', strtotime($start_date)) . "' ";
        } else {
            $str_sql_start_date = '';
        }
        if ($end_date != '') {
            $str_sql_end_date = " AND DATE(appointment_date) <= '" . date('Y-m-d', strtotime($end_date)) . "' ";
        } else {
            $str_sql_end_date = '';
        }

        $user_id=$_SESSION['user_id'];
        $sql = "SELECT * FROM `tbl_appointment_data` WHERE user_id=".$user_id." " . $str_sql_vendor_id . " " . $str_sql_search_keywords . " " . $str_sql_start_date . " " . $str_sql_end_date . " ORDER BY id DESC";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }
        return $data;
    }
    //add by ample 17-07-20
    public function get_appointment_user_data($start_date="",$end_date="") {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $user_id=$_SESSION['user_id'];
        $sql = "SELECT id,appointment_date,appointment_time,contact_name,contact_address,vendor_id,contact_id,request_status FROM `tbl_appointment_data` WHERE user_id=".$user_id;

        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }
        return $data;
    }
    //add by ample 16-06-20
    public function appointment_status_update($data) {
        $DBH = new DatabaseHandler();
        $now = time();
        $return = false;

        $sql = "UPDATE `tbl_appointment_data` SET `request_status` = '" . $data['request_status'] . "',`remark` = '" . $data['remark'] . "',`status_update_date`='".date('Y-m-d H:i:s')."' WHERE `id` = '" . $data['id'] . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;

    }
    //add by ample 21-07-20
    public function get_appointment_detail($appt_id="") {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $user_id=$_SESSION['user_id'];
        $data = false;
        $sql = "SELECT * FROM `tbl_appointment_data` WHERE user_id=".$user_id." AND id=".$appt_id;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
                $data= $row;
        }
        if(!empty($data))
        {
            $data['special']=$this->get_appointment_other_detail($appt_id);
        }
        return $data;
    }
    //add by ample 21-07-20
    public function get_appointment_other_detail($appt_id="") {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $sql = "SELECT * FROM `tbl_appointment_other_data` WHERE appointment_id=".$appt_id;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }
        return $data;
    }
    public function get_vendors_appointments($appt_id="") {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $user_id=$_SESSION['user_id'];
        $sql = "SELECT DISTINCT `vendor_id` FROM `tbl_appointment_data` WHERE user_id=".$user_id;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row['vendor_id'];
            }
        }
        return $data;
    }
    //copy by ample
    public function Post_user_action_data($data) {
        // echo '<pre>';
        // print_r($data);
        // echo '</pre>';
        // die('---');
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return = false;

        $single_date_main=$start_date_main=$end_date_main=$months_main=$days_week_main=$days_of_month_main='';
        $date_type=addslashes($data['listing_date_type']);
        if($date_type=='single_date')
        {
            $single_date_main=addslashes(date("Y-m-d",strtotime($data['single_date_main'])));
        }
        elseif ($date_type=='date_range') {
            $start_date_main=addslashes(date("Y-m-d",strtotime($data['start_date_main'])));
            $end_date_main=addslashes(date("Y-m-d",strtotime($data['end_date_main'])));
        }
        elseif ($date_type=='days_of_month') {
            $days_of_month_main=addslashes(implode(',', $data['days_of_month_main']));
        }
        elseif ($date_type=='days_of_week') {
            $days_of_week_main=addslashes(implode(',', $data['days_of_week_main']));
        }
        elseif ($date_type=='month_wise') {
            $months_main=addslashes(implode(',', $data['months_main']));
        }

        if(empty($data['duration_main']) || empty($data['unit_main']))
        {
            $data['duration_main']="";
            $data['unit_main']="";
        }

        if(empty($single_date_main)){
            $single_date_main = '0000-00-00';
        }
        if(empty($start_date_main)){
            $start_date_main = '0000-00-00';
        }
        if(empty($end_date_main)){
            $end_date_main = '0000-00-00';
        }
        $value['activity_id'] = is_numeric($value['activity_id']) ? (int)$value['activity_id'] : 0;
        $data['User_view_main'] = !empty($data['User_view_main']) ? $data['User_view_main'] : 0;
         $data['alert_main'] = !empty($data['alert_main']) ? $data['alert_main'] : 0;
       $sql = "INSERT INTO `tbl_user_action_data_dyl`(`user_id`, `design_id`, `design_input_id`,`action_title`,`listing_date_type`, `days_of_month`, `single_date`, `start_date`, `end_date`, `days_of_week`, `months`, `location_fav_cat`, `user_response_fav_cat`,`user_what_fav_cat`,`alerts_fav_cat`,`bes_time`,`duration`,`scale`,`comment`,`unit`) "
                . "VALUES ('".$data['user_id']."','".$data['design_id']."','".$data['design_input_id']."','".addslashes($data['action_title'])."','".$date_type."','".$days_of_month_main."','".$single_date_main."','".$start_date_main."','".$end_date_main."','".$days_of_week_main."','".$months_main."','".addslashes($data['location_main'])."','".addslashes($data['User_view_main'])."','".addslashes($data['User_Interaction_main'])."','".addslashes($data['alert_main'])."','".addslashes($data['bes_time_main'])."','".addslashes($data['duration_main'])."','".addslashes($data['scale_main'])."','".addslashes($data['comment_main'])."','".addslashes($data['unit_main'])."')";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $id = $DBH->lastInsertId();
            $DBH->commit();
            $return = true;
        }
        return $return;
    }
    //add by ample 29-07-20
    function getBoxtitleDYL($page_cat_id="")
    {

          $data_dropdown = $this -> GETDATADROPDOWNMYDAYTODAYOPTION($page_cat_id, '127');
          $show_cat = '';
          $fetch_cat1 = array();
          $fetch_cat2 = array();
          $fetch_cat3 = array();
          $fetch_cat4 = array();
          $fetch_cat5 = array();
          $fetch_cat6 = array();
          $fetch_cat7 = array();
          $fetch_cat8 = array();
          $fetch_cat9 = array();
          $fetch_cat10 = array();

          if ($data_dropdown[0]['sub_cat1'] != '')
          {
            if ($data_dropdown[0]['canv_sub_cat1_show_fetch'] == 1)
            {
              $show_cat.= $data_dropdown[0]['sub_cat1'].',';
            } else
            {
              $sub_cat1 = explode(',', $data_dropdown[0]['sub_cat1']);
              $fetch_cat1 = $this -> getDataFromReportCustomized($sub_cat1, $data_dropdown[0]['canv_sub_cat1_link'], $data_dropdown[0]['prof_cat1_ref_code'], $data_dropdown[0]['prof_cat1_uid']);
            }
          }
          if ($data_dropdown[0]['sub_cat2'] != '')
          {
            if ($data_dropdown[0]['canv_sub_cat2_show_fetch'] == 1)
            {
              $show_cat.= $data_dropdown[0]['sub_cat2'].',';
            } else
            {
              $sub_cat2 = explode(',', $data_dropdown[0]['sub_cat2']);
              $fetch_cat2 = $this -> getDataFromReportCustomized($sub_cat2, $data_dropdown[0]['canv_sub_cat2_link'], $data_dropdown[0]['prof_cat2_ref_code'], $data_dropdown[0]['prof_cat2_uid']);
            }
          }
          if ($data_dropdown[0]['sub_cat3'] != '')
          {
            if ($data_dropdown[0]['canv_sub_cat3_show_fetch'] == 1)
            {
              $show_cat.= $data_dropdown[0]['sub_cat3'].',';
            } else
            {
              $sub_cat3 = explode(',', $data_dropdown[0]['sub_cat3']);
              $fetch_cat3 = $this -> getDataFromReportCustomized($sub_cat3, $data_dropdown[0]['canv_sub_cat3_link'], $data_dropdown[0]['prof_cat3_ref_code'], $data_dropdown[0]['prof_cat3_uid']);
            }
          }

          if ($data_dropdown[0]['sub_cat4'] != '')
          {
            if ($data_dropdown[0]['canv_sub_cat4_show_fetch'] == 1)
            {
              $show_cat.= $data_dropdown[0]['sub_cat4'].',';

            } else
            {
              $sub_cat4 = explode(',', $data_dropdown[0]['sub_cat4']);
              $fetch_cat4 = $this -> getDataFromReportCustomized($sub_cat4, $data_dropdown[0]['canv_sub_cat4_link'], $data_dropdown[0]['prof_cat4_ref_code'], $data_dropdown[0]['prof_cat4_uid']);
            }
          }
          if ($data_dropdown[0]['sub_cat5'] != '')
          {
            if ($data_dropdown[0]['canv_sub_cat5_show_fetch'] == 1)
            {
              $show_cat.= $data_dropdown[0]['sub_cat5'].',';
            } else
            {
              $sub_cat5 = explode(',', $data_dropdown[0]['sub_cat5']);
              $fetch_cat5 = $this -> getDataFromReportCustomized($sub_cat5, $data_dropdown[0]['canv_sub_cat5_link'], $data_dropdown[0]['prof_cat5_ref_code'], $data_dropdown[0]['prof_cat5_uid']);
            }
          }
          if ($data_dropdown[0]['sub_cat6'] != '')
          {
            if ($data_dropdown[0]['canv_sub_cat6_show_fetch'] == 1)
            {
              $show_cat.= $data_dropdown[0]['sub_cat6'].',';
            } else
            {
              $sub_cat6 = explode(',', $data_dropdown[0]['sub_cat6']);
              $fetch_cat6 = $this -> getDataFromReportCustomized($sub_cat6, $data_dropdown[0]['canv_sub_cat6_link'], $data_dropdown[0]['prof_cat6_ref_code'], $data_dropdown[0]['prof_cat6_uid']);
            }
          }
          if ($data_dropdown[0]['sub_cat7'] != '')
          {
            if ($data_dropdown[0]['canv_sub_cat7_show_fetch'] == 1)
            {
              $show_cat.= $data_dropdown[0]['sub_cat7'].',';
            } else
            {
              $sub_cat7 = explode(',', $data_dropdown[0]['sub_cat7']);
              $fetch_cat7 = $this -> getDataFromReportCustomized($sub_cat7, $data_dropdown[0]['canv_sub_cat7_link'], $data_dropdown[0]['prof_cat7_ref_code'], $data_dropdown[0]['prof_cat7_uid']);
            }
          }
          if ($data_dropdown[0]['sub_cat8'] != '')
          {
            if ($data_dropdown[0]['canv_sub_cat8_show_fetch'] == 1)
            {
              $show_cat.= $data_dropdown[0]['sub_cat8'].',';
            } else
            {
              $sub_cat8 = explode(',', $data_dropdown[0]['sub_cat8']);
              $fetch_cat8 = $this -> getDataFromReportCustomized($sub_cat8, $data_dropdown[0]['canv_sub_cat8_link'], $data_dropdown[0]['prof_cat8_ref_code'], $data_dropdown[0]['prof_cat8_uid']);
            }
          }
          if ($data_dropdown[0]['sub_cat9'] != '')
          {
            if ($data_dropdown[0]['canv_sub_cat9_show_fetch'] == 1)
            {
              $show_cat.= $data_dropdown[0]['sub_cat9'].',';
            } else
            {
              $sub_cat9 = explode(',', $data_dropdown[0]['sub_cat9']);
              $fetch_cat9 = $this -> getDataFromReportCustomized($sub_cat9, $data_dropdown[0]['canv_sub_cat9_link'], $data_dropdown[0]['prof_cat9_ref_code'], $data_dropdown[0]['prof_cat9_uid']);
            }
          }
          if ($data_dropdown[0]['sub_cat10'] != '')
          {
            if ($data_dropdown[0]['canv_sub_cat10_show_fetch'] == 1)
            {
              $show_cat.= $data_dropdown[0]['sub_cat10'].',';
            } else
            {
              $sub_cat10 = explode(',', $data_dropdown[0]['sub_cat10']);
              $fetch_cat10 = $this -> getDataFromReportCustomized($sub_cat10, $data_dropdown[0]['canv_sub_cat10_link'], $data_dropdown[0]['prof_cat10_ref_code'], $data_dropdown[0]['prof_cat10_uid']);
            }
          }

          $show_cat = explode(',', $show_cat);
          $show_cat = array_filter($show_cat);
          $final_array = array_merge($fetch_cat1, $fetch_cat2, $fetch_cat3, $fetch_cat4, $fetch_cat5, $fetch_cat6, $fetch_cat7, $fetch_cat8, $fetch_cat9, $fetch_cat10);
          $final_dropdown = $this -> CreateDesignLifeDropdowns($show_cat, $final_array);

        return $final_dropdown;
    }
     //copy by ample & add update for new 29-07-20
    public function Post_user_report_action_data($data) {
        // echo '<pre>';
        // print_r($data);
        // echo '</pre>';
        // die('---');
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return = false;

        $single_date_main=$start_date_main=$end_date_main=$months_main=$days_week_main=$days_of_month_main='';
        $date_type=addslashes($data['listing_date_type']);
        if($date_type=='single_date')
        {
            $single_date_main=addslashes(date("Y-m-d",strtotime($data['single_date_main'])));
        }
        elseif ($date_type=='date_range') {
            $start_date_main=addslashes(date("Y-m-d",strtotime($data['start_date_main'])));
            $end_date_main=addslashes(date("Y-m-d",strtotime($data['end_date_main'])));
        }
        elseif ($date_type=='days_of_month') {
            $days_of_month_main=addslashes(implode(',', $data['days_of_month_main']));
        }
        elseif ($date_type=='days_of_week') {
            $days_of_week_main=addslashes(implode(',', $data['days_of_week_main']));
        }
        elseif ($date_type=='month_wise') {
            $months_main=addslashes(implode(',', $data['months_main']));
        }

        if(empty($data['duration_main']) || empty($data['unit_main']))
        {
            $data['duration_main']="";
            $data['unit_main']="";
        }
        if(empty($single_date_main)){
            $single_date_main = '0000-00-00';
        }
        if(empty($start_date_main)){
            $start_date_main = '0000-00-00';
        }
        if(empty($end_date_main)){
            $end_date_main = '0000-00-00';
        }
        $data['User_view_main'] = is_numeric($data['User_view_main']) ? (int)$data['User_view_main'] : 0;
        $data['alert_main'] = is_numeric($data['alert_main']) ? (int)$data['alert_main'] : 0;
        $data['unit_main'] = is_numeric($data['unit_main']) ? (int)$data['unit_main'] : 0;
        // $data['vendor_id'] = is_numeric($data['vendor_id']) ? (int)$data['vendor_id'] : 0;
       $sql = "INSERT INTO `tbl_user_report_action_data`(`user_id`, `report_name`, `report_date_type`, `report_date_data`, `keyword`,`action_title`,`listing_date_type`, `days_of_month`, `single_date`, `start_date`, `end_date`, `days_of_week`, `months`, `location_fav_cat`, `user_response_fav_cat`,`user_what_fav_cat`,`alerts_fav_cat`,`bes_time`,`duration`,`scale`,`comment`,`unit`) "
                . "VALUES ('".$data['user_id']."','".addslashes($data['report_name'])."','".$data['report_date_type']."','".$data['report_date_data']."','".addslashes($data['keyword_data'])."','".addslashes($data['action_title'])."','".$date_type."','".$days_of_month_main."','".$single_date_main."','".$start_date_main."','".$end_date_main."','".$days_of_week_main."','".$months_main."','".addslashes($data['location_main'])."','".addslashes($data['User_view_main'])."','".addslashes($data['User_Interaction_main'])."','".addslashes($data['alert_main'])."','".addslashes($data['bes_time_main'])."','".addslashes($data['duration_main'])."','".addslashes($data['scale_main'])."','".addslashes($data['comment_main'])."','".addslashes($data['unit_main'])."')";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $id = $DBH->lastInsertId();
            $DBH->commit();
            $return = true;
        }
        return $return;
    }
    //add by ample 31-06-20
    public function get_filter_data_rss_feed_item($title="",$keyword="")
    {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data =array();
        if($title)
        {
            $sql_title="rss_feed_item_title = '".$title."' OR rss_feed_item_desc = '".$title."' OR rss_feed_item_link = '".$title."' OR rss_feed_item_author = '".$title."' OR rss_feed_item_category = '".$title."'";
        }
        if($keyword)
        {
            $sql_keyword="OR rss_feed_item_title LIKE '%".$keyword."%' OR rss_feed_item_desc LIKE '%".$keyword."%' OR rss_feed_item_link LIKE '%".$keyword."%' OR rss_feed_item_author LIKE '%".$keyword."%' OR rss_feed_item_category LIKE '%".$keyword."%' ";
        }
        $sql = "SELECT * FROM `tblrssfeeditems` WHERE ".$sql_title." ".$sql_keyword." AND rss_feed_item_status=1 "; 
       $STH = $DBH->query($sql);
        if( $STH->rowCount() > 0 )
        {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }

        return $data;     
    }
    //add by ample 05-08-20
    public function get_filter_data_rss_feed_items($title="",$keywords="")
    {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data =array();
        $sql_title="";
        if($title)
        {
            $sql_title="rss_feed_item_title = '".$title."' OR rss_feed_item_desc = '".$title."' OR rss_feed_item_link = '".$title."' OR rss_feed_item_author = '".$title."' OR rss_feed_item_category = '".$title."'";
        }

        $sql = "SELECT * FROM `tblrssfeeditems` LEFT JOIN `tblrssfeedurl` ON tblrssfeeditems.rss_feed_url_id=tblrssfeedurl.rss_feed_url_id WHERE ".$sql_title." "; 

        if(!empty($keywords))
           {
             $count=count($keywords);

            if($title)
            {
                $sql.=" OR ";
            }

            foreach ($keywords as $key => $keyword) {

                $sql.="( rss_feed_item_title regexp '[[:<:]]".$keyword."[[:>:]]' OR rss_feed_item_desc regexp '[[:<:]]".$keyword."[[:>:]]' OR rss_feed_item_link regexp '[[:<:]]".$keyword."[[:>:]]' OR rss_feed_item_author regexp '[[:<:]]".$keyword."[[:>:]]' OR rss_feed_item_category regexp '[[:<:]]".$keyword."[[:>:]]')";

                if($key<$count-1)
                {
                    $sql.=" OR ";
                }
            }
           }


        $sql.=" AND rss_feed_item_status=1 AND rss_feed_status=1 ORDER BY rss_feed_item_id DESC";

       $STH = $DBH->query($sql);
        if( $STH->rowCount() > 0 )
        {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }

        return $data;     
    }
    //add by ample 27-08-20
    public function get_filter_data_mindjumble($title="",$keywords="")
    {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data =array();
        $sql_title="";
        if($title)
        {
            $sql_title=" box_title = '".$title."' OR short_narration = '".$title."' ";
        }

        $sql = "SELECT * FROM `tblmindjumble` WHERE ( ".$sql_title." "; 

        if(!empty($keywords))
           {
             $count=count($keywords);

            if($title)
            {
                $sql.=" OR ";
            }

            foreach ($keywords as $key => $keyword) {

                $sql.=" box_title regexp '[[:<:]]".$keyword."[[:>:]]' OR short_narration regexp '[[:<:]]".$keyword."[[:>:]]' OR tags regexp '[[:<:]]".$keyword."[[:>:]]' ";

                if($key<$count-1)
                {
                    $sql.=" OR ";
                }
            }
           }


        $sql.=" ) AND page_id=44 AND status=1 AND is_deleted=0 ORDER BY order_no ASC";

        //echo $sql; die('--ss');

       $STH = $DBH->query($sql);
        if( $STH->rowCount() > 0 )
        {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }

        return $data;     
    }
    //add by ample 07-08-20
    public function get_button_data_WSI($data_id="") {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $sql = "SELECT * FROM `tbl_wsi_buttons` WHERE button_show=1 AND data_id=".$data_id." ORDER BY button_order ASC";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }
        if(empty($data))
        {
            $data=$this->get_common_button_setting_data('Menu',68);
        }
        return $data;
    }
    //add by ample 26-08-20
    public function get_button_data_RSS($data_id="") {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $sql = "SELECT * FROM `tbl_rss_buttons` WHERE button_show=1 AND data_id=".$data_id." ORDER BY button_order ASC";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }
        if(empty($data))
        {
            $data=$this->get_common_button_setting_data('Menu',42);
        }
        return $data;
    }
    //add by ample 07-08-20
    public function get_common_button_setting_data($page_type="",$page_name="") {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $sql = "SELECT * FROM `tbl_common_button_setting` WHERE page_type='".$page_type."' AND page_name=".$page_name." AND status=1 AND is_deleted=0";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
           $row = $STH->fetch(PDO::FETCH_ASSOC);
           $data=$this->get_common_buttons_data($row['id']);
        }
        return $data;
    }
    //add by ample 07-08-20
    public function get_common_buttons_data($data_id="") {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $sql = "SELECT * FROM `tbl_common_buttons` WHERE button_show=1 AND data_id=".$data_id." ORDER BY button_order ASC";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }
        return $data;
    }
    //add by ample 10-08-20
    public function get_my_fav_list_category() {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $user_id=$_SESSION['user_id'];
        $sql = "SELECT DISTINCT TFC.fav_cat,TFC.fav_cat_id FROM `tblusersfavscrolling` AS TA LEFT JOIN `tblfavcategory` TFC ON TA.ufs_cat_id = TFC.fav_cat_id  WHERE TA.user_id=".$user_id." AND TA.ufs_status = '1' ORDER BY TFC.fav_cat ASC";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }
        return $data;
    }
    //add by ample 10-08-20
    public function get_my_fav_list_priority() {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $user_id=$_SESSION['user_id'];
        $sql = "SELECT DISTINCT TFC.fav_cat,TFC.fav_cat_id FROM `tblusersfavscrolling` AS TA LEFT JOIN `tblfavcategory` TFC ON TA.ufs_priority = TFC.fav_cat_id  WHERE TA.user_id=".$user_id." AND TA.ufs_status = '1' ORDER BY TFC.fav_cat ASC";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }
        return $data;
    }
    //add by ample 10-08-20
    public function get_my_fav_list_pages() {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $user_id=$_SESSION['user_id'];
        $sql = "SELECT DISTINCT TS.page_id,TS.menu_title FROM `tblusersfavscrolling` AS TA LEFT JOIN `tblpages` TS ON TA.page_id = TS.page_id  WHERE TA.user_id=".$user_id." AND TA.ufs_status = '1' ORDER BY TS.menu_title ASC";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }
        return $data;
    }
    // add by ample 11-08-20
    function saveScrollingContent_favlist($page_id,$sc_id,$note,$priority,$type_id,$cat_id)
    {   
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $res = false;
        $user_id=$_SESSION['user_id'];
        $sql = "INSERT INTO `tblusersfavscrolling` (`user_id`, `page_id`, `sc_id`,`ufs_note`,`ufs_type`,`ufs_status`,`ufs_priority`,`ufs_cat_id`) " . "VALUES ('" . $user_id . "','" . $page_id . "','" . $sc_id . "','" . $note . "','".$type_id."','1','".$priority."','".$cat_id."')";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
             $res = true;
        }
        return $res;
    }
    //add by ample 11-08-20
    function getScrollingContentDetailsForFavList($sc_id)
    {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        
        $sw_header = '';
        $sc_title = '';
        $sc_content_type = '';
        $sc_content = '';
        $sc_image = '';
        $sc_video = '';
        $sc_flash = '';
        $rss_feed_item_id = '';
        
        $sql = "SELECT tsc.* , tsw.sw_header FROM `tblscrollingcontents` AS tsc LEFT JOIN `tblscrollingwindows` AS tsw ON tsc.sw_id = tsw.sw_id WHERE tsc.sc_id = '".$sc_id."'";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);  
            $sw_header = stripslashes($row['sw_header']);
            $sc_title = stripslashes($row['sc_title']);
            $sc_content_type = stripslashes($row['sc_content_type']);
            $sc_content = stripslashes($row['sc_content']);
            $sc_image = stripslashes($row['sc_image']);
            $sc_video = stripslashes($row['sc_video']);
            $sc_flash = stripslashes($row['sc_flash']);
            $rss_feed_item_id = stripslashes($row['rss_feed_item_id']);
        }
        return array($sw_header,$sc_title,$sc_content_type,$sc_content,$sc_image,$sc_video,$sc_flash,$rss_feed_item_id);
    }
     // add by ample 13-08-20
    public function delete_fav_list_data($ufs_id="")
    {

        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return=false;
        $sql = "DELETE FROM `tblusersfavscrolling` WHERE `ufs_id` = ".$ufs_id; 
        // $STH = $DBH->prepare($sql); 
        // $STH->execute();
        $STH = $DBH->query($sql);
        $STH->execute();
        if($STH->rowCount() > 0)
        {
            $return = true;
        }
        return $return;
    }
    //add by ample 13-08-20
    public function get_short_fav_data($ufs_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $sql = "SELECT * FROM `tblusersfavscrolling`  WHERE ufs_id=".$ufs_id;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data= $row;
            }
        }
        return $data;
    }
    //add by ample 13-08-20
    public function update_fav_list_note($ufs_id,$ufs_note,$ufs_priority) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "UPDATE `tblusersfavscrolling` SET `ufs_note` = '" . $ufs_note . "',`ufs_priority`= '" . $ufs_priority . "' WHERE `ufs_id` = '" . $ufs_id . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;

    }
    //add by ample
    public function getSolutionItemDetailMain($sol_item_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $sql = "SELECT * FROM `tblsolutionitems` WHERE sol_item_id = '" . $sol_item_id . "' ";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $data=$row;
        }
        return $data;
    } 
    // add by ample 14-08-20
    function saveFavLibraryBoxData($title,$category,$note,$type,$file,$type_id,$section,$priority,$data_type)
    {   
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $res = false;
        $user_id=$_SESSION['user_id'];
        $sql = "INSERT INTO `tblfavlibrary` (`user_id`, `category`,`title`,`type`,`file`,`note`,`priority`,`type_id`,`section`,`data_type`,`status`) " . "VALUES ('" . $user_id . "','" . $category . "','" . $title . "','".$type."','".$file."','".$note."','".$priority."','".$type_id."','".$section."','".$data_type."',1)";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
             $res = true;
        }
        return $res;
    }
    // add by ample 06-10-20
    public function delete_FavLibrary_data($id="")
    {

        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return=false;
        $sql = "DELETE FROM `tblfavlibrary` WHERE `id` = ".$id; 
        $STH = $DBH->query($sql);
        $STH->execute();
        if($STH->rowCount() > 0)
        {
            $return = true;
        }
        return $return;
    }
     //add by ample 13-08-20 & update 06-10-20
    public function get_short_favlibrary_data($id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $sql = "SELECT * FROM `tblfavlibrary`  WHERE id=".$id;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data= $row;
            }
        }
        return $data;
    }
    //add by ample 13-08-20 & update 06-10-20
    public function update_favlibrary_list_note($id,$note) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "UPDATE `tblfavlibrary` SET `note` = '" . $note . "' WHERE `id` = '" . $id . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;

    }
    //add by ample 21-08-20 & update 24-08-20
    public function getManageFavCatDropdownDataOptionIcon($id="",$sel_ids="")
    {   
        $page_icon =array();
        $data=$this->getManageFavCatDropdown($id);
        if(!empty($data))
        {
            $data['subcat']='';
            for ($i=0; $i < 10; $i++) { 
                if(!empty($data['sub_cat'.$i]))
                {

                    $data['subcat']=$data['subcat'].','.$data['sub_cat'.$i];
                }
                $data['subcat'] = trim($data['subcat'],",");
            }
            $newData=$this->GetCategoryNameByid($data['subcat']);
            if(!empty($newData))
            {   

                 foreach ($newData as $key => $value) {
                    $sel= $sel_css="";
                    //commented by rahul
                    // if (in_array($value['activity_id'], $sel_ids))
                    // {
                    //     $sel="checked";
                    //     $sel_css='cat-select';
                    // }
                    if (is_array($sel_ids) && in_array($value['activity_id'], $sel_ids)) {
                        $sel = "checked";
                        $sel_css = 'cat-select';
                    }

                    
                    if($value['page_icon_type']=='Image')
                    {   

                        $imgData=$this->getImgData($value['page_icon']);
                        if(!empty($imgData['image']))
                        {
                            $page_icon[]='<img src="'.SITE_URL.'/uploads/'.$imgData['image'].'" title="'.$value['activity_name'].'" class="cat_class '.$sel_css.'" id="cat_img'.$key.'" onclick="add_on_category('.$key.')" style="width:55px; height: 55px;"/><input type="checkbox" style="display:none;" class="cat_category" name="category[]" value="'.$value['activity_id'].'" id="category'.$key.'" '.$sel.'/>';
                        }
                        else
                        {
                            $page_icon[]='<img src="'.SITE_URL.'/images/no-image.png" title="'.$value['activity_name'].'" class="cat_class '.$sel_css.'" id="cat_img'.$key.'" onclick="add_on_category('.$key.')" style="width:55px; height: 55px;"/><input type="checkbox" class="cat_category" style="display:none;" name="category[]" value="'.$value['activity_id'].'" id="category'.$key.'" '.$sel.'/>'; 
                        }
                    }
                    else
                    {
                       $page_icon[]='<img src="'.SITE_URL.'/images/no-image.png" title="'.$value['activity_name'].'" class="cat_class '.$sel_css.'" id="cat_img'.$key.'" onclick="add_on_category('.$key.')" style="width:55px; height: 55px;"/><input type="checkbox" style="display:none;" name="category[]" class="cat_category" value="'.$value['activity_id'].'" id="category'.$key.'" '.$sel.'/>'; 
                    }
                 }
            }
        }
        return $page_icon;  
    }
    //add by ample 21-08-20
    public function get_reward_list_box_data($page_id,$button_id) {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $today=date('Y-m-d');
        $sql = "SELECT * FROM `tblrewardlist` WHERE ((reward_list_date <= '".$today."' AND event_close_date >= '".$today."') OR (reward_list_date <= '".$today."' AND event_close_date = '0000-00-00')) AND show_cat=".$button_id." AND shows_where=".$page_id." AND reward_list_status=1 AND reward_list_deleted=0";
        $STH = $DBH->prepare($sql); 
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }
        return $data;
    }
    //add by ample 16-12-20
    public function get_reward_list_box_data_on_schedule($page_id,$button_id)
    {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data =array();
        $data1 =array();
        $data2 =array();

        $today=date('Y-m-d');
        $month = date('n', strtotime($today));
        $week = date('w', strtotime($today))+1;
        $day = date('j', strtotime($today));

        $sql = "SELECT DISTINCT reward_list_id,tr.* FROM `tblrewardlist` tr LEFT JOIN tbl_common_scheduled tcs ON tr.reward_list_id=tcs.redirect_id WHERE reward_list_status=1 AND  reward_list_deleted=0 AND show_cat=".$button_id." AND shows_where=".$page_id." AND (redirect='rewardList' OR redirect IS NULL) AND (publish_date_type='' OR publish_date_type IS NULL ) AND (state_id=0 OR state_id IS NULL)"; 
        $sql.= " UNION SELECT DISTINCT reward_list_id,tr.* FROM `tblrewardlist` tr LEFT JOIN tbl_common_scheduled tcs ON tr.reward_list_id=tcs.redirect_id WHERE reward_list_status=1 AND  reward_list_deleted=0 AND show_cat=".$button_id." AND shows_where=".$page_id." AND redirect='rewardList' AND publish_date_type='single_date' AND publish_single_date = '".$today."' AND (state_id=0 OR state_id IS NULL)";
        $sql.= " UNION SELECT DISTINCT reward_list_id,tr.* FROM `tblrewardlist` tr LEFT JOIN tbl_common_scheduled tcs ON tr.reward_list_id=tcs.redirect_id WHERE reward_list_status=1 AND  reward_list_deleted=0 AND show_cat=".$button_id." AND shows_where=".$page_id." AND redirect='rewardList' AND publish_date_type='date_range' AND (publish_start_date <= '".$today."' AND publish_end_date >= '".$today."') AND (state_id=0 OR state_id IS NULL)";
        $sql.= " UNION SELECT DISTINCT reward_list_id,tr.* FROM `tblrewardlist` tr LEFT JOIN tbl_common_scheduled tcs ON tr.reward_list_id=tcs.redirect_id WHERE reward_list_status=1 AND  reward_list_deleted=0 AND show_cat=".$button_id." AND shows_where=".$page_id." AND redirect='rewardList' AND publish_date_type='month_wise' AND publish_month_wise regexp '[[:<:]]".$month."[[:>:]]' AND (state_id=0 OR state_id IS NULL)";
        $sql.= " UNION SELECT DISTINCT reward_list_id,tr.* FROM `tblrewardlist` tr LEFT JOIN tbl_common_scheduled tcs ON tr.reward_list_id=tcs.redirect_id WHERE reward_list_status=1 AND  reward_list_deleted=0 AND show_cat=".$button_id." AND shows_where=".$page_id." AND redirect='rewardList' AND publish_date_type='days_of_week' AND publish_days_of_week regexp '[[:<:]]".$week."[[:>:]]' AND (state_id=0 OR state_id IS NULL)";
        $sql.= " UNION SELECT DISTINCT reward_list_id,tr.* FROM `tblrewardlist` tr LEFT JOIN tbl_common_scheduled tcs ON tr.reward_list_id=tcs.redirect_id WHERE reward_list_status=1 AND  reward_list_deleted=0 AND show_cat=".$button_id." AND shows_where=".$page_id." AND redirect='rewardList' AND publish_date_type='days_of_month' AND publish_days_of_month regexp '[[:<:]]".$day."[[:>:]]' AND (state_id=0 OR state_id IS NULL)";
        $STH = $DBH->query($sql);
        if( $STH->rowCount() > 0 )
        {
           while ($row = $STH->fetch(PDO::FETCH_ASSOC)) 
           {
                $data1[]= $row;
            }
            
        }

        $user_id = $_SESSION['user_id'];
        if(!empty($user_id))
        {
            $data2=$this->get_reward_list_box_data_location_schedule($user_id,$page_id,$button_id);
        }

        $data=array_merge($data1,$data2);
        return $data; 
    }
    //add by ample 16-12-20
    function get_reward_list_box_data_location_schedule($user_id,$page_id,$button_id)
    {   
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data =array();

        $user_info=$this->getUserDetails($user_id);

        $today=date('Y-m-d');
        $month = date('n', strtotime($today));
        $week = date('w', strtotime($today))+1;
        $day = date('j', strtotime($today));

        $sql = "SELECT DISTINCT reward_list_id,tr.* FROM `tblrewardlist` tr LEFT JOIN tbl_common_scheduled tcs ON tr.reward_list_id=tcs.redirect_id WHERE reward_list_status=1 AND  reward_list_deleted=0 AND show_cat=".$button_id." AND shows_where=".$page_id." AND redirect='rewardList'  AND (publish_date_type='' OR publish_date_type IS NULL ) AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))"; 
        $sql.= " UNION SELECT DISTINCT reward_list_id,tr.* FROM `tblrewardlist` tr LEFT JOIN tbl_common_scheduled tcs ON tr.reward_list_id=tcs.redirect_id WHERE reward_list_status=1 AND  reward_list_deleted=0 AND show_cat=".$button_id." AND shows_where=".$page_id." AND redirect='rewardList' AND publish_date_type='single_date' AND publish_single_date = '".$today."' AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))";
        $sql.= " UNION SELECT DISTINCT reward_list_id,tr.* FROM `tblrewardlist` tr LEFT JOIN tbl_common_scheduled tcs ON tr.reward_list_id=tcs.redirect_id WHERE reward_list_status=1 AND  reward_list_deleted=0 AND show_cat=".$button_id." AND shows_where=".$page_id." AND redirect='rewardList' AND publish_date_type='date_range' AND (publish_start_date <= '".$today."' AND publish_end_date >= '".$today."') AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))";
        $sql.= " UNION SELECT DISTINCT reward_list_id,tr.* FROM `tblrewardlist` tr LEFT JOIN tbl_common_scheduled tcs ON tr.reward_list_id=tcs.redirect_id WHERE reward_list_status=1 AND  reward_list_deleted=0 AND show_cat=".$button_id." AND shows_where=".$page_id." AND redirect='rewardList' AND publish_date_type='month_wise' AND publish_month_wise regexp '[[:<:]]".$month."[[:>:]]' AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))";
        $sql.= " UNION SELECT DISTINCT reward_list_id,tr.* FROM `tblrewardlist` tr LEFT JOIN tbl_common_scheduled tcs ON tr.reward_list_id=tcs.redirect_id WHERE reward_list_status=1 AND  reward_list_deleted=0 AND show_cat=".$button_id." AND shows_where=".$page_id." AND redirect='rewardList' AND publish_date_type='days_of_week' AND publish_days_of_week regexp '[[:<:]]".$week."[[:>:]]' AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))";
        $sql.= " UNION SELECT DISTINCT reward_list_id,tr.* FROM `tblrewardlist` tr LEFT JOIN tbl_common_scheduled tcs ON tr.reward_list_id=tcs.redirect_id WHERE reward_list_status=1 AND  reward_list_deleted=0 AND show_cat=".$button_id." AND shows_where=".$page_id." AND redirect='rewardList' AND publish_date_type='days_of_month' AND publish_days_of_month regexp '[[:<:]]".$day."[[:>:]]' AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))";
        // echo $sql; die('------ss');
        $STH = $DBH->query($sql);
        if( $STH->rowCount() > 0 )
        {
           while ($row = $STH->fetch(PDO::FETCH_ASSOC)) 
           {
                $data[]= $row;
            }
            
        }
        return $data;
    }
    
    //add by ample 29-08-20
        public function getPagenamebyid($page_id) {
            $my_DBH = new DatabaseHandler();
            $DBH = $my_DBH->raw_handle();
            $DBH->beginTransaction();
            $page_name = '';        
            $sql = "SELECT * FROM `tblpages` WHERE `page_id` ='".$page_id."' ";
            $STH = $DBH->prepare($sql);
            $STH->execute();
            if($STH->rowCount() > 0)
            {
                $row = $STH->fetch(PDO::FETCH_ASSOC);
                $page_name = $row['page_name'];
            }
            return $page_name; 
        }
    //add by ample
    public function get_my_modules() {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $user_id=$_SESSION['user_id'];
        $sql = "SELECT DISTINCT TRR.reward_module_id,TS.menu_title as reward_module_name FROM `tblrewardredeamed` AS TRR LEFT JOIN `tblrewardmodules` TRM ON TRR.reward_module_id = TRM.reward_module_id  LEFT JOIN `tblpages` TS ON TRM.page_id = TS.page_id  WHERE TRR.user_id=".$user_id."  ORDER BY TS.menu_title ASC";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }
        return $data;
    }
    public function get_daily_foods_meal_data($food_type="",$sel_id="") {
        $DBH = new DatabaseHandler();
        $option_str = "";
        $food_str="";
        if($food_type)
        {
            $food_str=' AND food_veg_nonveg='.$food_type;
        }
        $sql = "SELECT * FROM `tbldailymeals` WHERE status=1 AND deleted=0 ".$food_str." ORDER BY `meal_item` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                 $sel="";
                if(!empty($sel_id))
                {   
                    if($sel_id==$row['meal_id'])
                    {
                        $sel="selected";
                    }
                }
                $option_str .= '<option value="'.strip_tags($row['meal_item']).'" data-value="' . $row['meal_id'] . '" '.$sel.'> '.strip_tags($row['meal_item']).' </option>';
            }
        }
        return $option_str;
    }
    //create new function for save or update user daily food items data by ample 04-09-20
    function add_user_meals_data($data="",$count_row="",$date="")
    {       
        if($date)
        {
            $this->delete_user_meal_data($date);
        }
            
            $my_DBH = new DatabaseHandler();
            $DBH = $my_DBH->raw_handle();
            $DBH->beginTransaction();
            $return=false;

                $query = "INSERT INTO `tblusersmeals` (`user_id`,`meal_date`,`meal_id`,`meal_time`,`meal_like`,`meal_quantity`,`meal_measure`,`meal_type`,`food_type`,`meal_consultant_remark`) VALUES ";
                $values = '';
                foreach ($data as $key => $value) {
                        //update 12-06-20
                        if($value['meal_id'])
                        {
                            $values .= "('".$value['user_id']."','".$value['meal_date']."','".$value['meal_id']."','".$value['meal_time']."','".$value['meal_like']."','".$value['meal_quantity']."','".$value['meal_measure']."','".$value['meal_type']."','".$value['food_type']."','".$value['meal_consultant_remark']."'),";
                        }

                }
                //$values = rtrim($values, ',');
                $values = substr($values, 0, strlen($values) - 1);
                $insert_query = $query . $values;
                //echo $insert_query;
             $STH = $DBH->query($insert_query);
            //print_r($STH);  die('fhs');
            if($STH->rowCount() > 0)
            {   
                $return = true;
            }
        return $return;
    }
    // add by ample 04-09-20
    public function delete_user_meal_data($meal_date="")
    {

        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $return=false;
        $sql = "DELETE FROM `tblusersmeals` WHERE `meal_date` = '".$meal_date."' AND user_id=".$_SESSION['user_id']; 
        $STH = $DBH->query($sql);
        $STH->execute();
        if($STH->rowCount() > 0)
        {
            $return = true;
        }
        return $return;
    }
    // add by ample 04-09-20
    public function check_already_fill_food($user_id="",$date_set="")
    {

        $DBH = new DatabaseHandler();
        $data=array();
        $sql = "SELECT * FROM `tblusersmeals` WHERE user_id=".$user_id." AND meal_date='".$date_set."' ORDER BY `meal_id` ASC";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]=$row;
            }
        }
        return $data;
    }
    //added by ample 04-09-20
    public function get_food_meals_html_data($data="")
    {
        $html="";
        if(!empty($data))
        {
            foreach ($data as $key => $value) 
            {   
                $item_name=$this->get_meal_item_name($value['meal_id']);

                $img_data=$this->get_icon_of_favcategory($value['meal_like']);
                if($img_data)
                {
                    $img= '<img src="uploads/'.$img_data.'" alt="fav-icon" style="height:25px;width:25px">';
                }
                else
                {
                    $img="";
                }
                

                $html.='<div class="row" id="row'.$key.'">
                            <div class="col-md-1">
                            </div>
                            <div class="col-md-10">
                    <div class="row form-group">
                        <div class="col-md-6">
                            <label class="label Header_brown">Time</label>
                            <input type="time" name="time[]" class="form-control" value="'.$value['meal_time'].'" required>
                        </div>
                        <div class="col-md-6">
                            <label class="label Header_brown">Meal Type</label>
                            <select class="form-control" name="meal_type[]" required>
                                <option value="">Select</option>
                                ' . $this->getFavCategoryRamakant('94',$value['meal_type']) . '
                          </select>
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="col-md-6">
                            <label class="label Header_brown">Food Type</label>
                            <select class="form-control" name="food_type[]" onchange="getDailyFoodItems(this,'.$key.')" required>
                                <option value="">All</option>
                                ' . $this->getFavCategoryRamakant('25',$value['food_type']) . '
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label class="label Header_brown">Items</label>
                             <input name="meals[]" type="text" class="form-control" id="meals_'.$key.'"  list="capitals'.$key.'" autocomplete="off" value="'.$item_name.'" onchange="meals_datalist('.$key.')"  />
                                    <datalist id="capitals'.$key.'" class="dlist" >
                                                   ' . $this->get_daily_foods_meal_data($value['food_type'],$value['meal_id']) . '
                                        </datalist>
                            <input type="hidden" name="meal_id[]" id="meal_id_'.$key.'" value="'.$value['meal_id'].'">
                            <a href="javascript:void(0);" onclick="erase_input('.$key.');" class="pull-left"><i class="fa fa-eraser" aria-hidden="true" style="font-size: 15px; display:block;"></i></a>
                            <a href="javascript:void(0)" style="text-decoration:underline" onclick="open_food_popup('.$key.')" class="pull-right"> View Food Composition </a>
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="col-md-6">
                            <label class="label Header_brown">Quantity</label>
                            <select class="form-control" name="qty[]" required>
                                <option value="">Select</option>
                                ' . $this->getMealQuantityOptions($value['meal_quantity']) . '
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label class="label Header_brown">Meal Measure</label>
                            <input type="text" name="size[]" value="'.$value['meal_measure'].'" id="meal_measure_'.$key.'" class="form-control" readonly="">
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="col-md-6">
                            <label class="label Header_brown">My Desire</label>
                            <select class="form-control" name="desire[]" id="desire_'.$key.'" onchange="get_fev_icon(this,'.$key.')">
                                <option value="">Select</option>
                                ' . $this->getFavCategoryRamakant('46',$value['meal_like']) . '
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label class="label Header_brown"></label>
                            <p id="icon_'.$key.'">'.$img.'</p>
                        </div>
                    </div>
                    <div class="form-group">
                      <label class="label Header_brown">Item Remark:</label>
                      <textarea class="form-control" name="remark[]" rows="3">'.$value['meal_consultant_remark'].'</textarea>
                    </div>';
                                if($key==0)
                                {
                                    $html.='<button type="button" class="btn btn-info btn-xs add_more_activity" onclick="add_more_activity()">Add More</button>';
                                }
                                else
                                {
                                    $html.='<button type="button" class="btn btn-warning btn-xs remove_activity" onclick="remove_activity('.$key.')">Remove</button>';
                                }
                                $html.='<hr>
                            </div>
                            <div class="col-md-1">
                            </div>
                        </div>';
            }
        }
        return $html;
    }
    //add by ample 04-03-20
    public function get_meal_item_name($meal_id="")
    {
        $DBH = new DatabaseHandler();
        $name="";
        $sql = "SELECT * FROM `tbldailymeals` WHERE meal_id=".$meal_id;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $name= $row['meal_item'];
            }
        }
        return $name;
    }
    //add by ample 04-03-20
    public function get_food_meal_info($meal_id="")
    {
        $DBH = new DatabaseHandler();
        $data=array();
        $sql = "SELECT * FROM `tbldailymeals` WHERE meal_id=".$meal_id;
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $data=$row;
        }
        return $data;
    }
    // copy by ample 05-09-20
    public function compositionInfo($meal_id="")
    {
        $my_DBH = new DatabaseHandler();

                $DBH = $my_DBH->raw_handle();

                $DBH->beginTransaction();

                $data=array();

            $sql = "SELECT * FROM `tbldailymealsfavcategory` c WHERE c.meal_id='".$meal_id."'";

          $STH = $DBH->prepare($sql);

             $STH->execute();

        if($STH->rowCount() > 0)

        {

            while( $row = $STH->fetch(PDO::FETCH_ASSOC))
            {

            $data[] = $row;

            }

        }

        return $data;
    }
    //added by ample 11-12-19
    public function getDefultImgData($type_id,$page_id)
    {

        $DBH = new DatabaseHandler();
        $data = array();

           $sql = "SELECT * FROM  tbl_icons WHERE  icons_type_id=".$type_id." AND page_id regexp '[[:<:]]".$page_id."[[:>:]]' AND default_img_show='1'";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $row = $STH->fetch(PDO::FETCH_ASSOC);
                $data = $row;
                
            }
        return $data;
    }
    //added by ample 21-09-20
    public function getEventFullLocation()
    {   
        $DBH = new DatabaseHandler();
        $data = array();
        $sql="SELECT * FROM `tbl_event_details` ED 
                LEFT JOIN `tbl_event_master` EM ON ED.event_master_id=EM.event_master_id 
                LEFT JOIN `tblarea` AS TAR ON ED.area_id = TAR.area_id
                LEFT JOIN `tblcities` AS TCT ON ED.city_id = TCT.city_id 
                LEFT JOIN `tblstates` AS TST ON ED.state_id = TST.state_id 
                LEFT JOIN `tblcountry` AS TCN ON ED.country_id = TCN.country_id  
                WHERE ED.event_status=1 AND ED.event_deleted=0 AND EM.status=1 AND EM.is_deleted=0";
        $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while( $row = $STH->fetch(PDO::FETCH_ASSOC))
                {
                    $data[] = $row;
                }
            }
        return $data;
    }
    public function getEventFullLocationOption($area_id="")
    {   
        $DBH = new DatabaseHandler();
        $option = "";
        $today=date('Y-m-d');
        $sql="SELECT DISTINCT ED.area_id,TAR.area_name,TCT.city,TST.state,TCN.country_name FROM `tbl_event_details` ED 
                LEFT JOIN `tbl_event_master` EM ON ED.event_master_id=EM.event_master_id 
                LEFT JOIN `tblarea` AS TAR ON ED.area_id = TAR.area_id
                LEFT JOIN `tblcities` AS TCT ON TAR.city_id = TCT.city_id 
                LEFT JOIN `tblstates` AS TST ON TCT.state_id = TST.state_id 
                LEFT JOIN `tblcountry` AS TCN ON TST.country_id = TCN.country_id  
                WHERE ED.event_status=1 AND ED.event_deleted=0 AND EM.status=1 AND EM.is_deleted=0
                AND ED.end_date >='".$today."'";
         
        $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while( $row = $STH->fetch(PDO::FETCH_ASSOC))
                {   
                    $sel="";
                    if($area_id==$row['area_id'])
                    {
                        $sel="selected";
                    }
                    $option.= '<option value="'.$row['area_name'].'" '.$sel.'>'.$row['city'].' , '.$row['state'].', '.$row['country_name'].'</option>';
                }
            }
        return $option;
    }
    function getEventAllTags()
    {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data=array();

        $sql = "SELECT event_tags FROM `tbl_event_master`";
        $STH = $DBH->prepare($sql);
        $STH->execute();

        if($STH->rowCount() > 0)
        {
            while( $row = $STH->fetch(PDO::FETCH_ASSOC))
            {
                $data[] = $row['event_tags'];
            }
        }
        return $data;
    }
    //add by ample 26-09-20
    public function get_design_my_life_main_edata_by_date($date="") {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $user_id=$_SESSION['user_id'];
        $sql = "SELECT id,user_id,box_title as title ,comment,listing_date_type,single_date,start_date,end_date,redirect,bes_time,days_of_week,months,days_of_month,add_date FROM `tbl_user_design_your_data` WHERE listing_date_type='single_date' AND single_date='".$date."'  AND user_id=".$user_id;
        $sql.= " UNION SELECT id,user_id,box_title as title ,comment,listing_date_type,single_date,start_date,end_date,redirect,bes_time,days_of_week,months,days_of_month,add_date FROM `tbl_user_design_your_data` WHERE listing_date_type='date_range' AND start_date<='".$date."' AND end_date >='".$date."'  AND user_id=".$user_id;
        $sql.= " UNION SELECT id,user_id,box_title as title ,comment,listing_date_type,single_date,start_date,end_date,redirect,bes_time,days_of_week,months,days_of_month,add_date FROM `tbl_user_design_your_data` WHERE listing_date_type='days_of_week' AND user_id=".$user_id;
        $sql.= " UNION SELECT id,user_id,box_title as title ,comment,listing_date_type,single_date,start_date,end_date,redirect,bes_time,days_of_week,months,days_of_month,add_date FROM `tbl_user_design_your_data` WHERE listing_date_type='month_wise' AND user_id=".$user_id;
        $sql.= " UNION SELECT id,user_id,box_title as title ,comment,listing_date_type,single_date,start_date,end_date,redirect,bes_time,days_of_week,months,days_of_month,add_date FROM `tbl_user_design_your_data` WHERE listing_date_type='days_of_month' AND user_id=".$user_id;
        //echo $sql; die();
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }
        return $data;
    }
    //add by ample 26-09-20
    public function get_design_my_life_user_input_event_data_by_date($date="") {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();
        $user_id=$_SESSION['user_id'];
        $sql = "SELECT design_data_id as id,user_id,user_input as title,comment,listing_date_type,single_date,start_date,end_date,bes_time,days_of_week,months,days_of_month,add_date,id as sub_id FROM `tbl_design_user_inputs` WHERE listing_date_type='single_date' AND single_date='".$date."'  AND user_id=".$user_id;
        $sql.= " UNION SELECT design_data_id as id,user_id,user_input as title,comment,listing_date_type,single_date,start_date,end_date,bes_time,days_of_week,months,days_of_month,add_date,id as sub_id FROM `tbl_design_user_inputs` WHERE listing_date_type='date_range' AND start_date<='".$date."' AND end_date >='".$date."'  AND user_id=".$user_id;
        $sql.= " UNION SELECT design_data_id as id,user_id,user_input as title,comment,listing_date_type,single_date,start_date,end_date,bes_time,days_of_week,months,days_of_month,add_date,id as sub_id FROM `tbl_design_user_inputs` WHERE listing_date_type='days_of_week' AND user_id=".$user_id;
        $sql.= " UNION SELECT design_data_id as id,user_id,user_input as title,comment,listing_date_type,single_date,start_date,end_date,bes_time,days_of_week,months,days_of_month,add_date,id as sub_id FROM `tbl_design_user_inputs` WHERE listing_date_type='month_wise' AND user_id=".$user_id;
        $sql.= " UNION SELECT design_data_id as id,user_id,user_input as title,comment,listing_date_type,single_date,start_date,end_date,bes_time,days_of_week,months,days_of_month,add_date,id as sub_id FROM `tbl_design_user_inputs` WHERE listing_date_type='days_of_month' AND user_id=".$user_id;
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]= $row;
            }
        }
        return $data;
    }
    //add by ample 26-09-20
    public function get_today_task_events()
    {
        $today=date('Y-m-d'); 
        $month = date('n', strtotime($today)); 
        $week = date('w', strtotime($today))+1; 
        $day = date('j', strtotime($today)); 

        $edata=$this->get_design_my_life_main_edata_by_date($today);
        $event1 = array();
        if(!empty($edata))
        { 
          foreach ($edata as $key => $value) {
             if($value['listing_date_type']=='days_of_week' && !empty($value['days_of_week']))
             {  
                $arr_week=explode(',', $value['days_of_week']);
                if (in_array($week, $arr_week))
                {
                   $event1[]=$value;
                }
             }
             elseif ($value['listing_date_type']=='month_wise' && !empty($value['months'])) {
               $arr_month=explode(',', $value['months']);
                if (in_array($month, $arr_month))
                {
                   $event1[]=$value;
                }
             }
             elseif ($value['listing_date_type']=='days_of_month' && !empty($value['days_of_month'])) {
               $arr_days=explode(',', $value['days_of_month']);
                if (in_array($day, $arr_days))
                {
                   $event1[]=$value;
                }
             }
             else
             {
                $event1[]=$value;
             }
             
          }
        }
        if(!empty($event1))
        {
            foreach ($event1 as $key => $value) {
                $event1[$key]['type']='parent';
            }
        }
        $udata=$this->get_design_my_life_user_input_event_data_by_date($today);
        $event2 = array();
        if(!empty($udata))
        { 
          foreach ($udata as $key => $value) {
             if($value['listing_date_type']=='days_of_week' && !empty($value['days_of_week']))
             {  
                $arr_week=explode(',', $value['days_of_week']);
                if (in_array($week, $arr_week))
                {
                   $event2[]=$value;
                }
             }
             elseif ($value['listing_date_type']=='month_wise' && !empty($value['months'])) {
               $arr_month=explode(',', $value['months']);
                if (in_array($month, $arr_month))
                {
                   $event2[]=$value;
                }
             }
             elseif ($value['listing_date_type']=='days_of_month' && !empty($value['days_of_month'])) {
               $arr_days=explode(',', $value['days_of_month']);
                if (in_array($day, $arr_days))
                {
                   $event2[]=$value;
                }
             }
             else
             {
                $event2[]=$value;
             }
          }
        }
        if(!empty($event2))
        {
            foreach ($event2 as $key => $value) {
                $event2[$key]['type']='child';
            }
        }

        $events=array();
        $events = array_merge($event1,$event2);

        return $events;
    }
    //add by ample 28-09-20
    public function task_do_it($task_id,$date,$type)
    {   
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $status=false;

        if($type=='parent')
        {

            $sql = "SELECT * FROM `tblusersdailyactivity` WHERE dyl_parent_id=".$task_id." AND activity_date='".$date."'";
            $STH = $DBH->prepare($sql);
            $STH->execute();
            if($STH->rowCount() > 0)
            {
                $status=true;
            }
            
        }
        elseif ($type=='child') 
        {
            $sql = "SELECT * FROM `tblusersdailyactivity` WHERE dyl_child_id=".$task_id." AND activity_date='".$date."'"; 
            $STH = $DBH->prepare($sql);
            $STH->execute();
            if($STH->rowCount() > 0)
            {
                $status=true;
            }
        }
        return $status;
    }
    //add by ample 28-09-20
    public function task_do_it_history($task_id,$type)
    {   
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data=array();

        if($type=='parent')
        {

            $sql = "SELECT DISTINCT activity_date FROM `tblusersdailyactivity` WHERE dyl_parent_id=".$task_id." ORDER BY activity_date DESC";
            $STH = $DBH->prepare($sql);
            $STH->execute();
            if($STH->rowCount() > 0)
            {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                        $data[]= $row['activity_date'];
                    }
            }
            
        }
        elseif ($type=='child') 
        {
            $sql = "SELECT DISTINCT activity_date FROM `tblusersdailyactivity` WHERE dyl_child_id=".$task_id." ORDER BY activity_date DESC"; 
            $STH = $DBH->prepare($sql);
            $STH->execute();
            if($STH->rowCount() > 0)
            {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                        $data[]= $row['activity_date'];
                    }
            }
        }
        return $data;
    }
    //add by ample 29-09-20
    public function post_new_user_task($data)
    {   
        $DBH = new DatabaseHandler();
        $return = false;
        $user_id=$_SESSION['user_id'];
        $sql = "INSERT INTO `tbl_user_design_your_data` (`user_id`,`vendor_id`,`post_by`,`ref_code`,`box_title`,`listing_date_type`,`single_date`,`start_date`,`end_date`,`days_of_month`,`days_of_week`,`months`,`location_fav_cat`,`user_response_fav_cat`,`user_what_fav_cat`,`alerts_fav_cat`,`prof_cat_id`,`sub_cat_id`,`bes_time`,`duration`,`unit`,`scale`,`comment`,`redirect_page`,`redirect_id`,`redirect`,`status`,`is_repeat_task`) VALUES (".$user_id.",0,'User','','".$data['box_title']."','".$data['listing_date_type']."','".$data['single_date']."','".$data['start_date']."','".$data['end_date']."','','','','','','','',0,0,'','',0,'','',0,0,'','1','1')";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    // add by ample 30-09-20
    public function get_journey_url($data)
    {
        $url="#";

        if($data['redirect']=='MyCanvas')
        {
            $new_data=$this->get_mycanvas_data($data['redirect_id']);
            $url='mycanvas-result.php?preview_id='.$new_data['preview_id'];
        }
        elseif($data['redirect']=='OnlineHub')
        {
            $new_data=$this->get_online_hub_data($data['redirect_id']);
            $_SESSION['adviser_query_pro_user_id'] = $new_data['vendor_id'];
            $_SESSION['adviser_query_pg_id'] = $new_data['page_id'].'|'.$new_data['page_table'];
            $_SESSION['adviser_query_start_date'] = date("d-m-Y", strtotime($new_data['aq_add_date']));
            $_SESSION['adviser_query_end_date'] = date("d-m-Y", strtotime($new_data['aq_add_date']));
            $url='my_adviser_queries.php';
        }

        return $url;
    }
    //add by ample 30-09-20
    public function get_mycanvas_data($id="")
    {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();  

            $sql = "SELECT * FROM `tbl_mycanvas` WHERE `id` = '".$id."'";
            $STH = $DBH->prepare($sql);
            $STH->execute();
            if($STH->rowCount() > 0)
            {
                $row = $STH->fetch(PDO::FETCH_ASSOC);
                $data = $row;
                
            }
        return $data;
    }
    //add by ample 30-09-20
    public function get_online_hub_data($id="")
    {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data = array();  

            $sql = "SELECT * FROM `tbladviserqueries` WHERE `aq_id` = '".$id."'";
            $STH = $DBH->prepare($sql);
            $STH->execute();
            if($STH->rowCount() > 0)
            {
                $row = $STH->fetch(PDO::FETCH_ASSOC);
                $data = $row;
                
            }
        return $data;
    }
    //add by ample 01-10-20
    public function get_date_between_range($first, $last, $step = '+1 day', $output_format = 'Y-m-d' ) {

        $dates = array();
        $current = strtotime($first);
        $last = strtotime($last);

        while( $current <= $last ) {

            $dates[] = date($output_format, $current);
            $current = strtotime($step, $current);
        }
        return $dates;
    } 
     //add by ample 05-10-20
    public function get_wsi_mindjumpble_data($id="")
    {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data =array();

        $sql = "SELECT * FROM `tblmindjumble` WHERE 'mind_jumble_box_id'=".$id." AND page_id=44 AND status=1 AND is_deleted=0 ORDER BY order_no ASC";
        $STH = $DBH->query($sql);
        if( $STH->rowCount() > 0 )
        {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $data= $row;
            
        }
        return $data;     
    }
    //add by ample 05-10-20
    public function get_wsi_rss_feed_data($id)
    {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data =array();

        $sql = "SELECT * FROM `tblrssfeeditems` WHERE rss_feed_item_id=".$id." AND rss_feed_item_status=1 "; 
        $STH = $DBH->query($sql);
        if( $STH->rowCount() > 0 )
        {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $data= $row;
            
        }
        return $data;     
    } 
    //add by ample 14-10-20
    public function getHomeSliderBanners()
    {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data =array();
        $data1 =array();
        $data2 =array();

        $today=date('Y-m-d');
        $month = date('n', strtotime($today));
        $week = date('w', strtotime($today))+1;
        $day = date('j', strtotime($today));

        $sql = "SELECT DISTINCT banner_id,tbs.* FROM `tblbannerslider` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.banner_id=tcs.redirect_id WHERE banner_status=1 AND is_deleted=0 AND (redirect='bannerSlider' OR redirect IS NULL) AND (publish_date_type='' OR publish_date_type IS NULL ) AND (state_id=0 OR state_id IS NULL)"; 
        $sql.= " UNION SELECT DISTINCT banner_id,tbs.* FROM `tblbannerslider` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.banner_id=tcs.redirect_id WHERE banner_status=1 AND is_deleted=0 AND redirect='bannerSlider' AND publish_date_type='single_date' AND publish_single_date = '".$today."' AND (state_id=0 OR state_id IS NULL)";
        $sql.= " UNION SELECT DISTINCT banner_id,tbs.* FROM `tblbannerslider` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.banner_id=tcs.redirect_id WHERE banner_status=1 AND is_deleted=0 AND redirect='bannerSlider' AND publish_date_type='date_range' AND (publish_start_date <= '".$today."' AND publish_end_date >= '".$today."') AND (state_id=0 OR state_id IS NULL)";
        $sql.= " UNION SELECT DISTINCT banner_id,tbs.* FROM `tblbannerslider` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.banner_id=tcs.redirect_id  WHERE banner_status=1 AND is_deleted=0 AND redirect='bannerSlider' AND publish_date_type='month_wise' AND publish_month_wise regexp '[[:<:]]".$month."[[:>:]]' AND (state_id=0 OR state_id IS NULL)";
        $sql.= " UNION SELECT DISTINCT banner_id,tbs.* FROM `tblbannerslider` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.banner_id=tcs.redirect_id WHERE banner_status=1 AND is_deleted=0 AND redirect='bannerSlider' AND publish_date_type='days_of_week' AND publish_days_of_week regexp '[[:<:]]".$week."[[:>:]]' AND (state_id=0 OR state_id IS NULL)";
        $sql.= " UNION SELECT DISTINCT banner_id,tbs.* FROM `tblbannerslider` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.banner_id=tcs.redirect_id WHERE banner_status=1 AND is_deleted=0 AND redirect='bannerSlider' AND publish_date_type='days_of_month' AND publish_days_of_month regexp '[[:<:]]".$day."[[:>:]]' AND (state_id=0 OR state_id IS NULL)";
        $sql.=" ORDER BY banner_order ASC";
        //echo $sql; die('-ss');
        $STH = $DBH->query($sql);
        if( $STH->rowCount() > 0 )
        {
           while ($row = $STH->fetch(PDO::FETCH_ASSOC)) 
           {
                $data1[]= $row;
            }
            
        }

        $user_id = $_SESSION['user_id'];
        if(!empty($user_id))
        {
            $data2=$this->getHomeSliderBannersOnLocation($user_id);
        }

        $data=array_merge($data1,$data2);
        return $data; 
    }
    //add by ample 15-10-20
    function getHomeSliderBannersOnLocation($user_id)
    {   
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data =array();

        $user_info=$this->getUserDetails($user_id);

        $today=date('Y-m-d');
        $month = date('n', strtotime($today));
        $week = date('w', strtotime($today))+1;
        $day = date('j', strtotime($today));

        $sql = "SELECT DISTINCT banner_id,tbs.* FROM `tblbannerslider` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.banner_id=tcs.redirect_id WHERE banner_status=1 AND is_deleted=0 AND redirect='bannerSlider'  AND (publish_date_type='' OR publish_date_type IS NULL ) AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))"; 
        $sql.= " UNION SELECT DISTINCT banner_id,tbs.* FROM `tblbannerslider` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.banner_id=tcs.redirect_id WHERE banner_status=1 AND is_deleted=0 AND redirect='bannerSlider' AND publish_date_type='single_date' AND publish_single_date = '".$today."' AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))";
        $sql.= " UNION SELECT DISTINCT banner_id,tbs.* FROM `tblbannerslider` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.banner_id=tcs.redirect_id WHERE banner_status=1 AND is_deleted=0 AND redirect='bannerSlider' AND publish_date_type='date_range' AND (publish_start_date <= '".$today."' AND publish_end_date >= '".$today."') AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))";
        $sql.= " UNION SELECT DISTINCT banner_id,tbs.* FROM `tblbannerslider` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.banner_id=tcs.redirect_id WHERE banner_status=1 AND is_deleted=0 AND redirect='bannerSlider' AND publish_date_type='month_wise' AND publish_month_wise regexp '[[:<:]]".$month."[[:>:]]' AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))";
        $sql.= " UNION SELECT DISTINCT banner_id,tbs.* FROM `tblbannerslider` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.banner_id=tcs.redirect_id WHERE banner_status=1 AND is_deleted=0 AND redirect='bannerSlider' AND publish_date_type='days_of_week' AND publish_days_of_week regexp '[[:<:]]".$week."[[:>:]]' AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))";
        $sql.= " UNION SELECT DISTINCT banner_id,tbs.* FROM `tblbannerslider` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.banner_id=tcs.redirect_id WHERE banner_status=1 AND is_deleted=0 AND redirect='bannerSlider' AND publish_date_type='days_of_month' AND publish_days_of_month regexp '[[:<:]]".$day."[[:>:]]' AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))";
        $sql.=" ORDER BY banner_order ASC";
        //echo $sql; die('-ss');
        $STH = $DBH->query($sql);
        if( $STH->rowCount() > 0 )
        {
           while ($row = $STH->fetch(PDO::FETCH_ASSOC)) 
           {
                $data[]= $row;
            }
            
        }
        return $data;
    }
    //add by ample 16-10-20
    public function getBandSettingData($page_id,$row_no)
    {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data =array();

        $sql = "SELECT pg.order_no,bs.* FROM `tbl_page_decor` pg LEFT JOIN tblbandsetting bs ON pg.band_id=bs.band_id WHERE pg.page_type='Page' AND  pg.page_name=".$page_id." AND pg.is_deleted=0 AND pg.status=1 AND bs.band_status=1 AND bs.band_row_no=".$row_no;
        $STH = $DBH->query($sql);
        if( $STH->rowCount() > 0 )
        {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $data= $row;
            
        }
        return $data;     
    } 
    //add by ample 14-10-20
    public function getHomeWSI()
    {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data =array();
        $data1 =array();
        $data2 =array();

        $today=date('Y-m-d');
        $month = date('n', strtotime($today));
        $week = date('w', strtotime($today))+1;
        $day = date('j', strtotime($today));

        $sql = "SELECT DISTINCT sol_item_id,tbs.* FROM `tblsolutionitems` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.sol_item_id=tcs.redirect_id WHERE sol_item_status=1 AND sol_item_deleted=0 AND (redirect='wsi' OR redirect IS NULL) AND is_featured=1 AND (publish_date_type='' OR publish_date_type IS NULL ) AND (state_id=0 OR state_id IS NULL)"; 
        $sql.= " UNION SELECT DISTINCT sol_item_id,tbs.* FROM `tblsolutionitems` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.sol_item_id=tcs.redirect_id WHERE sol_item_status=1 AND sol_item_deleted=0 AND (redirect='wsi' OR redirect IS NULL) AND is_featured=1 AND publish_date_type='single_date' AND publish_single_date = '".$today."' AND (state_id=0 OR state_id IS NULL)";
        $sql.= " UNION SELECT DISTINCT sol_item_id,tbs.* FROM `tblsolutionitems` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.sol_item_id=tcs.redirect_id WHERE sol_item_status=1 AND sol_item_deleted=0 AND (redirect='wsi' OR redirect IS NULL) AND is_featured=1 AND publish_date_type='date_range' AND (publish_start_date <= '".$today."' AND publish_end_date >= '".$today."') AND (state_id=0 OR state_id IS NULL)";
        $sql.= " UNION SELECT DISTINCT sol_item_id,tbs.* FROM `tblsolutionitems` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.sol_item_id=tcs.redirect_id WHERE sol_item_status=1 AND sol_item_deleted=0 AND (redirect='wsi' OR redirect IS NULL) AND is_featured=1 AND publish_date_type='month_wise' AND publish_month_wise regexp '[[:<:]]".$month."[[:>:]]' AND (state_id=0 OR state_id IS NULL)";
        $sql.= " UNION SELECT DISTINCT sol_item_id,tbs.* FROM `tblsolutionitems` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.sol_item_id=tcs.redirect_id WHERE sol_item_status=1 AND sol_item_deleted=0 AND (redirect='wsi' OR redirect IS NULL) AND is_featured=1 AND publish_date_type='days_of_week' AND publish_days_of_week regexp '[[:<:]]".$week."[[:>:]]' AND (state_id=0 OR state_id IS NULL)";
        $sql.= " UNION SELECT DISTINCT sol_item_id,tbs.* FROM `tblsolutionitems` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.sol_item_id=tcs.redirect_id WHERE sol_item_status=1 AND sol_item_deleted=0 AND (redirect='wsi' OR redirect IS NULL) AND is_featured=1 AND publish_date_type='days_of_month' AND publish_days_of_month regexp '[[:<:]]".$day."[[:>:]]' AND (state_id=0 OR state_id IS NULL)";
        $sql.=" ORDER BY order_show ASC";
        //echo $sql; die('-ss');
        $STH = $DBH->query($sql);
        if( $STH->rowCount() > 0 )
        {
           while ($row = $STH->fetch(PDO::FETCH_ASSOC)) 
           {
                $data1[]= $row;
            }
            
        }

        $user_id = $_SESSION['user_id'];
        if(!empty($user_id))
        {
            $data2=$this->getHomeWSI_OnLocation($user_id);
        }

        $data=array_merge($data1,$data2);
        return $data; 
    }
    //add by ample 27-10-20
    function getHomeWSI_OnLocation($user_id)
    {   
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data =array();

        $user_info=$this->getUserDetails($user_id);

        $today=date('Y-m-d');
        $month = date('n', strtotime($today));
        $week = date('w', strtotime($today))+1;
        $day = date('j', strtotime($today));

        $sql = "SELECT DISTINCT sol_item_id,tbs.* FROM `tblsolutionitems` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.sol_item_id=tcs.redirect_id WHERE sol_item_status=1 AND sol_item_deleted=0 AND redirect='wsi' AND is_featured=1  AND (publish_date_type='' OR publish_date_type IS NULL ) AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))"; 
        $sql.= " UNION SELECT DISTINCT sol_item_id,tbs.* FROM `tblsolutionitems` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.sol_item_id=tcs.redirect_id WHERE sol_item_status=1 AND sol_item_deleted=0 AND redirect='wsi' AND is_featured=1 AND publish_date_type='single_date' AND publish_single_date = '".$today."' AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))";
        $sql.= " UNION SELECT DISTINCT sol_item_id,tbs.* FROM `tblsolutionitems` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.sol_item_id=tcs.redirect_id WHERE sol_item_status=1 AND sol_item_deleted=0 AND redirect='wsi' AND is_featured=1 AND publish_date_type='date_range' AND (publish_start_date <= '".$today."' AND publish_end_date >= '".$today."') AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))";
        $sql.= " UNION SELECT DISTINCT sol_item_id,tbs.* FROM `tblsolutionitems` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.sol_item_id=tcs.redirect_id WHERE sol_item_status=1 AND sol_item_deleted=0 AND redirect='wsi' AND is_featured=1 AND publish_date_type='month_wise' AND publish_month_wise regexp '[[:<:]]".$month."[[:>:]]' AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))";
        $sql.= " UNION SELECT DISTINCT sol_item_id,tbs.* FROM `tblsolutionitems` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.sol_item_id=tcs.redirect_id WHERE sol_item_status=1 AND sol_item_deleted=0 AND redirect='wsi' AND is_featured=1 AND publish_date_type='days_of_week' AND publish_days_of_week regexp '[[:<:]]".$week."[[:>:]]' AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))";
        $sql.= " UNION SELECT DISTINCT sol_item_id,tbs.* FROM `tblsolutionitems` tbs LEFT JOIN tbl_common_scheduled tcs ON tbs.sol_item_id=tcs.redirect_id WHERE sol_item_status=1 AND sol_item_deleted=0 AND redirect='wsi'  AND is_featured=1 AND publish_date_type='days_of_month' AND publish_days_of_month regexp '[[:<:]]".$day."[[:>:]]' AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))";
        $sql.=" ORDER BY order_show ASC";
        //echo $sql; die('-ss');
        $STH = $DBH->query($sql);
        if( $STH->rowCount() > 0 )
        {
           while ($row = $STH->fetch(PDO::FETCH_ASSOC)) 
           {
                $data[]= $row;
            }
            
        }
        return $data;
    }
    //add by ample 23-10-20
    function get_common_gallery_file($banner_type,$banner)
    {   
        $img_data="";
        if($banner_type=='Image')
        {
            $imgData=$this->getImgData($banner);
            if(!empty($imgData['image']))
            {
                $img_data='<img src="'.SITE_URL.'/uploads/'.$imgData['image'].'"  class="img-responsive" alt="" height="150px" />';
            }  
            else
            {
                 $img_data='<img src="images/no-image.png" class="img-responsive" alt="" height="150px" />';
            }
        }
        else
        {   
            $fileData=$this->getFileData($banner);
            if($banner_type=='Video')
            {
                $img_data='<iframe width="100%" height="150px" src="'.$fileData["banner"].'" frameborder="0" allowfullscreen></iframe>';
            }
            elseif($banner_type=='Sound' || $banner_type=='Audio')
            {
                $img_data='<embed src="'.SITE_URL.'/uploads/'.$fileData["banner"].'" autostart="true" loop="true" height="150px" width="100%"></embed>';
            }
            elseif($banner_type=='Pdf')
            {
                $img_data='<a href="'.SITE_URL.'/uploads/'.$fileData['banner'].'" target="_blank"><img src="'.SITE_URL.'/images/pdf-icon.png" style="object-fit: contain;" class="img-responsive" alt="" height="150px" /></a>';
            }
            else
            {
                $img_data='<img src="images/no-image.png" class="img-responsive" alt="" height="150px" />';
            }
        }
        return $img_data;
    }
    // added by ample 
    public function get_data_from_tblicons($type_id="",$icons_id="")
    {
        $DBH = new DatabaseHandler();
        $data = array();
            if($type_id)
            {
                $sql = "SELECT * FROM  tbl_icons WHERE status='1' AND icons_type_id=".$type_id;
            }
            elseif($icons_id)
            {
                $sql = "SELECT * FROM  tbl_icons WHERE  icons_id=".$icons_id;
            }
            else{
                $sql = "SELECT * FROM  tbl_icons WHERE status='1'";
            }
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $data[] = $row;
                }
            }
      
        return $data;
    
    }
    // added by ample 
    public function get_data_from_tblmindjumble($box_type="",$box_id="")
    {
        $DBH = new DatabaseHandler();
        $data = array();
            if($box_type)
            {
                $sql = "SELECT * FROM  tblmindjumble WHERE status='1' AND box_type='".$box_type."'";
            }
            elseif($box_id)
            {
                $sql = "SELECT * FROM  tblmindjumble WHERE mind_jumble_box_id='".$box_id."'";
            }
            else{
                $sql = "SELECT * FROM  tblmindjumble WHERE status='1'";
            }
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $data[] = $row;
                }
            }
      
        return $data;
    
    }
    public function getrewardTypevalueKR($rewardid)

    {

        $my_DBH = new DatabaseHandler();

                $DBH = $my_DBH->raw_handle();

                $DBH->beginTransaction();

                

        $return = false;

        

        $sql = "SELECT `fav_cat_id`,`fav_cat` FROM `tblfavcategory` WHERE `fav_cat_id` = '".$rewardid."'";

        $STH = $DBH->prepare($sql);

                $STH->execute();

        if($STH->rowCount() > 0)

        {

            $row = $STH->fetch(PDO::FETCH_ASSOC);



             $return=array($row['fav_cat_id'],$row['fav_cat']);

    



        }

        return $return;

    }
    //add by ample 09-11-20
    public function get_reward_module_data($reward_module_id)
    {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data =array();

        $sql = "SELECT * FROM `tblrewardmodules` WHERE  reward_module_id=".$reward_module_id." AND reward_module_deleted=0 AND reward_module_status=1";
        $STH = $DBH->query($sql);
        if( $STH->rowCount() > 0 )
        {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $data= $row;
            
        }
        return $data;     
    }
    //add by ample11-11-20
    public function  get_active_reward_module()
    {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data =array();

        $sql = "SELECT rm.*,p.page_name FROM `tblrewardmodules` rm LEFT JOIN tblpages p ON rm.page_id=p.page_id WHERE rm.reward_module_deleted = '0' AND rm.reward_module_status = '1' ORDER BY p.page_name ASC";
        $STH = $DBH->query($sql);
        if( $STH->rowCount() > 0 )
        {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[]=$row;
            }
            
        }
        return $data;     
    }
    //add by ample 12-11-20
    public function update_user_reward_points()
    {
        $user_id = $_SESSION['user_id'];

        $modules=$this->get_active_reward_module();

        // echo "<pre>";

        // print_r($module);

        // die('-ss');

        if(!empty($modules))
        {   
            $total_entry='0';
            foreach ($modules as $key => $value) {

                $total_entry=$this->getTotalEntriesOfModuleOfUser($value['reward_module_id'],$user_id);

                $total_days=$this->getTotalDaysEntriesOfModuleOfUser($value['reward_module_id'],$user_id);
                
                $point_scheme=$this->getRewardPointsScheme($value['reward_module_id']);

                $bonus_scheme=$this->getRewardBonusScheme($value['reward_module_id']);

                if(!empty($point_scheme))
                {
                    foreach ($point_scheme as $key => $scheme) {

                        $scheme_used=$this->check_point_scheme_for_user($user_id,$scheme['reward_point_id'],'reward_point');

                        if($scheme_used!=true)
                        {   
                            $eligible=false;
                            if($scheme['reward_point_conversion_type_id']==450)
                            {
                                if($total_days>=$scheme['reward_point_conversion_value'])
                                {
                                     $eligible=true;
                                }
                            }
                            else
                            {
                                if($total_entry>=$scheme['reward_point_conversion_value'])
                                {
                                     $eligible=true;
                                }
                            }
                            if($eligible==true)
                            {
                                if(!empty($scheme['reward_point_min_cutoff']) && !empty($scheme['reward_point_max_cutoff']) && $scheme['reward_point_cutoff_type_id']==450)
                                {
                                    if($total_days>=$scheme['reward_point_min_cutoff'] && $total_days<=$scheme['reward_point_max_cutoff'])
                                    {   
                                        $uniqu_id=uniqid();
                                        $user_points=$this->get_user_points($user_id);
                                        $user_points=$user_points+$scheme['equivalent_value'];
                                        $new_data = array( 'user_id' => $user_id,
                                                            'reward_module_id'=>$scheme['reward_point_module_id'],
                                                            'points'=>$scheme['equivalent_value'],
                                                            'transaction_type'=>'Credit',
                                                            'reward_scheme_type'=>'reward_point',
                                                            'reward_scheme_id'=>$scheme['reward_point_id'],
                                                            'remark'=>'Reward Point',
                                                            'transection_no'=>$uniqu_id,
                                                            'balance'=>$user_points
                                                         );

                                        $res=$this->added_reward_history($new_data);
                                        if($res==true)
                                        {
                                            $this->update_user_points($user_id,$user_points);
                                        }
                                    }
                                }
                                elseif($scheme['reward_point_cutoff_type_id']==451)
                                {
                                    $uniqu_id=uniqid();
                                    $user_points=$this->get_user_points($user_id);
                                    $user_points=$user_points+$scheme['equivalent_value'];
                                    $new_data = array( 'user_id' => $user_id,
                                                        'reward_module_id'=>$scheme['reward_point_module_id'],
                                                        'points'=>$scheme['equivalent_value'],
                                                        'transaction_type'=>'Credit',
                                                        'reward_scheme_type'=>'reward_point',
                                                        'reward_scheme_id'=>$scheme['reward_point_id'],
                                                        'remark'=>'Reward Point',
                                                        'transection_no'=>$uniqu_id,
                                                        'balance'=>$user_points
                                                     );
                                    $res=$this->added_reward_history($new_data);
                                    if($res==true)
                                    {
                                        $this->update_user_points($user_id,$user_points);
                                    }
                                }
                                else
                                {        
                                    if($total_entry>=$scheme['reward_point_min_cutoff'] && $total_entry<=$scheme['reward_point_max_cutoff'])
                                    {   
                                        $uniqu_id=uniqid();
                                        $user_points=$this->get_user_points($user_id);
                                        $user_points=$user_points+$scheme['equivalent_value'];
                                        $new_data = array( 'user_id' => $user_id,
                                                            'reward_module_id'=>$scheme['reward_point_module_id'],
                                                            'points'=>$scheme['equivalent_value'],
                                                            'transaction_type'=>'Credit',
                                                            'reward_scheme_type'=>'reward_point',
                                                            'reward_scheme_id'=>$scheme['reward_point_id'],
                                                            'remark'=>'Reward Point',
                                                            'transection_no'=>$uniqu_id,
                                                            'balance'=>$user_points
                                                         );

                                        $res=$this->added_reward_history($new_data);
                                        if($res==true)
                                        {
                                            $this->update_user_points($user_id,$user_points);
                                        }
                                    }
                                }
                            }

                        }
                    }
                }

                if(!empty($bonus_scheme))
                {
                    foreach ($bonus_scheme as $key => $scheme) {

                        $scheme_used=$this->check_point_scheme_for_user($user_id,$scheme['reward_bonus_id'],'reward_bonus');

                        if($scheme_used!=true)
                        {   
                            $eligible=false;
                            if($scheme['reward_bonus_conversion_type_id']==450)
                            {
                                if($total_days>=$scheme['reward_bonus_conversion_value'])
                                {
                                     $eligible=true;
                                }
                            }
                            else
                            {
                                if($total_entry>=$scheme['reward_bonus_conversion_value'])
                                {
                                     $eligible=true;
                                }
                            }

                            if($eligible==true)
                            {
                                if(!empty($scheme['reward_bonus_min_cutoff']) && !empty($scheme['reward_bonus_max_cutoff']) && $scheme['reward_bonus_cutoff_type_id']==450)
                                {
                                    if($total_days>=$scheme['reward_bonus_min_cutoff'] && $total_days<=$scheme['reward_bonus_max_cutoff'])
                                    {
                                        $uniqu_id=uniqid();
                                        $user_points=$this->get_user_points($user_id);
                                        $user_points=$user_points+$scheme['equivalent_value'];
                                        $new_data = array( 'user_id' => $user_id,
                                                            'reward_module_id'=>$scheme['reward_bonus_module_id'],
                                                            'points'=>$scheme['equivalent_value'],
                                                            'transaction_type'=>'Credit',
                                                            'reward_scheme_type'=>'reward_bonus',
                                                            'reward_scheme_id'=>$scheme['reward_bonus_id'],
                                                            'remark'=>'Reward Bonus',
                                                            'transection_no'=>$uniqu_id,
                                                            'balance'=>$user_points
                                                         );

                                        $res=$this->added_reward_history($new_data);
                                        if($res==true)
                                        {
                                            $this->update_user_points($user_id,$user_points);
                                        }
                                    }
                                }
                                elseif($scheme['reward_bonus_cutoff_type_id']==451)
                                {
                                    $uniqu_id=uniqid();
                                        $user_points=$this->get_user_points($user_id);
                                        $user_points=$user_points+$scheme['equivalent_value'];
                                        $new_data = array( 'user_id' => $user_id,
                                                            'reward_module_id'=>$scheme['reward_bonus_module_id'],
                                                            'points'=>$scheme['equivalent_value'],
                                                            'transaction_type'=>'Credit',
                                                            'reward_scheme_type'=>'reward_bonus',
                                                            'reward_scheme_id'=>$scheme['reward_bonus_id'],
                                                            'remark'=>'Reward Bonus',
                                                            'transection_no'=>$uniqu_id,
                                                            'balance'=>$user_points
                                                         );
                                        $res=$this->added_reward_history($new_data);
                                        if($res==true)
                                        {
                                            $this->update_user_points($user_id,$user_points);
                                        }
                                }
                                else
                                {       
                                    if($total_entry>=$scheme['reward_bonus_min_cutoff'] && $total_entry<=$scheme['reward_bonus_max_cutoff'])
                                    {
                                        $uniqu_id=uniqid();
                                        $user_points=$this->get_user_points($user_id);
                                        $user_points=$user_points+$scheme['equivalent_value'];
                                        $new_data = array( 'user_id' => $user_id,
                                                            'reward_module_id'=>$scheme['reward_bonus_module_id'],
                                                            'points'=>$scheme['equivalent_value'],
                                                            'transaction_type'=>'Credit',
                                                            'reward_scheme_type'=>'reward_bonus',
                                                            'reward_scheme_id'=>$scheme['reward_bonus_id'],
                                                            'remark'=>'Reward Bonus',
                                                            'transection_no'=>$uniqu_id,
                                                            'balance'=>$user_points
                                                         );

                                        $res=$this->added_reward_history($new_data);
                                        if($res==true)
                                        {
                                            $this->update_user_points($user_id,$user_points);
                                        }
                                    }
                                }
                            }

                        }
                    }
                }

            }
        }
    }
    //update by ample 11-09-20
    public function getTotalEntriesOfModuleOfUser($reward_module_id,$user_id) {


        $DBH = new DatabaseHandler();
        $value = '0';
        if ($user_id != '') {
            $str_user_id = " user_id = '" . $user_id . "' ";
        } else {
            $str_user_id = "";
        }


        $module=$this->get_reward_module_data($reward_module_id);


        $str_condition1='';
        $str_condition2='';
        
        if($module['table_link'] && $module['table_column'])
        {   

            if($module['column1'] && $module['value1'])
            {
                $str_condition1=" AND ".$module['column1']." = '" . $module['value1'] . "' ";
            }
            if($module['column2'] && $module['value2'])
            {
                $str_condition2=" AND ".$module['column2']." = '" . $module['value2'] . "' ";
            } 


            $sql = "SELECT ".$module['table_column']." FROM ".$module['table_link']." WHERE " . $str_user_id . " " . $str_condition1 . " " . $str_condition2 . "  ";
        
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $value = $STH->rowCount();
            }

        }

        return $value;
    }

    public function getTotalDaysEntriesOfModuleOfUser($reward_module_id,$user_id) {


        $DBH = new DatabaseHandler();
        $value = '0';
        if ($user_id != '') {
            $str_user_id = " user_id = '" . $user_id . "' ";
        } else {
            $str_user_id = "";
        }


        $module=$this->get_reward_module_data($reward_module_id);


        $str_condition1='';
        $str_condition2='';
        
        if($module['table_link'] && $module['table_column'])
        {   

            if($module['column1'] && $module['value1'])
            {
                $str_condition1=" AND ".$module['column1']." = '" . $module['value1'] . "' ";
            }
            if($module['column2'] && $module['value2'])
            {
                $str_condition2=" AND ".$module['column2']." = '" . $module['value2'] . "' ";
            } 


            $sql = "SELECT DISTINCT date(".$module['table_column'].") FROM ".$module['table_link']." WHERE " . $str_user_id . " " . $str_condition1 . " " . $str_condition2 . "  ";
        
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $value = $STH->rowCount();
            }

        }

        return $value;
    }
    //update date 11/12/20
    public function getRewardPointsScheme($reward_module_id) {
        $DBH = new DatabaseHandler();
        $today=date('Y-m-d');
        $data = array();        
        $sql = "SELECT * FROM `tblrewardpoints` WHERE `reward_point_deleted` = '0' AND `reward_point_status` = '1'  AND `reward_point_module_id` = '" . $reward_module_id . "' AND ((reward_point_date <= '".$today."' AND event_close_date >= '".$today."') OR (reward_point_date <= '".$today."' AND event_close_date = '0000-00-00'))";
         $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $data[] = $row;
                }
            }
      
        return $data;
    }
    //update date 11-12-20
    public function getRewardBonusScheme($reward_module_id) {
        $DBH = new DatabaseHandler();
        $today=date('Y-m-d');
        $data = array();        
        $sql = "SELECT * FROM `tblrewardbonus` WHERE `reward_bonus_deleted` = '0' AND `reward_bonus_status` = '1'  AND `reward_bonus_module_id` = '" . $reward_module_id . "' AND ((reward_bonus_date <= '".$today."' AND event_close_date >= '".$today."') OR (reward_bonus_date <= '".$today."' AND event_close_date = '0000-00-00'))";
         $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $data[] = $row;
                }
            }
      
        return $data;
    }
    public function added_reward_history($data) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "INSERT INTO `tbl_user_reward_history`(`user_id`, `reward_module_id`,`points`,`transaction_type`,`remark`,`reward_scheme_type`,`reward_scheme_id`,`transection_no`,`balance`) " . "VALUES ('".$data['user_id']."','".$data['reward_module_id']."','".$data['points']."','".$data['transaction_type']."','" . addslashes($data['remark']) . "','".$data['reward_scheme_type']."','".$data['reward_scheme_id']."','".$data['transection_no']."','".$data['balance']."')";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function check_point_scheme_for_user($user_id,$scheme_id,$scheme_type)
    {
        $DBH = new DatabaseHandler();
        $result = false;        
        $sql = "SELECT * FROM `tbl_user_reward_history` WHERE `user_id` = '" . $user_id . "' AND `reward_scheme_id` = '" . $scheme_id . "' AND `reward_scheme_type` ='" . $scheme_type . "'";
         $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $result = true;
            }
        return $result;
    }
    public function user_redeem_common_module_data($user_id)
    {
        $DBH = new DatabaseHandler();
        $data = array();        
        $sql = "SELECT DISTINCT reward_module_id FROM `tbl_user_reward_history` WHERE `user_id` = '" . $user_id . "' ";
        $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                 while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $data[] = $row;
                }
            }
        return $data;
    }
    public function get_user_points($user_id) {
        $DBH = new DatabaseHandler();
        $point = 0;
        $sql = "SELECT * FROM `tblusers` WHERE `user_id` = '" . $user_id . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $r = $STH->fetch(PDO::FETCH_ASSOC);
            $point= stripslashes($r['points']);
        }
        return $point;
    }
    public function update_user_points($user_id, $user_points) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "UPDATE `tblusers` SET `points` = ".$user_points."  WHERE  `user_id` = '" . $user_id . "' ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    public function get_user_points_history_data($user_id,$module_id="",$start_date="",$end_date="")
    {
        $DBH = new DatabaseHandler();
        $data = array();  
        $str_module='';
        $str_date='';

        if($module_id)
        {
            $str_module=' AND reward_module_id='.$module_id;
        }

        if($start_date && $end_date)
        {
            $str_date=' AND transaction_date between "'.date("Y-m-d", strtotime($start_date)).'"  AND "'.date('Y-m-d', strtotime('+1 day', strtotime($end_date))).'"';
        }

        $sql = "SELECT * FROM `tbl_user_reward_history` WHERE `user_id` = '" . $user_id . "' ".$str_module." ".$str_date."  "; 
         $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                    $data[] = $row;
                }
            }
        return $data;
    }
    //add by ample 18-11-20
    public function get_total_points($user_id,$module_id)
    {
        $DBH = new DatabaseHandler();
        $point=0;
        $credit_points = 0;
        $debit_points = 0;
        $sql1 = "SELECT SUM(points) AS credit_points FROM `tbl_user_reward_history` WHERE `user_id` = '" . $user_id . "' AND `reward_module_id` = '" . $module_id . "' AND transaction_type='Credit'";
        $STH1 = $DBH->query($sql1);
        if ($STH1->rowCount() > 0) {
            $r1 = $STH1->fetch(PDO::FETCH_ASSOC);
            //commented by rahul
            //$credit_points= stripslashes($r1['credit_points']);
            $credit_points = isset($r1['credit_points']) && $r1['credit_points'] !== null ? stripslashes($r1['credit_points']) : '';
        }
        $sql2 = "SELECT SUM(points) AS debit_points FROM `tbl_user_reward_history` WHERE `user_id` = '" . $user_id . "' AND `reward_module_id` = '" . $module_id . "' AND transaction_type='Debit'";
        $STH2 = $DBH->query($sql2);
        if ($STH2->rowCount() > 0) {
            $r2 = $STH2->fetch(PDO::FETCH_ASSOC);
            //commented by rahul
            //$debit_points= stripslashes($r2['debit_points']);
            $debit_points = isset($r2['debit_points']) && $r2['debit_points'] !== null ? stripslashes($r2['debit_points']) : '';
        }
        //commented by rahul
        //$points=$credit_points-$debit_points;
        $credit_points = $r1['credit_points'] ?? 0;
        $debit_points  = $r1['debit_points'] ?? 0;
        $points = (float)$credit_points - (float)$debit_points;
        return $points;
    }
    //add by ample 18-11-20
    function get_reward_list($reward_module_id, $balance_points) {
        $DBH = new DatabaseHandler();
        $data = array();
        $sql = "SELECT * FROM `tblrewardlist` WHERE `reward_list_deleted` = '0' AND `reward_list_status` = '1'  AND `reward_list_module_id` = '" . $reward_module_id . "' AND `reward_list_conversion_value`<=".trim($balance_points)." AND `reward_list_date` <= '" . date('Y-m-d') . "' ORDER BY `reward_list_add_datetime` DESC ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[] = $row;
            }
           
        }
        return $data;
    }
    //add by ample 19-11-20
    function get_reward_list_all_module($balance_points) {
        $DBH = new DatabaseHandler();
        $data = array();
        $sql = "SELECT * FROM `tblrewardlist` WHERE `reward_list_deleted` = '0' AND `reward_list_status` = '1'  AND `reward_list_module_id` = '39' AND `reward_list_conversion_value`<=".trim($balance_points)." AND `reward_list_date` <= '" . date('Y-m-d') . "' ORDER BY `reward_list_add_datetime` DESC ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[] = $row;
            }
           
        }
        return $data;
    }
    //add by ample 19-11-20
    function get_reward_prize_data($reward_list_id) {
        $DBH = new DatabaseHandler();
        $data = array();
        $sql = "SELECT * FROM `tblrewardlist` WHERE  `reward_list_id` = '" . $reward_list_id . "' ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $data = $row;
            
        }
        return $data;
    }
    //add by ample 24-11-20
    public function getUserSubcriptionPlans()
    {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data =array();
        $data1 =array();
        $data2 =array();

        $today=date('Y-m-d');
        $month = date('n', strtotime($today));
        $week = date('w', strtotime($today))+1;
        $day = date('j', strtotime($today));

        $sql = "SELECT DISTINCT up_id,tup.* FROM `tbluserplans` tup LEFT JOIN tbl_common_scheduled tcs ON tup.up_id=tcs.redirect_id WHERE up_status=1 AND up_show=1 AND up_deleted=0 AND up_default=0 AND (redirect='userPlans' OR redirect IS NULL) AND (publish_date_type='' OR publish_date_type IS NULL ) AND (state_id=0 OR state_id IS NULL)"; 
        $sql.= " UNION SELECT DISTINCT up_id,tup.* FROM `tbluserplans` tup LEFT JOIN tbl_common_scheduled tcs ON tup.up_id=tcs.redirect_id WHERE up_status=1 AND up_show=1 AND up_deleted=0 AND up_default=0 AND redirect='userPlans' AND publish_date_type='single_date' AND publish_single_date = '".$today."' AND (state_id=0 OR state_id IS NULL)";
        $sql.= " UNION SELECT DISTINCT up_id,tup.* FROM `tbluserplans` tup LEFT JOIN tbl_common_scheduled tcs ON tup.up_id=tcs.redirect_id WHERE up_status=1 AND up_show=1 AND up_deleted=0 AND up_default=0 AND redirect='userPlans' AND publish_date_type='date_range' AND (publish_start_date <= '".$today."' AND publish_end_date >= '".$today."') AND (state_id=0 OR state_id IS NULL)";
        $sql.= " UNION SELECT DISTINCT up_id,tup.* FROM `tbluserplans` tup LEFT JOIN tbl_common_scheduled tcs ON tup.up_id=tcs.redirect_id WHERE up_status=1 AND up_show=1 AND up_deleted=0 AND up_default=0 AND redirect='userPlans' AND publish_date_type='month_wise' AND publish_month_wise regexp '[[:<:]]".$month."[[:>:]]' AND (state_id=0 OR state_id IS NULL)";
        $sql.= " UNION SELECT DISTINCT up_id,tup.* FROM `tbluserplans` tup LEFT JOIN tbl_common_scheduled tcs ON tup.up_id=tcs.redirect_id WHERE up_status=1 AND up_show=1 AND up_deleted=0 AND up_default=0 AND redirect='userPlans' AND publish_date_type='days_of_week' AND publish_days_of_week regexp '[[:<:]]".$week."[[:>:]]' AND (state_id=0 OR state_id IS NULL)";
        $sql.= " UNION SELECT DISTINCT up_id,tup.* FROM `tbluserplans` tup LEFT JOIN tbl_common_scheduled tcs ON tup.up_id=tcs.redirect_id WHERE up_status=1 AND up_show=1 AND up_deleted=0 AND up_default=0 AND redirect='userPlans' AND publish_date_type='days_of_month' AND publish_days_of_month regexp '[[:<:]]".$day."[[:>:]]' AND (state_id=0 OR state_id IS NULL)";
        $sql.=" ORDER BY up_add_date ASC";
        //echo $sql; die('-ss');
        $STH = $DBH->query($sql);
        if( $STH->rowCount() > 0 )
        {
           while ($row = $STH->fetch(PDO::FETCH_ASSOC)) 
           {
                $data1[]= $row;
            }
            
        }

        $user_id = $_SESSION['user_id'];
        if(!empty($user_id))
        {
            $data2=$this->getUserSubcriptionPlansOnLocation($user_id);
        }

        $data=array_merge($data1,$data2);
        return $data; 
    }
    //add by ample 24-11-20
    function getUserSubcriptionPlansOnLocation($user_id)
    {   
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $data =array();

        $user_info=$this->getUserDetails($user_id);

        $today=date('Y-m-d');
        $month = date('n', strtotime($today));
        $week = date('w', strtotime($today))+1;
        $day = date('j', strtotime($today));

        $sql = "SELECT DISTINCT up_id,tup.* FROM `tbluserplans` tup LEFT JOIN tbl_common_scheduled tcs ON tup.up_id=tcs.redirect_id WHERE up_status=1 AND up_show=1 AND up_deleted=0 AND up_default=0 AND redirect='userPlans'  AND (publish_date_type='' OR publish_date_type IS NULL ) AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))"; 
        $sql.= " UNION SELECT DISTINCT up_id,tup.* FROM `tbluserplans` tup LEFT JOIN tbl_common_scheduled tcs ON tup.up_id=tcs.redirect_id WHERE up_status=1 AND up_show=1 AND up_deleted=0 AND up_default=0 AND redirect='userPlans' AND publish_date_type='single_date' AND publish_single_date = '".$today."' AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))";
        $sql.= " UNION SELECT DISTINCT up_id,tup.* FROM `tbluserplans` tup LEFT JOIN tbl_common_scheduled tcs ON tup.up_id=tcs.redirect_id WHERE up_status=1 AND up_show=1 AND up_deleted=0 AND up_default=0 AND redirect='userPlans' AND publish_date_type='date_range' AND (publish_start_date <= '".$today."' AND publish_end_date >= '".$today."') AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))";
        $sql.= " UNION SELECT DISTINCT up_id,tup.* FROM `tbluserplans` tup LEFT JOIN tbl_common_scheduled tcs ON tup.up_id=tcs.redirect_id WHERE up_status=1 AND up_show=1 AND up_deleted=0 AND up_default=0 AND redirect='userPlans' AND publish_date_type='month_wise' AND publish_month_wise regexp '[[:<:]]".$month."[[:>:]]' AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))";
        $sql.= " UNION SELECT DISTINCT up_id,tup.* FROM `tbluserplans` tup LEFT JOIN tbl_common_scheduled tcs ON tup.up_id=tcs.redirect_id WHERE up_status=1 AND up_show=1 AND up_deleted=0 AND up_default=0 AND redirect='userPlans' AND publish_date_type='days_of_week' AND publish_days_of_week regexp '[[:<:]]".$week."[[:>:]]' AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))";
        $sql.= " UNION SELECT DISTINCT up_id,tup.* FROM `tbluserplans` tup LEFT JOIN tbl_common_scheduled tcs ON tup.up_id=tcs.redirect_id WHERE up_status=1 AND up_show=1 AND up_deleted=0 AND up_default=0 AND redirect='userPlans' AND publish_date_type='days_of_month' AND publish_days_of_month regexp '[[:<:]]".$day."[[:>:]]' AND ((state_id=".$user_info['state_id']." AND city_id=0 AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=0) OR (state_id=".$user_info['state_id']." AND city_id=".$user_info['city_id']." AND area_id=".$user_info['place_id']."))";
        $sql.=" ORDER BY up_add_date ASC";
        //echo $sql; die('-ss');
        $STH = $DBH->query($sql);
        if( $STH->rowCount() > 0 )
        {
           while ($row = $STH->fetch(PDO::FETCH_ASSOC)) 
           {
                $data[]= $row;
            }
            
        }
        return $data;
    }
     //add by ample 26-11-20
    function get_access_page_of_plans($up_id) {
        $DBH = new DatabaseHandler();
        $data = 0;
        $sql = "SELECT COUNT(upd_id) as total FROM `tbluserplandetails` WHERE  `up_id` = '" . $up_id . "' ";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $data = $row['total'];
            
        }
        return $data;
    }
    //addded by ample 26-11-20
    public function get_user_plan_data($up_id) {
        $DBH = new DatabaseHandler();
        $data = array();
        $sql = "SELECT * FROM `tbluserplans` WHERE `up_id` = " . $up_id . "";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $r = $STH->fetch(PDO::FETCH_ASSOC);
            $data= $r;
        }
        return $data;
    }
    //addded by ample 26-11-20
    public function send_plan_request_admin($data) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "INSERT INTO `tbluserplanrequests`(`user_id`,`up_id`,`upr_status`,`uup_amount`,`uup_currency`,`uup_duration`,`uup_payment_status`,`uup_payment_mode`,`uup_payment_details`,`uup_points`,`plan_prize_id`) " . "VALUES ('".$data['user_id']."','".$data['up_id']."','".$data['upr_status']."','".$data['uup_amount']."','".$data['uup_currency']."','" . $data['uup_duration'] . "','".$data['uup_payment_status']."','".$data['uup_payment_mode']."','" . addslashes($data['uup_payment_details']) . "','" . $data['uup_points'] . "','" . $data['plan_prize_id'] . "')";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    //add by ample 27-11-20
    public function getUserSubcribedPlans($user_id) {

        $DBH = new DatabaseHandler();
        $data = array();
        $sql = "SELECT * FROM `tbluserplanrequests` WHERE `user_id` = '" . $user_id . "' ";

        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            while ($row = $STH->fetch(PDO::FETCH_ASSOC)) {
                $data[] = $row;
            }
           
        }
        return $data;
    }
    //addded by ample 27-11-20
    public function getPlanName($up_id) {
        $DBH = new DatabaseHandler();
        $data = array();
        $sql = "SELECT * FROM `tbluserplans` WHERE `up_id` = " . $up_id . "";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $r = $STH->fetch(PDO::FETCH_ASSOC);
            $data= $r['up_name'];
        }
        return $data;
    }
    //added by ample 27-11-20
    public function chkValidReferenceID($unique_id) {
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "SELECT * FROM `tblusers` WHERE `unique_id` = '" . $unique_id . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        else
        {
            $sql1 = "SELECT * FROM `tblvendors` WHERE `vendor_unique_id` = '" . $unique_id . "'";
            $STH = $DBH->query($sql1);
            if ($STH->rowCount() > 0) {
                $return = true;
            }
        }
        return $return;
    }
     public function get_userID_by_referenceID($unique_id) {
        $DBH = new DatabaseHandler();
        $data = array();
        $sql = "SELECT * FROM `tblusers` WHERE `unique_id` = '" . $unique_id . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $r = $STH->fetch(PDO::FETCH_ASSOC);
            $data= $r['user_id'];
        }
        return $data;
    }
     public function get_user_name_by_referenceID($unique_id) {
        $DBH = new DatabaseHandler();
        $text = '';
        $sql = "SELECT * FROM `tblusers` WHERE `unique_id` = '" . $unique_id . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $r = $STH->fetch(PDO::FETCH_ASSOC);
            $text= $r['name'].' '.$r['last_name'];
        }
        return $text;
    }
    public function get_vendor_name_by_referenceID($unique_id) {
        $DBH = new DatabaseHandler();
        $text = '';
        $sql = "SELECT * FROM `tblvendors` WHERE `vendor_unique_id` = '" . $unique_id . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $r = $STH->fetch(PDO::FETCH_ASSOC);
            $text= $r['vendor_username'];
        }
        return $text;
    }
    //add by ample 30-11-20
    public function get_page_dropdown_data($pd_id="") {

        $DBH = new DatabaseHandler();
        $data = array();
        $sql = "SELECT * FROM `tblpagedropdowns` WHERE `pd_status` = '1' AND `pd_deleted`='0' AND pd_id=" . $pd_id . "";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $data= $STH->fetch(PDO::FETCH_ASSOC);
        }
        return $data;
    }
    //add by ample 30-11-20
    public function get_plan_feature_info($plan_id="",$page_id="") {

        $DBH = new DatabaseHandler();
        $text = 'N/A';
        $sql = "SELECT * FROM `tbluserplandetails` WHERE `upd_status` = '1' AND `upd_deleted` = '0' AND `up_id` = '".$plan_id."' AND `upa_id` = '".$page_id."' AND `upa_value` = '1' LIMIT 1";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $r= $STH->fetch(PDO::FETCH_ASSOC);
            if(empty($r['upc_value']))
            {
                $text = 'Unlimited';
            }
            else
            {
                $text= $r['upc_value'].' '.$this->getFavCategoryName($r['upc_id']);
            }
        }
        return $text;
    }  
    //add by ample 30-11-20
    public function get_referal_id($email_id="") {
        $my_DBH = new DatabaseHandler();
        $DBH = $my_DBH->raw_handle();
        $DBH->beginTransaction();
        $uniqid = '';
        $sql = "SELECT * FROM `tblreferal` WHERE `email_id` = '" . $email_id . "'";
        $STH = $DBH->prepare($sql);
        $STH->execute();
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC); 
            $uniqid = $this->getUserUniqueId($row['user_id']);
            
        }
        else
        {
            $sql1 = "SELECT * FROM `tbladviserreferrals` WHERE `user_email` = '" . $email_id . "' AND invite_by_user=0";
            $STH = $DBH->prepare($sql1);
            $STH->execute();
            if ($STH->rowCount() > 0) {
                $row = $STH->fetch(PDO::FETCH_ASSOC);
                $uniqid = $this->getProUserUniqueId($row['vendor_id']);
            }
        }
        return $uniqid;
    }
    //add by ample 30-11-20
    public function updatereferafriend_status($email, $reference_id) {
        $user_id=$this->get_userID_by_referenceID($reference_id);
        $DBH = new DatabaseHandler();
        $return = false;
        $sql = "UPDATE `tblreferal` set `status` = '1' WHERE  `user_id` = '" . $user_id . "' AND `email_id` = '" . $email . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $return = true;
        }
        return $return;
    }
    ///added by ample
    public function check_user_subcription_plan_status($page_id)
    {
        $user_id = $_SESSION['user_id'];
        $user_data=$this->getUser_planInfo($user_id);
        $plan_id=$user_data['up_id'];
        $up_start_date=$user_data['uup_start_date'];
        $up_end_date=$user_data['uup_end_date'];
        $is_up_default=$user_data['is_up_default'];
        $count=0;
        $access=0;
        if(!empty($plan_id) && $plan_id!=0)
        {

            $plan_data=$this->get_plan_page_feature_info($plan_id,$page_id);
            $plan_tbl=$this->get_page_table_setting($page_id);

            if(!empty($plan_data) && !empty($plan_tbl))
            {
                // echo "<pre>";
                // print_r($plan_data);
                // print_r($plan_tbl);
                // die('-ss');

                if($plan_data['upc_id']==450)
                {
                    
                    if(!empty($plan_data['upc_value']))
                    {
                        $count=$this->getTotalDaysOfPageModule($plan_tbl,$user_id,$up_start_date,$up_end_date,$is_up_default);
                        if($count>$plan_data['upc_value'])
                        {
                            $access=0;
                        }
                        else
                        {
                            $access=1;
                        }
                    }
                    else
                    {
                        $access=1;
                    }
                }
                else
                {   
                    if(!empty($plan_data['upc_value']))
                    {   
                        $count=$this->getTotalEntriesOfPageModule($plan_tbl,$user_id,$up_start_date,$up_end_date,$is_up_default);
                        if($count>$plan_data['upc_value'])
                        {
                            $access=0;
                        }
                        else
                        {
                            $access=1;
                        }
                    }
                    else
                    {
                        $access=1;
                    }
                   
                }
            }
        }
        return $access;
    }
    public function get_user_current_plan($user_id) {
        $DBH = new DatabaseHandler();
        $up_id = 0;
        $sql = "SELECT * FROM `tblusers` WHERE `user_id` = '" . $user_id . "' LIMIT 1";
        //echo '<br>'.$sql.'<br>';
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row = $STH->fetch(PDO::FETCH_ASSOC);
            $up_id = $row['up_id'];
        }
        return $up_id;
    }
    public function getUser_planInfo($user_id) {
        $DBH = new DatabaseHandler();
        $data = array();
        // $sql = "SELECT * FROM `tblusers` WHERE (`email` = '".$contact."' || `mobile` = '".$contact."') ";
        $sql = "SELECT up_id,is_up_default,uup_status,uup_start_date,uup_end_date FROM `tblusers` WHERE `user_id` = '" . $user_id . "'";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $data = $STH->fetch(PDO::FETCH_ASSOC);
        }
        return $data;
    }
    public function get_plan_page_feature_info($plan_id,$page_id) {

        $DBH = new DatabaseHandler();
        $data = array();
        $sql = "SELECT * FROM `tbluserplandetails` WHERE `upd_status` = '1' AND `upd_deleted` = '0' AND `up_id` = '".$plan_id."' AND `upa_id` = '".$page_id."' AND `upa_value` = '1' AND `is_report_data`='0' LIMIT 1";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row= $STH->fetch(PDO::FETCH_ASSOC);
            $data= $row;
        }
        return $data;
    }
    public function get_page_table_setting($page_id) {

        $DBH = new DatabaseHandler();
        $data = array();
        $sql = "SELECT * FROM `tblpagesetting` WHERE `page_id` = '".$page_id."' LIMIT 1";
        $STH = $DBH->query($sql);
        if ($STH->rowCount() > 0) {
            $row= $STH->fetch(PDO::FETCH_ASSOC);
            $data= $row;
        }
        return $data;
    }
    public function getTotalEntriesOfPageModule($module,$user_id,$up_start_date,$up_end_date,$is_up_default) {

        $DBH = new DatabaseHandler();
        $value = '0';
        $str_date="";
        if($module['table_link']=='tblpagelogs')
        {
            $str_user_id = " visitor_id = '" . $user_id . "' ";
        }
        else
        {
          $str_user_id = " user_id = '" . $user_id . "' ";  
        }
        if($is_up_default==0)
        {
            $str_date=" AND (".$module['table_column']." between '".$up_start_date."' and '".$up_end_date."')";
        }

        $str_condition1='';
        $str_condition2='';
        $str_condition3='';
        
        if($module['table_link'] && $module['table_column'])
        {   

            if($module['column1'] && $module['value1'])
            {
                $str_condition1=" AND ".$module['column1']." = '" . $module['value1'] . "' ";
            }
            if($module['column2'] && $module['value2'])
            {
                $str_condition2=" AND ".$module['column2']." = '" . $module['value2'] . "' ";
            }
            if($module['column3'] && $module['value3'])
            {
                $str_condition3=" AND ".$module['column3']." = '" . $module['value3'] . "' ";
            } 

            $sql = "SELECT ".$module['table_column']." FROM ".$module['table_link']." WHERE " . $str_user_id . " " . $str_condition1 . " " . $str_condition2 . " " . $str_condition3 . " " . $str_date . " ";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $value = $STH->rowCount();
            }
        }
        return $value;
    }
    public function getTotalDaysOfPageModule($module,$user_id,$up_start_date,$up_end_date,$is_up_default) {

        $DBH = new DatabaseHandler();
        $value = '0';
        $str_date="";
        if($module['table_link']=='tblpagelogs')
        {
            $str_user_id = " visitor_id = '" . $user_id . "' ";
        }
        else
        {
          $str_user_id = " user_id = '" . $user_id . "' ";  
        }
        if($is_up_default==0)
        {
            $str_date=" AND (".$module['table_column']." between '".$up_start_date."' and '".$up_end_date."')";
        }

        $str_condition1='';
        $str_condition2='';
        $str_condition3='';
        
        if($module['table_link'] && $module['table_column'])
        {   

            if($module['column1'] && $module['value1'])
            {
                $str_condition1=" AND ".$module['column1']." = '" . $module['value1'] . "' ";
            }
            if($module['column2'] && $module['value2'])
            {
                $str_condition2=" AND ".$module['column2']." = '" . $module['value2'] . "' ";
            } 
            if($module['column3'] && $module['value3'])
            {
                $str_condition3=" AND ".$module['column3']." = '" . $module['value3'] . "' ";
            } 

            $sql = "SELECT DISTINCT DATE(".$module['table_column'].") FROM ".$module['table_link']." WHERE " . $str_user_id . " " . $str_condition1 . " " . $str_condition2 . " " . $str_condition3 . " " . $str_date . " ";
            $STH = $DBH->query($sql);
            if ($STH->rowCount() > 0) {
                $value = $STH->rowCount();
            }
        }
        return $value;
    }
    
}
?>